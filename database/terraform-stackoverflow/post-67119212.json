{"Id": "67119212", "PostTypeId": "1", "CreationDate": "2021-04-16T04:44:11.073", "Score": "1", "ViewCount": "320", "Body": "<p>I'm trying to set up HTTP integration in AWS API Gateway v2 (aka HTTP API). In my config, I have a native JWT authorizer and want to <strong>append one namespaced JWT access_token claims to HTTP request headers</strong>.</p>\n<p>As long as claims as simple name such as <code>sub</code> or <code>iss</code> this is working fine with the following mapping syntax:</p>\n<pre><code>append:header.simple = append:$context.authorizer.claims.simple\n</code></pre>\n<p>However, some of my claims are namespace with an <code>https://namespace/</code> prefix (is a requirement from Auth0 and cannot be changed). This is where mapper syntax is falling short for me.</p>\n<p>Say my input JWT is like this:</p>\n<pre class=\"lang-json prettyprint-override\"><code>{\n        &quot;aud&quot;: &quot;my.dev.api&quot;,\n        &quot;azp&quot;: &quot;CCCC&quot;,\n        &quot;exp&quot;: &quot;1610606942&quot;,\n        &quot;https://my.ns/account_no&quot;: &quot;100368421&quot;,\n        &quot;iat&quot;: &quot;1610598342&quot;,\n        &quot;iss&quot;: &quot;https://mytenant.auth0.com/&quot;,\n        &quot;scope&quot;: &quot;openid profile email account:admin&quot;,\n        &quot;sub&quot;: &quot;auth0|user-id&quot;\n}\n</code></pre>\n<p>How can I map namespaced claim <code>https://my.ns/account_no</code>?</p>\n<p>I tried <code>$context.authorizer.claims['https://my.ns/account_no']</code> with no luck. Here is the terraform setup I use:</p>\n<pre><code>resource &quot;aws_apigatewayv2_integration&quot; &quot;root&quot; {\n  api_id           = aws_apigatewayv2_api.api.id\n  integration_type = &quot;HTTP_PROXY&quot;\n\n  connection_type      = &quot;INTERNET&quot;\n  description          = &quot;This is our GET / integration&quot;\n  integration_method   = &quot;GET&quot;\n  integration_uri      = &quot;http://${aws_lb.ecs_lb.dns_name}&quot;\n  passthrough_behavior = &quot;WHEN_NO_MATCH&quot;\n\n  request_parameters = {\n    &quot;append:header.account_no&quot; = &quot;$context.authorizer.claims['https://my.ns/account_no']&quot; &lt;-- FAILING HERE\n  }\n}\n</code></pre>\n<p>Error I'm getting in terraform and dashboard is the same:</p>\n<blockquote>\n<p>Invalid mapping expression specified: Validation Result: warnings : [], errors : [Invalid mapping expression specified: $context.authorizer.claims[&quot;https://my.ns/account_no&quot;]]</p>\n</blockquote>\n<p>Thanks for your assistance.</p>\n<p><a href=\"https://i.stack.imgur.com/NhMlU.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/NhMlU.png\" alt=\"AWS error mapping namespaced claim\" /></a></p>\n", "OwnerUserId": "256075", "LastEditorUserId": "256075", "LastEditDate": "2021-04-16T04:51:35.707", "LastActivityDate": "2021-04-16T04:51:35.707", "Title": "How to access Namespaced JWT Claims in AWS HTTP API Gateway Request Mapping", "Tags": "<jwt><terraform><aws-api-gateway><auth0>", "AnswerCount": "0", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "118666278", "PostId": "67119212", "Score": "0", "Text": "For now, I'm using Lambda authorizer and inject header from `$context.authorizer.account_no`, however, I'd like to get the JWT authorizer working. It's faster and cheaper.", "CreationDate": "2021-04-17T02:54:16.767", "UserId": "256075", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "It's faster and cheaper.", "keywords": ["cheap"]}]}, {"Id": "135478753", "PostId": "67119212", "Score": "0", "Text": "Did you ever find a fix for that issue?", "CreationDate": "2023-08-07T04:38:08.513", "UserId": "5212919", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "244760272", "PostHistoryTypeId": "2", "PostId": "67119212", "RevisionGUID": "f41404e8-50fa-4052-8de0-490fcf79e5b2", "CreationDate": "2021-04-16T04:44:11.073", "UserId": "256075", "Text": "I'm trying to set up HTTP integration in AWS API Gateway v2 (aka HTTP API). In my config, I have a native JWT authorizer and want to **append one namespaced JWT access_token claims to HTTP request headers**. \r\n\r\nAs long as claims as simple name such as `sub` or `iss` this is working fine with the following mapping syntax:\r\n\r\n```\r\nappend:header.simple = append:$context.authorizer.claims.simple\r\n```\r\n\r\nHowever, some of my claims are namespace with an `https://namespace/` prefix (is a requirement from Auth0 and cannot be changed). This is where mapper syntax is falling short for me. \r\n\r\nSay my input JWT is like this:\r\n\r\n```json\r\n{\r\n        \"aud\": \"my.dev.api\",\r\n        \"azp\": \"CCCC\",\r\n        \"exp\": \"1610606942\",\r\n        \"https://my.ns/account_no\": \"100368421\",\r\n        \"iat\": \"1610598342\",\r\n        \"iss\": \"https://mytenant.auth0.com/\",\r\n        \"scope\": \"openid profile email account:admin\",\r\n        \"sub\": \"auth0|user-id\"\r\n}\r\n```\r\n\r\nHow can I map namespaced claim `https://my.ns/account_no`?\r\n\r\nI tried `$context.authorizer.claims['https://my.ns/account_no']` with no luck. Here is the terraform setup I use:\r\n\r\n\r\n```terraform\r\nresource \"aws_apigatewayv2_integration\" \"root\" {\r\n  api_id           = aws_apigatewayv2_api.api.id\r\n  integration_type = \"HTTP_PROXY\"\r\n\r\n  connection_type      = \"INTERNET\"\r\n  description          = \"This is our GET / integration\"\r\n  integration_method   = \"GET\"\r\n  integration_uri      = \"http://${aws_lb.ecs_lb.dns_name}\"\r\n  passthrough_behavior = \"WHEN_NO_MATCH\"\r\n\r\n  request_parameters = {\r\n    \"append:header.account_no\" = \"$context.authorizer.claims['https://my.ns/account_no']\" <-- FAILING HERE\r\n  }\r\n}\r\n```\r\n\r\nError I'm getting in terraform and dashboard is the same:\r\n\r\n> Invalid mapping expression specified: Validation Result: warnings : [], errors : [Invalid mapping expression specified: $context.authorizer.claims[\"https://my.ns/account_no\"]]\r\n \r\nThanks for your assistance. \r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "However, some of my claims are namespace with an `https://namespace/` prefix (is a requirement from Auth0 and cannot be changed). ", "keywords": ["change"]}]}, {"Id": "244760273", "PostHistoryTypeId": "1", "PostId": "67119212", "RevisionGUID": "f41404e8-50fa-4052-8de0-490fcf79e5b2", "CreationDate": "2021-04-16T04:44:11.073", "UserId": "256075", "Text": "How to access Namespaced JWT Claims in AWS HTTP API Gateway Request Mapping", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "244760274", "PostHistoryTypeId": "3", "PostId": "67119212", "RevisionGUID": "f41404e8-50fa-4052-8de0-490fcf79e5b2", "CreationDate": "2021-04-16T04:44:11.073", "UserId": "256075", "Text": "<jwt><terraform><aws-api-gateway><auth0>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "244760527", "PostHistoryTypeId": "5", "PostId": "67119212", "RevisionGUID": "584212b4-37e3-4c87-a27f-1c84d37994b9", "CreationDate": "2021-04-16T04:51:35.707", "UserId": "256075", "Comment": "added 93 characters in body", "Text": "I'm trying to set up HTTP integration in AWS API Gateway v2 (aka HTTP API). In my config, I have a native JWT authorizer and want to **append one namespaced JWT access_token claims to HTTP request headers**. \r\n\r\nAs long as claims as simple name such as `sub` or `iss` this is working fine with the following mapping syntax:\r\n\r\n```\r\nappend:header.simple = append:$context.authorizer.claims.simple\r\n```\r\n\r\nHowever, some of my claims are namespace with an `https://namespace/` prefix (is a requirement from Auth0 and cannot be changed). This is where mapper syntax is falling short for me. \r\n\r\nSay my input JWT is like this:\r\n\r\n```json\r\n{\r\n        \"aud\": \"my.dev.api\",\r\n        \"azp\": \"CCCC\",\r\n        \"exp\": \"1610606942\",\r\n        \"https://my.ns/account_no\": \"100368421\",\r\n        \"iat\": \"1610598342\",\r\n        \"iss\": \"https://mytenant.auth0.com/\",\r\n        \"scope\": \"openid profile email account:admin\",\r\n        \"sub\": \"auth0|user-id\"\r\n}\r\n```\r\n\r\nHow can I map namespaced claim `https://my.ns/account_no`?\r\n\r\nI tried `$context.authorizer.claims['https://my.ns/account_no']` with no luck. Here is the terraform setup I use:\r\n\r\n\r\n```terraform\r\nresource \"aws_apigatewayv2_integration\" \"root\" {\r\n  api_id           = aws_apigatewayv2_api.api.id\r\n  integration_type = \"HTTP_PROXY\"\r\n\r\n  connection_type      = \"INTERNET\"\r\n  description          = \"This is our GET / integration\"\r\n  integration_method   = \"GET\"\r\n  integration_uri      = \"http://${aws_lb.ecs_lb.dns_name}\"\r\n  passthrough_behavior = \"WHEN_NO_MATCH\"\r\n\r\n  request_parameters = {\r\n    \"append:header.account_no\" = \"$context.authorizer.claims['https://my.ns/account_no']\" <-- FAILING HERE\r\n  }\r\n}\r\n```\r\n\r\nError I'm getting in terraform and dashboard is the same:\r\n\r\n> Invalid mapping expression specified: Validation Result: warnings : [], errors : [Invalid mapping expression specified: $context.authorizer.claims[\"https://my.ns/account_no\"]]\r\n \r\nThanks for your assistance. \r\n\r\n[![AWS error mapping namespaced claim][1]][1]\r\n\r\n  [1]: https://i.stack.imgur.com/NhMlU.png", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "However, some of my claims are namespace with an `https://namespace/` prefix (is a requirement from Auth0 and cannot be changed). ", "keywords": ["change"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "As long as claims as simple name such as sub or iss this is working fine with the following mapping syntax: However, some of my claims are namespace with an https://namespace/ prefix (is a requirement from Auth0 and cannot be changed). ", "keywords": ["change"]}]}