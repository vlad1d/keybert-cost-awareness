{"Id": "55716950", "PostTypeId": "1", "CreationDate": "2019-04-16T21:37:32.733", "Score": "1", "ViewCount": "483", "Body": "<p>This is mostly a research question as I can't seem to find out where I can run Terraform for my use case.</p>\n\n<p>I want to build a web front end which I can enter details for configuration, click a button and the front end would tell Terraform to build the infrastructure. I understand I can use the cli, or create a .tf file and then use Jenkins to run it. But I'm looking for a way to basically call the Terraform cli commands through events like a lambda call.</p>\n\n<p>Should I use cloud provider sdks for this?</p>\n\n<p>Has anyone gone about doing something like this and if so, could you share your experiences?</p>\n", "OwnerUserId": "5485961", "LastActivityDate": "2023-08-18T12:30:34.153", "Title": "Where can I run terraform?", "Tags": "<automation><terraform><terraform-provider-aws><terraform-provider-azure><lambda-architecture>", "AnswerCount": "2", "CommentCount": "7", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "98117736", "PostId": "55716950", "Score": "0", "Text": "I cannot understand what you mean \"call the Terraform cli commands through events like a lambda call\". Can you explain it more clearly?", "CreationDate": "2019-04-17T01:52:41.253", "UserId": "9773937", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "98122223", "PostId": "55716950", "Score": "0", "Text": "Hi @Charlew, not sure how better to explain it to be honest. We need the cli of Terraform to actually use it from what I gathered, I want a UI to run Terraform instead via click of a button, run script. I'm trying to make it as serverless as I can but think a container with Terraform seems to be the only option. But how can I invoke the Terraform commands through a click of a button?", "CreationDate": "2019-04-17T06:41:32.833", "UserId": "5485961", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "98122472", "PostId": "55716950", "Score": "0", "Text": "You need to create a front end to show the buttons that you wish to the customer and a backend to make it come true when the customer click the corresponding button. That's OK that you run the backend in a container. Many languages can achieve it. It all dependents you.", "CreationDate": "2019-04-17T06:51:52.387", "UserId": "9773937", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "98123063", "PostId": "55716950", "Score": "0", "Text": "And how would one run the cli command in the container without manually doing it themselves?", "CreationDate": "2019-04-17T07:14:41.867", "UserId": "5485961", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "98123088", "PostId": "55716950", "Score": "0", "Text": "After the button click. The front end is all fine, I just can't seem to find out how I can get the container to run with the cli. Passing a param to it perhaps?", "CreationDate": "2019-04-17T07:15:38.677", "UserId": "5485961", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "98123725", "PostId": "55716950", "Score": "0", "Text": "For example, the customer clicks the init button, then you should send it to the back end and execute the \"terraform init\". In python, you can use the os.system('terraform init') to execute it in the local system. This is really an example. I have no experience with it. You can achieve it yourself.", "CreationDate": "2019-04-17T07:35:32.460", "UserId": "9773937", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "98124265", "PostId": "55716950", "Score": "0", "Text": "The python command is a huge help! That's what I was hoping for! Shame there is no SDK for Terraform. I might look into that actually!", "CreationDate": "2019-04-17T07:53:39.530", "UserId": "5485961", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "195950734", "PostHistoryTypeId": "2", "PostId": "55716950", "RevisionGUID": "c9faa185-30dc-452a-b7d3-f1ed98dc4eb0", "CreationDate": "2019-04-16T21:37:32.733", "UserId": "5485961", "Text": "This is mostly a research question as I can't seem to find out where I can run Terraform for my use case.\n\nI want to build a web front end which I can enter details for configuration, click a button and the front end would tell Terraform to build the infrastructure. I understand I can use the cli, or create a .tf file and then use Jenkins to run it. But I'm looking for a way to basically call the Terraform cli commands through events like a lambda call.\n\nShould I use cloud provider sdks for this?\n\nHas anyone gone about doing something like this and if so, could you share your experiences?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Should I use cloud provider sdks for this? ", "keywords": ["provider"]}]}, {"Id": "195950735", "PostHistoryTypeId": "1", "PostId": "55716950", "RevisionGUID": "c9faa185-30dc-452a-b7d3-f1ed98dc4eb0", "CreationDate": "2019-04-16T21:37:32.733", "UserId": "5485961", "Text": "Where can I run terraform?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "195950736", "PostHistoryTypeId": "3", "PostId": "55716950", "RevisionGUID": "c9faa185-30dc-452a-b7d3-f1ed98dc4eb0", "CreationDate": "2019-04-16T21:37:32.733", "UserId": "5485961", "Text": "<automation><terraform><terraform-provider-aws><terraform-provider-azure><lambda-architecture>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "55723197", "PostTypeId": "2", "ParentId": "55716950", "CreationDate": "2019-04-17T08:30:25.590", "Score": "0", "Body": "<p>I think I found something really useful!</p>\n\n<p><a href=\"https://github.com/FitnessKeeper/terraform-lambda\" rel=\"nofollow noreferrer\">Lambda Terraform Call using Python</a></p>\n\n<p>This would be what I had in mind, generate a Terraform plan file, drop into an S3 bucket, then invoke the lambda call to spin up the infrastructure. And all can be done with the front end configuration setting and an API call.</p>\n\n<p>I hope this comes in handy for some other people and once I have it working I might come back and add to this.</p>\n", "OwnerUserId": "5485961", "LastActivityDate": "2019-04-17T08:30:25.590", "CommentCount": "5", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "98150058", "PostId": "55723197", "Score": "0", "Text": "You can also have EC2 Instances run terraform plan and apply in your cicd system.", "CreationDate": "2019-04-17T21:06:48.890", "UserDisplayName": "user8128927", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "98161092", "PostId": "55723197", "Score": "0", "Text": "Hey @turtlesallday, thanks for sending on your option. Yeah, that would be my failover if I couldn't get it to work with what I had in mind. I'm trying to make this solution as serverless as possible. Pay for only the compute or resources used. Will be a tricky one but very excited to try and tackle it :)", "CreationDate": "2019-04-18T08:31:27.747", "UserId": "5485961", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Pay for only the compute or resources used. ", "keywords": ["pay"]}]}, {"Id": "98336708", "PostId": "55723197", "Score": "1", "Text": "Your problem is going to be when Terraform needs more than the 15 minutes max execution time of a Lambda function because you want to do something like create a Cloudfront distribution or Elasticsearch domain. Then Terraform will be aborted mid execution causing dangling resources not recorded in the state file and the state file still locked (assuming you are using state locking and you should) which can be pretty catastrophic.", "CreationDate": "2019-04-24T18:12:55.123", "UserId": "2291321", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Your problem is going to be when Terraform needs more than the 15 minutes max execution time of a Lambda function because you want to do something like create a Cloudfront distribution or Elasticsearch domain. ", "keywords": ["domain"]}]}, {"Id": "98374464", "PostId": "55723197", "Score": "0", "Text": "@ydaetskcoR - yeah that sounds like it would be an issue and I can't assume the time period would always be the same. I was also thinking Ansible, but again, the max time period would come in. Starting to direct more towards Containers being run on an event and then executing the TF build  :/", "CreationDate": "2019-04-25T19:40:19.743", "UserId": "5485961", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "98377835", "PostId": "55723197", "Score": "1", "Text": "I run Terraform as a Gitlab CI job to do deployments (where Terraform happens to run in a container) and it's fine. Our CI infrastructure automatically scales in and out so it's not like it costs us much in engineering time or AWS costs to run. I'd certainly recommend something like this rather than some homebrew thing like in your answer.", "CreationDate": "2019-04-25T22:14:47.000", "UserId": "2291321", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "195976446", "PostHistoryTypeId": "2", "PostId": "55723197", "RevisionGUID": "7bc0b1db-67b5-40b9-8d08-45acc11162f9", "CreationDate": "2019-04-17T08:30:25.590", "UserId": "5485961", "Text": "I think I found something really useful!\r\n\r\n[Lambda Terraform Call using Python][1]\r\n\r\n\r\n  [1]: https://github.com/FitnessKeeper/terraform-lambda\r\n\r\nThis would be what I had in mind, generate a Terraform plan file, drop into an S3 bucket, then invoke the lambda call to spin up the infrastructure. And all can be done with the front end configuration setting and an API call.\r\n\r\nI hope this comes in handy for some other people and once I have it working I might come back and add to this.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "68866735", "PostTypeId": "2", "ParentId": "55716950", "CreationDate": "2021-08-20T18:36:29.207", "Score": "1", "Body": "<p>You can use <a href=\"https://github.com/D10S0VSkY-OSS/Stack-Lifecycle-Deployment\" rel=\"nofollow noreferrer\">SLD </a>(Stack-Lifecycle-Deployment)</p>\n<p>It has a very cool ui and rest api</p>\n", "OwnerUserId": "16696813", "LastActivityDate": "2021-08-20T18:36:29.207", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "252345789", "PostHistoryTypeId": "2", "PostId": "68866735", "RevisionGUID": "fdd028d0-cd0c-437f-bc36-33b707c93ec9", "CreationDate": "2021-08-20T18:36:29.207", "UserId": "16696813", "Text": "You can use [SLD ][1](Stack-Lifecycle-Deployment)\r\n\r\nIt has a very cool ui and rest api\r\n\r\n\r\n\r\n  [1]: https://github.com/D10S0VSkY-OSS/Stack-Lifecycle-Deployment", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "Should I use cloud provider sdks for this? ", "keywords": ["provider"]}]}