{"Id": "76538024", "PostTypeId": "1", "CreationDate": "2023-06-23T07:41:19.547", "Score": "0", "ViewCount": "52", "Body": "<p>In terraform I need to call an api to get a certificate and store that in a resource.</p>\n<p>However, this certificate is only valid for 12 months.</p>\n<p>How do I configure terraform to detect it needs to fetch a new certificate to replace the existing value?</p>\n<p>It is not possible to fetch every time, due to cost.</p>\n<p>The only resource I can find that seems to deal with expiration is <a href=\"https://registry.terraform.io/providers/hashicorp/tls/latest/docs/resources/self_signed_cert#automatic-renewal\" rel=\"nofollow noreferrer\">https://registry.terraform.io/providers/hashicorp/tls/latest/docs/resources/self_signed_cert#automatic-renewal</a> but not usable in this case since the cerficate is made remotely.</p>\n", "OwnerUserId": "264022", "LastActivityDate": "2023-06-23T08:56:12.353", "Title": "Terraform expire resource", "Tags": "<terraform><certificate>", "AnswerCount": "1", "CommentCount": "3", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "134949563", "PostId": "76538024", "Score": "0", "Text": "Which (cloud) provider are you using?", "CreationDate": "2023-06-23T08:12:23.163", "UserId": "8343484", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Which (cloud) provider are you using?", "keywords": ["provider"]}]}, {"Id": "134950016", "PostId": "76538024", "Score": "0", "Text": "Does it matter? Its a custom certificate from an external provider", "CreationDate": "2023-06-23T08:49:47.770", "UserId": "264022", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Its a custom certificate from an external provider", "keywords": ["provider"]}]}, {"Id": "134950665", "PostId": "76538024", "Score": "0", "Text": "It sure does, because there might be API calls which you could use periodically to query the expiry date.", "CreationDate": "2023-06-23T09:44:59.983", "UserId": "8343484", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "294518817", "PostHistoryTypeId": "2", "PostId": "76538024", "RevisionGUID": "d6093785-2319-48c7-87cb-582438b5edae", "CreationDate": "2023-06-23T07:41:19.547", "UserId": "264022", "Text": "In terraform I need to call an api to get a certificate and store that in a resource.\r\n\r\nHowever, this certificate is only valid for 12 months.\r\n\r\nHow do I configure terraform to detect it needs to fetch a new certificate to replace the existing value?\r\n\r\nIt is not possible to fetch every time, due to cost.\r\n\r\nThe only resource I can find that seems to deal with expiration is https://registry.terraform.io/providers/hashicorp/tls/latest/docs/resources/self_signed_cert#automatic-renewal but not usable in this case since the cerficate is made remotely.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "It is not possible to fetch every time, due to cost. ", "keywords": ["cost"]}]}, {"Id": "294518819", "PostHistoryTypeId": "1", "PostId": "76538024", "RevisionGUID": "d6093785-2319-48c7-87cb-582438b5edae", "CreationDate": "2023-06-23T07:41:19.547", "UserId": "264022", "Text": "Terraform expire resource", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "294518820", "PostHistoryTypeId": "3", "PostId": "76538024", "RevisionGUID": "d6093785-2319-48c7-87cb-582438b5edae", "CreationDate": "2023-06-23T07:41:19.547", "UserId": "264022", "Text": "<terraform><certificate>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "294518821", "PostHistoryTypeId": "66", "PostId": "76538024", "RevisionGUID": "d6093785-2319-48c7-87cb-582438b5edae", "CreationDate": "2023-06-23T07:41:19.547", "UserId": "264022", "filtered-sentences": []}], "answers": [{"Id": "76538535", "PostTypeId": "2", "ParentId": "76538024", "CreationDate": "2023-06-23T08:56:12.353", "Score": "0", "Body": "<p>Figured it out...</p>\n<p>Just make a dummy certificate and add dependency on that.</p>\n<pre><code>resource &quot;tls_private_key&quot; &quot;dummy_pem&quot; {\n  algorithm = &quot;RSA&quot;\n  rsa_bits  = 1024\n}\n\nresource &quot;tls_self_signed_cert&quot; &quot;dummy_timeout&quot; {\n  private_key_pem = tls_private_key.dummy_pem.private_key_pem\n\n  //9 months\n  validity_period_hours = 6570\n\n  //dummy values\n  allowed_uses = [&quot;server_auth&quot;]\n}\n\nresource &quot;whatever&quot; &quot;whatever&quot; {\n  depends_on = [tls_self_signed_cert.dummy_timeout]\n}\n</code></pre>\n<p>when the dummy certificate expires, our resource will be invalidated and recreated</p>\n", "OwnerUserId": "264022", "LastActivityDate": "2023-06-23T08:56:12.353", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "134956803", "PostId": "76538535", "Score": "0", "Text": "This `depends_on` only tells Terraform that it must deal with changes to `tls_self_signed_cert.dummy_timeout` before changes to `whatever.whatever`. It doesn't change what actions Terraform would plan for `whatever.whatever`. If you have made your system work as you wanted then it is _something else_ in your configuration that made it work; `depends_on` alone is not sufficient.", "CreationDate": "2023-06-23T17:34:12.040", "UserId": "281848", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "This `depends_on` only tells Terraform that it must deal with changes to `tls_self_signed_cert.dummy_timeout` before changes to `whatever.whatever`. ", "keywords": ["change"]}, {"source": "Text", "text": "It doesn't change what actions Terraform would plan for `whatever.whatever`. ", "keywords": ["change"]}]}], "history": [{"Id": "294521620", "PostHistoryTypeId": "2", "PostId": "76538535", "RevisionGUID": "64aa990e-3f2f-482e-96bc-2ea4e2e7fefb", "CreationDate": "2023-06-23T08:56:12.353", "UserId": "264022", "Text": "Figured it out...\r\n\r\nJust make a dummy certificate and add dependency on that.\r\n\r\n```\r\nresource \"tls_private_key\" \"dummy_pem\" {\r\n  algorithm = \"RSA\"\r\n  rsa_bits  = 1024\r\n}\r\n\r\nresource \"tls_self_signed_cert\" \"dummy_timeout\" {\r\n  private_key_pem = tls_private_key.dummy_pem.private_key_pem\r\n\r\n  //9 months\r\n  validity_period_hours = 6570\r\n\r\n  //dummy values\r\n  allowed_uses = [\"server_auth\"]\r\n}\r\n\r\nresource \"whatever\" \"whatever\" {\r\n  depends_on = [tls_self_signed_cert.dummy_timeout]\r\n}\r\n```\r\n\r\nwhen the dummy certificate expires, our resource will be invalidated and recreated", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "It is not possible to fetch every time, due to cost. ", "keywords": ["cost"]}]}