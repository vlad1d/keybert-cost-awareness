{"Id": "70757669", "PostTypeId": "1", "CreationDate": "2022-01-18T14:55:24.360", "Score": "1", "ViewCount": "11721", "Body": "<p>We have Terraform to create and deploy Logic Apps.</p>\n<p>We also have created workflows in Logic Apps.</p>\n<p>We want to automate the creations of both Logic Apps and workflows within it.</p>\n<p>For example please see the workflows below:</p>\n<p><a href=\"https://i.stack.imgur.com/P2mwI.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/P2mwI.png\" alt=\"enter image description here\" /></a>\n<a href=\"https://learn.microsoft.com/en-us/azure/logic-apps/tutorial-build-schedule-recurring-logic-app-workflow\" rel=\"nofollow noreferrer\">https://learn.microsoft.com/en-us/azure/logic-apps/tutorial-build-schedule-recurring-logic-app-workflow</a></p>\n", "OwnerUserId": "665335", "LastEditorUserId": "665335", "LastEditDate": "2022-01-21T13:15:20.787", "LastActivityDate": "2022-06-21T07:54:21.613", "Title": "Logic Apps workflows via Terraform and Azure", "Tags": "<terraform-provider-azure>", "AnswerCount": "3", "CommentCount": "3", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "125165628", "PostId": "70757669", "Score": "0", "Text": "How to keep workflows when using Terraform to create and destroy the service? can you please explain this ? are you asking if logic app is destroyed then the workflows will be present ?", "CreationDate": "2022-01-21T12:22:10.360", "UserId": "15969299", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "125166822", "PostId": "70757669", "Score": "0", "Text": "We want to automate the creations of both Logic Apps and workflows within it.", "CreationDate": "2022-01-21T13:15:27.217", "UserId": "665335", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "125333155", "PostId": "70757669", "Score": "0", "Text": "Will work on it and come back. Thx.", "CreationDate": "2022-01-28T15:43:39.540", "UserId": "665335", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "links": [{"Id": "1959644097", "CreationDate": "2022-01-24T11:27:28.603", "PostId": "70757669", "RelatedPostId": "68892355", "LinkTypeId": "1"}], "history": [{"Id": "262209284", "PostHistoryTypeId": "2", "PostId": "70757669", "RevisionGUID": "832af0df-bddb-44cb-b383-45693ad21b82", "CreationDate": "2022-01-18T14:55:24.360", "UserId": "665335", "Text": "Is it possible to script the workflows example below in Logic Apps as Infrastructure as Code with Terraform?\r\n\r\nThe functionalities in the example are:\r\n\r\n - Add a Recurrence trigger that specifies the schedule for your logic\r\n   app. \r\n - Add a Bing Maps action that gets the travel time for a route.\r\n - Add an action that creates a variable, converts the travel time from\r\n   seconds to minutes, and stores that result in the variable. \r\n -  Add a condition that compares the travel time against a specified limit.\r\n - Add an action that sends you email if the travel time exceeds the\r\n   limit.\r\n\r\nBelow is a screenshot of the workflow:\r\n\r\n[![enter image description here][1]][1]\r\nhttps://learn.microsoft.com/en-us/azure/logic-apps/tutorial-build-schedule-recurring-logic-app-workflow\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/P2mwI.png", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "262209286", "PostHistoryTypeId": "1", "PostId": "70757669", "RevisionGUID": "832af0df-bddb-44cb-b383-45693ad21b82", "CreationDate": "2022-01-18T14:55:24.360", "UserId": "665335", "Text": "Infrastructure as code for Logic Apps workflows via Terraform and Azure", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "262209287", "PostHistoryTypeId": "3", "PostId": "70757669", "RevisionGUID": "832af0df-bddb-44cb-b383-45693ad21b82", "CreationDate": "2022-01-18T14:55:24.360", "UserId": "665335", "Text": "<terraform><terraform-provider-azure>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "262228702", "PostHistoryTypeId": "5", "PostId": "70757669", "RevisionGUID": "423f2a20-756c-4f4d-b382-33e534fad4c1", "CreationDate": "2022-01-18T19:35:10.097", "UserId": "665335", "Comment": "deleted 451 characters in body; edited tags", "Text": "We have Terraform to create and deploy Logic Apps.\r\n\r\nWe also have created workflows in Logic Apps. \r\n\r\nHow to keep workflows when using Terraform to create and destroy the service?\r\n\r\nFor example please see the workflows below:\r\n\r\n[![enter image description here][1]][1]\r\nhttps://learn.microsoft.com/en-us/azure/logic-apps/tutorial-build-schedule-recurring-logic-app-workflow\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/P2mwI.png", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "262228703", "PostHistoryTypeId": "6", "PostId": "70757669", "RevisionGUID": "423f2a20-756c-4f4d-b382-33e534fad4c1", "CreationDate": "2022-01-18T19:35:10.097", "UserId": "665335", "Comment": "deleted 451 characters in body; edited tags", "Text": "<terraform-provider-azure>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "262228769", "PostHistoryTypeId": "4", "PostId": "70757669", "RevisionGUID": "423f2a20-756c-4f4d-b382-33e534fad4c1", "CreationDate": "2022-01-18T19:35:10.097", "UserId": "665335", "Comment": "deleted 451 characters in body; edited tags", "Text": "Logic Apps workflows via Terraform and Azure", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "262438598", "PostHistoryTypeId": "5", "PostId": "70757669", "RevisionGUID": "477d6ec6-fc43-43a2-b79b-dcfcd4f34431", "CreationDate": "2022-01-21T13:15:20.787", "UserId": "665335", "Comment": "edited body", "Text": "We have Terraform to create and deploy Logic Apps.\r\n\r\nWe also have created workflows in Logic Apps. \r\n\r\nWe want to automate the creations of both Logic Apps and workflows within it.\r\n\r\nFor example please see the workflows below:\r\n\r\n[![enter image description here][1]][1]\r\nhttps://learn.microsoft.com/en-us/azure/logic-apps/tutorial-build-schedule-recurring-logic-app-workflow\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/P2mwI.png", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "70833123", "PostTypeId": "2", "ParentId": "70757669", "CreationDate": "2022-01-24T11:27:28.603", "Score": "5", "Body": "<p>There is a <em><strong>limitation in terraform while deploying logic app work flows</strong></em> ,<em><strong>you can't create the api connections which are required in workflows</strong></em> , it can be <em><strong>only deployed through arm template or manually from portal</strong></em> and then <em><strong>need to be manually configured inside the workflow</strong></em> like <em><strong><code>bingsmap</code> connection and <code>outlook</code> connection</strong></em> .</p>\n<p>If you are <em><strong>starting to deploy logic apps from terraform then quick fix will be to refer the ARM template of a workflow after creating a workflow manually  going to logic app code view</strong></em>, to get the idea how a custom action should be written in terraform .</p>\n<h4>OR</h4>\n<p>You can <em><strong>just deploy the logicapp from terraform</strong></em> and then <em><strong>use the code present in logic app code view to be deployed from terraform</strong></em> using <em><strong><a href=\"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/resource_group_template_deployment\" rel=\"noreferrer\">azurerm_resource_group_template_deployment</a></strong></em>.</p>\n<p><strong>References:</strong></p>\n<p><a href=\"https://stackoverflow.com/questions/68892355/unable-to-connect-the-api-connection-to-the-logic-app-via-arm-template-in-terraf\"><em><strong><code>Another SO thread where I have mentioned about configuring webapiconnections for logic app using ARM template</code></strong></em></a></p>\n<p><a href=\"https://azapril.dev/2021/04/12/deploying-a-logicapp-with-terraform/\" rel=\"noreferrer\"><code>***Example provide by AZApril on how to use terraform to deploy logic app and then workflow using template deployment***</code></a></p>\n<hr />\n<p><em><strong>For deploying the logic app and workflow you can use something like below from terraform :</strong></em></p>\n<pre><code>provider &quot;azurerm&quot; {\n  features{}\n}\n\ndata &quot;azurerm_resource_group&quot; &quot;example&quot; {\n  name=&quot;ansumantest&quot;\n}\n\nresource &quot;azurerm_logic_app_workflow&quot; &quot;example&quot; {\n  name                = &quot;workflow1&quot;\n  location           = data.azurerm_resource_group.example.location\n  resource_group_name = data.azurerm_resource_group.example.name\n}\n\nresource &quot;azurerm_resource_group_template_deployment&quot; &quot;apiconnections&quot; {\n  name                = &quot;group-deploy&quot;\n  resource_group_name = data.azurerm_resource_group.example.name\n  deployment_mode     = &quot;Incremental&quot;\n  template_content = &lt;&lt;TEMPLATE\n{\n    &quot;$schema&quot;: &quot;https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#&quot;,\n    &quot;contentVersion&quot;: &quot;1.0.0.0&quot;,\n    &quot;parameters&quot;: {\n        &quot;connections_bingmaps_name&quot;: {\n            &quot;defaultValue&quot;: &quot;bingmaps&quot;,\n            &quot;type&quot;: &quot;string&quot;\n        },\n        &quot;connections_office365_name&quot;: {\n            &quot;defaultValue&quot;: &quot;office365&quot;,\n            &quot;type&quot;: &quot;string&quot;\n        }\n    },\n    &quot;variables&quot;: {},\n    &quot;resources&quot;: [\n        {\n    &quot;type&quot;: &quot;Microsoft.Web/connections&quot;,\n    &quot;apiVersion&quot;: &quot;2016-06-01&quot;,\n    &quot;name&quot;: &quot;[parameters('connections_bingmaps_name')]&quot;,\n    &quot;location&quot;: &quot;eastus&quot;,\n    &quot;kind&quot;: &quot;V1&quot;,\n    &quot;properties&quot;: {\n        &quot;displayName&quot;: &quot;BingMapsConnection&quot;,\n        &quot;statuses&quot;: [\n            {\n                &quot;status&quot;: &quot;Connected&quot;\n            }\n        ],\n        &quot;customParameterValues&quot;: {},\n        &quot;nonSecretParameterValues&quot;: {},\n        &quot;createdTime&quot;: &quot;2022-01-24T08:26:56.8147674Z&quot;,\n        &quot;changedTime&quot;: &quot;2022-01-24T08:28:05.4634315Z&quot;,\n        &quot;api&quot;: {\n            &quot;name&quot;: &quot;[parameters('connections_bingmaps_name')]&quot;,\n            &quot;displayName&quot;: &quot;Bing Maps&quot;,\n            &quot;description&quot;: &quot;Bing Maps&quot;,\n            &quot;iconUri&quot;: &quot;[concat('https://connectoricons-prod.azureedge.net/releases/v1.0.1538/1.0.1538.2619/', parameters('connections_bingmaps_name'), '/icon.png')]&quot;,\n            &quot;brandColor&quot;: &quot;#008372&quot;,\n            &quot;id&quot;: &quot;[concat('/subscriptions/&lt;subscriptionId&gt;/providers/Microsoft.Web/locations/eastus/managedApis/', parameters('connections_bingmaps_name'))]&quot;,\n            &quot;type&quot;: &quot;Microsoft.Web/locations/managedApis&quot;\n        },\n        &quot;testLinks&quot;: []\n    }\n},\n{\n    &quot;type&quot;: &quot;Microsoft.Web/connections&quot;,\n    &quot;apiVersion&quot;: &quot;2016-06-01&quot;,\n    &quot;name&quot;: &quot;[parameters('connections_office365_name')]&quot;,\n    &quot;location&quot;: &quot;eastus&quot;,\n    &quot;kind&quot;: &quot;V1&quot;,\n    &quot;properties&quot;: {\n        &quot;displayName&quot;: &quot;&lt;emailid&gt;&quot;,\n        &quot;statuses&quot;: [\n            {\n                &quot;status&quot;: &quot;Connected&quot;\n            }\n        ],\n        &quot;customParameterValues&quot;: {},\n        &quot;nonSecretParameterValues&quot;: {},\n        &quot;createdTime&quot;: &quot;2022-01-24T08:33:55.8159813Z&quot;,\n        &quot;changedTime&quot;: &quot;2022-01-24T08:35:04.9083183Z&quot;,\n        &quot;api&quot;: {\n            &quot;name&quot;: &quot;[parameters('connections_office365_name')]&quot;,\n            &quot;displayName&quot;: &quot;Office 365 Outlook&quot;,\n            &quot;description&quot;: &quot;Microsoft Office 365 is a cloud-based service that is designed to help meet your organization's needs for robust security, reliability, and user productivity.&quot;,\n            &quot;iconUri&quot;: &quot;[concat('https://connectoricons-prod.azureedge.net/releases/v1.0.1538/1.0.1538.2621/', parameters('connections_office365_name'), '/icon.png')]&quot;,\n            &quot;brandColor&quot;: &quot;#0078D4&quot;,\n            &quot;id&quot;: &quot;[concat('/subscriptions/&lt;subscriptionId&gt;/providers/Microsoft.Web/locations/eastus/managedApis/', parameters('connections_office365_name'))]&quot;,\n            &quot;type&quot;: &quot;Microsoft.Web/locations/managedApis&quot;\n        },\n        &quot;testLinks&quot;: [\n            {\n                &quot;requestUri&quot;: &quot;[concat('https://management.azure.com:443/subscriptions/&lt;subscriptionId&gt;/resourceGroups/ansumantest/providers/Microsoft.Web/connections/', parameters('connections_office365_name'), '/extensions/proxy/testconnection?api-version=2016-06-01')]&quot;,\n                &quot;method&quot;: &quot;get&quot;\n            }\n        ]\n    }\n}\n    ],\n    &quot;outputs&quot;: {\n        &quot;bingmapid&quot;:{\n            &quot;type&quot;: &quot;string&quot;,\n            &quot;value&quot; : &quot;[resourceId('Microsoft.Web/connections', parameters('connections_bingmaps_name'))]&quot;\n        } ,\n        &quot;officeid&quot;: {\n            &quot;type&quot;: &quot;string&quot;,\n            &quot;value&quot;: &quot;[resourceId('Microsoft.Web/connections', parameters('connections_office365_name'))]&quot;\n        }\n    }\n}\nTEMPLATE\ndepends_on = [\n  azurerm_logic_app_workflow.example\n]\n}\nlocals {\n  bingmapconnectionid = jsondecode(azurerm_resource_group_template_deployment.apiconnections.output_content).bingmapid.value\n  office365connectionid = jsondecode(azurerm_resource_group_template_deployment.apiconnections.output_content).officeid.value\n}\nresource &quot;azurerm_logic_app_trigger_recurrence&quot; &quot;trigger&quot; {\n  name         = &quot;Recurrence&quot;\n  logic_app_id = azurerm_logic_app_workflow.example.id\n  frequency    = &quot;Week&quot;\n  interval     = 1\n  schedule {\n    at_these_minutes=[0,15,30,45]\n    at_these_hours =[&quot;8&quot;,&quot;9&quot;,&quot;7&quot;]\n    on_these_days=[&quot;Monday&quot;,&quot;Tuesday&quot;,&quot;Wednesday&quot;,&quot;Thursday&quot;,&quot;Friday&quot;,&quot;Saturday&quot;,&quot;Sunday&quot;]\n  }\n  depends_on = [\n    azurerm_resource_group_template_deployment.apiconnections\n  ]\n}\n\nresource &quot;azurerm_logic_app_action_custom&quot; &quot;action1&quot; {\n  name         = &quot;Get_route_and_travel_time_with_traffic&quot;\n  logic_app_id = azurerm_logic_app_workflow.example.id\n\n  body = &lt;&lt;BODY\n{\n                            &quot;runAfter&quot;: {},\n                            &quot;type&quot;: &quot;ApiConnection&quot;,\n                            &quot;inputs&quot;: {\n                                &quot;host&quot;: {\n                                    &quot;connection&quot;: {\n                                        &quot;name&quot;: &quot;${local.bingmapconnectionid}&quot;\n                                    }\n                                },\n                                &quot;method&quot;: &quot;get&quot;,\n                                &quot;path&quot;: &quot;/V3/REST/V1/Routes/@{encodeURIComponent('Driving')}&quot;,\n                                &quot;queries&quot;: {\n                                    &quot;distanceUnit&quot;: &quot;Mile&quot;,\n                                    &quot;optimize&quot;: &quot;timeWithTraffic&quot;,\n                                    &quot;wp.0&quot;: &quot;21930 SE 51st ,Issaugh,WA,98029&quot;,\n                                    &quot;wp.1&quot;: &quot;3003 160th Ave,Bellevue,WA,98029&quot;\n                                }\n                            }\n                        }\nBODY\ndepends_on = [\n  azurerm_logic_app_trigger_recurrence.trigger\n]\n}\nresource &quot;azurerm_logic_app_action_custom&quot; &quot;action2&quot; {\n  name         = &quot;Create_variable_to_store_travel_time&quot;\n  logic_app_id = azurerm_logic_app_workflow.example.id\n\n  body = &lt;&lt;BODY\n                       {\n                &quot;inputs&quot;: {\n                    &quot;variables&quot;: [\n                        {\n                            &quot;name&quot;: &quot;travelTime&quot;,\n                            &quot;type&quot;: &quot;integer&quot;,\n                            &quot;value&quot;: &quot;@div(body('Get_route_and_travel_time_with_traffic')?['travelDurationTraffic'],60)&quot;\n                        }\n                    ]\n                },\n                &quot;runAfter&quot;: {\n                    &quot;Get_route_and_travel_time_with_traffic&quot;: [\n                        &quot;Succeeded&quot;\n                    ]\n                },\n                &quot;type&quot;: &quot;InitializeVariable&quot;\n            }\nBODY\ndepends_on = [\n  azurerm_logic_app_action_custom.action1\n]\n}\nresource &quot;azurerm_logic_app_action_custom&quot; &quot;condition&quot; {\n  name         = &quot;If_travel_time_exceeds_limit&quot;\n  logic_app_id = azurerm_logic_app_workflow.example.id\n\n  body = &lt;&lt;BODY\n{\n                            &quot;actions&quot;: {\n                                &quot;Send_email_with_travel_time&quot;: {\n                                    &quot;runAfter&quot;: {},\n                                    &quot;type&quot;: &quot;ApiConnection&quot;,\n                                    &quot;inputs&quot;: {\n                                        &quot;body&quot;: {\n                                            &quot;Body&quot;: &quot;&lt;p&gt;Add extra travel time (minutes): @{sub(variables('travelTime'),15)}&lt;/p&gt;&quot;,\n                                            &quot;Subject&quot;: &quot;Current travel time (minutes): @{variables('travelTime')}&quot;,\n                                            &quot;To&quot;: &quot;admin@xxxxxxxxxx.onmicrosoft.com&quot;\n                                        },\n                                        &quot;host&quot;: {\n                                            &quot;connection&quot;: {\n                                                &quot;name&quot;: &quot;${local.office365connectionid}&quot;\n                                            }\n                                        },\n                                        &quot;method&quot;: &quot;post&quot;,\n                                        &quot;path&quot;: &quot;/v2/Mail&quot;\n                                    }\n                                }\n                            },\n                            &quot;runAfter&quot;: {\n                                &quot;Create_variable_to_store_travel_time&quot;: [\n                                    &quot;Succeeded&quot;\n                                ]\n                            },\n                            &quot;expression&quot;: {\n                                &quot;and&quot;: [\n                                    {\n                                        &quot;greater&quot;: [\n                                            &quot;@variables('travelTime')&quot;,\n                                            15\n                                        ]\n                                    }\n                                ]\n                            },\n                            &quot;type&quot;: &quot;If&quot;\n                        }\nBODY\ndepends_on = [\n  azurerm_logic_app_action_custom.action2\n]\n}\n</code></pre>\n<p>Output:</p>\n<p><a href=\"https://i.stack.imgur.com/uMz8H.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/uMz8H.png\" alt=\"enter image description here\" /></a></p>\n<p><a href=\"https://i.stack.imgur.com/AHkSY.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/AHkSY.png\" alt=\"enter image description here\" /></a></p>\n<p><a href=\"https://i.stack.imgur.com/W3Bz1.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/W3Bz1.png\" alt=\"enter image description here\" /></a></p>\n<p>Every thing gets deployed but the <em><strong>api connection gives error in the logic app as not</strong></em> found so you will have to <em><strong>configure that manually or by the solution I have mentioned in the other SO thread</strong></em>.</p>\n", "OwnerUserId": "15969299", "LastActivityDate": "2022-01-24T11:27:28.603", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "125224973", "PostId": "70833123", "Score": "0", "Text": "thx, I will have a look and come back. The first solution is a bit complicated. Does this link have a simpler solution? https://azapril.dev/2021/04/12/deploying-a-logicapp-with-terraform/", "CreationDate": "2022-01-24T14:03:33.000", "UserId": "665335", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "125277357", "PostId": "70833123", "Score": "0", "Text": "@Pingpong, Yeah it's bit simpler if you have created a workflow manually then you can take the code from code view and do a template deployment .", "CreationDate": "2022-01-26T14:02:18.643", "UserId": "15969299", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "262612192", "PostHistoryTypeId": "2", "PostId": "70833123", "RevisionGUID": "7ef61dcd-b3c9-4b1c-99db-2ca14615267e", "CreationDate": "2022-01-24T11:27:28.603", "UserId": "15969299", "Text": "There is a ***limitation in terraform while deploying logic app work flows*** ,***you can't create the api connections which are required in workflows*** , it can be ***only deployed through arm template or manually from portal*** and then ***need to be manually configured inside the workflow*** like ***`bingsmap` connection and `outlook` connection*** .\r\n\r\nIf you are ***starting to deploy logic apps from terraform then quick fix will be to refer the ARM template of a workflow after creating a workflow manually  going to logic app code view***, to get the idea how a custom action should be written in terraform . \r\n\r\n#### OR\r\n\r\nYou can ***just deploy the logicapp from terraform*** and then ***use the code present in logic app code view to be deployed from terraform*** using ***[azurerm_resource_group_template_deployment][1]***.\r\n\r\n**References:**\r\n\r\n[***`Another SO thread where I have mentioned about configuring webapiconnections for logic app using ARM template`***][2]\r\n\r\n[`***Example provide by AZApril on how to use terraform to deploy logic app and then workflow using template deployment***`][3] \r\n\r\n----------------------------------------------\r\n\r\n***For deploying the logic app and workflow you can use something like below from terraform :***\r\n\r\n    provider \"azurerm\" {\r\n      features{}\r\n    }\r\n    \r\n    data \"azurerm_resource_group\" \"example\" {\r\n      name=\"ansumantest\"\r\n    }\r\n    \r\n    resource \"azurerm_logic_app_workflow\" \"example\" {\r\n      name                = \"workflow1\"\r\n      location           = data.azurerm_resource_group.example.location\r\n      resource_group_name = data.azurerm_resource_group.example.name\r\n    }\r\n    \r\n    resource \"azurerm_resource_group_template_deployment\" \"apiconnections\" {\r\n      name                = \"group-deploy\"\r\n      resource_group_name = data.azurerm_resource_group.example.name\r\n      deployment_mode     = \"Incremental\"\r\n      template_content = <<TEMPLATE\r\n    {\r\n        \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\r\n        \"contentVersion\": \"1.0.0.0\",\r\n        \"parameters\": {\r\n            \"connections_bingmaps_name\": {\r\n                \"defaultValue\": \"bingmaps\",\r\n                \"type\": \"string\"\r\n            },\r\n            \"connections_office365_name\": {\r\n                \"defaultValue\": \"office365\",\r\n                \"type\": \"string\"\r\n            }\r\n        },\r\n        \"variables\": {},\r\n        \"resources\": [\r\n            {\r\n        \"type\": \"Microsoft.Web/connections\",\r\n        \"apiVersion\": \"2016-06-01\",\r\n        \"name\": \"[parameters('connections_bingmaps_name')]\",\r\n        \"location\": \"eastus\",\r\n        \"kind\": \"V1\",\r\n        \"properties\": {\r\n            \"displayName\": \"BingMapsConnection\",\r\n            \"statuses\": [\r\n                {\r\n                    \"status\": \"Connected\"\r\n                }\r\n            ],\r\n            \"customParameterValues\": {},\r\n            \"nonSecretParameterValues\": {},\r\n            \"createdTime\": \"2022-01-24T08:26:56.8147674Z\",\r\n            \"changedTime\": \"2022-01-24T08:28:05.4634315Z\",\r\n            \"api\": {\r\n                \"name\": \"[parameters('connections_bingmaps_name')]\",\r\n                \"displayName\": \"Bing Maps\",\r\n                \"description\": \"Bing Maps\",\r\n                \"iconUri\": \"[concat('https://connectoricons-prod.azureedge.net/releases/v1.0.1538/1.0.1538.2619/', parameters('connections_bingmaps_name'), '/icon.png')]\",\r\n                \"brandColor\": \"#008372\",\r\n                \"id\": \"[concat('/subscriptions/<subscriptionId>/providers/Microsoft.Web/locations/eastus/managedApis/', parameters('connections_bingmaps_name'))]\",\r\n                \"type\": \"Microsoft.Web/locations/managedApis\"\r\n            },\r\n            \"testLinks\": []\r\n        }\r\n    },\r\n    {\r\n        \"type\": \"Microsoft.Web/connections\",\r\n        \"apiVersion\": \"2016-06-01\",\r\n        \"name\": \"[parameters('connections_office365_name')]\",\r\n        \"location\": \"eastus\",\r\n        \"kind\": \"V1\",\r\n        \"properties\": {\r\n            \"displayName\": \"<emailid>\",\r\n            \"statuses\": [\r\n                {\r\n                    \"status\": \"Connected\"\r\n                }\r\n            ],\r\n            \"customParameterValues\": {},\r\n            \"nonSecretParameterValues\": {},\r\n            \"createdTime\": \"2022-01-24T08:33:55.8159813Z\",\r\n            \"changedTime\": \"2022-01-24T08:35:04.9083183Z\",\r\n            \"api\": {\r\n                \"name\": \"[parameters('connections_office365_name')]\",\r\n                \"displayName\": \"Office 365 Outlook\",\r\n                \"description\": \"Microsoft Office 365 is a cloud-based service that is designed to help meet your organization's needs for robust security, reliability, and user productivity.\",\r\n                \"iconUri\": \"[concat('https://connectoricons-prod.azureedge.net/releases/v1.0.1538/1.0.1538.2621/', parameters('connections_office365_name'), '/icon.png')]\",\r\n                \"brandColor\": \"#0078D4\",\r\n                \"id\": \"[concat('/subscriptions/<subscriptionId>/providers/Microsoft.Web/locations/eastus/managedApis/', parameters('connections_office365_name'))]\",\r\n                \"type\": \"Microsoft.Web/locations/managedApis\"\r\n            },\r\n            \"testLinks\": [\r\n                {\r\n                    \"requestUri\": \"[concat('https://management.azure.com:443/subscriptions/<subscriptionId>/resourceGroups/ansumantest/providers/Microsoft.Web/connections/', parameters('connections_office365_name'), '/extensions/proxy/testconnection?api-version=2016-06-01')]\",\r\n                    \"method\": \"get\"\r\n                }\r\n            ]\r\n        }\r\n    }\r\n        ],\r\n        \"outputs\": {\r\n            \"bingmapid\":{\r\n                \"type\": \"string\",\r\n                \"value\" : \"[resourceId('Microsoft.Web/connections', parameters('connections_bingmaps_name'))]\"\r\n            } ,\r\n            \"officeid\": {\r\n                \"type\": \"string\",\r\n                \"value\": \"[resourceId('Microsoft.Web/connections', parameters('connections_office365_name'))]\"\r\n            }\r\n        }\r\n    }\r\n    TEMPLATE\r\n    depends_on = [\r\n      azurerm_logic_app_workflow.example\r\n    ]\r\n    }\r\n    locals {\r\n      bingmapconnectionid = jsondecode(azurerm_resource_group_template_deployment.apiconnections.output_content).bingmapid.value\r\n      office365connectionid = jsondecode(azurerm_resource_group_template_deployment.apiconnections.output_content).officeid.value\r\n    }\r\n    resource \"azurerm_logic_app_trigger_recurrence\" \"trigger\" {\r\n      name         = \"Recurrence\"\r\n      logic_app_id = azurerm_logic_app_workflow.example.id\r\n      frequency    = \"Week\"\r\n      interval     = 1\r\n      schedule {\r\n        at_these_minutes=[0,15,30,45]\r\n        at_these_hours =[\"8\",\"9\",\"7\"]\r\n        on_these_days=[\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"]\r\n      }\r\n      depends_on = [\r\n        azurerm_resource_group_template_deployment.apiconnections\r\n      ]\r\n    }\r\n    \r\n    resource \"azurerm_logic_app_action_custom\" \"action1\" {\r\n      name         = \"Get_route_and_travel_time_with_traffic\"\r\n      logic_app_id = azurerm_logic_app_workflow.example.id\r\n    \r\n      body = <<BODY\r\n    {\r\n                                \"runAfter\": {},\r\n                                \"type\": \"ApiConnection\",\r\n                                \"inputs\": {\r\n                                    \"host\": {\r\n                                        \"connection\": {\r\n                                            \"name\": \"${local.bingmapconnectionid}\"\r\n                                        }\r\n                                    },\r\n                                    \"method\": \"get\",\r\n                                    \"path\": \"/V3/REST/V1/Routes/@{encodeURIComponent('Driving')}\",\r\n                                    \"queries\": {\r\n                                        \"distanceUnit\": \"Mile\",\r\n                                        \"optimize\": \"timeWithTraffic\",\r\n                                        \"wp.0\": \"21930 SE 51st ,Issaugh,WA,98029\",\r\n                                        \"wp.1\": \"3003 160th Ave,Bellevue,WA,98029\"\r\n                                    }\r\n                                }\r\n                            }\r\n    BODY\r\n    depends_on = [\r\n      azurerm_logic_app_trigger_recurrence.trigger\r\n    ]\r\n    }\r\n    resource \"azurerm_logic_app_action_custom\" \"action2\" {\r\n      name         = \"Create_variable_to_store_travel_time\"\r\n      logic_app_id = azurerm_logic_app_workflow.example.id\r\n    \r\n      body = <<BODY\r\n                           {\r\n                    \"inputs\": {\r\n                        \"variables\": [\r\n                            {\r\n                                \"name\": \"travelTime\",\r\n                                \"type\": \"integer\",\r\n                                \"value\": \"@div(body('Get_route_and_travel_time_with_traffic')?['travelDurationTraffic'],60)\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"runAfter\": {\r\n                        \"Get_route_and_travel_time_with_traffic\": [\r\n                            \"Succeeded\"\r\n                        ]\r\n                    },\r\n                    \"type\": \"InitializeVariable\"\r\n                }\r\n    BODY\r\n    depends_on = [\r\n      azurerm_logic_app_action_custom.action1\r\n    ]\r\n    }\r\n    resource \"azurerm_logic_app_action_custom\" \"condition\" {\r\n      name         = \"If_travel_time_exceeds_limit\"\r\n      logic_app_id = azurerm_logic_app_workflow.example.id\r\n    \r\n      body = <<BODY\r\n    {\r\n                                \"actions\": {\r\n                                    \"Send_email_with_travel_time\": {\r\n                                        \"runAfter\": {},\r\n                                        \"type\": \"ApiConnection\",\r\n                                        \"inputs\": {\r\n                                            \"body\": {\r\n                                                \"Body\": \"<p>Add extra travel time (minutes): @{sub(variables('travelTime'),15)}</p>\",\r\n                                                \"Subject\": \"Current travel time (minutes): @{variables('travelTime')}\",\r\n                                                \"To\": \"admin@xxxxxxxxxx.onmicrosoft.com\"\r\n                                            },\r\n                                            \"host\": {\r\n                                                \"connection\": {\r\n                                                    \"name\": \"${local.office365connectionid}\"\r\n                                                }\r\n                                            },\r\n                                            \"method\": \"post\",\r\n                                            \"path\": \"/v2/Mail\"\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"runAfter\": {\r\n                                    \"Create_variable_to_store_travel_time\": [\r\n                                        \"Succeeded\"\r\n                                    ]\r\n                                },\r\n                                \"expression\": {\r\n                                    \"and\": [\r\n                                        {\r\n                                            \"greater\": [\r\n                                                \"@variables('travelTime')\",\r\n                                                15\r\n                                            ]\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                \"type\": \"If\"\r\n                            }\r\n    BODY\r\n    depends_on = [\r\n      azurerm_logic_app_action_custom.action2\r\n    ]\r\n    }\r\n\r\n\r\nOutput:\r\n\r\n[![enter image description here][4]][4]\r\n\r\n[![enter image description here][5]][5]\r\n\r\n[![enter image description here][6]][6]\r\n\r\nEvery thing gets deployed but the ***api connection gives error in the logic app as not*** found so you will have to ***configure that manually or by the solution I have mentioned in the other SO thread***.\r\n\r\n\r\n  [1]: https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/resource_group_template_deployment\r\n  [2]: https://stackoverflow.com/questions/68892355/unable-to-connect-the-api-connection-to-the-logic-app-via-arm-template-in-terraf\r\n  [3]: https://azapril.dev/2021/04/12/deploying-a-logicapp-with-terraform/\r\n  [4]: https://i.stack.imgur.com/uMz8H.png\r\n  [5]: https://i.stack.imgur.com/AHkSY.png\r\n  [6]: https://i.stack.imgur.com/W3Bz1.png", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "**References:** [***`Another SO thread where I have mentioned about configuring webapiconnections for logic app using ARM template`***][2] [`***Example provide by AZApril on how to use terraform to deploy logic app and then workflow using template deployment***`][3] ---------------------------------------------- ***For deploying the logic app and workflow you can use something like below from terraform :*** provider \"azurerm\" { features{} } data \"azurerm_resource_group\" \"example\" { name=\"ansumantest\" } resource \"azurerm_logic_app_workflow\" \"example\" { name = \"workflow1\" location = data.azurerm_resource_group.example.location resource_group_name = data.azurerm_resource_group.example.name } resource \"azurerm_resource_group_template_deployment\" \"apiconnections\" { name = \"group-deploy\" resource_group_name = data.azurerm_resource_group.example.name deployment_mode = \"Incremental\" template_content = <", "keywords": ["provider"]}]}], "filtered-sentences": []}, {"Id": "71141851", "PostTypeId": "2", "ParentId": "70757669", "CreationDate": "2022-02-16T12:25:52.917", "Score": "3", "Body": "<p>You should look at <a href=\"https://learn.microsoft.com/en-us/azure/logic-apps/single-tenant-overview-compare\" rel=\"nofollow noreferrer\">Logic Apps (Standard)</a>. They provide a better development/deployment experience. You can create the <a href=\"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/logic_app_standard\" rel=\"nofollow noreferrer\">Logic App Standard runtime using terraform</a> and deploy your workflows using <a href=\"https://techcommunity.microsoft.com/t5/integrations-on-azure-blog/deploying-an-azure-logic-apps-standard-workflow-through-azure/ba-p/2533050\" rel=\"nofollow noreferrer\">Azure CI/CD pipelines</a>.</p>\n<p>However, With Logic Apps (Standard) there are only <a href=\"https://azure.microsoft.com/en-us/pricing/details/logic-apps/#pricing\" rel=\"nofollow noreferrer\">three pricing tiers availabe</a>: WS1, WS2 and WS3. You'll always have to pay even when your instance is idle. Logic Apps (Standard) will be hosted inside an App Service.\nThe benefits: Your workflow code can be source controlled in git and you're able to <a href=\"https://learn.microsoft.com/en-us/azure/logic-apps/create-single-tenant-workflows-visual-studio-code\" rel=\"nofollow noreferrer\">develop/debug locally in VSCode</a>.</p>\n<p>So it comes down to this comparison:</p>\n<p><strong>Logic Apps Consumption</strong></p>\n<p>Pros</p>\n<ul>\n<li>you only pay for what you use (consumption pricing model)</li>\n<li>develop in VSCode locally, but no debug (imho) - VSCode just connects to Azure</li>\n</ul>\n<p>Cons</p>\n<ul>\n<li>automating deployment of workflows is currently really hard (see complex terraform scripts above)</li>\n<li>provides no source control</li>\n<li>your workflow defintion only lives in Azure</li>\n<li>no CI/CD</li>\n</ul>\n<p><strong>Logic Apps (Standard)</strong></p>\n<p>Pros</p>\n<ul>\n<li>Deployment through CI/CD pipelines is possible</li>\n<li>source control by git for your workflows and connections</li>\n<li>VSCode integration (develop and debug locally while using the portable workflow runtime)</li>\n<li>Can be parameterized (also uses appsettings)</li>\n</ul>\n<p>Cons</p>\n<ul>\n<li>you have to run a full AppService for hosting</li>\n<li>the cheapest pricing model is WS1, cost about $130 per month</li>\n</ul>\n<p>Currently, we decided to run Standard model, because anything can be source-controlled an automated using CI/CD. However, we only run a small number of workflows, and costs are high. We would be better going the consumption way.</p>\n", "OwnerUserId": "548655", "LastEditorUserId": "1233251", "LastEditDate": "2022-02-16T14:22:40.243", "LastActivityDate": "2022-02-16T14:22:40.243", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "264244014", "PostHistoryTypeId": "2", "PostId": "71141851", "RevisionGUID": "c0ec03c2-3251-4f89-82b1-0f866337ab89", "CreationDate": "2022-02-16T12:25:52.917", "UserId": "548655", "Text": "You should look at [Logic Apps (Standard)][1]. They provide a better development/deployment experience. You can create the [Logic App Standard runtime using terraform][2] and deploy your workflows using [Azure CI/CD pipelines][3]. \r\n\r\nHowever, With Logic Apps (Standard) there are only [three pricing tiers availabe][4]: WS1, WS2 and WS3. You'll always have to pay even when your instance is idle. Logic Apps (Standard) will be hosted inside an App Service.\r\nThe benefits: Your workflow code can be source controlled in git and you're able to [develop/debug locally in VSCode][5]. \r\n\r\nBtw: This is a fair question, I don't know why some people downvote.\r\n\r\n\r\n  [1]: https://learn.microsoft.com/en-us/azure/logic-apps/single-tenant-overview-compare\r\n  [2]: https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/logic_app_standard\r\n  [3]: https://techcommunity.microsoft.com/t5/integrations-on-azure-blog/deploying-an-azure-logic-apps-standard-workflow-through-azure/ba-p/2533050\r\n  [4]: https://azure.microsoft.com/en-us/pricing/details/logic-apps/#pricing\r\n  [5]: https://learn.microsoft.com/en-us/azure/logic-apps/create-single-tenant-workflows-visual-studio-code", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "You'll always have to pay even when your instance is idle. ", "keywords": ["pay", "instance"]}]}, {"Id": "264244633", "PostHistoryTypeId": "5", "PostId": "71141851", "RevisionGUID": "b68246c2-e155-4cd8-8254-8d0606c84fbc", "CreationDate": "2022-02-16T12:34:57.670", "UserId": "548655", "Comment": "added 1084 characters in body", "Text": "You should look at [Logic Apps (Standard)][1]. They provide a better development/deployment experience. You can create the [Logic App Standard runtime using terraform][2] and deploy your workflows using [Azure CI/CD pipelines][3]. \r\n\r\nHowever, With Logic Apps (Standard) there are only [three pricing tiers availabe][4]: WS1, WS2 and WS3. You'll always have to pay even when your instance is idle. Logic Apps (Standard) will be hosted inside an App Service.\r\nThe benefits: Your workflow code can be source controlled in git and you're able to [develop/debug locally in VSCode][5]. \r\n\r\n\r\nSo it comes down to this comparison:\r\n\r\n**Logic Apps Consumption**\r\n\r\n Pros\r\n  - you only pay for what you use (consumption pricing model)\r\n  - develop in VSCode locally, but no debug (imho) - VSCode just connects to Azure\r\n\r\n Cons\r\n  - automating deployment of workflows is currently really hard (see complex terraform scripts above)\r\n  - provides no source control \r\n  - your workflow defintion only lives in Azure\r\n  - no CI/CD\r\n\r\n\r\n**Logic Apps (Standard)**\r\n\r\nPros\r\n- Deployment through CI/CD pipelines is possible\r\n- source control by git for your workflows and connections\r\n- VSCode integration (develop and debug locally while using the portable workflow runtime)\r\n- Can be parameterized (also uses appsettings)\r\n\r\nCons\r\n- you have to run a full AppService for hosting\r\n- the cheapest pricing model is WS1, cost about $130 per month\r\n\r\n\r\n\r\nCurrently, we decided to run Standard model, because anything can be source-controlled an automated using CI/CD. However, we only run a small number of workflows, and costs are high. We would be better going the consumption way.\r\n\r\n\r\nBtw: This is a fair question, I don't know why some people downvote.\r\n\r\n\r\n  [1]: https://learn.microsoft.com/en-us/azure/logic-apps/single-tenant-overview-compare\r\n  [2]: https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/logic_app_standard\r\n  [3]: https://techcommunity.microsoft.com/t5/integrations-on-azure-blog/deploying-an-azure-logic-apps-standard-workflow-through-azure/ba-p/2533050\r\n  [4]: https://azure.microsoft.com/en-us/pricing/details/logic-apps/#pricing\r\n  [5]: https://learn.microsoft.com/en-us/azure/logic-apps/create-single-tenant-workflows-visual-studio-code", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "You'll always have to pay even when your instance is idle. ", "keywords": ["pay", "instance"]}, {"source": "Text", "text": "So it comes down to this comparison: **Logic Apps Consumption** Pros - you only pay for what you use (consumption pricing model) - develop in VSCode locally, but no debug (imho) - VSCode just connects to Azure Cons - automating deployment of workflows is currently really hard (see complex terraform scripts above) - provides no source control - your workflow defintion only lives in Azure - no CI/CD **Logic Apps (Standard)** Pros - Deployment through CI/CD pipelines is possible - source control by git for your workflows and connections - VSCode integration (develop and debug locally while using the portable workflow runtime) - Can be parameterized (also uses appsettings) Cons - you have to run a full AppService for hosting - the cheapest pricing model is WS1, cost about $130 per month ", "keywords": ["cheap", "cost", "pay"]}]}, {"Id": "264252795", "PostHistoryTypeId": "5", "PostId": "71141851", "RevisionGUID": "8001fdab-89e8-4643-b06c-cc63fd515e9f", "CreationDate": "2022-02-16T14:22:40.243", "UserId": "1233251", "Comment": "deleted 78 characters in body", "Text": "You should look at [Logic Apps (Standard)][1]. They provide a better development/deployment experience. You can create the [Logic App Standard runtime using terraform][2] and deploy your workflows using [Azure CI/CD pipelines][3]. \r\n\r\nHowever, With Logic Apps (Standard) there are only [three pricing tiers availabe][4]: WS1, WS2 and WS3. You'll always have to pay even when your instance is idle. Logic Apps (Standard) will be hosted inside an App Service.\r\nThe benefits: Your workflow code can be source controlled in git and you're able to [develop/debug locally in VSCode][5]. \r\n\r\n\r\nSo it comes down to this comparison:\r\n\r\n**Logic Apps Consumption**\r\n\r\n Pros\r\n  - you only pay for what you use (consumption pricing model)\r\n  - develop in VSCode locally, but no debug (imho) - VSCode just connects to Azure\r\n\r\n Cons\r\n  - automating deployment of workflows is currently really hard (see complex terraform scripts above)\r\n  - provides no source control \r\n  - your workflow defintion only lives in Azure\r\n  - no CI/CD\r\n\r\n\r\n**Logic Apps (Standard)**\r\n\r\nPros\r\n- Deployment through CI/CD pipelines is possible\r\n- source control by git for your workflows and connections\r\n- VSCode integration (develop and debug locally while using the portable workflow runtime)\r\n- Can be parameterized (also uses appsettings)\r\n\r\nCons\r\n- you have to run a full AppService for hosting\r\n- the cheapest pricing model is WS1, cost about $130 per month\r\n\r\nCurrently, we decided to run Standard model, because anything can be source-controlled an automated using CI/CD. However, we only run a small number of workflows, and costs are high. We would be better going the consumption way.\r\n\r\n\r\n  [1]: https://learn.microsoft.com/en-us/azure/logic-apps/single-tenant-overview-compare\r\n  [2]: https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/logic_app_standard\r\n  [3]: https://techcommunity.microsoft.com/t5/integrations-on-azure-blog/deploying-an-azure-logic-apps-standard-workflow-through-azure/ba-p/2533050\r\n  [4]: https://azure.microsoft.com/en-us/pricing/details/logic-apps/#pricing\r\n  [5]: https://learn.microsoft.com/en-us/azure/logic-apps/create-single-tenant-workflows-visual-studio-code", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "You'll always have to pay even when your instance is idle. ", "keywords": ["pay", "instance"]}, {"source": "Text", "text": "So it comes down to this comparison: **Logic Apps Consumption** Pros - you only pay for what you use (consumption pricing model) - develop in VSCode locally, but no debug (imho) - VSCode just connects to Azure Cons - automating deployment of workflows is currently really hard (see complex terraform scripts above) - provides no source control - your workflow defintion only lives in Azure - no CI/CD **Logic Apps (Standard)** Pros - Deployment through CI/CD pipelines is possible - source control by git for your workflows and connections - VSCode integration (develop and debug locally while using the portable workflow runtime) - Can be parameterized (also uses appsettings) Cons - you have to run a full AppService for hosting - the cheapest pricing model is WS1, cost about $130 per month Currently, we decided to run Standard model, because anything can be source-controlled an automated using CI/CD. ", "keywords": ["cheap", "cost", "pay"]}]}], "filtered-sentences": [{"source": "Body", "text": "You'll always have to pay even when your instance is idle. ", "keywords": ["pay", "instance"]}, {"source": "Body", "text": "So it comes down to this comparison: Logic Apps Consumption Pros you only pay for what you use (consumption pricing model) develop in VSCode locally, but no debug (imho) - VSCode just connects to Azure Cons automating deployment of workflows is currently really hard (see complex terraform scripts above) provides no source control your workflow defintion only lives in Azure no CI/CD Logic Apps (Standard) ", "keywords": ["pay"]}, {"source": "Body", "text": "Cons you have to run a full AppService for hosting the cheapest pricing model is WS1, cost about $130 per month ", "keywords": ["cheap", "cost"]}]}, {"Id": "72697128", "PostTypeId": "2", "ParentId": "70757669", "CreationDate": "2022-06-21T07:54:21.613", "Score": "2", "Body": "<p>On top of the above answers you can now create API connections from terraform with</p>\n<blockquote>\n<p><a href=\"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/api_connection\" rel=\"nofollow noreferrer\">azurerm_api_connection</a>\nThese can then be used in the connections under parameter of workflow or body of custom action</p>\n</blockquote>\n", "OwnerUserId": "8304053", "LastActivityDate": "2022-06-21T07:54:21.613", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "272660158", "PostHistoryTypeId": "2", "PostId": "72697128", "RevisionGUID": "575d1db7-5b45-45b2-b1a1-a02641423a25", "CreationDate": "2022-06-21T07:54:21.613", "UserId": "8304053", "Text": "On top of the above answers you can now create API connections from terraform with \r\n\r\n> [azurerm_api_connection][1] \r\nThese can then be used in the connections under parameter of workflow or body of custom action  \r\n\r\n\r\n  [1]: https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/api_connection", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": []}