{"Id": "66245221", "PostTypeId": "1", "AcceptedAnswerId": "66247343", "CreationDate": "2021-02-17T15:38:45.477", "Score": "3", "ViewCount": "15297", "Body": "<h1>Overview</h1>\n<p>There are some parts that I don't understand when I study State Locking of Terraform.</p>\n<ul>\n<li>terraform v0.14.6</li>\n</ul>\n<pre><code># Specify the provider and access details\nprovider &quot;aws&quot; {\n  region  = &quot;ap-northeast-1&quot;\n  profile = &quot;default&quot;\n}\n\nterraform {\n  backend &quot;s3&quot; {\n    key            = &quot;terraform.tfstate&quot;\n    bucket         = &quot;terraform-sample-yuta&quot;\n    region         = &quot;ap-northeast-1&quot;\n    dynamodb_table = &quot;terraform-state-lock-dynamo&quot;\n  }\n}\n\nresource &quot;aws_dynamodb_table&quot; &quot;dynamodb-terraform-state-lock&quot; {\n  name           = &quot;terraform-state-lock-dynamo&quot;\n  hash_key       = &quot;LockID&quot;\n  read_capacity  = 20\n  write_capacity = 20\n\n  attribute {\n    name = &quot;LockID&quot;\n    type = &quot;S&quot;\n  }\n\n  tags = {\n    Name = &quot;DynamoDB State Lock Table&quot;\n  }\n}\n\nresource &quot;aws_instance&quot; &quot;web&quot; {\n  instance_type = &quot;t3.small&quot;\n  # Amazon Linux2\n  ami   = &quot;ami-0992fc94ca0f1415a&quot;\n  count = 1\n  tags = {\n    Name = &quot;EC2 instance terraform&quot;\n  }\n}\n</code></pre>\n<p>I execute this main.tf, <code>terraform plan main.tf</code> and the following error has occurred.</p>\n<pre><code>$ terraform plan\n\nError: Error locking state: Error acquiring the state lock: 2 errors occurred:\n    * ResourceNotFoundException: Requested resource not found\n    * ResourceNotFoundException: Requested resource not found\n\n\n\nTerraform acquires a state lock to protect the state from being written\nby multiple users at the same time. Please resolve the issue above and try\nagain. For most commands, you can disable locking with the &quot;-lock=false&quot;\nflag, but this is not recommended.\n</code></pre>\n<p>With a similar error, <a href=\"https://stackoverflow.com/questions/64149876/terraform-error-error-locking-state-error-acquiring-the-state-lock-2-errors-o\">Terraform Error: Error locking state: Error acquiring the state lock: 2 errors occurred:</a></p>\n<p>so, I've created DynamoDB in advance.\nBut, another following error occurred.</p>\n<pre><code>Acquiring state lock. This may take a few moments...\naws_instance.web[0]: Refreshing state... [id=i-084998a0833bc68cb]\naws_dynamodb_table.dynamodb-terraform-state-lock: Creating...\n\nError: error creating DynamoDB Table: ResourceInUseException: Table already exists: terraform-state-lock-dynamo\n</code></pre>\n<p>I can resolve it with the <code>-lock=false</code> flag, but this is not recommended.</p>\n<p>Please give me some advice without using the <code>-lock=false</code> flag.</p>\n", "OwnerUserId": "14887996", "LastActivityDate": "2021-02-17T17:49:43.527", "Title": "Terraform error \"Error locking state: Error acquiring the state lock: 2 errors occurred\"", "Tags": "<amazon-web-services><amazon-dynamodb><terraform>", "AnswerCount": "1", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "links": [{"Id": "1809791103", "CreationDate": "2021-02-17T15:38:45.477", "PostId": "66245221", "RelatedPostId": "64149876", "LinkTypeId": "1"}], "history": [{"Id": "241011355", "PostHistoryTypeId": "2", "PostId": "66245221", "RevisionGUID": "ca435147-1687-44a1-bb5c-735643930f59", "CreationDate": "2021-02-17T15:38:45.477", "UserId": "14887996", "Text": "# Overview\r\nThere are some parts that I don't understand when I study State Locking of Terraform.\r\n- terraform v0.14.6\r\n\r\n```hcl\r\n# Specify the provider and access details\r\nprovider \"aws\" {\r\n  region  = \"ap-northeast-1\"\r\n  profile = \"default\"\r\n}\r\n\r\nterraform {\r\n  backend \"s3\" {\r\n    key            = \"terraform.tfstate\"\r\n    bucket         = \"terraform-sample-yuta\"\r\n    region         = \"ap-northeast-1\"\r\n    dynamodb_table = \"terraform-state-lock-dynamo\"\r\n  }\r\n}\r\n\r\nresource \"aws_dynamodb_table\" \"dynamodb-terraform-state-lock\" {\r\n  name           = \"terraform-state-lock-dynamo\"\r\n  hash_key       = \"LockID\"\r\n  read_capacity  = 20\r\n  write_capacity = 20\r\n\r\n  attribute {\r\n    name = \"LockID\"\r\n    type = \"S\"\r\n  }\r\n\r\n  tags = {\r\n    Name = \"DynamoDB State Lock Table\"\r\n  }\r\n}\r\n\r\nresource \"aws_instance\" \"web\" {\r\n  instance_type = \"t3.small\"\r\n  # Amazon Linux2\r\n  ami   = \"ami-0992fc94ca0f1415a\"\r\n  count = 1\r\n  tags = {\r\n    Name = \"EC2 instance terraform\"\r\n  }\r\n}\r\n```\r\n\r\nI execute this main.tf, `terraform plan main.tf` and the following error has occurred.\r\n\r\n```\r\n$ terraform plan\r\n\r\nError: Error locking state: Error acquiring the state lock: 2 errors occurred:\r\n    * ResourceNotFoundException: Requested resource not found\r\n    * ResourceNotFoundException: Requested resource not found\r\n\r\n\r\n\r\nTerraform acquires a state lock to protect the state from being written\r\nby multiple users at the same time. Please resolve the issue above and try\r\nagain. For most commands, you can disable locking with the \"-lock=false\"\r\nflag, but this is not recommended.\r\n```\r\n\r\nWith a similar error, https://stackoverflow.com/questions/64149876/terraform-error-error-locking-state-error-acquiring-the-state-lock-2-errors-o\r\n\r\nso, I've created DynamoDB in advance.\r\nBut, another following error occurred.\r\n\r\n```\r\nAcquiring state lock. This may take a few moments...\r\naws_instance.web[0]: Refreshing state... [id=i-084998a0833bc68cb]\r\naws_dynamodb_table.dynamodb-terraform-state-lock: Creating...\r\n\r\nError: error creating DynamoDB Table: ResourceInUseException: Table already exists: terraform-state-lock-dynamo\r\n```\r\n\r\nI can resolve it with the `-lock=false` flag, but this is not recommended.\r\n\r\nPlease give me some advice without using the `-lock=false` flag.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "There are some parts that I don't understand when I study State Locking of Terraform. - terraform v0.14.6 ```hcl # Specify the provider and access details provider \"aws\" { region = \"ap-northeast-1\" profile = \"default\" } terraform { backend \"s3\" { key = \"terraform.tfstate\" bucket = \"terraform-sample-yuta\" region = \"ap-northeast-1\" dynamodb_table = \"terraform-state-lock-dynamo\" } } resource \"aws_dynamodb_table\" \"dynamodb-terraform-state-lock\" { name = \"terraform-state-lock-dynamo\" hash_key = \"LockID\" read_capacity = 20 write_capacity = 20 attribute { name = \"LockID\" type = \"S\" } tags = { Name = \"DynamoDB State Lock Table\" } } resource \"aws_instance\" \"web\" { instance_type = \"t3.small\" # Amazon Linux2 ami = \"ami-0992fc94ca0f1415a\" count = 1 tags = { Name = \"EC2 instance terraform\" } } ``` I execute this main.tf, `terraform plan main.tf` and the following error has occurred. ", "keywords": ["instance", "provider"]}]}, {"Id": "241011356", "PostHistoryTypeId": "1", "PostId": "66245221", "RevisionGUID": "ca435147-1687-44a1-bb5c-735643930f59", "CreationDate": "2021-02-17T15:38:45.477", "UserId": "14887996", "Text": "Terraform error \"Error locking state: Error acquiring the state lock: 2 errors occurred\"", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "241011357", "PostHistoryTypeId": "3", "PostId": "66245221", "RevisionGUID": "ca435147-1687-44a1-bb5c-735643930f59", "CreationDate": "2021-02-17T15:38:45.477", "UserId": "14887996", "Text": "<amazon-web-services><amazon-dynamodb><terraform>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "66247343", "PostTypeId": "2", "ParentId": "66245221", "CreationDate": "2021-02-17T17:49:43.527", "Score": "2", "Body": "<p>The error seems to me coming from the local lock.</p>\n<pre><code>-rw-r--r--   1 myusername  staff  1002 Feb 17 13:02 .terraform.lock.hcl\ndrwxr-xr-x   4 myusername  staff   128 Feb 17 18:19 .terraform/\n</code></pre>\n<p>Remove those files as you are in the initial phase, I think you cleanup and try again.</p>\n<p>I was able to achieve this exact setup, below are my steps :</p>\n<ol>\n<li>Create DynamoDB Table and S3 Bucket</li>\n</ol>\n<pre><code>resource &quot;aws_s3_bucket&quot; &quot;terraform_state&quot; {\n  bucket = &quot;terraform-up-and-running-statezpl&quot;\n  # Enable versioning so we can see the full revision history of our\n  # state files\n  versioning {\n    enabled = true\n  }\n  # Enable server-side encryption by default\n  server_side_encryption_configuration {\n    rule {\n      apply_server_side_encryption_by_default {\n        sse_algorithm = &quot;AES256&quot;\n      }\n    }\n  }\n}\n\nresource &quot;aws_dynamodb_table&quot; &quot;terraform_locks&quot; {\n  name         = &quot;terraform-up-and-running-locks&quot;\n  billing_mode = &quot;PAY_PER_REQUEST&quot;\n  hash_key     = &quot;LockID&quot;\n  attribute {\n    name = &quot;LockID&quot;\n    type = &quot;S&quot;\n  }\n}\noutput &quot;s3_bucket_arn&quot; {\n  value       = aws_s3_bucket.terraform_state.arn\n  description = &quot;The ARN of the S3 bucket&quot;\n}\noutput &quot;dynamodb_table_name&quot; {\n  value       = aws_dynamodb_table.terraform_locks.name\n  description = &quot;The name of the DynamoDB table&quot;\n}\n</code></pre>\n<p>1.1 <code>terraform init and apply</code></p>\n<pre><code>aws_s3_bucket.terraform_state: Creating...\naws_dynamodb_table.terraform_locks: Creating...\naws_dynamodb_table.terraform_locks: Creation complete after 8s [id=terraform-up-and-running-locks]\naws_s3_bucket.terraform_state: Creation complete after 9s [id=terraform-up-and-running-statezpl]\n</code></pre>\n<ol start=\"2\">\n<li>Then I configured my backend as you shared the snippet.</li>\n</ol>\n<pre><code>terraform {\n  backend &quot;s3&quot; {\n    key            = &quot;terraform.tfstate&quot;\n    bucket         = &quot;terraform-up-and-running-statezpl&quot;\n    region         = &quot;us-east-1&quot;\n    dynamodb_table = &quot;terraform-up-and-running-locks&quot;\n  }\n}\n\n</code></pre>\n<p>2.1 <code>terraform init</code></p>\n<pre><code>Initializing the backend...\nAcquiring state lock. This may take a few moments...\nDo you want to copy existing state to the new backend?\n  Pre-existing state was found while migrating the previous &quot;local&quot; backend to the\n  newly configured &quot;s3&quot; backend. No existing state was found in the newly\n  configured &quot;s3&quot; backend. Do you want to copy this state to the new &quot;s3&quot;\n  backend? Enter &quot;yes&quot; to copy and &quot;no&quot; to start with an empty state.\n\n  Enter a value: yes\n\nReleasing state lock. This may take a few moments...\n\nSuccessfully configured the backend &quot;s3&quot;! Terraform will automatically\nuse this backend unless the backend configuration changes.\n\nInitializing provider plugins...\n- Reusing previous version of hashicorp/aws from the dependency lock file\n\nTerraform has been successfully initialized!\n</code></pre>\n<p><a href=\"https://blog.gruntwork.io/how-to-manage-terraform-state-28f5697e68fa\" rel=\"nofollow noreferrer\">How to manage Terraform state</a> pretty good resource not even for this case, many different use cases, the author discussed in this post.</p>\n", "OwnerUserId": "2246345", "LastActivityDate": "2021-02-17T17:49:43.527", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "241020360", "PostHistoryTypeId": "2", "PostId": "66247343", "RevisionGUID": "b37e8bd5-e486-4075-b17c-dff96ee9c6a0", "CreationDate": "2021-02-17T17:49:43.527", "UserId": "2246345", "Text": "The error seems to me coming from the local lock.\r\n\r\n```\r\n-rw-r--r--   1 myusername  staff  1002 Feb 17 13:02 .terraform.lock.hcl\r\ndrwxr-xr-x   4 myusername  staff   128 Feb 17 18:19 .terraform/\r\n```\r\n\r\nRemove those files as you are in the initial phase, I think you cleanup and try again.\r\n\r\n\r\nI was able to achieve this exact setup, below are my steps :\r\n\r\n1. Create DynamoDB Table and S3 Bucket\r\n\r\n```hcl\r\nresource \"aws_s3_bucket\" \"terraform_state\" {\r\n  bucket = \"terraform-up-and-running-statezpl\"\r\n  # Enable versioning so we can see the full revision history of our\r\n  # state files\r\n  versioning {\r\n    enabled = true\r\n  }\r\n  # Enable server-side encryption by default\r\n  server_side_encryption_configuration {\r\n    rule {\r\n      apply_server_side_encryption_by_default {\r\n        sse_algorithm = \"AES256\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nresource \"aws_dynamodb_table\" \"terraform_locks\" {\r\n  name         = \"terraform-up-and-running-locks\"\r\n  billing_mode = \"PAY_PER_REQUEST\"\r\n  hash_key     = \"LockID\"\r\n  attribute {\r\n    name = \"LockID\"\r\n    type = \"S\"\r\n  }\r\n}\r\noutput \"s3_bucket_arn\" {\r\n  value       = aws_s3_bucket.terraform_state.arn\r\n  description = \"The ARN of the S3 bucket\"\r\n}\r\noutput \"dynamodb_table_name\" {\r\n  value       = aws_dynamodb_table.terraform_locks.name\r\n  description = \"The name of the DynamoDB table\"\r\n}\r\n```\r\n\r\n1.1 `terraform init and apply`\r\n\r\n```\r\naws_s3_bucket.terraform_state: Creating...\r\naws_dynamodb_table.terraform_locks: Creating...\r\naws_dynamodb_table.terraform_locks: Creation complete after 8s [id=terraform-up-and-running-locks]\r\naws_s3_bucket.terraform_state: Creation complete after 9s [id=terraform-up-and-running-statezpl]\r\n```\r\n\r\n\r\n2. Then I configured my backend as you shared the snippet.\r\n\r\n```hcl\r\nterraform {\r\n  backend \"s3\" {\r\n    key            = \"terraform.tfstate\"\r\n    bucket         = \"terraform-up-and-running-statezpl\"\r\n    region         = \"us-east-1\"\r\n    dynamodb_table = \"terraform-up-and-running-locks\"\r\n  }\r\n}\r\n\r\n```\r\n\r\n2.1 `terraform init`\r\n\r\n```\r\nInitializing the backend...\r\nAcquiring state lock. This may take a few moments...\r\nDo you want to copy existing state to the new backend?\r\n  Pre-existing state was found while migrating the previous \"local\" backend to the\r\n  newly configured \"s3\" backend. No existing state was found in the newly\r\n  configured \"s3\" backend. Do you want to copy this state to the new \"s3\"\r\n  backend? Enter \"yes\" to copy and \"no\" to start with an empty state.\r\n\r\n  Enter a value: yes\r\n\r\nReleasing state lock. This may take a few moments...\r\n\r\nSuccessfully configured the backend \"s3\"! Terraform will automatically\r\nuse this backend unless the backend configuration changes.\r\n\r\nInitializing provider plugins...\r\n- Reusing previous version of hashicorp/aws from the dependency lock file\r\n\r\nTerraform has been successfully initialized!\r\n```\r\n\r\n[How to manage Terraform state](https://blog.gruntwork.io/how-to-manage-terraform-state-28f5697e68fa) pretty good resource not even for this case, many different use cases, the author discussed in this post.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I was able to achieve this exact setup, below are my steps : 1. Create DynamoDB Table and S3 Bucket ```hcl resource \"aws_s3_bucket\" \"terraform_state\" { bucket = \"terraform-up-and-running-statezpl\" # Enable versioning so we can see the full revision history of our # state files versioning { enabled = true } # Enable server-side encryption by default server_side_encryption_configuration { rule { apply_server_side_encryption_by_default { sse_algorithm = \"AES256\" } } } } resource \"aws_dynamodb_table\" \"terraform_locks\" { name = \"terraform-up-and-running-locks\" billing_mode = \"PAY_PER_REQUEST\" hash_key = \"LockID\" attribute { name = \"LockID\" type = \"S\" } } output \"s3_bucket_arn\" { value = aws_s3_bucket.terraform_state.arn description = \"The ARN of the S3 bucket\" } output \"dynamodb_table_name\" { value = aws_dynamodb_table.terraform_locks.name description = \"The name of the DynamoDB table\" } ``` 1.1 `terraform init and apply` ``` aws_s3_bucket.terraform_state: Creating... aws_dynamodb_table.terraform_locks: Creating... aws_dynamodb_table.terraform_locks: Creation complete after 8s [id=terraform-up-and-running-locks] aws_s3_bucket.terraform_state: Creation complete after 9s [id=terraform-up-and-running-statezpl] ``` 2. ", "keywords": ["bill"]}, {"source": "Text", "text": "Terraform will automatically use this backend unless the backend configuration changes. ", "keywords": ["change"]}, {"source": "Text", "text": "Initializing provider plugins... ", "keywords": ["provider"]}]}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": []}