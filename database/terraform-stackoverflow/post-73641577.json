{"Id": "73641577", "PostTypeId": "1", "CreationDate": "2022-09-07T21:20:15.540", "Score": "2", "ViewCount": "327", "Body": "<h3>Objective</h3>\n<p>I am trying to fix a Firebase deployment managed in Terraform. My module looks something like this...</p>\n<pre><code>data &quot;google_client_config&quot; &quot;default_project&quot; {\n    provider = google-beta\n}\ndata &quot;google_project&quot; &quot;project&quot; {\n    provider = google-beta\n    project_id = var.gcp_project\n}\n \nresource &quot;google_firebase_project&quot; &quot;default&quot; {\n    provider = google-beta\n    project  = var.gcp_project\n}\n\n# enable billing API\nresource &quot;google_project_service&quot; &quot;cloud_billing&quot; {\n    provider = google-beta\n    project = google_firebase_project.default.id\n    service = &quot;cloudbilling.googleapis.com&quot;\n}\n\n# enable firebase\nresource &quot;google_project_service&quot; &quot;firebase&quot; {\n    provider = google-beta\n    project = google_firebase_project.default.id\n    service = &quot;firebase.googleapis.com&quot;\n}\n\n# enable access context manage api\n\nresource &quot;google_project_service&quot; &quot;access_context&quot; {\n    provider = google-beta\n    project = google_firebase_project.default.id\n    service = &quot;accesscontextmanager.googleapis.com&quot;\n}\nresource &quot;google_firebase_web_app&quot; &quot;app&quot; {\n    provider = google-beta\n    project = data.google_project.project.project_id\n    display_name = &quot;firestore-controller-${google_firebase_project.default.display_name}&quot;\n\n    depends_on = [\n        google_firebase_project.default,\n        google_project_service.firebase,\n        google_project_service.access_context,\n        google_project_service.cloud_billing\n    ]\n}\n\ndata &quot;google_firebase_web_app_config&quot; &quot;app&quot; {\n    provider   = google-beta\n    web_app_id = google_firebase_web_app.app.app_id\n}\n\nresource &quot;google_storage_bucket&quot; &quot;storage&quot; {\n    provider = google-beta\n    name     = &quot;firestore-controller-${google_firebase_project.default.display_name}&quot;\n    location = &quot;US&quot;\n}\n\nlocals {\n  \n    firebase_config = jsonencode({\n        appId              = google_firebase_web_app.app.app_id\n        apiKey             = data.google_firebase_web_app_config.app.api_key\n        authDomain         = data.google_firebase_web_app_config.app.auth_domain\n        databaseURL        = lookup(data.google_firebase_web_app_config.app, &quot;database_url&quot;, &quot;&quot;)\n        storageBucket      = lookup(data.google_firebase_web_app_config.app, &quot;storage_bucket&quot;, &quot;&quot;)\n        messagingSenderId  = lookup(data.google_firebase_web_app_config.app, &quot;message_sender_id&quot;, &quot;&quot;)\n        measurementId      = lookup(data.google_firebase_web_app_config.app, &quot;measurement_id&quot;, &quot;&quot;)\n    })\n\n}\n\nresource &quot;google_storage_bucket_object&quot; &quot;firebase_config&quot; {\n    provider = google-beta\n    bucket = google_storage_bucket.storage.name\n    name = &quot;firebase-config.json&quot;\n\n    content = local.firebase_config\n}\n</code></pre>\n<h3>Issue</h3>\n<p>Unfortunately, this fails at <code>google_firebase_project.default</code> with the following message:</p>\n<pre><code>{\n\u2502     &quot;@type&quot;: &quot;type.googleapis.com/google.rpc.ErrorInfo&quot;,\n\u2502     &quot;domain&quot;: &quot;googleapis.com&quot;,\n\u2502     &quot;metadata&quot;: {\n\u2502       &quot;consumer&quot;: &quot;projects/764086051850&quot;,\n\u2502       &quot;service&quot;: &quot;firebase.googleapis.com&quot;\n\u2502     },\n\u2502     &quot;reason&quot;: &quot;SERVICE_DISABLED&quot;\n\u2502   }\n</code></pre>\n<p>This is strange because a project with that number does not exist (unless it's some kind of root project that I'm having trouble finding). If this is the the project number for some child of the project I am providing to  <code>google_firebase_project.default</code> that is also strange; <code>var.gcp_project_name</code> certainly has this service enabled.</p>\n<h3>What I've tried thusfar</h3>\n<ul>\n<li>Removing tfstate.</li>\n<li>Refactoring back and forth from legacy modules.</li>\n</ul>\n<p>I have double-checked and confirmed that the <code>google-beta</code> provider does indeed recognize the correct project in its configuration when using <code>data.google_project</code> without specifying a <code>project_id</code>.</p>\n<p>Where is this mysterious <code>projects/764086051850</code> coming from?</p>\n<p><a href=\"https://discuss.hashicorp.com/t/google-beta-seems-to-be-using-non-existent-project-with-google-firebase-project-what-should-i-do/44066\" rel=\"nofollow noreferrer\">cross-post</a></p>\n", "OwnerUserId": "14414944", "LastEditorUserId": "8016720", "LastEditDate": "2022-09-08T00:30:10.413", "LastActivityDate": "2023-06-09T14:51:59.753", "Title": "Google-beta seems to be using non-existent project with google_firebase_project. What should I do?", "Tags": "<firebase><google-cloud-platform><terraform><terraform-provider-gcp>", "AnswerCount": "1", "CommentCount": "4", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "130044319", "PostId": "73641577", "Score": "0", "Text": "`764086051850` is the Google-owned Project that backs `gcloud` and is used by `gcloud` with [`gcloud auth application-default`](https://cloud.google.com/sdk/gcloud/reference/auth/application-default) credentials.", "CreationDate": "2022-09-07T23:22:27.670", "UserId": "609290", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "130044332", "PostId": "73641577", "Score": "1", "Text": "I don't know (!) but I suspect a solution for you would be to create a Service Account that can be used by your Terraform script.", "CreationDate": "2022-09-07T23:23:41.723", "UserId": "609290", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "130044345", "PostId": "73641577", "Score": "2", "Text": "One (!) issue with `gcloud`'s use of Application Default Credentials is that you're reliant on the services that Google chooses to enable in its Project. Evidently, Firebase isn't enabled.", "CreationDate": "2022-09-07T23:24:44.363", "UserId": "609290", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "130044693", "PostId": "73641577", "Score": "0", "Text": "@DazWilkin Thanks! Other modules seemed to work better with ADC, so I was trying to avoid using a Service Account. But, I guess I can just mix match providers by modules.", "CreationDate": "2022-09-08T00:03:58.980", "UserId": "14414944", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "277793277", "PostHistoryTypeId": "2", "PostId": "73641577", "RevisionGUID": "986be56f-6633-4305-af71-4189d0620420", "CreationDate": "2022-09-07T21:20:15.540", "UserId": "14414944", "Text": "### Objective\r\n\r\nI am trying to fix a Firebase deployment managed in Terraform. My module looks something like this...\r\n\r\n```hcl\r\ndata \"google_client_config\" \"default_project\" {\r\n    provider = google-beta\r\n}\r\ndata \"google_project\" \"project\" {\r\n    provider = google-beta\r\n    project_id = var.gcp_project\r\n}\r\n \r\nresource \"google_firebase_project\" \"default\" {\r\n    provider = google-beta\r\n    project  = var.gcp_project\r\n}\r\n\r\n# enable billing API\r\nresource \"google_project_service\" \"cloud_billing\" {\r\n    provider = google-beta\r\n    project = google_firebase_project.default.id\r\n    service = \"cloudbilling.googleapis.com\"\r\n}\r\n\r\n# enable firebase\r\nresource \"google_project_service\" \"firebase\" {\r\n    provider = google-beta\r\n    project = google_firebase_project.default.id\r\n    service = \"firebase.googleapis.com\"\r\n}\r\n\r\n# enable access context manage api\r\n\r\nresource \"google_project_service\" \"access_context\" {\r\n    provider = google-beta\r\n    project = google_firebase_project.default.id\r\n    service = \"accesscontextmanager.googleapis.com\"\r\n}\r\nresource \"google_firebase_web_app\" \"app\" {\r\n    provider = google-beta\r\n    project = data.google_project.project.project_id\r\n    display_name = \"firestore-controller-${google_firebase_project.default.display_name}\"\r\n\r\n    depends_on = [\r\n        google_firebase_project.default,\r\n        google_project_service.firebase,\r\n        google_project_service.access_context,\r\n        google_project_service.cloud_billing\r\n    ]\r\n}\r\n\r\ndata \"google_firebase_web_app_config\" \"app\" {\r\n    provider   = google-beta\r\n    web_app_id = google_firebase_web_app.app.app_id\r\n}\r\n\r\nresource \"google_storage_bucket\" \"storage\" {\r\n    provider = google-beta\r\n    name     = \"firestore-controller-${google_firebase_project.default.display_name}\"\r\n    location = \"US\"\r\n}\r\n\r\nlocals {\r\n  \r\n    firebase_config = jsonencode({\r\n        appId              = google_firebase_web_app.app.app_id\r\n        apiKey             = data.google_firebase_web_app_config.app.api_key\r\n        authDomain         = data.google_firebase_web_app_config.app.auth_domain\r\n        databaseURL        = lookup(data.google_firebase_web_app_config.app, \"database_url\", \"\")\r\n        storageBucket      = lookup(data.google_firebase_web_app_config.app, \"storage_bucket\", \"\")\r\n        messagingSenderId  = lookup(data.google_firebase_web_app_config.app, \"message_sender_id\", \"\")\r\n        measurementId      = lookup(data.google_firebase_web_app_config.app, \"measurement_id\", \"\")\r\n    })\r\n\r\n}\r\n\r\nresource \"google_storage_bucket_object\" \"firebase_config\" {\r\n    provider = google-beta\r\n    bucket = google_storage_bucket.storage.name\r\n    name = \"firebase-config.json\"\r\n\r\n    content = local.firebase_config\r\n}\r\n```\r\n\r\n### Issue\r\n\r\nUnfortunately, this fails at `google_firebase_project.default` with the following message:\r\n\r\n```\r\n{\r\n\u2502     \"@type\": \"type.googleapis.com/google.rpc.ErrorInfo\",\r\n\u2502     \"domain\": \"googleapis.com\",\r\n\u2502     \"metadata\": {\r\n\u2502       \"consumer\": \"projects/764086051850\",\r\n\u2502       \"service\": \"firebase.googleapis.com\"\r\n\u2502     },\r\n\u2502     \"reason\": \"SERVICE_DISABLED\"\r\n\u2502   }\r\n```\r\n\r\nThis is strange because a project with that number does not exist (unless it's some kind of root project that I'm having trouble finding). If this is the the project number for some child of the project I am providing to  `google_firebase_project.default` that is also strange; `var.gcp_project_name` certainly has this service enabled.\r\n\r\n### What I've tried thusfar\r\n- Removing tfstate.\r\n- Refactoring back and forth from legacy modules. \r\n\r\nI have double-checked and confirmed that the `google-beta` provider does indeed recognize the correct project in its configuration when using `data.google_project` without specifying a `project_id`.\r\n\r\nWhere is this mysterious `projects/764086051850` coming from?\r\n\r\n[cross-post][1] \r\n\r\n\r\n  [1]: https://discuss.hashicorp.com/t/google-beta-seems-to-be-using-non-existent-project-with-google-firebase-project-what-should-i-do/44066", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "My module looks something like this... ```hcl data \"google_client_config\" \"default_project\" { provider = google-beta } data \"google_project\" \"project\" { provider = google-beta project_id = var.gcp_project } resource \"google_firebase_project\" \"default\" { provider = google-beta project = var.gcp_project } # enable billing API resource \"google_project_service\" \"cloud_billing\" { provider = google-beta project = google_firebase_project.default.id service = \"cloudbilling.googleapis.com\" } # enable firebase resource \"google_project_service\" \"firebase\" { provider = google-beta project = google_firebase_project.default.id service = \"firebase.googleapis.com\" } # enable access context manage api resource \"google_project_service\" \"access_context\" { provider = google-beta project = google_firebase_project.default.id service = \"accesscontextmanager.googleapis.com\" } resource \"google_firebase_web_app\" \"app\" { provider = google-beta project = data.google_project.project.project_id display_name = \"firestore-controller-${google_firebase_project.default.display_name}\" depends_on = [ google_firebase_project.default, google_project_service.firebase, google_project_service.access_context, google_project_service.cloud_billing ] } data \"google_firebase_web_app_config\" \"app\" { provider = google-beta web_app_id = google_firebase_web_app.app.app_id } resource \"google_storage_bucket\" \"storage\" { provider = google-beta name = \"firestore-controller-${google_firebase_project.default.display_name}\" location = \"US\" } locals { firebase_config = jsonencode({ appId = google_firebase_web_app.app.app_id apiKey = data.google_firebase_web_app_config.app.api_key authDomain = data.google_firebase_web_app_config.app.auth_domain databaseURL = lookup(data.google_firebase_web_app_config.app, \"database_url\", \"\") storageBucket = lookup(data.google_firebase_web_app_config.app, \"storage_bucket\", \"\") messagingSenderId = lookup(data.google_firebase_web_app_config.app, \"message_sender_id\", \"\") measurementId = lookup(data.google_firebase_web_app_config.app, \"measurement_id\", \"\") }) } resource \"google_storage_bucket_object\" \"firebase_config\" { provider = google-beta bucket = google_storage_bucket.storage.name name = \"firebase-config.json\" content = local.firebase_config } ``` ### Issue Unfortunately, this fails at `google_firebase_project.default` with the following message: ``` { \u2502 \"@type\": \"type.googleapis.com/google.rpc.ErrorInfo\", \u2502 \"domain\": \"googleapis.com\", \u2502 \"metadata\": { \u2502 \"consumer\": \"projects/764086051850\", \u2502 \"service\": \"firebase.googleapis.com\" \u2502 }, \u2502 \"reason\": \"SERVICE_DISABLED\" \u2502 } ``` ", "keywords": ["bill", "storage", "domain", "provider"]}, {"source": "Text", "text": "I have double-checked and confirmed that the `google-beta` provider does indeed recognize the correct project in its configuration when using `data.google_project` without specifying a `project_id`. ", "keywords": ["provider"]}]}, {"Id": "277793279", "PostHistoryTypeId": "1", "PostId": "73641577", "RevisionGUID": "986be56f-6633-4305-af71-4189d0620420", "CreationDate": "2022-09-07T21:20:15.540", "UserId": "14414944", "Text": "Google-beta seems to be using non-existent project with google_firebase_project. What should I do?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "277793280", "PostHistoryTypeId": "3", "PostId": "73641577", "RevisionGUID": "986be56f-6633-4305-af71-4189d0620420", "CreationDate": "2022-09-07T21:20:15.540", "UserId": "14414944", "Text": "<google-cloud-platform><terraform>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "277798970", "PostHistoryTypeId": "6", "PostId": "73641577", "RevisionGUID": "1d0dd0ad-816d-43a2-9fa9-adbcf1eafdc5", "CreationDate": "2022-09-08T00:30:10.413", "UserId": "8016720", "Comment": "edited tags", "Text": "<firebase><google-cloud-platform><terraform><terraform-provider-gcp>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "277798971", "PostHistoryTypeId": "33", "PostId": "73641577", "RevisionGUID": "6294c5e0-883f-4595-89ef-6c931303e70d", "CreationDate": "2022-09-08T00:30:10.413", "UserId": "-1002", "Comment": "287458", "filtered-sentences": []}], "answers": [{"Id": "76441363", "PostTypeId": "2", "ParentId": "73641577", "CreationDate": "2023-06-09T14:51:59.753", "Score": "3", "Body": "<p>You can still accomplish this using Application Default Credentials instead of a service account.</p>\n<p>Include the following in the <code>provider</code> blocks:</p>\n<pre><code>        # google-beta\nprovider &quot;google&quot; {\n  project               = var.project_id\n  billing_project       = var.project_id\n  user_project_override = true\n}\n</code></pre>\n<p>All requests sent from this provider will leverage <code>billing_project</code> as the quota project and <code>user_project_override</code> controls requests to GCP APIs for the purpose of preconditions, quota, and billing.</p>\n<h2>References</h2>\n<ul>\n<li><a href=\"https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#billing_project\" rel=\"nofollow noreferrer\"><code>billing_project</code></a></li>\n<li><a href=\"https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override\" rel=\"nofollow noreferrer\"><code>user_project_override</code></a></li>\n</ul>\n", "OwnerUserId": "1154847", "LastActivityDate": "2023-06-09T14:51:59.753", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "293951497", "PostHistoryTypeId": "2", "PostId": "76441363", "RevisionGUID": "5596b62f-5d73-46b3-b7b1-9d5f0f59eb44", "CreationDate": "2023-06-09T14:51:59.753", "UserId": "1154847", "Text": "You can still accomplish this using Application Default Credentials instead of a service account.\r\n\r\nInclude the following in the `provider` blocks:\r\n\r\n```HCL\r\n        # google-beta\r\nprovider \"google\" {\r\n  project               = var.project_id\r\n  billing_project       = var.project_id\r\n  user_project_override = true\r\n}\r\n```\r\n\r\nAll requests sent from this provider will leverage `billing_project` as the quota project and `user_project_override` controls requests to GCP APIs for the purpose of preconditions, quota, and billing.\r\n\r\n## References\r\n- [`billing_project`](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#billing_project)\r\n- [`user_project_override`](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override)", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Include the following in the `provider` blocks: ```HCL # google-beta provider \"google\" { project = var.project_id billing_project = var.project_id user_project_override = true } ``` ", "keywords": ["bill", "provider"]}, {"source": "Text", "text": "All requests sent from this provider will leverage `billing_project` as the quota project and `user_project_override` controls requests to GCP APIs for the purpose of preconditions, quota, and billing. ", "keywords": ["bill", "provider"]}, {"source": "Text", "text": "## References - [`billing_project`](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#billing_project) - [`user_project_override`](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override)", "keywords": ["bill"]}]}], "filtered-sentences": [{"source": "Body", "text": "Include the following in the provider blocks: All requests sent from this provider will leverage billing_project as the quota project and user_project_override controls requests to GCP APIs for the purpose of preconditions, quota, and billing. ", "keywords": ["bill", "provider"]}, {"source": "Body", "text": "References billing_project user_project_override", "keywords": ["bill"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I have double-checked and confirmed that the google-beta provider does indeed recognize the correct project in its configuration when using data.google_project without specifying a project_id. ", "keywords": ["provider"]}]}