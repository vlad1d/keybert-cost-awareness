{"Id": "64460706", "PostTypeId": "1", "CreationDate": "2020-10-21T09:33:53.663", "Score": "4", "ViewCount": "9431", "Body": "<p>I have EC2 instance running with web application and this is my POC environment machine. This instance is automated through terraform, But this is running all the time when I don't need it, I want to write the terraform script to poweroff this machine if I don't want to use it so that I can save the cost.</p>\n", "OwnerUserId": "6250749", "LastActivityDate": "2023-03-02T10:54:00.413", "Title": "How to stop/start running ec2 instance via terraform", "Tags": "<bash><amazon-web-services><amazon-ec2><terraform><terraform-provider-aws>", "AnswerCount": "2", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "113982193", "PostId": "64460706", "Score": "3", "Text": "Such things are not normally done using terraform. Any reason why you want to use terraform for that, and not AWS CLI for example? In terraform you would also have to use AWS CLI or lambda function for that anyway from what I know.", "CreationDate": "2020-10-21T09:36:54.520", "UserId": "248823", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "114010389", "PostId": "64460706", "Score": "0", "Text": "The environment is running on the client site and we have only terraform access to spin up the environment in AWS.", "CreationDate": "2020-10-22T06:59:45.490", "UserId": "6250749", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "links": [{"Id": "1884322960", "CreationDate": "2021-04-07T23:20:56.813", "PostId": "64460706", "RelatedPostId": "57158310", "LinkTypeId": "1"}], "history": [{"Id": "233273820", "PostHistoryTypeId": "2", "PostId": "64460706", "RevisionGUID": "8930cce5-50f3-43d6-a3fc-52e10486c444", "CreationDate": "2020-10-21T09:33:53.663", "UserId": "6250749", "Text": "I have EC2 instance running with web application and this is my POC environment machine. This instance is automated through terraform, But this is running all the time when I don't need it, I want to write the terraform script to poweroff this machine if I don't want to use it so that I can save the cost. ", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I have EC2 instance running with web application and this is my POC environment machine. ", "keywords": ["instance"]}, {"source": "Text", "text": "This instance is automated through terraform, But this is running all the time when I don't need it, I want to write the terraform script to poweroff this machine if I don't want to use it so that I can save the cost.", "keywords": ["cost", "instance"]}]}, {"Id": "233273821", "PostHistoryTypeId": "1", "PostId": "64460706", "RevisionGUID": "8930cce5-50f3-43d6-a3fc-52e10486c444", "CreationDate": "2020-10-21T09:33:53.663", "UserId": "6250749", "Text": "How to stop/start running ec2 instance via terraform", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "How to stop/start running ec2 instance via terraform", "keywords": ["instance"]}]}, {"Id": "233273822", "PostHistoryTypeId": "3", "PostId": "64460706", "RevisionGUID": "8930cce5-50f3-43d6-a3fc-52e10486c444", "CreationDate": "2020-10-21T09:33:53.663", "UserId": "6250749", "Text": "<bash><amazon-web-services><amazon-ec2><terraform><terraform-provider-aws>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "66995372", "PostTypeId": "2", "ParentId": "64460706", "CreationDate": "2021-04-07T23:20:56.813", "Score": "3", "Body": "<p>There are several ways to do this with Terraform. The first solution is to <a href=\"https://stackoverflow.com/questions/57158310/how-to-restart-ec2-instance-using-terraform-without-destroying-them\">follow the guidance here</a>. It is not the most elegant solution, but it works. You must also keep track of the current state yourself.</p>\n<p>If you would like something that is more time-of-day based, like turning on the instance at 06:00 and turning it off at 17:30, then <a href=\"https://betterprogramming.pub/minimize-the-costs-of-running-aws-ec2-instances-using-terraform-3999c5141830\" rel=\"nofollow noreferrer\">this solution is very good</a>.</p>\n", "OwnerUserId": "9319317", "LastActivityDate": "2021-04-07T23:20:56.813", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "244221131", "PostHistoryTypeId": "2", "PostId": "66995372", "RevisionGUID": "5d688890-f7f7-4e48-9295-4c92f3d33c4b", "CreationDate": "2021-04-07T23:20:56.813", "UserId": "9319317", "Text": "There are several ways to do this with Terraform. The first solution is to [follow the guidance here][1]. It is not the most elegant solution, but it works. You must also keep track of the current state yourself.\r\n\r\nIf you would like something that is more time-of-day based, like turning on the instance at 06:00 and turning it off at 17:30, then [this solution is very good][2].\r\n\r\n\r\n  [1]: https://stackoverflow.com/questions/57158310/how-to-restart-ec2-instance-using-terraform-without-destroying-them\r\n  [2]: https://betterprogramming.pub/minimize-the-costs-of-running-aws-ec2-instances-using-terraform-3999c5141830", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "If you would like something that is more time-of-day based, like turning on the instance at 06:00 and turning it off at 17:30, then [this solution is very good][2]. ", "keywords": ["instance"]}, {"source": "Text", "text": "[1]: https://stackoverflow.com/questions/57158310/how-to-restart-ec2-instance-using-terraform-without-destroying-them [2]: https://betterprogramming.pub/minimize-the-costs-of-running-aws-ec2-instances-using-terraform-3999c5141830", "keywords": ["instance"]}]}], "filtered-sentences": [{"source": "Body", "text": "If you would like something that is more time-of-day based, like turning on the instance at 06:00 and turning it off at 17:30, then this solution is very good.", "keywords": ["instance"]}]}, {"Id": "75614473", "PostTypeId": "2", "ParentId": "64460706", "CreationDate": "2023-03-02T10:54:00.413", "Score": "2", "Body": "<p>There is <code>aws_ec2_instance_state</code> resource to handle ec2 state.</p>\n<p>this can be done easily with this code:</p>\n<pre><code>resource &quot;aws_instance&quot; &quot;test&quot; {\n  ami           = data.aws_ami.ubuntu.id\n  instance_type = &quot;t3.micro&quot;\n\n  tags = {\n    Name = &quot;HelloWorld&quot;\n  }\n}\n\nresource &quot;aws_ec2_instance_state&quot; &quot;test&quot; {\n  instance_id = aws_instance.test.id\n  state       = &quot;stopped&quot;\n}\n</code></pre>\n<p>You can also refer documentation <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_instance_state\" rel=\"nofollow noreferrer\">here</a></p>\n", "OwnerUserId": "12726150", "LastActivityDate": "2023-03-02T10:54:00.413", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "289008469", "PostHistoryTypeId": "2", "PostId": "75614473", "RevisionGUID": "c631f30e-b2b6-4250-a400-dac31edbf013", "CreationDate": "2023-03-02T10:54:00.413", "UserId": "12726150", "Text": "There is `aws_ec2_instance_state` resource to handle ec2 state.\r\n\r\nthis can be done easily with this code:\r\n\r\n```\r\nresource \"aws_instance\" \"test\" {\r\n  ami           = data.aws_ami.ubuntu.id\r\n  instance_type = \"t3.micro\"\r\n\r\n  tags = {\r\n    Name = \"HelloWorld\"\r\n  }\r\n}\r\n\r\nresource \"aws_ec2_instance_state\" \"test\" {\r\n  instance_id = aws_instance.test.id\r\n  state       = \"stopped\"\r\n}\r\n```\r\n\r\nYou can also refer documentation [here][1]\r\n\r\n\r\n  [1]: https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_instance_state", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "There is `aws_ec2_instance_state` resource to handle ec2 state. this can be done easily with this code: ``` resource \"aws_instance\" \"test\" { ami = data.aws_ami.ubuntu.id instance_type = \"t3.micro\" tags = { Name = \"HelloWorld\" } } resource \"aws_ec2_instance_state\" \"test\" { instance_id = aws_instance.test.id state = \"stopped\" } ``` You can also refer documentation [here][1] [1]: https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_instance_state", "keywords": ["test"]}]}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Title", "text": "How to stop/start running ec2 instance via terraform", "keywords": ["instance"]}, {"source": "Body", "text": "I have EC2 instance running with web application and this is my POC environment machine. ", "keywords": ["instance"]}, {"source": "Body", "text": "This instance is automated through terraform, But this is running all the time when I don't need it, I want to write the terraform script to poweroff this machine if I don't want to use it so that I can save the cost.", "keywords": ["cost", "instance"]}]}