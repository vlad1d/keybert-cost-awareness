{"Id": "75520208", "PostTypeId": "1", "AcceptedAnswerId": "75586037", "CreationDate": "2023-02-21T11:58:08.877", "Score": "3", "ViewCount": "456", "Body": "<p>I have some cloud run services with the latest version of terraform (1.3.9) as well as older versions.</p>\n<p>It seems that on every alternating run on my cloud run services, terraform will do this:</p>\n<pre><code> ~ template {\n          ~ metadata {\n              ~ annotations = {\n                  - &quot;client.knative.dev/user-image&quot;           = &quot;gcr.io/yeo-dev/gateway:latest&quot; -&gt; null\n                  - &quot;run.googleapis.com/client-name&quot;          = &quot;gcloud&quot; -&gt; null\n                  - &quot;run.googleapis.com/client-version&quot;       = &quot;418.0.0&quot; -&gt; null\n                    # (3 unchanged elements hidden)\n                }\n                name        = &quot;gateway-00134-yek&quot;\n                # (2 unchanged attributes hidden)\n            }\n</code></pre>\n<p>And on the next run with no changes, will reverse that exact change.</p>\n<p>Why is this happening and how can I possibly prevent it?</p>\n<p>Terraform cloud run definitions:</p>\n<pre><code>  template {\n    metadata {\n\n      annotations = {\n        # Limit scale up to prevent any cost blow outs!\n        &quot;autoscaling.knative.dev/maxScale&quot; = &quot;5&quot;\n        # Use the VPC Connector\n        &quot;run.googleapis.com/vpc-access-connector&quot; = google_vpc_access_connector.cloudrun.name\n        # all egress from the service should go through the VPC Connector\n        &quot;run.googleapis.com/vpc-access-egress&quot; = &quot;private-ranges-only&quot;\n      }\n    }\n\n    spec {\n      service_account_name = module.cloudrun-sa.email\n      containers {\n        image = &quot;gcr.io/${var.gcp_project}/gateway:latest&quot;\n\n</code></pre>\n<p>The client-name and client-version as well as the user image is never nulled.</p>\n<p>Provider versions:</p>\n<pre><code>\nterraform {\n  cloud {\n    organization = &quot;redacted&quot;\n    workspaces {\n      tags = [&quot;main&quot;]\n    }\n\n  }\n\n  required_providers {\n    google = {\n      source  = &quot;hashicorp/google&quot;\n      version = &quot;&gt;= 4.39.0&quot;\n    }\n  }\n}\n\n</code></pre>\n<p>I have 7 cloud run services in my terraform, this happens to all of them.</p>\n<p>I've had ~4 separate terraform cloud projects, this was happening with all of them.</p>\n<p>top level definitions:</p>\n<pre><code>\n\n  autogenerate_revision_name = true\n  lifecycle {\n    ignore_changes = [template[0].spec[0].containers[0].image, status[0].latest_created_revision_name, status[0].latest_ready_revision_name, template[0].metadata[0].name]\n  }\n\n\n</code></pre>\n<p>I've added the above so I can run deployments using gcloud run deploy in my github actions/pipelines without breaking terraform.</p>\n<hr />\n<p>EDIT:</p>\n<p>Potential solution is to add those annotations to the ignore lifecycle:</p>\n<p>Bringing the total ignore changes list to:</p>\n<pre><code>    ignore_changes = [template[0].metadata[0].annotations[&quot;run.googleapis.com/client-name&quot;],\n      template[0].metadata[0].annotations[&quot;client.knative.dev/user-image&quot;],\n      template[0].metadata[0].annotations[&quot;run.googleapis.com/client-version&quot;],\n      template[0].spec[0].containers[0].image,\n      status[0].latest_created_revision_name,\n      status[0].latest_ready_revision_name,\n    template[0].metadata[0].name]\n</code></pre>\n<p>This seems to work for now, but I'm not sure on the implications with larger changes like taking down and rebuilding the whole project.</p>\n", "OwnerUserId": "10064334", "LastEditorUserId": "10064334", "LastEditDate": "2023-02-21T13:19:02.777", "LastActivityDate": "2023-02-27T22:10:54.007", "Title": "terraform destroys and recreates cloud run services on every alternating run, for no reason, with no change?", "Tags": "<terraform><google-cloud-run><terraform-provider-gcp><terraform-cloud>", "AnswerCount": "1", "CommentCount": "4", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "133242411", "PostId": "75520208", "Score": "0", "Text": "Could it be related to the GCP provider version?", "CreationDate": "2023-02-21T12:01:08.360", "UserId": "8343484", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Could it be related to the GCP provider version?", "keywords": ["provider"]}]}, {"Id": "133242458", "PostId": "75520208", "Score": "0", "Text": "@MarkoE I've added the provider versions, I have tried a few other provider versions. It seems that the configs around the annotations are very flimsy.", "CreationDate": "2023-02-21T12:04:21.337", "UserId": "10064334", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "@MarkoE I've added the provider versions, I have tried a few other provider versions. ", "keywords": ["provider"]}]}, {"Id": "133243979", "PostId": "75520208", "Score": "0", "Text": "You probably need to raise an issue on the GCP provider tracker.", "CreationDate": "2023-02-21T13:22:28.340", "UserId": "5343387", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "You probably need to raise an issue on the GCP provider tracker.", "keywords": ["provider"]}]}, {"Id": "133271127", "PostId": "75520208", "Score": "0", "Text": "@SebastianG, please post your edit as answer and file a bug through this [link](https://cloud.google.com/support/docs/issue-trackers).", "CreationDate": "2023-02-22T18:51:59.213", "UserId": "16895625", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "288465028", "PostHistoryTypeId": "2", "PostId": "75520208", "RevisionGUID": "303a4410-33cd-4739-8659-0db60c878f11", "CreationDate": "2023-02-21T11:58:08.877", "UserId": "10064334", "Text": "I have some cloud run services with the latest version of terraform (1.3.9) as well as older versions. \r\n\r\nIt seems that on every alternating run on my cloud run services, terraform will do this: \r\n\r\n```\r\n ~ template {\r\n          ~ metadata {\r\n              ~ annotations = {\r\n                  - \"client.knative.dev/user-image\"           = \"gcr.io/yeo-dev/gateway:latest\" -> null\r\n                  - \"run.googleapis.com/client-name\"          = \"gcloud\" -> null\r\n                  - \"run.googleapis.com/client-version\"       = \"418.0.0\" -> null\r\n                    # (3 unchanged elements hidden)\r\n                }\r\n                name        = \"gateway-00134-yek\"\r\n                # (2 unchanged attributes hidden)\r\n            }\r\n```\r\n\r\nAnd on the next run with no changes, will reverse that exact change. \r\n\r\nWhy is this happening and how can I possibly prevent it? \r\n\r\nTerraform cloud run definitions:\r\n\r\n```tf\r\n  template {\r\n    metadata {\r\n\r\n      annotations = {\r\n        # Limit scale up to prevent any cost blow outs!\r\n        \"autoscaling.knative.dev/maxScale\" = \"5\"\r\n        # Use the VPC Connector\r\n        \"run.googleapis.com/vpc-access-connector\" = google_vpc_access_connector.cloudrun.name\r\n        # all egress from the service should go through the VPC Connector\r\n        \"run.googleapis.com/vpc-access-egress\" = \"private-ranges-only\"\r\n      }\r\n    }\r\n\r\n    spec {\r\n      service_account_name = module.cloudrun-sa.email\r\n      containers {\r\n        image = \"gcr.io/${var.gcp_project}/gateway:latest\"\r\n\r\n```\r\n\r\nThe client-name and client-version as well as the user image is never nulled.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "And on the next run with no changes, will reverse that exact change. ", "keywords": ["change"]}, {"source": "Text", "text": "Terraform cloud run definitions: ```tf template { metadata { annotations = { # Limit scale up to prevent any cost blow outs! \"autoscaling.knative.dev/maxScale\" = \"5\" # Use the VPC Connector \"run.googleapis.com/vpc-access-connector\" = google_vpc_access_connector.cloudrun.name # all egress from the service should go through the VPC Connector \"run.googleapis.com/vpc-access-egress\" = \"private-ranges-only\" } } spec { service_account_name = module.cloudrun-sa.email containers { image = \"gcr.io/${var.gcp_project}/gateway:latest\" ``` The client-name and client-version as well as the user image is never nulled", "keywords": ["cost"]}]}, {"Id": "288465030", "PostHistoryTypeId": "1", "PostId": "75520208", "RevisionGUID": "303a4410-33cd-4739-8659-0db60c878f11", "CreationDate": "2023-02-21T11:58:08.877", "UserId": "10064334", "Text": "terraform destroys and recreates cloud run services on every alternating run, for no reason, with no change?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "terraform destroys and recreates cloud run services on every alternating run, for no reason, with no change?", "keywords": ["change"]}]}, {"Id": "288465031", "PostHistoryTypeId": "3", "PostId": "75520208", "RevisionGUID": "303a4410-33cd-4739-8659-0db60c878f11", "CreationDate": "2023-02-21T11:58:08.877", "UserId": "10064334", "Text": "<terraform><google-cloud-run><terraform-provider-gcp><terraform-cloud>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "288465372", "PostHistoryTypeId": "5", "PostId": "75520208", "RevisionGUID": "04e8bd56-b37a-4110-827b-6844f610cf4d", "CreationDate": "2023-02-21T12:03:52.987", "UserId": "10064334", "Comment": "added 275 characters in body", "Text": "I have some cloud run services with the latest version of terraform (1.3.9) as well as older versions. \r\n\r\nIt seems that on every alternating run on my cloud run services, terraform will do this: \r\n\r\n```\r\n ~ template {\r\n          ~ metadata {\r\n              ~ annotations = {\r\n                  - \"client.knative.dev/user-image\"           = \"gcr.io/yeo-dev/gateway:latest\" -> null\r\n                  - \"run.googleapis.com/client-name\"          = \"gcloud\" -> null\r\n                  - \"run.googleapis.com/client-version\"       = \"418.0.0\" -> null\r\n                    # (3 unchanged elements hidden)\r\n                }\r\n                name        = \"gateway-00134-yek\"\r\n                # (2 unchanged attributes hidden)\r\n            }\r\n```\r\n\r\nAnd on the next run with no changes, will reverse that exact change. \r\n\r\nWhy is this happening and how can I possibly prevent it? \r\n\r\nTerraform cloud run definitions:\r\n\r\n```tf\r\n  template {\r\n    metadata {\r\n\r\n      annotations = {\r\n        # Limit scale up to prevent any cost blow outs!\r\n        \"autoscaling.knative.dev/maxScale\" = \"5\"\r\n        # Use the VPC Connector\r\n        \"run.googleapis.com/vpc-access-connector\" = google_vpc_access_connector.cloudrun.name\r\n        # all egress from the service should go through the VPC Connector\r\n        \"run.googleapis.com/vpc-access-egress\" = \"private-ranges-only\"\r\n      }\r\n    }\r\n\r\n    spec {\r\n      service_account_name = module.cloudrun-sa.email\r\n      containers {\r\n        image = \"gcr.io/${var.gcp_project}/gateway:latest\"\r\n\r\n```\r\n\r\nThe client-name and client-version as well as the user image is never nulled.\r\n\r\n\r\nProvider versions: \r\n\r\n```tf\r\n\r\nterraform {\r\n  cloud {\r\n    organization = \"redacted\"\r\n    workspaces {\r\n      tags = [\"main\"]\r\n    }\r\n\r\n  }\r\n\r\n  required_providers {\r\n    google = {\r\n      source  = \"hashicorp/google\"\r\n      version = \">= 4.39.0\"\r\n    }\r\n  }\r\n}\r\n\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "And on the next run with no changes, will reverse that exact change. ", "keywords": ["change"]}, {"source": "Text", "text": "Terraform cloud run definitions: ```tf template { metadata { annotations = { # Limit scale up to prevent any cost blow outs! \"autoscaling.knative.dev/maxScale\" = \"5\" # Use the VPC Connector \"run.googleapis.com/vpc-access-connector\" = google_vpc_access_connector.cloudrun.name # all egress from the service should go through the VPC Connector \"run.googleapis.com/vpc-access-egress\" = \"private-ranges-only\" } } spec { service_account_name = module.cloudrun-sa.email containers { image = \"gcr.io/${var.gcp_project}/gateway:latest\" ``` The client-name and client-version as well as the user image is never nulled. ", "keywords": ["cost"]}, {"source": "Text", "text": "Provider versions: ```tf terraform { cloud { organization = \"redacted\" workspaces { tags = [\"main\"] } } required_providers { google = { source = \"hashicorp/google\" version = \">= 4.39.0\" ", "keywords": ["provider"]}]}, {"Id": "288465744", "PostHistoryTypeId": "5", "PostId": "75520208", "RevisionGUID": "8290d0bc-4643-4429-8f13-d84c678079ae", "CreationDate": "2023-02-21T12:10:54.867", "UserId": "10064334", "Comment": "added 275 characters in body", "Text": "I have some cloud run services with the latest version of terraform (1.3.9) as well as older versions. \r\n\r\nIt seems that on every alternating run on my cloud run services, terraform will do this: \r\n\r\n```\r\n ~ template {\r\n          ~ metadata {\r\n              ~ annotations = {\r\n                  - \"client.knative.dev/user-image\"           = \"gcr.io/yeo-dev/gateway:latest\" -> null\r\n                  - \"run.googleapis.com/client-name\"          = \"gcloud\" -> null\r\n                  - \"run.googleapis.com/client-version\"       = \"418.0.0\" -> null\r\n                    # (3 unchanged elements hidden)\r\n                }\r\n                name        = \"gateway-00134-yek\"\r\n                # (2 unchanged attributes hidden)\r\n            }\r\n```\r\n\r\nAnd on the next run with no changes, will reverse that exact change. \r\n\r\nWhy is this happening and how can I possibly prevent it? \r\n\r\nTerraform cloud run definitions:\r\n\r\n```tf\r\n  template {\r\n    metadata {\r\n\r\n      annotations = {\r\n        # Limit scale up to prevent any cost blow outs!\r\n        \"autoscaling.knative.dev/maxScale\" = \"5\"\r\n        # Use the VPC Connector\r\n        \"run.googleapis.com/vpc-access-connector\" = google_vpc_access_connector.cloudrun.name\r\n        # all egress from the service should go through the VPC Connector\r\n        \"run.googleapis.com/vpc-access-egress\" = \"private-ranges-only\"\r\n      }\r\n    }\r\n\r\n    spec {\r\n      service_account_name = module.cloudrun-sa.email\r\n      containers {\r\n        image = \"gcr.io/${var.gcp_project}/gateway:latest\"\r\n\r\n```\r\n\r\nThe client-name and client-version as well as the user image is never nulled.\r\n\r\n\r\nProvider versions: \r\n\r\n```tf\r\n\r\nterraform {\r\n  cloud {\r\n    organization = \"redacted\"\r\n    workspaces {\r\n      tags = [\"main\"]\r\n    }\r\n\r\n  }\r\n\r\n  required_providers {\r\n    google = {\r\n      source  = \"hashicorp/google\"\r\n      version = \">= 4.39.0\"\r\n    }\r\n  }\r\n}\r\n\r\n```\r\n\r\nI have 7 cloud run services in my terraform, this happens to all of them. \r\n\r\nI've had ~4 separate terraform cloud projects, this was happening with all of them. \r\n\r\ntop level definitions:\r\n\r\n```tf\r\n\r\n\r\n  autogenerate_revision_name = true\r\n  lifecycle {\r\n    ignore_changes = [template[0].spec[0].containers[0].image, status[0].latest_created_revision_name, status[0].latest_ready_revision_name, template[0].metadata[0].name]\r\n  }\r\n\r\n\r\n```\r\n\r\nI've added the above so I can run deployments using gcloud run deploy in my github actions/pipelines without breaking terraform.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "And on the next run with no changes, will reverse that exact change. ", "keywords": ["change"]}, {"source": "Text", "text": "Terraform cloud run definitions: ```tf template { metadata { annotations = { # Limit scale up to prevent any cost blow outs! \"autoscaling.knative.dev/maxScale\" = \"5\" # Use the VPC Connector \"run.googleapis.com/vpc-access-connector\" = google_vpc_access_connector.cloudrun.name # all egress from the service should go through the VPC Connector \"run.googleapis.com/vpc-access-egress\" = \"private-ranges-only\" } } spec { service_account_name = module.cloudrun-sa.email containers { image = \"gcr.io/${var.gcp_project}/gateway:latest\" ``` The client-name and client-version as well as the user image is never nulled. ", "keywords": ["cost"]}, {"source": "Text", "text": "Provider versions: ```tf terraform { cloud { organization = \"redacted\" workspaces { tags = [\"main\"] } } required_providers { google = { source = \"hashicorp/google\" version = \">= 4.39.0\" } } } ``` I have 7 cloud run services in my terraform, this happens to all of them. ", "keywords": ["provider"]}]}, {"Id": "288469697", "PostHistoryTypeId": "5", "PostId": "75520208", "RevisionGUID": "a3680673-faeb-4c84-8c4c-4c63586760b0", "CreationDate": "2023-02-21T13:19:02.777", "UserId": "10064334", "Comment": "added 719 characters in body", "Text": "I have some cloud run services with the latest version of terraform (1.3.9) as well as older versions. \r\n\r\nIt seems that on every alternating run on my cloud run services, terraform will do this: \r\n\r\n```\r\n ~ template {\r\n          ~ metadata {\r\n              ~ annotations = {\r\n                  - \"client.knative.dev/user-image\"           = \"gcr.io/yeo-dev/gateway:latest\" -> null\r\n                  - \"run.googleapis.com/client-name\"          = \"gcloud\" -> null\r\n                  - \"run.googleapis.com/client-version\"       = \"418.0.0\" -> null\r\n                    # (3 unchanged elements hidden)\r\n                }\r\n                name        = \"gateway-00134-yek\"\r\n                # (2 unchanged attributes hidden)\r\n            }\r\n```\r\n\r\nAnd on the next run with no changes, will reverse that exact change. \r\n\r\nWhy is this happening and how can I possibly prevent it? \r\n\r\nTerraform cloud run definitions:\r\n\r\n```tf\r\n  template {\r\n    metadata {\r\n\r\n      annotations = {\r\n        # Limit scale up to prevent any cost blow outs!\r\n        \"autoscaling.knative.dev/maxScale\" = \"5\"\r\n        # Use the VPC Connector\r\n        \"run.googleapis.com/vpc-access-connector\" = google_vpc_access_connector.cloudrun.name\r\n        # all egress from the service should go through the VPC Connector\r\n        \"run.googleapis.com/vpc-access-egress\" = \"private-ranges-only\"\r\n      }\r\n    }\r\n\r\n    spec {\r\n      service_account_name = module.cloudrun-sa.email\r\n      containers {\r\n        image = \"gcr.io/${var.gcp_project}/gateway:latest\"\r\n\r\n```\r\n\r\nThe client-name and client-version as well as the user image is never nulled.\r\n\r\n\r\nProvider versions: \r\n\r\n```tf\r\n\r\nterraform {\r\n  cloud {\r\n    organization = \"redacted\"\r\n    workspaces {\r\n      tags = [\"main\"]\r\n    }\r\n\r\n  }\r\n\r\n  required_providers {\r\n    google = {\r\n      source  = \"hashicorp/google\"\r\n      version = \">= 4.39.0\"\r\n    }\r\n  }\r\n}\r\n\r\n```\r\n\r\nI have 7 cloud run services in my terraform, this happens to all of them. \r\n\r\nI've had ~4 separate terraform cloud projects, this was happening with all of them. \r\n\r\ntop level definitions:\r\n\r\n```tf\r\n\r\n\r\n  autogenerate_revision_name = true\r\n  lifecycle {\r\n    ignore_changes = [template[0].spec[0].containers[0].image, status[0].latest_created_revision_name, status[0].latest_ready_revision_name, template[0].metadata[0].name]\r\n  }\r\n\r\n\r\n```\r\n\r\nI've added the above so I can run deployments using gcloud run deploy in my github actions/pipelines without breaking terraform.\r\n\r\n\r\n---\r\n\r\nEDIT: \r\n\r\nPotential solution is to add those annotations to the ignore lifecycle: \r\n\r\nBringing the total ignore changes list to:\r\n```tf\r\n    ignore_changes = [template[0].metadata[0].annotations[\"run.googleapis.com/client-name\"],\r\n      template[0].metadata[0].annotations[\"client.knative.dev/user-image\"],\r\n      template[0].metadata[0].annotations[\"run.googleapis.com/client-version\"],\r\n      template[0].spec[0].containers[0].image,\r\n      status[0].latest_created_revision_name,\r\n      status[0].latest_ready_revision_name,\r\n    template[0].metadata[0].name]\r\n```\r\n\r\nThis seems to work for now, but I'm not sure on the implications with larger changes like taking down and rebuilding the whole project.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "And on the next run with no changes, will reverse that exact change. ", "keywords": ["change"]}, {"source": "Text", "text": "Terraform cloud run definitions: ```tf template { metadata { annotations = { # Limit scale up to prevent any cost blow outs! \"autoscaling.knative.dev/maxScale\" = \"5\" # Use the VPC Connector \"run.googleapis.com/vpc-access-connector\" = google_vpc_access_connector.cloudrun.name # all egress from the service should go through the VPC Connector \"run.googleapis.com/vpc-access-egress\" = \"private-ranges-only\" } } spec { service_account_name = module.cloudrun-sa.email containers { image = \"gcr.io/${var.gcp_project}/gateway:latest\" ``` The client-name and client-version as well as the user image is never nulled. ", "keywords": ["cost"]}, {"source": "Text", "text": "Provider versions: ```tf terraform { cloud { organization = \"redacted\" workspaces { tags = [\"main\"] } } required_providers { google = { source = \"hashicorp/google\" version = \">= 4.39.0\" } } } ``` I have 7 cloud run services in my terraform, this happens to all of them. ", "keywords": ["provider"]}, {"source": "Text", "text": "--- EDIT: Potential solution is to add those annotations to the ignore lifecycle: Bringing the total ignore changes list to: ```tf ignore_changes = [template[0].metadata[0].annotations[\"run.googleapis.com/client-name\"], template[0].metadata[0].annotations[\"client.knative.dev/user-image\"], template[0].metadata[0].annotations[\"run.googleapis.com/client-version\"], template[0].spec[0].containers[0]", "keywords": ["change"]}, {"source": "Text", "text": "This seems to work for now, but I'm not sure on the implications with larger changes like taking down and rebuilding the whole project", "keywords": ["change"]}]}], "answers": [{"Id": "75586037", "PostTypeId": "2", "ParentId": "75520208", "CreationDate": "2023-02-27T22:10:54.007", "Score": "1", "Body": "<p>Posting this as a community wiki.</p>\n<p>As per <a href=\"https://stackoverflow.com/users/10064334/sebastiang\">@SebastianG</a>, a potential solution/workaround is to add annotations to the ignore lifecycle, bringing the total ignore list changes to:</p>\n<pre><code>    ignore_changes = [template[0].metadata[0].annotations[&quot;run.googleapis.com/client-name&quot;],\n      template[0].metadata[0].annotations[&quot;client.knative.dev/user-image&quot;],\n      template[0].metadata[0].annotations[&quot;run.googleapis.com/client-version&quot;],\n      template[0].spec[0].containers[0].image,\n      status[0].latest_created_revision_name,\n      status[0].latest_ready_revision_name,\n    template[0].metadata[0].name]\n</code></pre>\n<p>In addition, another community member suggested to raise this as an issue by filing a bug through this <a href=\"https://cloud.google.com/support/docs/issue-trackers\" rel=\"nofollow noreferrer\">link</a>.</p>\n", "OwnerUserId": "16895625", "LastActivityDate": "2023-02-27T22:10:54.007", "CommentCount": "0", "CommunityOwnedDate": "2023-02-27T22:10:54.007", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "288848460", "PostHistoryTypeId": "2", "PostId": "75586037", "RevisionGUID": "26a0d599-3ae2-4606-b728-68fef2d43987", "CreationDate": "2023-02-27T22:10:54.007", "UserId": "16895625", "Text": "Posting this as a community wiki.\r\n\r\nAs per [@SebastianG][1], a potential solution/workaround is to add annotations to the ignore lifecycle, bringing the total ignore list changes to:\r\n\r\n```tf\r\n    ignore_changes = [template[0].metadata[0].annotations[\"run.googleapis.com/client-name\"],\r\n      template[0].metadata[0].annotations[\"client.knative.dev/user-image\"],\r\n      template[0].metadata[0].annotations[\"run.googleapis.com/client-version\"],\r\n      template[0].spec[0].containers[0].image,\r\n      status[0].latest_created_revision_name,\r\n      status[0].latest_ready_revision_name,\r\n    template[0].metadata[0].name]\r\n```\r\nIn addition, another community member suggested to raise this as an issue by filing a bug through this [link][2].\r\n\r\n\r\n  [1]: https://stackoverflow.com/users/10064334/sebastiang\r\n  [2]: https://cloud.google.com/support/docs/issue-trackers", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "As per [@SebastianG][1], a potential solution/workaround is to add annotations to the ignore lifecycle, bringing the total ignore list changes to: ```tf ignore_changes = [template[0].metadata[0].annotations[\"run.googleapis.com/client-name\"], template[0].metadata[0].annotations[\"client.knative.dev/user-image\"], template[0].metadata[0].annotations[\"run.googleapis.com/client-version\"], template[0].spec[0].containers[0].image, status[0].latest_created_revision_name, status[0].latest_ready_revision_name, template[0]", "keywords": ["change"]}]}, {"Id": "288848462", "PostHistoryTypeId": "16", "PostId": "75586037", "RevisionGUID": "2bed953a-8a30-4e29-9287-d6e547bcd1c5", "CreationDate": "2023-02-27T22:10:54.007", "UserId": "16895625", "filtered-sentences": []}], "filtered-sentences": [{"source": "Body", "text": "As per @SebastianG, a potential solution/workaround is to add annotations to the ignore lifecycle, bringing the total ignore list changes to: ", "keywords": ["change"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Title", "text": "terraform destroys and recreates cloud run services on every alternating run, for no reason, with no change?", "keywords": ["change"]}, {"source": "Body", "text": "It seems that on every alternating run on my cloud run services, terraform will do this: And on the next run with no changes, will reverse that exact change. ", "keywords": ["change"]}, {"source": "Body", "text": "Provider versions: I have 7 cloud run services in my terraform, this happens to all of them. ", "keywords": ["provider"]}, {"source": "Body", "text": "EDIT: Potential solution is to add those annotations to the ignore lifecycle: Bringing the total ignore changes list to: ", "keywords": ["change"]}, {"source": "Body", "text": "This seems to work for now, but I'm not sure on the implications with larger changes like taking down and rebuilding the whole project.", "keywords": ["change"]}]}