{"Id": "74140188", "PostTypeId": "1", "AcceptedAnswerId": "74248088", "CreationDate": "2022-10-20T12:51:21.100", "Score": "0", "ViewCount": "848", "Body": "<p>I am trying to run <code>terraform init</code> after making sure to have executed <code>gcloud auth login</code> and setting the project I am working with.</p>\n<p>Billing is enabled, it must be because otherwise I couldn't even create the bucket for the backend, and I am able to <code>echo &quot;hello&quot; &gt; test.txt &amp;&amp; gsutil cp test.txt &lt;bucket&gt;/file</code> a file to the GCS bucket from the command line.</p>\n<p>Everything seems to work.</p>\n<p>However, having this file</p>\n<h3>main.tf</h3>\n<pre><code>terraform {\n  required_providers {\n    google = {\n      source = &quot;hashicorp/google&quot;\n    }\n  }\n\n  backend &quot;gcs&quot; {\n    bucket = &quot;dev-00-tfbackend&quot;\n  }\n}\n</code></pre>\n<p>and running the <code>init</code> command I get the following error:</p>\n<pre class=\"lang-none prettyprint-override\"><code>$ terraform init\nInitializing modules...\n\nInitializing the backend...\nError loading state: Failed to open state file at gs://dev-00-tfbackend/default.tfstate: googleapi: got HTTP response code 403 with body: &lt;?xml version='1.0' encoding='UTF-8'?&gt;&lt;Error&gt;&lt;Code&gt;UserProjectAccountProblem&lt;/Code&gt;&lt;Message&gt;User project billing account not in good standing.&lt;/Message&gt;&lt;Details&gt;The billing account for the owning project is disabled in state absent&lt;/Details&gt;&lt;/Error&gt;\n</code></pre>\n<p>Error message:</p>\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;Error&gt;\n  &lt;Code&gt;UserProjectAccountProblem&lt;/Code&gt;\n  &lt;Message&gt;User project billing account not in good standing.&lt;/Message&gt;\n  &lt;Details&gt;The billing account for the owning project is disabled in state absent&lt;/Details&gt;\n&lt;/Error&gt;\n</code></pre>\n<p>I have no clue what the issue is here. Not a hint where to look at and it simply cannot be the billing account.</p>\n<p>It's possible that I have messed up my local configuration somehow but, as stated, everything seems fine.</p>\n<hr />\n<h3>TRACE log</h3>\n<pre class=\"lang-none prettyprint-override\"><code>$ TF_LOG=TRACE terraform init -reconfigure\n2022-10-24T12:46:39.110+0200 [INFO]  Terraform version: 1.3.3\n2022-10-24T12:46:39.110+0200 [DEBUG] using github.com/hashicorp/go-tfe v1.9.0\n2022-10-24T12:46:39.110+0200 [DEBUG] using github.com/hashicorp/hcl/v2 v2.14.1\n2022-10-24T12:46:39.110+0200 [DEBUG] using github.com/hashicorp/terraform-config-inspect v0.0.0-20210209133302-4fd17a0faac2\n2022-10-24T12:46:39.110+0200 [DEBUG] using github.com/hashicorp/terraform-svchost v0.0.0-20200729002733-f050f53b9734\n2022-10-24T12:46:39.110+0200 [DEBUG] using github.com/zclconf/go-cty v1.11.1\n2022-10-24T12:46:39.110+0200 [INFO]  Go runtime version: go1.19.1\n2022-10-24T12:46:39.110+0200 [INFO]  CLI args: []string{&quot;terraform&quot;, &quot;init&quot;, &quot;-reconfigure&quot;}\n2022-10-24T12:46:39.110+0200 [TRACE] Stdout is a terminal of width 232\n2022-10-24T12:46:39.110+0200 [TRACE] Stderr is a terminal of width 232\n2022-10-24T12:46:39.110+0200 [TRACE] Stdin is a terminal\n2022-10-24T12:46:39.110+0200 [DEBUG] Attempting to open CLI config file: /Users/sfalk/.terraformrc\n2022-10-24T12:46:39.110+0200 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.\n2022-10-24T12:46:39.111+0200 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins\n2022-10-24T12:46:39.111+0200 [DEBUG] ignoring non-existing provider search directory /Users/sfalk/.terraform.d/plugins\n2022-10-24T12:46:39.111+0200 [DEBUG] ignoring non-existing provider search directory /Users/sfalk/Library/Application Support/io.terraform/plugins\n2022-10-24T12:46:39.111+0200 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins\n2022-10-24T12:46:39.111+0200 [INFO]  CLI command args: []string{&quot;init&quot;, &quot;-reconfigure&quot;}\nInitializing modules...\n2022-10-24T12:46:39.113+0200 [TRACE] ModuleInstaller: installing child modules for . into .terraform/modules\n2022-10-24T12:46:39.114+0200 [DEBUG] Module installer: begin gcp-network\n2022-10-24T12:46:39.116+0200 [TRACE] ModuleInstaller: Module installer: gcp-network 5.2.0 already installed in .terraform/modules/gcp-network\n2022-10-24T12:46:39.116+0200 [DEBUG] Module installer: begin gcp-network.firewall_rules\n2022-10-24T12:46:39.118+0200 [TRACE] ModuleInstaller: Module installer: gcp-network.firewall_rules &lt;nil&gt; already installed in .terraform/modules/gcp-network/modules/firewall-rules\n2022-10-24T12:46:39.118+0200 [DEBUG] Module installer: begin gcp-network.routes\n2022-10-24T12:46:39.118+0200 [TRACE] ModuleInstaller: Module installer: gcp-network.routes &lt;nil&gt; already installed in .terraform/modules/gcp-network/modules/routes\n2022-10-24T12:46:39.118+0200 [DEBUG] Module installer: begin gcp-network.subnets\n2022-10-24T12:46:39.119+0200 [TRACE] ModuleInstaller: Module installer: gcp-network.subnets &lt;nil&gt; already installed in .terraform/modules/gcp-network/modules/subnets\n2022-10-24T12:46:39.119+0200 [DEBUG] Module installer: begin gcp-network.vpc\n2022-10-24T12:46:39.120+0200 [TRACE] ModuleInstaller: Module installer: gcp-network.vpc &lt;nil&gt; already installed in .terraform/modules/gcp-network/modules/vpc\n2022-10-24T12:46:39.120+0200 [TRACE] modsdir: writing modules manifest to .terraform/modules/modules.json\n\nInitializing the backend...\n2022-10-24T12:46:39.126+0200 [TRACE] Meta.Backend: built configuration for &quot;gcs&quot; backend with hash value 1444622975\n2022-10-24T12:46:39.126+0200 [TRACE] Preserving existing state lineage &quot;59095e3c-1db2-723e-ec73-8b49f7fc9428&quot;\n2022-10-24T12:46:39.126+0200 [TRACE] Preserving existing state lineage &quot;59095e3c-1db2-723e-ec73-8b49f7fc9428&quot;\n2022-10-24T12:46:39.126+0200 [TRACE] Meta.Backend: working directory was previously initialized for &quot;gcs&quot; backend\n2022-10-24T12:46:39.126+0200 [TRACE] Meta.Backend: moving from default local state only to &quot;gcs&quot; backend\n2022-10-24T12:46:39.127+0200 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers\n2022-10-24T12:46:39.127+0200 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/google v4.41.0 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/google/4.41.0/darwin_amd64\n2022-10-24T12:46:39.127+0200 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/google-beta v4.41.0 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/google-beta/4.41.0/darwin_amd64\n2022-10-24T12:46:39.128+0200 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.14.0 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.14.0/darwin_amd64\n2022-10-24T12:46:39.128+0200 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/google/4.41.0/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/google 4.41.0\n2022-10-24T12:46:39.128+0200 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/google-beta/4.41.0/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/google-beta 4.41.0\n2022-10-24T12:46:39.128+0200 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.14.0/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.14.0\n2022-10-24T12:46:39.313+0200 [TRACE] providercache.fillMetaCache: using cached result from previous scan of .terraform/providers\n2022-10-24T12:46:39.434+0200 [TRACE] providercache.fillMetaCache: using cached result from previous scan of .terraform/providers\n2022-10-24T12:46:39.627+0200 [DEBUG] checking for provisioner in &quot;.&quot;\n2022-10-24T12:46:39.628+0200 [DEBUG] checking for provisioner in &quot;/usr/local/bin&quot;\n2022-10-24T12:46:39.628+0200 [TRACE] backend/local: state manager for workspace &quot;default&quot; will:\n - read initial snapshot from terraform.tfstate\n - write new snapshots to terraform.tfstate\n - create any backup at terraform.tfstate.backup\n2022-10-24T12:46:39.628+0200 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate\n2022-10-24T12:46:39.628+0200 [TRACE] statemgr.Filesystem: snapshot file has nil snapshot, but that's okay\n2022-10-24T12:46:39.628+0200 [TRACE] statemgr.Filesystem: read nil snapshot\n2022-10-24T12:46:39.628+0200 [TRACE] Meta.Backend: ignoring local &quot;default&quot; workspace because its state is empty\n2022-10-24T12:46:40.038+0200 [TRACE] Meta.selectWorkspace: the currently selected workspace is present in the configured backend (default)\n2022-10-24T12:46:40.038+0200 [TRACE] Preserving existing state lineage &quot;59095e3c-1db2-723e-ec73-8b49f7fc9428&quot;\n2022-10-24T12:46:40.038+0200 [TRACE] Preserving existing state lineage &quot;59095e3c-1db2-723e-ec73-8b49f7fc9428&quot;\n2022-10-24T12:46:40.038+0200 [TRACE] Preserving existing state lineage &quot;59095e3c-1db2-723e-ec73-8b49f7fc9428&quot;\n\nSuccessfully configured the backend &quot;gcs&quot;! Terraform will automatically\nuse this backend unless the backend configuration changes.\n2022-10-24T12:46:40.064+0200 [TRACE] Meta.Backend: instantiated backend of type *gcs.Backend\n2022-10-24T12:46:40.065+0200 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers\n2022-10-24T12:46:40.066+0200 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/google v4.41.0 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/google/4.41.0/darwin_amd64\n2022-10-24T12:46:40.066+0200 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/google-beta v4.41.0 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/google-beta/4.41.0/darwin_amd64\n2022-10-24T12:46:40.067+0200 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.14.0 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.14.0/darwin_amd64\n2022-10-24T12:46:40.067+0200 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/google/4.41.0/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/google 4.41.0\n2022-10-24T12:46:40.067+0200 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/google-beta/4.41.0/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/google-beta 4.41.0\n2022-10-24T12:46:40.067+0200 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.14.0/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.14.0\n2022-10-24T12:46:40.262+0200 [TRACE] providercache.fillMetaCache: using cached result from previous scan of .terraform/providers\n2022-10-24T12:46:40.447+0200 [TRACE] providercache.fillMetaCache: using cached result from previous scan of .terraform/providers\n2022-10-24T12:46:40.570+0200 [DEBUG] checking for provisioner in &quot;.&quot;\n2022-10-24T12:46:40.571+0200 [DEBUG] checking for provisioner in &quot;/usr/local/bin&quot;\n2022-10-24T12:46:40.571+0200 [TRACE] Meta.Backend: backend *gcs.Backend does not support operations, so wrapping it in a local backend\nError loading state: Failed to open state file at gs://dev-\n00-tfbackend-00/default.tfstate: googleapi: got HTTP response code 403 with body: &lt;?xml version='1.0' encoding='UTF-8'?&gt;&lt;Error&gt;&lt;Code&gt;UserProjectAccountProblem&lt;/Code&gt;&lt;Message&gt;User project billing account not in good standing.&lt;/Message&gt;&lt;Details&gt;The billing account for the owning project is disabled in state absent&lt;/Details&gt;&lt;/Error&gt;\n\n</code></pre>\n", "OwnerUserId": "826983", "LastEditorUserId": "826983", "LastEditDate": "2022-10-24T10:47:06.607", "LastActivityDate": "2022-10-29T19:08:47.680", "Title": "The billing account for the owning project is disabled in state absent", "Tags": "<google-cloud-platform><terraform>", "AnswerCount": "1", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "280504948", "PostHistoryTypeId": "2", "PostId": "74140188", "RevisionGUID": "f0bd8990-05bf-4b62-89d9-3a1af13a0d31", "CreationDate": "2022-10-20T12:51:21.100", "UserId": "826983", "Text": "I am trying to run `terraform init` after making sure to have executed `gcloud auth login` and setting the project I am working with.\r\n\r\nBilling is enabled, it must be because otherwise I couldn't even create the bucket for the backend, and I am able to `echo \"hello\" > test.txt && gsutil cp test.txt <bucket>/file` a file to the GCS bucket from the command line.\r\n\r\nEverything seems to work.\r\n\r\nHowever, having this file\r\n\r\n### main.tf\r\n\r\n```terraform\r\nterraform {\r\n  required_providers {\r\n    google = {\r\n      source = \"hashicorp/google\"\r\n    }\r\n  }\r\n\r\n  backend \"gcs\" {\r\n    bucket = \"dev-00-tfbackend\"\r\n  }\r\n}\r\n```\r\n\r\nand running the `init` command I get the following error:\r\n\r\n```none\r\n$ terraform init\r\nInitializing modules...\r\n\r\nInitializing the backend...\r\nError loading state: Failed to open state file at gs://dev-00-tfbackend/default.tfstate: googleapi: got HTTP response code 403 with body: <?xml version='1.0' encoding='UTF-8'?><Error><Code>UserProjectAccountProblem</Code><Message>User project billing account not in good standing.</Message><Details>The billing account for the owning project is disabled in state absent</Details></Error>\r\n```\r\n\r\nError message:\r\n\r\n```xml\r\n<Error>\r\n  <Code>UserProjectAccountProblem</Code>\r\n  <Message>User project billing account not in good standing.</Message>\r\n  <Details>The billing account for the owning project is disabled in state absent</Details>\r\n</Error>\r\n```\r\n\r\nI have no clue what the issue is here. Not a hint where to look at and it simply cannot be the billing account. \r\n\r\nIt's possible that I have messed up my local configuration somehow but, as stated, everything seems fine.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Billing is enabled, it must be because otherwise I couldn't even create the bucket for the backend, and I am able to `echo \"hello\" > test.txt && gsutil cp test.txt /file` a file to the GCS bucket from the command line. ", "keywords": ["test"]}, {"source": "Text", "text": "Error loading state: Failed to open state file at gs://dev-00-tfbackend/default.tfstate: googleapi: got HTTP response code 403 with body: UserProjectAccountProblemUser project billing account not in good standing.", "keywords": ["bill"]}, {"source": "Text", "text": "The billing account for the owning project is disabled in state absent ``` ", "keywords": ["bill"]}, {"source": "Text", "text": "Error message: ```xml UserProjectAccountProblem User project billing account not in good standing. ", "keywords": ["bill"]}, {"source": "Text", "text": "The billing account for the owning project is disabled in state absent ``` ", "keywords": ["bill"]}, {"source": "Text", "text": "Not a hint where to look at and it simply cannot be the billing account. ", "keywords": ["bill"]}]}, {"Id": "280504950", "PostHistoryTypeId": "1", "PostId": "74140188", "RevisionGUID": "f0bd8990-05bf-4b62-89d9-3a1af13a0d31", "CreationDate": "2022-10-20T12:51:21.100", "UserId": "826983", "Text": "The billing account for the owning project is disabled in state absent", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "The billing account for the owning project is disabled in state absent", "keywords": ["bill"]}]}, {"Id": "280504951", "PostHistoryTypeId": "3", "PostId": "74140188", "RevisionGUID": "f0bd8990-05bf-4b62-89d9-3a1af13a0d31", "CreationDate": "2022-10-20T12:51:21.100", "UserId": "826983", "Text": "<google-cloud-platform><terraform>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "280717236", "PostHistoryTypeId": "33", "PostId": "74140188", "RevisionGUID": "b64a0ee8-df0b-4216-89ea-3dfb39770f4f", "CreationDate": "2022-10-24T07:53:33.977", "UserId": "826983", "Comment": "293245", "filtered-sentences": []}, {"Id": "280727393", "PostHistoryTypeId": "5", "PostId": "74140188", "RevisionGUID": "992c513c-eb12-4a3c-aa95-bde175c31994", "CreationDate": "2022-10-24T10:47:06.607", "UserId": "826983", "Comment": "added 9558 characters in body", "Text": "I am trying to run `terraform init` after making sure to have executed `gcloud auth login` and setting the project I am working with.\r\n\r\nBilling is enabled, it must be because otherwise I couldn't even create the bucket for the backend, and I am able to `echo \"hello\" > test.txt && gsutil cp test.txt <bucket>/file` a file to the GCS bucket from the command line.\r\n\r\nEverything seems to work.\r\n\r\nHowever, having this file\r\n\r\n### main.tf\r\n\r\n```terraform\r\nterraform {\r\n  required_providers {\r\n    google = {\r\n      source = \"hashicorp/google\"\r\n    }\r\n  }\r\n\r\n  backend \"gcs\" {\r\n    bucket = \"dev-00-tfbackend\"\r\n  }\r\n}\r\n```\r\n\r\nand running the `init` command I get the following error:\r\n\r\n```none\r\n$ terraform init\r\nInitializing modules...\r\n\r\nInitializing the backend...\r\nError loading state: Failed to open state file at gs://dev-00-tfbackend/default.tfstate: googleapi: got HTTP response code 403 with body: <?xml version='1.0' encoding='UTF-8'?><Error><Code>UserProjectAccountProblem</Code><Message>User project billing account not in good standing.</Message><Details>The billing account for the owning project is disabled in state absent</Details></Error>\r\n```\r\n\r\nError message:\r\n\r\n```xml\r\n<Error>\r\n  <Code>UserProjectAccountProblem</Code>\r\n  <Message>User project billing account not in good standing.</Message>\r\n  <Details>The billing account for the owning project is disabled in state absent</Details>\r\n</Error>\r\n```\r\n\r\nI have no clue what the issue is here. Not a hint where to look at and it simply cannot be the billing account. \r\n\r\nIt's possible that I have messed up my local configuration somehow but, as stated, everything seems fine.\r\n\r\n---\r\n\r\n### TRACE log\r\n\r\n```none\r\n$ TF_LOG=TRACE terraform init -reconfigure\r\n2022-10-24T12:46:39.110+0200 [INFO]  Terraform version: 1.3.3\r\n2022-10-24T12:46:39.110+0200 [DEBUG] using github.com/hashicorp/go-tfe v1.9.0\r\n2022-10-24T12:46:39.110+0200 [DEBUG] using github.com/hashicorp/hcl/v2 v2.14.1\r\n2022-10-24T12:46:39.110+0200 [DEBUG] using github.com/hashicorp/terraform-config-inspect v0.0.0-20210209133302-4fd17a0faac2\r\n2022-10-24T12:46:39.110+0200 [DEBUG] using github.com/hashicorp/terraform-svchost v0.0.0-20200729002733-f050f53b9734\r\n2022-10-24T12:46:39.110+0200 [DEBUG] using github.com/zclconf/go-cty v1.11.1\r\n2022-10-24T12:46:39.110+0200 [INFO]  Go runtime version: go1.19.1\r\n2022-10-24T12:46:39.110+0200 [INFO]  CLI args: []string{\"terraform\", \"init\", \"-reconfigure\"}\r\n2022-10-24T12:46:39.110+0200 [TRACE] Stdout is a terminal of width 232\r\n2022-10-24T12:46:39.110+0200 [TRACE] Stderr is a terminal of width 232\r\n2022-10-24T12:46:39.110+0200 [TRACE] Stdin is a terminal\r\n2022-10-24T12:46:39.110+0200 [DEBUG] Attempting to open CLI config file: /Users/sfalk/.terraformrc\r\n2022-10-24T12:46:39.110+0200 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.\r\n2022-10-24T12:46:39.111+0200 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins\r\n2022-10-24T12:46:39.111+0200 [DEBUG] ignoring non-existing provider search directory /Users/sfalk/.terraform.d/plugins\r\n2022-10-24T12:46:39.111+0200 [DEBUG] ignoring non-existing provider search directory /Users/sfalk/Library/Application Support/io.terraform/plugins\r\n2022-10-24T12:46:39.111+0200 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins\r\n2022-10-24T12:46:39.111+0200 [INFO]  CLI command args: []string{\"init\", \"-reconfigure\"}\r\nInitializing modules...\r\n2022-10-24T12:46:39.113+0200 [TRACE] ModuleInstaller: installing child modules for . into .terraform/modules\r\n2022-10-24T12:46:39.114+0200 [DEBUG] Module installer: begin gcp-network\r\n2022-10-24T12:46:39.116+0200 [TRACE] ModuleInstaller: Module installer: gcp-network 5.2.0 already installed in .terraform/modules/gcp-network\r\n2022-10-24T12:46:39.116+0200 [DEBUG] Module installer: begin gcp-network.firewall_rules\r\n2022-10-24T12:46:39.118+0200 [TRACE] ModuleInstaller: Module installer: gcp-network.firewall_rules <nil> already installed in .terraform/modules/gcp-network/modules/firewall-rules\r\n2022-10-24T12:46:39.118+0200 [DEBUG] Module installer: begin gcp-network.routes\r\n2022-10-24T12:46:39.118+0200 [TRACE] ModuleInstaller: Module installer: gcp-network.routes <nil> already installed in .terraform/modules/gcp-network/modules/routes\r\n2022-10-24T12:46:39.118+0200 [DEBUG] Module installer: begin gcp-network.subnets\r\n2022-10-24T12:46:39.119+0200 [TRACE] ModuleInstaller: Module installer: gcp-network.subnets <nil> already installed in .terraform/modules/gcp-network/modules/subnets\r\n2022-10-24T12:46:39.119+0200 [DEBUG] Module installer: begin gcp-network.vpc\r\n2022-10-24T12:46:39.120+0200 [TRACE] ModuleInstaller: Module installer: gcp-network.vpc <nil> already installed in .terraform/modules/gcp-network/modules/vpc\r\n2022-10-24T12:46:39.120+0200 [TRACE] modsdir: writing modules manifest to .terraform/modules/modules.json\r\n\r\nInitializing the backend...\r\n2022-10-24T12:46:39.126+0200 [TRACE] Meta.Backend: built configuration for \"gcs\" backend with hash value 1444622975\r\n2022-10-24T12:46:39.126+0200 [TRACE] Preserving existing state lineage \"59095e3c-1db2-723e-ec73-8b49f7fc9428\"\r\n2022-10-24T12:46:39.126+0200 [TRACE] Preserving existing state lineage \"59095e3c-1db2-723e-ec73-8b49f7fc9428\"\r\n2022-10-24T12:46:39.126+0200 [TRACE] Meta.Backend: working directory was previously initialized for \"gcs\" backend\r\n2022-10-24T12:46:39.126+0200 [TRACE] Meta.Backend: moving from default local state only to \"gcs\" backend\r\n2022-10-24T12:46:39.127+0200 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers\r\n2022-10-24T12:46:39.127+0200 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/google v4.41.0 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/google/4.41.0/darwin_amd64\r\n2022-10-24T12:46:39.127+0200 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/google-beta v4.41.0 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/google-beta/4.41.0/darwin_amd64\r\n2022-10-24T12:46:39.128+0200 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.14.0 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.14.0/darwin_amd64\r\n2022-10-24T12:46:39.128+0200 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/google/4.41.0/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/google 4.41.0\r\n2022-10-24T12:46:39.128+0200 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/google-beta/4.41.0/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/google-beta 4.41.0\r\n2022-10-24T12:46:39.128+0200 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.14.0/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.14.0\r\n2022-10-24T12:46:39.313+0200 [TRACE] providercache.fillMetaCache: using cached result from previous scan of .terraform/providers\r\n2022-10-24T12:46:39.434+0200 [TRACE] providercache.fillMetaCache: using cached result from previous scan of .terraform/providers\r\n2022-10-24T12:46:39.627+0200 [DEBUG] checking for provisioner in \".\"\r\n2022-10-24T12:46:39.628+0200 [DEBUG] checking for provisioner in \"/usr/local/bin\"\r\n2022-10-24T12:46:39.628+0200 [TRACE] backend/local: state manager for workspace \"default\" will:\r\n - read initial snapshot from terraform.tfstate\r\n - write new snapshots to terraform.tfstate\r\n - create any backup at terraform.tfstate.backup\r\n2022-10-24T12:46:39.628+0200 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate\r\n2022-10-24T12:46:39.628+0200 [TRACE] statemgr.Filesystem: snapshot file has nil snapshot, but that's okay\r\n2022-10-24T12:46:39.628+0200 [TRACE] statemgr.Filesystem: read nil snapshot\r\n2022-10-24T12:46:39.628+0200 [TRACE] Meta.Backend: ignoring local \"default\" workspace because its state is empty\r\n2022-10-24T12:46:40.038+0200 [TRACE] Meta.selectWorkspace: the currently selected workspace is present in the configured backend (default)\r\n2022-10-24T12:46:40.038+0200 [TRACE] Preserving existing state lineage \"59095e3c-1db2-723e-ec73-8b49f7fc9428\"\r\n2022-10-24T12:46:40.038+0200 [TRACE] Preserving existing state lineage \"59095e3c-1db2-723e-ec73-8b49f7fc9428\"\r\n2022-10-24T12:46:40.038+0200 [TRACE] Preserving existing state lineage \"59095e3c-1db2-723e-ec73-8b49f7fc9428\"\r\n\r\nSuccessfully configured the backend \"gcs\"! Terraform will automatically\r\nuse this backend unless the backend configuration changes.\r\n2022-10-24T12:46:40.064+0200 [TRACE] Meta.Backend: instantiated backend of type *gcs.Backend\r\n2022-10-24T12:46:40.065+0200 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers\r\n2022-10-24T12:46:40.066+0200 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/google v4.41.0 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/google/4.41.0/darwin_amd64\r\n2022-10-24T12:46:40.066+0200 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/google-beta v4.41.0 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/google-beta/4.41.0/darwin_amd64\r\n2022-10-24T12:46:40.067+0200 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.14.0 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.14.0/darwin_amd64\r\n2022-10-24T12:46:40.067+0200 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/google/4.41.0/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/google 4.41.0\r\n2022-10-24T12:46:40.067+0200 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/google-beta/4.41.0/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/google-beta 4.41.0\r\n2022-10-24T12:46:40.067+0200 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.14.0/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.14.0\r\n2022-10-24T12:46:40.262+0200 [TRACE] providercache.fillMetaCache: using cached result from previous scan of .terraform/providers\r\n2022-10-24T12:46:40.447+0200 [TRACE] providercache.fillMetaCache: using cached result from previous scan of .terraform/providers\r\n2022-10-24T12:46:40.570+0200 [DEBUG] checking for provisioner in \".\"\r\n2022-10-24T12:46:40.571+0200 [DEBUG] checking for provisioner in \"/usr/local/bin\"\r\n2022-10-24T12:46:40.571+0200 [TRACE] Meta.Backend: backend *gcs.Backend does not support operations, so wrapping it in a local backend\r\nError loading state: Failed to open state file at gs://dev-\r\n00-tfbackend-00/default.tfstate: googleapi: got HTTP response code 403 with body: <?xml version='1.0' encoding='UTF-8'?><Error><Code>UserProjectAccountProblem</Code><Message>User project billing account not in good standing.</Message><Details>The billing account for the owning project is disabled in state absent</Details></Error>\r\n\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Billing is enabled, it must be because otherwise I couldn't even create the bucket for the backend, and I am able to `echo \"hello\" > test.txt && gsutil cp test.txt /file` a file to the GCS bucket from the command line. ", "keywords": ["test"]}, {"source": "Text", "text": "Error loading state: Failed to open state file at gs://dev-00-tfbackend/default.tfstate: googleapi: got HTTP response code 403 with body: UserProjectAccountProblemUser project billing account not in good standing.", "keywords": ["bill"]}, {"source": "Text", "text": "The billing account for the owning project is disabled in state absent ``` ", "keywords": ["bill"]}, {"source": "Text", "text": "Error message: ```xml UserProjectAccountProblem User project billing account not in good standing. ", "keywords": ["bill"]}, {"source": "Text", "text": "The billing account for the owning project is disabled in state absent ``` ", "keywords": ["bill"]}, {"source": "Text", "text": "Not a hint where to look at and it simply cannot be the billing account. ", "keywords": ["bill"]}, {"source": "Text", "text": "It's possible that I have messed up my local configuration somehow but, as stated, everything seems fine. --- ### TRACE log ```none $ TF_LOG=TRACE terraform init -reconfigure 2022-10-24T12:46:39.110+0200 [INFO] Terraform version: 1.3.3 2022-10-24T12:46:39.110+0200 [DEBUG] using github.com/hashicorp/go-tfe v1.9.0 2022-10-24T12:46:39.110+0200 [DEBUG] using github.com/hashicorp/hcl/v2 v2.14.1 2022-10-24T12:46:39.110+0200 [DEBUG] using github.com/hashicorp/terraform-config-inspect v0.0.0-20210209133302-4fd17a0faac2 2022-10-24T12:46:39.110+0200 [DEBUG] using github.com/hashicorp/terraform-svchost v0.0.0-20200729002733-f050f53b9734 2022-10-24T12:46:39.110+0200 [DEBUG] using github.com/zclconf/go-cty v1.11.1 2022-10-24T12:46:39.110+0200 [INFO] Go runtime version: go1.19.1 2022-10-24T12:46:39.110+0200 [INFO] CLI args: []string{\"terraform\", \"init\", \"-reconfigure\"} 2022-10-24T12:46:39.110+0200 [TRACE] Stdout is a terminal of width 232 2022-10-24T12:46:39.110+0200 [TRACE] Stderr is a terminal of width 232 2022-10-24T12:46:39.110+0200 [TRACE] Stdin is a terminal 2022-10-24T12:46:39.110+0200 [DEBUG] Attempting to open CLI config file: /Users/sfalk/.terraformrc 2022-10-24T12:46:39.110+0200 [DEBUG] File doesn't exist, but doesn't need to. Ignoring. 2022-10-24T12:46:39.111+0200 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins 2022-10-24T12:46:39.111+0200 [DEBUG] ignoring non-existing provider search directory /Users/sfalk/.terraform.d/plugins 2022-10-24T12:46:39.111+0200 [DEBUG] ignoring non-existing provider search directory /Users/sfalk/Library/Application Support/io.terraform/plugins 2022-10-24T12:46:39.111+0200 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins 2022-10-24T12:46:39.111+0200 [INFO] CLI command args: []string{\"init\", \"-reconfigure\"} Initializing modules... 2022-10-24T12:46:39.113+0200 [TRACE] ModuleInstaller: installing child modules for . into .terraform/modules 2022-10-24T12:46:39.114+0200 [DEBUG] Module installer: begin gcp-network 2022-10-24T12:46:39.116+0200 [TRACE] ModuleInstaller: Module installer: gcp-network 5.2.0 already installed in .terraform/modules/gcp-network 2022-10-24T12:46:39.116+0200 [DEBUG] Module installer: begin gcp-network.firewall_rules 2022-10-24T12:46:39.118+0200 [TRACE] ModuleInstaller: Module installer: gcp-network.firewall_rules already installed in .terraform/modules/gcp-network/modules/firewall-rules 2022-10-24T12:46:39.118+0200 [DEBUG] Module installer: begin gcp-network.routes 2022-10-24T12:46:39.118+0200 [TRACE] ModuleInstaller: Module installer: gcp-network.routes already installed in .terraform/modules/gcp-network/modules/routes 2022-10-24T12:46:39.118+0200 [DEBUG] Module installer: begin gcp-network.subnets 2022-10-24T12:46:39.119+0200 [TRACE] ModuleInstaller: Module installer: gcp-network.subnets already installed in .terraform/modules/gcp-network/modules/subnets 2022-10-24T12:46:39.119+0200 [DEBUG] Module installer: begin gcp-network.vpc 2022-10-24T12:46:39.120+0200 [TRACE] ModuleInstaller: Module installer: gcp-network.vpc already installed in .terraform/modules/gcp-network/modules/vpc 2022-10-24T12:46:39.120+0200 [TRACE] modsdir: writing modules manifest to .terraform/modules/modules.json Initializing the backend... ", "keywords": ["provider"]}, {"source": "Text", "text": "Terraform will automatically use this backend unless the backend configuration changes. ", "keywords": ["change"]}, {"source": "Text", "text": "2022-10-24T12:46:40.064+0200 [TRACE] Meta.Backend: instantiated backend of type *gcs.Backend 2022-10-24T12:46:40.065+0200 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers 2022-10-24T12:46:40.066+0200 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/google v4.41.0 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/google/4.41.0/darwin_amd64 2022-10-24T12:46:40.066+0200 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/google-beta v4.41.0 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/google-beta/4.41.0/darwin_amd64 2022-10-24T12:46:40.067+0200 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.14.0 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.14.0/darwin_amd64 2022-10-24T12:46:40.067+0200 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/google/4.41.0/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/google 4.41.0 2022-10-24T12:46:40.067+0200 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/google-beta/4.41.0/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/google-beta 4.41.0 2022-10-24T12:46:40.067+0200 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.14.0/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.14.0 2022-10-24T12:46:40.262+0200 [TRACE] providercache.fillMetaCache: using cached result from previous scan of .terraform/providers 2022-10-24T12:46:40.447+0200 [TRACE] providercache.fillMetaCache: using cached result from previous scan of .terraform/providers 2022-10-24T12:46:40.570+0200 [DEBUG] checking for provisioner in \".\" 2022-10-24T12:46:40.571+0200 [DEBUG] checking for provisioner in \"/usr/local/bin\" 2022-10-24T12:46:40.571+0200 [TRACE] Meta.Backend: backend *gcs.Backend does not support operations, so wrapping it in a local backend Error loading state: Failed to open state file at gs://dev- 00-tfbackend-00/default.tfstate: googleapi: got HTTP response code 403 with body: UserProjectAccountProblemUser project billing account not in good standing.", "keywords": ["bill"]}, {"source": "Text", "text": "The billing account for the owning project is disabled in state absent ```", "keywords": ["bill"]}]}, {"Id": "281200003", "PostHistoryTypeId": "34", "PostId": "74140188", "RevisionGUID": "ec03263d-b419-42c7-addc-38bbcf08aa15", "CreationDate": "2022-10-31T09:15:56.377", "UserId": "826983", "Comment": "293245", "filtered-sentences": []}], "answers": [{"Id": "74248088", "PostTypeId": "2", "ParentId": "74140188", "CreationDate": "2022-10-29T19:08:47.680", "Score": "0", "Body": "<p>Terraform is not using the credentials you  get when you run <code>gcloud auth login</code>. What it uses are the credentials being generated when you run <code>gcloud auth application-default login</code> it also sets a billing quota project here according to what you have set under core/project. I assume you ran that command once and configured a quota project that either no longer exists or has no billing account. I would recommend to run <code>gcloud auth application-default login</code> again as you have already configured the project it should now set the quota project to the project you would expect.</p>\n", "OwnerUserId": "20109742", "LastActivityDate": "2022-10-29T19:08:47.680", "CommentCount": "3", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "131107544", "PostId": "74248088", "Score": "0", "Text": "Thanks a lot! This worked! Any idea how I managed to \"break\" it? I still don't know what I did because the problem occurred after it worked without issues.", "CreationDate": "2022-10-31T09:16:17.790", "UserId": "826983", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "131117646", "PostId": "74248088", "Score": "0", "Text": "Like I tried to explain in my answer the Application credentials need some project with a billing account to charge the api calls against I would assume the Project you set before for that was either deleted or billing was disabled on it. Maybe this link to the [documentation](https://cloud.google.com/docs/authentication/provide-credentials-adc#user-creds-client-based) helps.", "CreationDate": "2022-10-31T17:11:51.600", "UserId": "20109742", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Like I tried to explain in my answer the Application credentials need some project with a billing account to charge the api calls against I would assume the Project you set before for that was either deleted or billing was disabled on it. ", "keywords": ["bill"]}]}, {"Id": "131151623", "PostId": "74248088", "Score": "0", "Text": "Hm, no the project was not disabled or deleted. The issues occurred all of a sudden. I probably did something that fiddled with the settings somehow. I was just hoping to get a clue what I did to break it. But anyway, your answer solved the issue and that's the most important part. :)", "CreationDate": "2022-11-02T09:32:58.130", "UserId": "826983", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "281125080", "PostHistoryTypeId": "2", "PostId": "74248088", "RevisionGUID": "d770e6fd-88fc-4ac9-a269-aba29ecab1f7", "CreationDate": "2022-10-29T19:08:47.680", "UserId": "20109742", "Text": "Terraform is not using the credentials you  get when you run `gcloud auth login`. What it uses are the credentials being generated when you run `gcloud auth application-default login` it also sets a billing quota project here according to what you have set under core/project. I assume you ran that command once and configured a quota project that either no longer exists or has no billing account. I would recommend to run `gcloud auth application-default login` again as you have already configured the project it should now set the quota project to the project you would expect.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "What it uses are the credentials being generated when you run `gcloud auth application-default login` it also sets a billing quota project here according to what you have set under core/project. ", "keywords": ["bill"]}, {"source": "Text", "text": "I assume you ran that command once and configured a quota project that either no longer exists or has no billing account. ", "keywords": ["bill"]}]}], "filtered-sentences": [{"source": "Body", "text": "What it uses are the credentials being generated when you run gcloud auth application-default login it also sets a billing quota project here according to what you have set under core/project. ", "keywords": ["bill"]}, {"source": "Body", "text": "I assume you ran that command once and configured a quota project that either no longer exists or has no billing account. ", "keywords": ["bill"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Title", "text": "The billing account for the owning project is disabled in state absent", "keywords": ["bill"]}, {"source": "Body", "text": "Billing is enabled, it must be because otherwise I couldn't even create the bucket for the backend, and I am able to echo \"hello\" > test.txt && gsutil cp test.txt <bucket>/file a file to the GCS bucket from the command line. ", "keywords": ["test"]}, {"source": "Body", "text": "Not a hint where to look at and it simply cannot be the billing account. ", "keywords": ["bill"]}]}