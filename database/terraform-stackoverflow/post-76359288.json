{"Id": "76359288", "PostTypeId": "1", "CreationDate": "2023-05-29T17:30:22.403", "Score": "1", "ViewCount": "160", "Body": "<p>I'm trying to recreate the tutorial <a href=\"https://cloud.google.com/run/docs/tutorials/network-filesystems-filestore\" rel=\"nofollow noreferrer\">howto connect filestore to gcp cloud run</a> with terraform.</p>\n<p>My terraform is now,</p>\n<pre><code>terraform {\n  required_version = &quot;&gt;= 1.0.0&quot;\n  required_providers {\n    google = {\n      source  = &quot;hashicorp/google&quot;\n      version = &quot;4.62.0&quot;\n    }\n  }\n}\n\n# Create a VPC network\nresource &quot;google_project_service&quot; &quot;vpcaccess-api&quot; {\n  project = var.project_gcp_name # Replace this with your project ID in quotes\n  provider = google-beta\n  service = &quot;vpcaccess.googleapis.com&quot;\n}\n\n# VPC\nresource &quot;google_compute_network&quot; &quot;default&quot; {\n  name                    = &quot;cloudrun-network&quot;\n  project                 = var.project_gcp_name\n  provider                = google-beta\n  auto_create_subnetworks = false\n}\n\n\nresource &quot;google_vpc_access_connector&quot; &quot;connector&quot; {\n  name           = &quot;vpcconn&quot;\n  provider       = google-beta\n  project        = var.project_gcp_name\n  region         = &quot;us-central1&quot;\n  ip_cidr_range  = &quot;10.8.0.0/28&quot;\n  max_throughput = 300\n  network        = google_compute_network.default.name\n  depends_on     = [google_project_service.vpcaccess-api]\n}\n\n\nresource &quot;google_filestore_instance&quot; &quot;filestore_instance&quot; {\n  name     = var.filestore_instance_name\n  project  = var.project_gcp_name\n  location = &quot;us-central1-a&quot;\n  tier     = var.filestore_tier\n\n  file_shares {\n    capacity_gb = var.fileshare_capacity_gb\n    name        = &quot;share1&quot;\n\n    nfs_export_options {\n      ip_ranges   = [&quot;10.0.0.0/24&quot;]\n      access_mode = &quot;READ_WRITE&quot;\n    }\n  }\n\n  networks {\n    network      = &quot;cloudrun-network&quot;\n    modes        = [&quot;MODE_IPV4&quot;]\n  }\n}\n\nresource &quot;google_cloud_run_service&quot; &quot;container&quot; {\n  name     = var.service_name\n  location = var.region\n\n  metadata {\n    annotations = {\n      &quot;run.googleapis.com/client-name&quot; = &quot;terraform&quot;\n    }\n  }\n\n  template {\n    spec {\n      containers {\n        image = &quot;${var.image_name}:latest&quot;\n\n        env {\n          name  = &quot;FILESTORE_IP_ADDRESS&quot;\n          value = google_filestore_instance.filestore_instance.networks[0].ip_addresses[0]\n        }\n        env {\n          name  = &quot;FILE_SHARE_NAME&quot;\n          value = &quot;share1&quot;\n        }\n        env {\n          name  = &quot;MNT_DIR&quot;\n          value = &quot;/mnt/workdir&quot;\n        }\n        env {\n          name  = &quot;LOG_LEVEL&quot;\n          value = &quot;INFO&quot;\n        }\n      }\n    }\n\n    metadata {\n      annotations = {\n        # Limit scale up to prevent any cost blow outs!\n        &quot;autoscaling.knative.dev/maxScale&quot; = &quot;5&quot;\n        # Use the VPC Connector\n        #&quot;run.googleapis.com/vpc-access-connector&quot; = module.test-vpc-module.subnets[&quot;us-central1/serverless-subnet&quot;].name\n        &quot;run.googleapis.com/vpc-access-connector&quot; = &quot;vpcconn&quot;\n        # all egress from the service should go through the VPC Connector\n        &quot;run.googleapis.com/vpc-access-egress&quot; = &quot;all-traffic&quot;\n      }\n    }\n\n\n  }\n  autogenerate_revision_name = true\n}\n</code></pre>\n<p>The docker is set-up in the same way as the tutorial. I just added to the <code>run.sh</code> command <code>showmount -e $FILESTORE_IP_ADDRESS</code> to debug what's happening.</p>\n<p>The logs show the following message,</p>\n<pre><code>clnt_create: RPC: Unknown host\n</code></pre>\n<p>as a double check that my environment variables are properly set, I show them in my logs and see</p>\n<pre><code>calling: showmount -e 10.15.225.10\n</code></pre>\n<p>and</p>\n<pre><code>$ gcloud filestore instances describe myfilestore\ncreateTime: '2023-05-29T17:14:23.950831835Z'\nfileShares:\n- capacityGb: '1024'\n  name: share1\n  nfsExportOptions:\n  - accessMode: READ_WRITE\n    ipRanges:\n    - 10.0.0.0/24\n    squashMode: NO_ROOT_SQUASH\nname: projects/spacejam-hc-us/locations/us-central1-a/instances/myfilestore\nnetworks:\n- connectMode: DIRECT_PEERING\n  ipAddresses:\n  - 10.15.225.10\n  modes:\n  - MODE_IPV4\n  network: cloudrun-network\n  reservedIpRange: 10.15.225.8/29\nstate: READY\ntier: STANDARD\n</code></pre>\n<p>Running <code>mount -o nfs --verbose</code> on the client shows the following message in the logs,</p>\n<pre><code>mount.nfs: trying text-based options 'nolock,vers=4.2,addr=10.15.225.10,clientaddr=169.254.8.1'\n</code></pre>\n<p>Client address seems wrong, how can I fix that? Any other pointers to what I may do wrong?</p>\n", "OwnerUserId": "4099925", "LastEditorUserId": "4099925", "LastEditDate": "2023-05-29T17:48:52.747", "LastActivityDate": "2023-05-29T17:48:52.747", "Title": "Connecting gcp cloud run instance to filestore with terraform", "Tags": "<google-cloud-platform><google-cloud-run><terraform-provider-gcp><google-cloud-filestore>", "AnswerCount": "0", "CommentCount": "4", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "134663628", "PostId": "76359288", "Score": "0", "Text": "Verify that the `FILESTORE_IP_ADDRESS` environment variable is set correctly and passed to the Cloud Run instance. Confirm that the IP address is being logged correctly, such as `calling: showmount -e 10.15.225.10` and check that the IP address `10.15.225.10` is the correct IP address of your Filestore instance. You can use the command `gcloud filestore instances describe myfilestore` or check the Filestore instance details in the Google Cloud Console.", "CreationDate": "2023-05-30T18:07:12.200", "UserId": "19229284", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Verify that the `FILESTORE_IP_ADDRESS` environment variable is set correctly and passed to the Cloud Run instance. ", "keywords": ["instance"]}, {"source": "Text", "text": "Confirm that the IP address is being logged correctly, such as `calling: showmount -e 10.15.225.10` and check that the IP address `10.15.225.10` is the correct IP address of your Filestore instance. ", "keywords": ["instance"]}, {"source": "Text", "text": "You can use the command `gcloud filestore instances describe myfilestore` or check the Filestore instance details in the Google Cloud Console.", "keywords": ["instance"]}]}, {"Id": "134664204", "PostId": "76359288", "Score": "0", "Text": "Thanks. `showmount -e 10.15.225.10` is unable to find the IP address.", "CreationDate": "2023-05-30T19:02:28.020", "UserId": "4099925", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "134675907", "PostId": "76359288", "Score": "0", "Text": "If the `showmount -e 10.15.225.10` command is unable to find the IP address, it indicates that the NFS server on the Filestore instance is not reachable or there might be some network connectivity issue.", "CreationDate": "2023-05-31T15:04:24.830", "UserId": "19229284", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "command is unable to find the IP address, it indicates that the NFS server on the Filestore instance is not reachable or there might be some network connectivity issue.", "keywords": ["instance"]}]}, {"Id": "134678201", "PostId": "76359288", "Score": "0", "Text": "Thanks, I figured as much. Any clue how to get it well setup with terraform?", "CreationDate": "2023-05-31T18:00:07.227", "UserId": "4099925", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "293464631", "PostHistoryTypeId": "2", "PostId": "76359288", "RevisionGUID": "d173370b-94c3-4f21-bed3-a4a24c4b0d7d", "CreationDate": "2023-05-29T17:30:22.403", "UserId": "4099925", "Text": "I'm trying to recreate the tutorial [howto connect filestore to gcp cloud run](https://cloud.google.com/run/docs/tutorials/network-filesystems-filestore) with terraform.\r\n\r\nMy terraform is now,\r\n\r\n```terraform\r\nterraform {\r\n  required_version = \">= 1.0.0\"\r\n  required_providers {\r\n    google = {\r\n      source  = \"hashicorp/google\"\r\n      version = \"4.62.0\"\r\n    }\r\n  }\r\n}\r\n\r\n# Create a VPC network\r\nresource \"google_project_service\" \"vpcaccess-api\" {\r\n  project = var.project_gcp_name # Replace this with your project ID in quotes\r\n  provider = google-beta\r\n  service = \"vpcaccess.googleapis.com\"\r\n}\r\n\r\n# VPC\r\nresource \"google_compute_network\" \"default\" {\r\n  name                    = \"cloudrun-network\"\r\n  project                 = var.project_gcp_name\r\n  provider                = google-beta\r\n  auto_create_subnetworks = false\r\n}\r\n\r\n\r\nresource \"google_vpc_access_connector\" \"connector\" {\r\n  name           = \"vpcconn\"\r\n  provider       = google-beta\r\n  project        = var.project_gcp_name\r\n  region         = \"us-central1\"\r\n  ip_cidr_range  = \"10.8.0.0/28\"\r\n  max_throughput = 300\r\n  network        = google_compute_network.default.name\r\n  depends_on     = [google_project_service.vpcaccess-api]\r\n}\r\n\r\n\r\nresource \"google_filestore_instance\" \"filestore_instance\" {\r\n  name     = var.filestore_instance_name\r\n  project  = var.project_gcp_name\r\n  location = \"us-central1-a\"\r\n  tier     = var.filestore_tier\r\n\r\n  file_shares {\r\n    capacity_gb = var.fileshare_capacity_gb\r\n    name        = \"share1\"\r\n\r\n    nfs_export_options {\r\n      ip_ranges   = [\"10.0.0.0/24\"]\r\n      access_mode = \"READ_WRITE\"\r\n    }\r\n  }\r\n\r\n  networks {\r\n    network      = \"cloudrun-network\"\r\n    modes        = [\"MODE_IPV4\"]\r\n  }\r\n}\r\n\r\nresource \"google_cloud_run_service\" \"container\" {\r\n  name     = var.service_name\r\n  location = var.region\r\n\r\n  metadata {\r\n    annotations = {\r\n      \"run.googleapis.com/client-name\" = \"terraform\"\r\n    }\r\n  }\r\n\r\n  template {\r\n    spec {\r\n      containers {\r\n        image = \"${var.image_name}:latest\"\r\n\r\n        env {\r\n          name  = \"FILESTORE_IP_ADDRESS\"\r\n          value = google_filestore_instance.filestore_instance.networks[0].ip_addresses[0]\r\n        }\r\n        env {\r\n          name  = \"FILE_SHARE_NAME\"\r\n          value = \"share1\"\r\n        }\r\n        env {\r\n          name  = \"MNT_DIR\"\r\n          value = \"/mnt/workdir\"\r\n        }\r\n        env {\r\n          name  = \"LOG_LEVEL\"\r\n          value = \"INFO\"\r\n        }\r\n      }\r\n    }\r\n\r\n    metadata {\r\n      annotations = {\r\n        # Limit scale up to prevent any cost blow outs!\r\n        \"autoscaling.knative.dev/maxScale\" = \"5\"\r\n        # Use the VPC Connector\r\n        #\"run.googleapis.com/vpc-access-connector\" = module.test-vpc-module.subnets[\"us-central1/serverless-subnet\"].name\r\n        \"run.googleapis.com/vpc-access-connector\" = \"vpcconn\"\r\n        # all egress from the service should go through the VPC Connector\r\n        \"run.googleapis.com/vpc-access-egress\" = \"all-traffic\"\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n  autogenerate_revision_name = true\r\n}\r\n```\r\n\r\nThe docker is set-up in the same way as the tutorial. I just added to the `run.sh` command `showmount -e $FILESTORE_IP_ADDRESS` to debug what's happening.\r\n\r\nThe logs show the following message,\r\n```\r\nclnt_create: RPC: Unknown host\r\n```\r\n\r\nas a double check that my environment variables are properly set, I show them in my logs and see\r\n```\r\ncalling: showmount -e 10.15.225.10\r\n```\r\n\r\nand \r\n```\r\n$ gcloud filestore instances describe myfilestore\r\ncreateTime: '2023-05-29T17:14:23.950831835Z'\r\nfileShares:\r\n- capacityGb: '1024'\r\n  name: share1\r\n  nfsExportOptions:\r\n  - accessMode: READ_WRITE\r\n    ipRanges:\r\n    - 10.0.0.0/24\r\n    squashMode: NO_ROOT_SQUASH\r\nname: projects/spacejam-hc-us/locations/us-central1-a/instances/myfilestore\r\nnetworks:\r\n- connectMode: DIRECT_PEERING\r\n  ipAddresses:\r\n  - 10.15.225.10\r\n  modes:\r\n  - MODE_IPV4\r\n  network: cloudrun-network\r\n  reservedIpRange: 10.15.225.8/29\r\nstate: READY\r\ntier: STANDARD\r\n```\r\n\r\nAny pointers to what I may do wrong?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "My terraform is now, ```terraform terraform { required_version = \">= 1.0.0\" required_providers { google = { source = \"hashicorp/google\" version = \"4.62.0\" } } } # Create a VPC network resource \"google_project_service\" \"vpcaccess-api\" { project = var.project_gcp_name # Replace this with your project ID in quotes provider = google-beta service = \"vpcaccess.googleapis.com\" } # VPC resource \"google_compute_network\" \"default\" { name = \"cloudrun-network\" project = var.project_gcp_name provider = google-beta auto_create_subnetworks = false } resource \"google_vpc_access_connector\" \"connector\" { name = \"vpcconn\" provider = google-beta project = var.project_gcp_name region = \"us-central1\" ip_cidr_range = \"10.8.0.0/28\" max_throughput = 300 network = google_compute_network.default.name depends_on = [google_project_service.vpcaccess-api] } resource \"google_filestore_instance\" \"filestore_instance\" { name = var.filestore_instance_name project = var.project_gcp_name location = \"us-central1-a\" tier = var.filestore_tier file_shares { capacity_gb = var.fileshare_capacity_gb name = \"share1\" nfs_export_options { ip_ranges = [\"10.0.0.0/24\"] access_mode = \"READ_WRITE\" } } networks { network = \"cloudrun-network\" modes = [\"MODE_IPV4\"] } } resource \"google_cloud_run_service\" \"container\" { name = var.service_name location = var.region metadata { annotations = { \"run.googleapis.com/client-name\" = \"terraform\" } } template { spec { containers { image = \"${var.image_name}:latest\" env { name = \"FILESTORE_IP_ADDRESS\" value = google_filestore_instance.filestore_instance.networks[0].ip_addresses[0] } env { name = \"FILE_SHARE_NAME\" value = \"share1\" } env { name = \"MNT_DIR\" value = \"/mnt/workdir\" } env { name = \"LOG_LEVEL\" value = \"INFO\" } } } metadata { annotations = { # Limit scale up to prevent any cost blow outs! \"autoscaling.knative.dev/maxScale\" = \"5\" # Use the VPC Connector #\"run.googleapis.com/vpc-access-connector\" = module.test-vpc-module.subnets[\"us-central1/serverless-subnet\"].name \"run.googleapis.com/vpc-access-connector\" = \"vpcconn\" # all egress from the service should go through the VPC Connector \"run.googleapis.com/vpc-access-egress\" = \"all-traffic\" } } } autogenerate_revision_name = true } ``` ", "keywords": ["cost", "provider", "test"]}]}, {"Id": "293464633", "PostHistoryTypeId": "1", "PostId": "76359288", "RevisionGUID": "d173370b-94c3-4f21-bed3-a4a24c4b0d7d", "CreationDate": "2023-05-29T17:30:22.403", "UserId": "4099925", "Text": "Connecting gcp cloud run instance to filestore with terraform", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Connecting gcp cloud run instance to filestore with terraform", "keywords": ["instance"]}]}, {"Id": "293464634", "PostHistoryTypeId": "3", "PostId": "76359288", "RevisionGUID": "d173370b-94c3-4f21-bed3-a4a24c4b0d7d", "CreationDate": "2023-05-29T17:30:22.403", "UserId": "4099925", "Text": "<google-cloud-platform><google-cloud-run><terraform-provider-gcp><google-cloud-filestore>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "293465212", "PostHistoryTypeId": "5", "PostId": "76359288", "RevisionGUID": "172b231e-6b8a-43f0-be04-a738cd92aa30", "CreationDate": "2023-05-29T17:48:52.747", "UserId": "4099925", "Comment": "added 252 characters in body", "Text": "I'm trying to recreate the tutorial [howto connect filestore to gcp cloud run](https://cloud.google.com/run/docs/tutorials/network-filesystems-filestore) with terraform.\r\n\r\nMy terraform is now,\r\n\r\n```terraform\r\nterraform {\r\n  required_version = \">= 1.0.0\"\r\n  required_providers {\r\n    google = {\r\n      source  = \"hashicorp/google\"\r\n      version = \"4.62.0\"\r\n    }\r\n  }\r\n}\r\n\r\n# Create a VPC network\r\nresource \"google_project_service\" \"vpcaccess-api\" {\r\n  project = var.project_gcp_name # Replace this with your project ID in quotes\r\n  provider = google-beta\r\n  service = \"vpcaccess.googleapis.com\"\r\n}\r\n\r\n# VPC\r\nresource \"google_compute_network\" \"default\" {\r\n  name                    = \"cloudrun-network\"\r\n  project                 = var.project_gcp_name\r\n  provider                = google-beta\r\n  auto_create_subnetworks = false\r\n}\r\n\r\n\r\nresource \"google_vpc_access_connector\" \"connector\" {\r\n  name           = \"vpcconn\"\r\n  provider       = google-beta\r\n  project        = var.project_gcp_name\r\n  region         = \"us-central1\"\r\n  ip_cidr_range  = \"10.8.0.0/28\"\r\n  max_throughput = 300\r\n  network        = google_compute_network.default.name\r\n  depends_on     = [google_project_service.vpcaccess-api]\r\n}\r\n\r\n\r\nresource \"google_filestore_instance\" \"filestore_instance\" {\r\n  name     = var.filestore_instance_name\r\n  project  = var.project_gcp_name\r\n  location = \"us-central1-a\"\r\n  tier     = var.filestore_tier\r\n\r\n  file_shares {\r\n    capacity_gb = var.fileshare_capacity_gb\r\n    name        = \"share1\"\r\n\r\n    nfs_export_options {\r\n      ip_ranges   = [\"10.0.0.0/24\"]\r\n      access_mode = \"READ_WRITE\"\r\n    }\r\n  }\r\n\r\n  networks {\r\n    network      = \"cloudrun-network\"\r\n    modes        = [\"MODE_IPV4\"]\r\n  }\r\n}\r\n\r\nresource \"google_cloud_run_service\" \"container\" {\r\n  name     = var.service_name\r\n  location = var.region\r\n\r\n  metadata {\r\n    annotations = {\r\n      \"run.googleapis.com/client-name\" = \"terraform\"\r\n    }\r\n  }\r\n\r\n  template {\r\n    spec {\r\n      containers {\r\n        image = \"${var.image_name}:latest\"\r\n\r\n        env {\r\n          name  = \"FILESTORE_IP_ADDRESS\"\r\n          value = google_filestore_instance.filestore_instance.networks[0].ip_addresses[0]\r\n        }\r\n        env {\r\n          name  = \"FILE_SHARE_NAME\"\r\n          value = \"share1\"\r\n        }\r\n        env {\r\n          name  = \"MNT_DIR\"\r\n          value = \"/mnt/workdir\"\r\n        }\r\n        env {\r\n          name  = \"LOG_LEVEL\"\r\n          value = \"INFO\"\r\n        }\r\n      }\r\n    }\r\n\r\n    metadata {\r\n      annotations = {\r\n        # Limit scale up to prevent any cost blow outs!\r\n        \"autoscaling.knative.dev/maxScale\" = \"5\"\r\n        # Use the VPC Connector\r\n        #\"run.googleapis.com/vpc-access-connector\" = module.test-vpc-module.subnets[\"us-central1/serverless-subnet\"].name\r\n        \"run.googleapis.com/vpc-access-connector\" = \"vpcconn\"\r\n        # all egress from the service should go through the VPC Connector\r\n        \"run.googleapis.com/vpc-access-egress\" = \"all-traffic\"\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n  autogenerate_revision_name = true\r\n}\r\n```\r\n\r\nThe docker is set-up in the same way as the tutorial. I just added to the `run.sh` command `showmount -e $FILESTORE_IP_ADDRESS` to debug what's happening.\r\n\r\nThe logs show the following message,\r\n```\r\nclnt_create: RPC: Unknown host\r\n```\r\n\r\nas a double check that my environment variables are properly set, I show them in my logs and see\r\n```\r\ncalling: showmount -e 10.15.225.10\r\n```\r\n\r\nand \r\n```\r\n$ gcloud filestore instances describe myfilestore\r\ncreateTime: '2023-05-29T17:14:23.950831835Z'\r\nfileShares:\r\n- capacityGb: '1024'\r\n  name: share1\r\n  nfsExportOptions:\r\n  - accessMode: READ_WRITE\r\n    ipRanges:\r\n    - 10.0.0.0/24\r\n    squashMode: NO_ROOT_SQUASH\r\nname: projects/spacejam-hc-us/locations/us-central1-a/instances/myfilestore\r\nnetworks:\r\n- connectMode: DIRECT_PEERING\r\n  ipAddresses:\r\n  - 10.15.225.10\r\n  modes:\r\n  - MODE_IPV4\r\n  network: cloudrun-network\r\n  reservedIpRange: 10.15.225.8/29\r\nstate: READY\r\ntier: STANDARD\r\n```\r\n\r\nRunning `mount -o nfs --verbose` on the client shows the following message in the logs,\r\n```\r\nmount.nfs: trying text-based options 'nolock,vers=4.2,addr=10.15.225.10,clientaddr=169.254.8.1'\r\n```\r\n\r\nClient address seems wrong, how can I fix that? Any other pointers to what I may do wrong?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "My terraform is now, ```terraform terraform { required_version = \">= 1.0.0\" required_providers { google = { source = \"hashicorp/google\" version = \"4.62.0\" } } } # Create a VPC network resource \"google_project_service\" \"vpcaccess-api\" { project = var.project_gcp_name # Replace this with your project ID in quotes provider = google-beta service = \"vpcaccess.googleapis.com\" } # VPC resource \"google_compute_network\" \"default\" { name = \"cloudrun-network\" project = var.project_gcp_name provider = google-beta auto_create_subnetworks = false } resource \"google_vpc_access_connector\" \"connector\" { name = \"vpcconn\" provider = google-beta project = var.project_gcp_name region = \"us-central1\" ip_cidr_range = \"10.8.0.0/28\" max_throughput = 300 network = google_compute_network.default.name depends_on = [google_project_service.vpcaccess-api] } resource \"google_filestore_instance\" \"filestore_instance\" { name = var.filestore_instance_name project = var.project_gcp_name location = \"us-central1-a\" tier = var.filestore_tier file_shares { capacity_gb = var.fileshare_capacity_gb name = \"share1\" nfs_export_options { ip_ranges = [\"10.0.0.0/24\"] access_mode = \"READ_WRITE\" } } networks { network = \"cloudrun-network\" modes = [\"MODE_IPV4\"] } } resource \"google_cloud_run_service\" \"container\" { name = var.service_name location = var.region metadata { annotations = { \"run.googleapis.com/client-name\" = \"terraform\" } } template { spec { containers { image = \"${var.image_name}:latest\" env { name = \"FILESTORE_IP_ADDRESS\" value = google_filestore_instance.filestore_instance.networks[0].ip_addresses[0] } env { name = \"FILE_SHARE_NAME\" value = \"share1\" } env { name = \"MNT_DIR\" value = \"/mnt/workdir\" } env { name = \"LOG_LEVEL\" value = \"INFO\" } } } metadata { annotations = { # Limit scale up to prevent any cost blow outs! \"autoscaling.knative.dev/maxScale\" = \"5\" # Use the VPC Connector #\"run.googleapis.com/vpc-access-connector\" = module.test-vpc-module.subnets[\"us-central1/serverless-subnet\"].name \"run.googleapis.com/vpc-access-connector\" = \"vpcconn\" # all egress from the service should go through the VPC Connector \"run.googleapis.com/vpc-access-egress\" = \"all-traffic\" } } } autogenerate_revision_name = true } ``` ", "keywords": ["cost", "provider", "test"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Title", "text": "Connecting gcp cloud run instance to filestore with terraform", "keywords": ["instance"]}]}