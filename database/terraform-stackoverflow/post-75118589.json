{"Id": "75118589", "PostTypeId": "1", "CreationDate": "2023-01-14T14:17:46.470", "Score": "1", "ViewCount": "721", "Body": "<p>We use Azure databricks and managing via terraform. We have configured SCIM connector provisioner(AAD Enterprise app) to sync users and groups from AAD to Databricks. This works good. I can able to assign job or cluster permissions to these SCIM synced groups but when I try to assign admin role(entire workspace admin) to SCIM synced group the terraform error shows &quot;API is not available for this worspace&quot;. Sorry, I don't what it means, Is it related to terraform provider or Am I putting something wrong? Please suggest me what should I use or correct. Please find below code 'principal_id' argument accepts user id or group id or service principal id as per terraform documentation here <a href=\"https://registry.terraform.io/providers/databricks/databricks/latest/docs/resources/permission_assignment#principal_id\" rel=\"nofollow noreferrer\">https://registry.terraform.io/providers/databricks/databricks/latest/docs/resources/permission_assignment#principal_id</a></p>\n<p>Provider configuration:</p>\n<pre><code>terraform {\n  required_version = &quot;&gt;= 1.1.4&quot;\n  required_providers {\n    azurerm = {\n      source  = &quot;hashicorp/azurerm&quot;\n      version = &quot;&gt;= 3.8.0&quot;\n    }\n      databricks = {\n      source  = &quot;databricks/databricks&quot;\n      version = &quot;&gt;= 1.6.3&quot;\n    }\n  }\n}\n\n\nprovider &quot;databricks&quot; { #Assign databricks workspace id to provider\n  azure_workspace_resource_id = \n     data.azurerm_databricks_workspace.adb_ws.id\n}\n</code></pre>\n<p>Resource Block:</p>\n<pre><code>resource &quot;databricks_permission_assignment&quot; &quot;assign_scim_admingroup&quot; {\n  principal_id = data.databricks_group.dbricks_admin_group.id\n  permissions  = [&quot;ADMIN&quot;]\n}\n</code></pre>\n<p>Error in terraform:</p>\n<pre><code>\u2502 Error: cannot create permission assignment: Permission assignment APIs are not available for this workspace.\n\u2502 \n\u2502   with databricks_permission_assignment.assign_scim_admingroup,\n\u2502   on Dbricks-permission.tf line 104, in resource &quot;databricks_permission_assignment&quot; &quot;assign_scim_admingroup&quot;:\n\u2502   43: resource &quot;databricks_permission_assignment&quot; &quot;assign_scim_admingroup&quot; {\n</code></pre>\n<p>My expectation is Databricks group synced with AAD via SCIM connecter provisioner groups should be assigned as &quot;ADMIN&quot; role using terraform.</p>\n", "OwnerUserId": "15736028", "LastEditorUserId": "15736028", "LastEditDate": "2023-01-17T06:40:19.530", "LastActivityDate": "2023-03-03T23:48:28.697", "Title": "Error while assigning admin role to SCIM provisioned AAD groups in Databricks", "Tags": "<databricks><azure-databricks><terraform-provider-azure><terraform-provider-databricks><databricks-unity-catalog>", "AnswerCount": "2", "CommentCount": "3", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "132591383", "PostId": "75118589", "Score": "0", "Text": "Do you have unit catalog metastore attached to this workspace?", "CreationDate": "2023-01-16T15:58:08.570", "UserId": "18627", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "132591813", "PostId": "75118589", "Score": "0", "Text": "also, please post the provider configuration", "CreationDate": "2023-01-16T16:16:42.687", "UserId": "18627", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "also, please post the provider configuration", "keywords": ["provider"]}]}, {"Id": "132602341", "PostId": "75118589", "Score": "0", "Text": "Hi Alex, Thanks for looking for me. We just use hive metastore and this also by default (we haven't configured anything) and we're not using unity catalog. I've added provider code.", "CreationDate": "2023-01-17T06:44:53.220", "UserId": "15736028", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I've added provider code.", "keywords": ["provider"]}]}], "history": [{"Id": "286144632", "PostHistoryTypeId": "2", "PostId": "75118589", "RevisionGUID": "bad893bd-2a59-439e-b604-4927c6d385ce", "CreationDate": "2023-01-14T14:17:46.470", "UserId": "15736028", "Text": "We use Azure databricks and managing via terraform. We have configured SCIM connector provisioner(AAD Enterprise app) to sync users and groups from AAD to Databricks. This works good. I can able to assign job or cluster permissions to these SCIM synced groups but when I try to assign admin role(entire workspace admin) to SCIM synced group the terraform error shows \"API is not available for this worspace\". Sorry, I don't what it means, Is it related to terraform provider or Am I putting something wrong? Please suggest me what should I use or correct. Please find below code 'principal_id' argument accepts user id or group id or service principal id as per terraform documentation here https://registry.terraform.io/providers/databricks/databricks/latest/docs/resources/permission_assignment#principal_id\r\n\r\n```\r\nresource \"databricks_permission_assignment\" \"assign_scim_admingroup\" {\r\n  principal_id = data.databricks_group.dbricks_admin_group.id\r\n  permissions  = [\"ADMIN\"]\r\n}\r\n```\r\n\r\nError in terraform:\r\n\r\n```\r\n\u2502 Error: cannot create permission assignment: Permission assignment APIs are not available for this workspace.\r\n\u2502 \r\n\u2502   with databricks_permission_assignment.assign_scim_admingroup,\r\n\u2502   on Dbricks-permission.tf line 104, in resource \"databricks_permission_assignment\" \"assign_scim_admingroup\":\r\n\u2502   43: resource \"databricks_permission_assignment\" \"assign_scim_admingroup\" {\r\n```\r\n\r\nMy expectation is Databricks group synced with AAD via SCIM connecter provisioner groups should be assigned as \"ADMIN\" role using terraform.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I can able to assign job or cluster permissions to these SCIM synced groups but when I try to assign admin role(entire workspace admin) to SCIM synced group the terraform error shows \"API is not available for this worspace\". ", "keywords": ["cluster"]}, {"source": "Text", "text": "Sorry, I don't what it means, Is it related to terraform provider or Am I putting something wrong? ", "keywords": ["provider"]}]}, {"Id": "286144634", "PostHistoryTypeId": "1", "PostId": "75118589", "RevisionGUID": "bad893bd-2a59-439e-b604-4927c6d385ce", "CreationDate": "2023-01-14T14:17:46.470", "UserId": "15736028", "Text": "Error while assigning admin role to SCIM provisioned AAD groups in Databricks", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "286144635", "PostHistoryTypeId": "3", "PostId": "75118589", "RevisionGUID": "bad893bd-2a59-439e-b604-4927c6d385ce", "CreationDate": "2023-01-14T14:17:46.470", "UserId": "15736028", "Text": "<azure-databricks><terraform-provider-azure>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "286144636", "PostHistoryTypeId": "66", "PostId": "75118589", "RevisionGUID": "bad893bd-2a59-439e-b604-4927c6d385ce", "CreationDate": "2023-01-14T14:17:46.470", "UserId": "15736028", "filtered-sentences": []}, {"Id": "286144845", "PostHistoryTypeId": "6", "PostId": "75118589", "RevisionGUID": "bb581bd9-844b-4f35-b2f7-40d64b322d7c", "CreationDate": "2023-01-14T14:22:17.743", "UserId": "15736028", "Comment": "edited tags", "Text": "<databricks><azure-databricks><terraform-provider-azure><terraform-provider-databricks>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "286249682", "PostHistoryTypeId": "6", "PostId": "75118589", "RevisionGUID": "9c174588-8dc3-4e94-b9a7-13ba69bf838f", "CreationDate": "2023-01-16T15:52:04.777", "UserId": "18627", "Comment": "edited tags", "Text": "<databricks><azure-databricks><terraform-provider-azure><terraform-provider-databricks><databricks-unity-catalog>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "286284685", "PostHistoryTypeId": "5", "PostId": "75118589", "RevisionGUID": "48ec01f3-6723-4dba-aa92-5e6e25ed5aa7", "CreationDate": "2023-01-17T06:40:19.530", "UserId": "15736028", "Comment": "added 530 characters in body", "Text": "We use Azure databricks and managing via terraform. We have configured SCIM connector provisioner(AAD Enterprise app) to sync users and groups from AAD to Databricks. This works good. I can able to assign job or cluster permissions to these SCIM synced groups but when I try to assign admin role(entire workspace admin) to SCIM synced group the terraform error shows \"API is not available for this worspace\". Sorry, I don't what it means, Is it related to terraform provider or Am I putting something wrong? Please suggest me what should I use or correct. Please find below code 'principal_id' argument accepts user id or group id or service principal id as per terraform documentation here https://registry.terraform.io/providers/databricks/databricks/latest/docs/resources/permission_assignment#principal_id\r\n\r\nProvider configuration:\r\n\r\n    terraform {\r\n      required_version = \">= 1.1.4\"\r\n      required_providers {\r\n        azurerm = {\r\n          source  = \"hashicorp/azurerm\"\r\n          version = \">= 3.8.0\"\r\n        }\r\n          databricks = {\r\n          source  = \"databricks/databricks\"\r\n          version = \">= 1.6.3\"\r\n        }\r\n      }\r\n    }\r\n    \r\n    \r\n    provider \"databricks\" { #Assign databricks workspace id to provider\r\n      azure_workspace_resource_id = \r\n         data.azurerm_databricks_workspace.adb_ws.id\r\n    }\r\nResource Block:\r\n```\r\nresource \"databricks_permission_assignment\" \"assign_scim_admingroup\" {\r\n  principal_id = data.databricks_group.dbricks_admin_group.id\r\n  permissions  = [\"ADMIN\"]\r\n}\r\n```\r\n\r\nError in terraform:\r\n\r\n```\r\n\u2502 Error: cannot create permission assignment: Permission assignment APIs are not available for this workspace.\r\n\u2502 \r\n\u2502   with databricks_permission_assignment.assign_scim_admingroup,\r\n\u2502   on Dbricks-permission.tf line 104, in resource \"databricks_permission_assignment\" \"assign_scim_admingroup\":\r\n\u2502   43: resource \"databricks_permission_assignment\" \"assign_scim_admingroup\" {\r\n```\r\n\r\nMy expectation is Databricks group synced with AAD via SCIM connecter provisioner groups should be assigned as \"ADMIN\" role using terraform.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I can able to assign job or cluster permissions to these SCIM synced groups but when I try to assign admin role(entire workspace admin) to SCIM synced group the terraform error shows \"API is not available for this worspace\". ", "keywords": ["cluster"]}, {"source": "Text", "text": "Sorry, I don't what it means, Is it related to terraform provider or Am I putting something wrong? ", "keywords": ["provider"]}, {"source": "Text", "text": "Please find below code 'principal_id' argument accepts user id or group id or service principal id as per terraform documentation here https://registry.terraform.io/providers/databricks/databricks/latest/docs/resources/permission_assignment#principal_id Provider configuration: terraform { required_version = \">= 1.1.4\" required_providers { azurerm = { source = \"hashicorp/azurerm\" version = \">= 3.8.0\" } databricks = { source = \"databricks/databricks\" version = \">= 1.6.3\" } } } provider \"databricks\" { #Assign databricks workspace id to provider azure_workspace_resource_id = data.azurerm_databricks_workspace.adb_ws.id } Resource Block: ``` resource \"databricks_permission_assignment\" \"assign_scim_admingroup\" { principal_id = data.databricks_group.dbricks_admin_group.id permissions = [\"ADMIN\"] } ``` Error in terraform: ``` \u2502 Error: cannot create permission assignment: Permission assignment APIs are not available for this workspace. \u2502 \u2502 with databricks_permission_assignment.assign_scim_admingroup, \u2502 on Dbricks-permission.tf line 104, in resource \"databricks_permission_assignment\" \"assign_scim_admingroup\": \u2502 43: resource \"databricks_permission_assignment\" \"assign_scim_admingroup\" { ``` ", "keywords": ["provider"]}]}], "answers": [{"Id": "75632758", "PostTypeId": "2", "ParentId": "75118589", "CreationDate": "2023-03-03T23:48:28.697", "Score": "1", "Body": "<p>The solution for us was that we were creating the metastore and the user permission assignments in the same Terraform apply. It turns out that the metastore needs about 10 minutes of buffer time, so if you run the same Terraform apply after 10 minutes it should work. Hope this helps</p>\n", "OwnerUserId": "14797397", "LastActivityDate": "2023-03-03T23:48:28.697", "CommentCount": "3", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "133714489", "PostId": "75632758", "Score": "0", "Text": "Same here. Did you find any workaround to have a succesfull run in one run?", "CreationDate": "2023-03-21T14:40:30.713", "UserId": "8701062", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "133754908", "PostId": "75632758", "Score": "0", "Text": "@FredericDS nah", "CreationDate": "2023-03-23T19:22:38.963", "UserId": "14797397", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "133863136", "PostId": "75632758", "Score": "0", "Text": "I've added a timeout in Terraform. Not ideal bit it works", "CreationDate": "2023-03-30T19:31:33.613", "UserId": "8701062", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "289112190", "PostHistoryTypeId": "2", "PostId": "75632758", "RevisionGUID": "f79c0324-3734-4bc8-a0eb-103a98f54ce8", "CreationDate": "2023-03-03T23:48:28.697", "UserId": "14797397", "Text": "The solution for us was that we were creating the metastore and the user permission assignments in the same Terraform apply. It turns out that the metastore needs about 10 minutes of buffer time, so if you run the same Terraform apply after 10 minutes it should work. Hope this helps", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "75144789", "PostTypeId": "2", "ParentId": "75118589", "CreationDate": "2023-01-17T10:05:28.960", "Score": "0", "Body": "<p><em><strong>I tried to reproduce the same in my environment:</strong></em></p>\n<p><strong>Code:</strong></p>\n<pre><code>resource &quot;azuread_group&quot; &quot;example&quot; {\n  display_name     = &quot;kavyaMyGroup&quot;\n  owners           = [data.azuread_client_config.current.object_id]\n  security_enabled = true\n\n  members = [\n    azuread_user.example.object_id,\n    # more users \n   ]\n}\nresource &quot;databricks_user&quot; &quot;me&quot; {\n // user_name    = &quot;testuser@databricks.com&quot;\n user_name = azuread_user.example.user_principal_name\n  display_name = &quot;Test User&quot;\n}\n\n\n\n\nresource &quot;databricks_group&quot; &quot;this&quot; {\n//  display_name               = &quot;vsakaSomeGroup&quot;\ndisplay_name = azuread_group.example.display_name\n  allow_cluster_create       = true\n  allow_instance_pool_create = true\n  workspace_access      = true\n  databricks_sql_access = true\n}\n\nresource &quot;databricks_group_member&quot; &quot;vip_member&quot; {\n  group_id = databricks_group.this.id\n  member_id = databricks_user.me.id\n}\n</code></pre>\n<p><strong>I received the same error:</strong></p>\n<pre><code>\u2502 Error: cannot create permission assignment: Permission assignment APIs are not available for this workspace.\n\u2502\n\u2502   with databricks_permission_assignment.assign_scim_admingroup,\n\u2502   on main.tf line 145, in resource &quot;databricks_permission_assignment&quot; &quot;assign_scim_admingroup&quot;:\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/x044x.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/x044x.png\" alt=\"enter image description here\" /></a></p>\n<p><strong>Please note :</strong></p>\n<blockquote>\n<p>The admins group is a reserved group in Azure Databricks and cannot be\nremoved. Note that Workspace-local groups cannot be <a href=\"https://learn.microsoft.com/en-us/azure/databricks/data-governance/unity-catalog/automate?source=recommendations#configure-access-grants-for-a-view\" rel=\"nofollow noreferrer\">granted\naccess</a> to data in a Unity Catalog metastore or assigned to other\nworkspaces .</p>\n</blockquote>\n<blockquote>\n<p>To add groups to a workspace using the account console,\n<code>the workspace must be enabled for identity federation</code>. <strong><code>Only account-level groups are assignable.</code></strong></p>\n</blockquote>\n<p><a href=\"https://learn.microsoft.com/en-us/azure/databricks/administration-guide/users-groups/groups\" rel=\"nofollow noreferrer\">Manage groups - Azure Databricks | Microsoft Learn</a></p>\n<ul>\n<li>If I checked my environment, the group created is local and not\naccount level , so I did not have permissions to assign admin role to\nit.</li>\n</ul>\n<p><a href=\"https://i.stack.imgur.com/vMN4D.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/vMN4D.png\" alt=\"enter image description here\" /></a></p>\n<p>The account admins can assign them using ,the principal ID which can be retrieved using the SCIM API.</p>\n<pre><code>resource &quot;databricks_permission_assignment&quot; &quot;assign_scim_admingroup&quot; {\n /principal_id = databricks_group.this.id\n  permissions  = [&quot;ADMIN&quot;]\n}\n</code></pre>\n<p>Make sure to <em><strong><code>enable identity federation</code></strong></em> , to assign group roles  and have <strong>premium plan</strong> in order to manage the assignment of users to workspaces</p>\n<p><a href=\"https://i.stack.imgur.com/8zYTq.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/8zYTq.png\" alt=\"enter image description here\" /></a></p>\n<p>You can also check Automate SCIM provisioning using Microsoft Graph from</p>\n<p><strong>Reference:</strong> <a href=\"https://learn.microsoft.com/en-us/azure/databricks/administration-guide/users-groups/scim/aad\" rel=\"nofollow noreferrer\">Configure SCIM provisioning using Microsoft Azure Active Directory - Azure Databricks | Microsoft Learn</a></p>\n", "OwnerUserId": "15997509", "LastActivityDate": "2023-01-17T10:05:28.960", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "132632267", "PostId": "75144789", "Score": "0", "Text": "Hi Kavya, Thanks for your answer. I have tried above directly add user to databricks from AD provider but this will be static e.g. whenever we need to remove user, we need to run the code. So, SCIM option came up. Now, we granted 'admin' access to single databricks user imported from AD SCIM connection. Kind of similar to your proposal though. Need to check on other efficient  way. Thanks", "CreationDate": "2023-01-18T14:16:02.330", "UserId": "15736028", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I have tried above directly add user to databricks from AD provider but this will be static e.g. whenever we need to remove user, we need to run the code. ", "keywords": ["provider"]}, {"source": "Text", "text": "Need to check on other efficient way. ", "keywords": ["efficient"]}]}], "history": [{"Id": "286295595", "PostHistoryTypeId": "2", "PostId": "75144789", "RevisionGUID": "9baa271f-6d10-441e-a1f0-3f1804d369a3", "CreationDate": "2023-01-17T10:05:28.960", "UserId": "15997509", "Text": "***I tried to reproduce the same in my environment:***\r\n\r\n**Code:**\r\n\r\n    resource \"azuread_group\" \"example\" {\r\n      display_name     = \"kavyaMyGroup\"\r\n      owners           = [data.azuread_client_config.current.object_id]\r\n      security_enabled = true\r\n    \r\n      members = [\r\n        azuread_user.example.object_id,\r\n        # more users \r\n       ]\r\n    }\r\n    resource \"databricks_user\" \"me\" {\r\n     // user_name    = \"testuser@databricks.com\"\r\n     user_name = azuread_user.example.user_principal_name\r\n      display_name = \"Test User\"\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    resource \"databricks_group\" \"this\" {\r\n    //  display_name               = \"vsakaSomeGroup\"\r\n    display_name = azuread_group.example.display_name\r\n      allow_cluster_create       = true\r\n      allow_instance_pool_create = true\r\n      workspace_access      = true\r\n      databricks_sql_access = true\r\n    }\r\n    \r\n    resource \"databricks_group_member\" \"vip_member\" {\r\n      group_id = databricks_group.this.id\r\n      member_id = databricks_user.me.id\r\n    }\r\n\r\n**I received the same error:**\r\n\r\n    \u2502 Error: cannot create permission assignment: Permission assignment APIs are not available for this workspace.\r\n    \u2502\r\n    \u2502   with databricks_permission_assignment.assign_scim_admingroup,\r\n    \u2502   on main.tf line 145, in resource \"databricks_permission_assignment\" \"assign_scim_admingroup\":\r\n\r\n\r\n\r\n[![enter image description here][1]][1]\r\n\r\n**Please note :**\r\n\r\n> The admins group is a reserved group in Azure Databricks and cannot be\r\n> removed. Note that Workspace-local groups cannot be [granted\r\n> access][2] to data in a Unity Catalog metastore or assigned to other\r\n> workspaces . \r\n>\r\n\r\n> To add groups to a workspace using the account console,\r\n> `the workspace must be enabled for identity federation`. **`Only\r\n> account-level groups are assignable.`**\r\n\r\n[Manage groups - Azure Databricks | Microsoft Learn][3]\r\n\r\n - If I checked my environment, the group created is local and not\r\n   account level , so I did not have permissions to assign admin role to\r\n   it.\r\n\r\n[![enter image description here][4]][4]\r\n\r\n\r\nThe account admins can assign them using ,the principal ID which can be retrieved using the SCIM API.\r\n\r\n    resource \"databricks_permission_assignment\" \"assign_scim_admingroup\" {\r\n     /principal_id = databricks_group.this.id\r\n      permissions  = [\"ADMIN\"]\r\n    }\r\n\r\nMake sure to ***`enable identity federation`*** , to assign group roles  and have **premium plan** in order to manage the assignment of users to workspaces\r\n\r\n[![enter image description here][5]][5]\r\n\r\nYou can also check Automate SCIM provisioning using Microsoft Graph from\r\n\r\n**Reference:** [Configure SCIM provisioning using Microsoft Azure Active Directory - Azure Databricks | Microsoft Learn][6]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/x044x.png\r\n  [2]: https://learn.microsoft.com/en-us/azure/databricks/data-governance/unity-catalog/automate?source=recommendations#configure-access-grants-for-a-view\r\n  [3]: https://learn.microsoft.com/en-us/azure/databricks/administration-guide/users-groups/groups\r\n  [4]: https://i.stack.imgur.com/vMN4D.png\r\n  [5]: https://i.stack.imgur.com/8zYTq.png\r\n  [6]: https://learn.microsoft.com/en-us/azure/databricks/administration-guide/users-groups/scim/aad", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "***I tried to reproduce the same in my environment:*** **Code:** resource \"azuread_group\" \"example\" { display_name = \"kavyaMyGroup\" owners = [data.azuread_client_config.current.object_id] security_enabled = true members = [ azuread_user.example.object_id, # more users ] } resource \"databricks_user\" \"me\" { // user_name = \"testuser@databricks.com\" user_name = azuread_user.example.user_principal_name display_name = \"Test User\" } resource \"databricks_group\" \"this\" { // display_name = \"vsakaSomeGroup\" display_name = azuread_group.example.display_name allow_cluster_create = true allow_instance_pool_create = true workspace_access = true databricks_sql_access = true } resource \"databricks_group_member\" \"vip_member\" { group_id = databricks_group.this.id member_id = databricks_user.me.id } **I received the same error:** \u2502 Error: cannot create permission assignment: Permission assignment APIs are not available for this workspace. \u2502 \u2502 with databricks_permission_assignment.assign_scim_admingroup, \u2502 on main.tf line 145, in resource \"databricks_permission_assignment\" \"assign_scim_admingroup\": [![enter image description here][1]][1] **Please note :** > The admins group is a reserved group in Azure Databricks and cannot be > removed. ", "keywords": ["test"]}]}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I can able to assign job or cluster permissions to these SCIM synced groups but when I try to assign admin role(entire workspace admin) to SCIM synced group the terraform error shows \"API is not available for this worspace\". ", "keywords": ["cluster"]}, {"source": "Body", "text": "Sorry, I don't what it means, Is it related to terraform provider or Am I putting something wrong? ", "keywords": ["provider"]}, {"source": "Body", "text": "Please find below code 'principal_id' argument accepts user id or group id or service principal id as per terraform documentation here https://registry.terraform.io/providers/databricks/databricks/latest/docs/resources/permission_assignment#principal_id Provider configuration: Resource Block: Error in terraform: ", "keywords": ["provider"]}]}