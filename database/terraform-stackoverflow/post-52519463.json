{"Id": "52519463", "PostTypeId": "1", "AcceptedAnswerId": "52523958", "CreationDate": "2018-09-26T13:55:40.963", "Score": "6", "ViewCount": "7350", "Body": "<p>I have a simple AWS deployment with a vpc, public subnet, route, and security group.  Running <code>terraform apply</code> will launch an AWS instance, and I have that instance configured to associate a public IP.  After the instance has been created, I run <code>terraform plan</code> and it properly says everything is up to date.  No problems so far.</p>\n\n<p>We have a management node that will shut down that instance if it's unused for a period of time as a cost saving measure.</p>\n\n<p>Here's the problem: Once that instance is shut down, when I run <code>terraform plan</code>, the aws provider sees everything configured properly, but since the public IP has been released, the value for associate_public_ip_address no longer matches what is configured in the terraform configs, so terraform wants to delete and recreate that instance:</p>\n\n<p><code>associate_public_ip_address:   \"false\" =&gt; \"true\" (forces new resource)\n</code></p>\n\n<p>Is there a way to get terraform to ignore just that one parameter?</p>\n\n<p>This question is marginally related to <a href=\"https://github.com/hashicorp/terraform/issues/7262\" rel=\"noreferrer\">https://github.com/hashicorp/terraform/issues/7262</a>.  But in my case, I don't want to set the expected state, I just want to be able to tell terraform to ignore that one parameter because it's ok that it's not associated <em>right now</em>, as long as it's configured to be associated <em>when it starts</em>.</p>\n\n<p>(This occurred to me while writing this question:  I have not experimented with configuring the subnet to automatically associate public ip for instances launched in it. Conceivably, by making the subnet automatically do it, and removing the option from \"aws_instance\", I might be able to make terraform not pay attention to that value...but I doubt it.)</p>\n", "OwnerUserId": "611911", "LastActivityDate": "2019-10-29T04:31:22.537", "Title": "Get terraform to ignore \"associate_public_ip_address\" status for stopped instance", "Tags": "<terraform><terraform-provider-aws>", "AnswerCount": "1", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "182554091", "PostHistoryTypeId": "2", "PostId": "52519463", "RevisionGUID": "b555d59b-2711-412a-94c5-e135bdc8def0", "CreationDate": "2018-09-26T13:55:40.963", "UserId": "611911", "Text": "I have a simple AWS deployment with a vpc, public subnet, route, and security group.  Running `terraform apply` will launch an AWS instance, and I have that instance configured to associate a public IP.  After the instance has been created, I run `terraform plan` and it properly says everything is up to date.  No problems so far.\r\n\r\nWe have a management node that will shut down that instance if it's unused for a period of time as a cost saving measure.\r\n\r\nHere's the problem: Once that instance is shut down, when I run `terraform plan`, the aws provider sees everything configured properly, but since the public IP has been released, the value for associate_public_ip_address no longer matches what is configured in the terraform configs, so terraform wants to delete and recreate that instance:\r\n\r\n` associate_public_ip_address:   \"false\" => \"true\" (forces new resource)\r\n`\r\n\r\nIs there a way to get terraform to ignore just that one parameter?\r\n\r\nThis question is marginally related to https://github.com/hashicorp/terraform/issues/7262.  But in my case, I don't want to set the expected state, I just want to be able to tell terraform to ignore that one parameter because it's ok that it's not associated *right now*, as long as it's configured to be associated *when it starts*.\r\n\r\n(This occurred to me while writing this question:  I have not experimented with configuring the subnet to automatically associate public ip for instances launched in it. Conceivably, by making the subnet automatically do it, and removing the option from \"aws_instance\", I might be able to make terraform not pay attention to that value...but I doubt it.)", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Running `terraform apply` will launch an AWS instance, and I have that instance configured to associate a public IP. ", "keywords": ["instance"]}, {"source": "Text", "text": "After the instance has been created, I run `terraform plan` and it properly says everything is up to date. ", "keywords": ["instance"]}, {"source": "Text", "text": "We have a management node that will shut down that instance if it's unused for a period of time as a cost saving measure. ", "keywords": ["cost", "instance"]}, {"source": "Text", "text": "Here's the problem: Once that instance is shut down, when I run `terraform plan`, the aws provider sees everything configured properly, but since the public IP has been released, the value for associate_public_ip_address no longer matches what is configured in the terraform configs, so terraform wants to delete and recreate that instance: ` associate_public_ip_address: \"false\" => \"true\" (forces new resource) ` ", "keywords": ["instance", "provider"]}, {"source": "Text", "text": "Conceivably, by making the subnet automatically do it, and removing the option from \"aws_instance\", I might be able to make terraform not pay attention to that value...but I doubt it.)", "keywords": ["pay"]}]}, {"Id": "182554092", "PostHistoryTypeId": "1", "PostId": "52519463", "RevisionGUID": "b555d59b-2711-412a-94c5-e135bdc8def0", "CreationDate": "2018-09-26T13:55:40.963", "UserId": "611911", "Text": "Get terraform to ignore \"associate_public_ip_address\" status for stopped instance", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Get terraform to ignore \"associate_public_ip_address\" status for stopped instance", "keywords": ["instance"]}]}, {"Id": "182554093", "PostHistoryTypeId": "3", "PostId": "52519463", "RevisionGUID": "b555d59b-2711-412a-94c5-e135bdc8def0", "CreationDate": "2018-09-26T13:55:40.963", "UserId": "611911", "Text": "<terraform><terraform-provider-aws>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "52523958", "PostTypeId": "2", "ParentId": "52519463", "CreationDate": "2018-09-26T18:20:17.970", "Score": "9", "Body": "<p>You can use a <a href=\"https://www.terraform.io/docs/configuration/resources.html#lifecycle\" rel=\"noreferrer\">lifecycle block</a> to <a href=\"https://www.terraform.io/docs/configuration/resources.html#ignore_changes\" rel=\"noreferrer\">ignore certain attribute changes</a>.</p>\n\n<p>Using this, the resource is initially created using the provided value for that attribute. Upon a subsequent plan, apply, etc., Terraform will ignore changes to that attribute.</p>\n\n<p>If we add an ignore for <code>associate_public_ip_address</code> in the lifecycle block, a stopped instance will no longer trigger a new resource.</p>\n\n<p>Note that if you alter any other parameter that would require a new instance, the stopped one will be terminated and replaced.</p>\n\n<p>Example based on the <a href=\"https://www.terraform.io/docs/providers/aws/r/instance.html#example-usage\" rel=\"noreferrer\">Terraform aws_instance example code</a> :</p>\n\n<pre><code>provider \"aws\" {\n  region = \"us-west-2\"\n}\n\ndata \"aws_ami\" \"ubuntu\" {\n  most_recent = true\n\n  filter {\n    name   = \"name\"\n    values = [\"ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-*\"]\n  }\n\n  filter {\n    name   = \"virtualization-type\"\n    values = [\"hvm\"]\n  }\n\n  owners = [\"099720109477\"] # Canonical account ID\n}\n\nresource \"aws_instance\" \"web\" {\n  ami           = \"${data.aws_ami.ubuntu.id}\"\n  instance_type = \"t2.micro\"\n  associate_public_ip_address = \"true\"\n  tags {\n    Name = \"HelloWorld\"\n  }\n\n  lifecycle {\n    ignore_changes = [\"associate_public_ip_address\"]\n  }\n}\n</code></pre>\n", "OwnerUserId": "9443614", "LastEditorUserId": "982237", "LastEditDate": "2019-10-29T04:31:22.537", "LastActivityDate": "2019-10-29T04:31:22.537", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "91990032", "PostId": "52523958", "Score": "3", "Text": "Thanks! I had seen lifecycle used in examples, but misinterpreted what it was for. Your answer worked and firmed up my understanding of it.", "CreationDate": "2018-09-26T19:53:15.240", "UserId": "611911", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "182572070", "PostHistoryTypeId": "2", "PostId": "52523958", "RevisionGUID": "31515496-495f-401d-9656-468fe8272ae1", "CreationDate": "2018-09-26T18:20:17.970", "UserId": "9443614", "Text": "You can use a [lifecycle block][1] to [ignore certain attribute changes][2].\r\n\r\nUsing this, the resource is initially created using the provided value for that attribute. Upon a subsequent plan, apply, etc., Terraform will ignore changes to that attribute.\r\n\r\n If we add an ignore for `associate_public_ip_address` in the lifecycle block, a stopped instance will no longer trigger a new resource.\r\n\r\nNote that if you alter any other parameter that would require a new instance, the stopped one will be terminated and replaced.\r\n\r\nExample based on the [Terraform aws_instance example code][3] :\r\n\r\n    provider \"aws\" {\r\n      region = \"us-west-2\"\r\n    }\r\n    \r\n    data \"aws_ami\" \"ubuntu\" {\r\n      most_recent = true\r\n    \r\n      filter {\r\n        name   = \"name\"\r\n        values = [\"ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-*\"]\r\n      }\r\n    \r\n      filter {\r\n        name   = \"virtualization-type\"\r\n        values = [\"hvm\"]\r\n      }\r\n    \r\n      owners = [\"099720109477\"] # Canonical\r\n    }\r\n    \r\n    resource \"aws_instance\" \"web\" {\r\n      ami           = \"${data.aws_ami.ubuntu.id}\"\r\n      instance_type = \"t2.micro\"\r\n      associate_public_ip_address = \"true\"\r\n      tags {\r\n        Name = \"HelloWorld\"\r\n      }\r\n    \r\n      lifecycle = {\r\n        ignore_changes = [\"associate_public_ip_address\"]\r\n      }\r\n    }\r\n\r\n  [1]: https://www.terraform.io/docs/configuration/resources.html#lifecycle\r\n  [2]: https://www.terraform.io/docs/configuration/resources.html#ignore_changes\r\n  [3]: https://www.terraform.io/docs/providers/aws/r/instance.html#example-usage\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "You can use a [lifecycle block][1] to [ignore certain attribute changes][2]. ", "keywords": ["change"]}, {"source": "Text", "text": "Upon a subsequent plan, apply, etc., Terraform will ignore changes to that attribute. ", "keywords": ["change"]}, {"source": "Text", "text": "If we add an ignore for `associate_public_ip_address` in the lifecycle block, a stopped instance will no longer trigger a new resource. ", "keywords": ["instance"]}, {"source": "Text", "text": "Note that if you alter any other parameter that would require a new instance, the stopped one will be terminated and replaced. ", "keywords": ["instance"]}, {"source": "Text", "text": "Example based on the [Terraform aws_instance example code][3] : provider \"aws\" { region = \"us-west-2\" } data \"aws_ami\" \"ubuntu\" { most_recent = true filter { name = \"name\" values = [\"ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-*\"] } filter { name = \"virtualization-type\" values = [\"hvm\"] } owners = [\"099720109477\"] # Canonical } resource \"aws_instance\" \"web\" { ami = \"${data.aws_ami.ubuntu.id}\" instance_type = \"t2.micro\" associate_public_ip_address = \"true\" tags { Name = \"HelloWorld\" } lifecycle = { ignore_changes = [\"associate_public_ip_address\"] } } [1]: https://www.terraform.io/docs/configuration/resources.html#lifecycle [2]: https://www.terraform.io/docs/configuration/resources.html#ignore_changes [3]: https://www.terraform.io/docs/providers/aws/r/instance.html#example-usage", "keywords": ["instance", "provider"]}]}, {"Id": "208134763", "PostHistoryTypeId": "5", "PostId": "52523958", "RevisionGUID": "f2a58081-9eb7-4275-a6a2-9f2d20d85e38", "CreationDate": "2019-10-29T04:31:22.537", "UserId": "982237", "Comment": "The lifecycle block is a block, not an argument so it does not require an equals sign.", "Text": "You can use a [lifecycle block][1] to [ignore certain attribute changes][2].\r\n\r\nUsing this, the resource is initially created using the provided value for that attribute. Upon a subsequent plan, apply, etc., Terraform will ignore changes to that attribute.\r\n\r\n If we add an ignore for `associate_public_ip_address` in the lifecycle block, a stopped instance will no longer trigger a new resource.\r\n\r\nNote that if you alter any other parameter that would require a new instance, the stopped one will be terminated and replaced.\r\n\r\nExample based on the [Terraform aws_instance example code][3] :\r\n\r\n    provider \"aws\" {\r\n      region = \"us-west-2\"\r\n    }\r\n    \r\n    data \"aws_ami\" \"ubuntu\" {\r\n      most_recent = true\r\n    \r\n      filter {\r\n        name   = \"name\"\r\n        values = [\"ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-*\"]\r\n      }\r\n    \r\n      filter {\r\n        name   = \"virtualization-type\"\r\n        values = [\"hvm\"]\r\n      }\r\n    \r\n      owners = [\"099720109477\"] # Canonical account ID\r\n    }\r\n    \r\n    resource \"aws_instance\" \"web\" {\r\n      ami           = \"${data.aws_ami.ubuntu.id}\"\r\n      instance_type = \"t2.micro\"\r\n      associate_public_ip_address = \"true\"\r\n      tags {\r\n        Name = \"HelloWorld\"\r\n      }\r\n    \r\n      lifecycle {\r\n        ignore_changes = [\"associate_public_ip_address\"]\r\n      }\r\n    }\r\n\r\n  [1]: https://www.terraform.io/docs/configuration/resources.html#lifecycle\r\n  [2]: https://www.terraform.io/docs/configuration/resources.html#ignore_changes\r\n  [3]: https://www.terraform.io/docs/providers/aws/r/instance.html#example-usage\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "You can use a [lifecycle block][1] to [ignore certain attribute changes][2]. ", "keywords": ["change"]}, {"source": "Text", "text": "Upon a subsequent plan, apply, etc., Terraform will ignore changes to that attribute. ", "keywords": ["change"]}, {"source": "Text", "text": "If we add an ignore for `associate_public_ip_address` in the lifecycle block, a stopped instance will no longer trigger a new resource. ", "keywords": ["instance"]}, {"source": "Text", "text": "Note that if you alter any other parameter that would require a new instance, the stopped one will be terminated and replaced. ", "keywords": ["instance"]}, {"source": "Text", "text": "Example based on the [Terraform aws_instance example code][3] : provider \"aws\" { region = \"us-west-2\" } data \"aws_ami\" \"ubuntu\" { most_recent = true filter { name = \"name\" values = [\"ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-*\"] } filter { name = \"virtualization-type\" values = [\"hvm\"] } owners = [\"099720109477\"] # Canonical account ID } resource \"aws_instance\" \"web\" { ami = \"${data.aws_ami.ubuntu.id}\" instance_type = \"t2.micro\" associate_public_ip_address = \"true\" tags { Name = \"HelloWorld\" } lifecycle { ignore_changes = [\"associate_public_ip_address\"] } } [1]: https://www.terraform.io/docs/configuration/resources.html#lifecycle [2]: https://www.terraform.io/docs/configuration/resources.html#ignore_changes [3]: https://www.terraform.io/docs/providers/aws/r/instance.html#example-usage", "keywords": ["instance", "provider"]}]}, {"Id": "208134764", "PostHistoryTypeId": "24", "PostId": "52523958", "RevisionGUID": "f2a58081-9eb7-4275-a6a2-9f2d20d85e38", "CreationDate": "2019-10-29T04:31:22.537", "Comment": "Proposed by 982237 approved by 9038475, 3057843 edit id of 4546855", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": [{"source": "Body", "text": "You can use a lifecycle block to ignore certain attribute changes. ", "keywords": ["change"]}, {"source": "Body", "text": "Upon a subsequent plan, apply, etc., Terraform will ignore changes to that attribute. ", "keywords": ["change"]}, {"source": "Body", "text": "If we add an ignore for associate_public_ip_address in the lifecycle block, a stopped instance will no longer trigger a new resource. ", "keywords": ["instance"]}, {"source": "Body", "text": "Note that if you alter any other parameter that would require a new instance, the stopped one will be terminated and replaced. ", "keywords": ["instance"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Title", "text": "Get terraform to ignore \"associate_public_ip_address\" status for stopped instance", "keywords": ["instance"]}, {"source": "Body", "text": "Running terraform apply will launch an AWS instance, and I have that instance configured to associate a public IP. ", "keywords": ["instance"]}, {"source": "Body", "text": "After the instance has been created, I run terraform plan and it properly says everything is up to date. ", "keywords": ["instance"]}, {"source": "Body", "text": "We have a management node that will shut down that instance if it's unused for a period of time as a cost saving measure. ", "keywords": ["cost", "instance"]}, {"source": "Body", "text": "Here's the problem: Once that instance is shut down, when I run terraform plan, the aws provider sees everything configured properly, but since the public IP has been released, the value for associate_public_ip_address no longer matches what is configured in the terraform configs, so terraform wants to delete and recreate that instance: associate_public_ip_address: \"false\" => \"true\" (forces new resource) ", "keywords": ["instance", "provider"]}, {"source": "Body", "text": "Conceivably, by making the subnet automatically do it, and removing the option from \"aws_instance\", I might be able to make terraform not pay attention to that value...but I doubt it.)", "keywords": ["pay"]}]}