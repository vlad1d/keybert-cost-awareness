{"Id": "62332249", "PostTypeId": "1", "CreationDate": "2020-06-11T19:40:13.147", "Score": "1", "ViewCount": "1185", "Body": "<p>Using Terraform 0.12.24</p>\n\n<p>I create multiple service-account, and want to assign each of those with Owner Permission to a list of buckets, and running into numerous problems</p>\n\n<pre><code># Service-accounts created with random-integer suffix\nresource \"google_service_account\" \"sample_accounts\" {\n  for_each     = {for proj in var.target_projects: proj =&gt; proj}\n  account_id   = \"cost-saver-${random_integer.sa_id[each.key].result}\" \n  project      = var.project\n  display_name = \"service account for ${each.key}\"\n}\n</code></pre>\n\n<pre><code>resource \"google_storage_bucket_iam_member\" \"shared_buckets_iam\" {\n  for_each    = {for svc in google_service_account.sample_accounts: svc.email =&gt; svc.email}\n  bucket      = \"${var.shared_project}-shared-files\"\n  role        = \"roles/storage.legacyBucketOwner\"\n  member      = \"serviceAccount:${each.value}\"\n  depends_on  = [google_service_account.sample_accounts]\n\n}\n</code></pre>\n\n<p>Since the service-accounts are created dynamically and I want to use them in the same terraform apply run, I run into this problem</p>\n\n<pre><code>Error: Invalid for_each argument\n\n  on main.tf line 138, in resource \"google_storage_bucket_iam_member\" \"shared_buckets_iam\":\n 138:   for_each    = {for svc in google_service_account.sample_accounts: svc.email =&gt; svc.email}\n\nThe \"for_each\" value depends on resource attributes that cannot be determined\nuntil apply, so Terraform cannot predict how many instances will be created.\nTo work around this, use the -target argument to first apply only the\nresources that the for_each depends on.\n</code></pre>\n\n<p>Can I please get some assistance?</p>\n", "OwnerUserId": "9676485", "LastActivityDate": "2020-06-11T19:40:13.147", "Title": "How to assign multiple google_storage_bucket_iam_member on multiple service-accounts", "Tags": "<google-cloud-storage><terraform-provider-gcp><terraform0.12+>", "AnswerCount": "0", "CommentCount": "6", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "110255215", "PostId": "62332249", "Score": "0", "Text": "What do you look for assistance? The Terraform error message is clear enough, isn't it?", "CreationDate": "2020-06-12T08:52:35.477", "UserId": "11372593", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "110289595", "PostId": "62332249", "Score": "0", "Text": "Well terraforms suggestion is that I use -target to create one resource and then the other, which is prob the worse approach and defeats the entire purpose of automation. If I can create other items such as google_dns_records and retrieve their attributes on the fly, then there must be a way to retrieve google_service_account too.", "CreationDate": "2020-06-13T13:03:42.810", "UserId": "9676485", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "110293274", "PostId": "62332249", "Score": "0", "Text": "Why do you need to create a set of service account?", "CreationDate": "2020-06-13T16:10:01.113", "UserId": "11372593", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "110318721", "PostId": "62332249", "Score": "0", "Text": "It\u2019s an application requirement. Each used to deploy a cloud function in a different project later on", "CreationDate": "2020-06-14T18:37:59.413", "UserId": "9676485", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "110319337", "PostId": "62332249", "Score": "0", "Text": "Ok, and you don't want to repeat the code, only loop, even for deploying functions, right?", "CreationDate": "2020-06-14T19:07:30.517", "UserId": "11372593", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "110353817", "PostId": "62332249", "Score": "0", "Text": "Yes the idea was that I do a single terraform init, followed by apply and it creates all the resources for my respective projects in one go", "CreationDate": "2020-06-15T20:14:07.523", "UserId": "9676485", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "223869807", "PostHistoryTypeId": "2", "PostId": "62332249", "RevisionGUID": "704da655-5df7-4be7-abff-f041e492d983", "CreationDate": "2020-06-11T19:40:13.147", "UserId": "9676485", "Text": "Using Terraform 0.12.24\r\n\r\nI create multiple service-account, and want to assign each of those with Owner Permission to a list of buckets, and running into numerous problems\r\n\r\n```\r\n# Service-accounts created with random-integer suffix\r\nresource \"google_service_account\" \"sample_accounts\" {\r\n  for_each     = {for proj in var.target_projects: proj => proj}\r\n  account_id   = \"cost-saver-${random_integer.sa_id[each.key].result}\" \r\n  project      = var.project\r\n  display_name = \"service account for ${each.key}\"\r\n}\r\n```\r\n\r\n```\r\nresource \"google_storage_bucket_iam_member\" \"shared_buckets_iam\" {\r\n  for_each    = {for svc in google_service_account.sample_accounts: svc.email => svc.email}\r\n  bucket      = \"${var.shared_project}-shared-files\"\r\n  role        = \"roles/storage.legacyBucketOwner\"\r\n  member      = \"serviceAccount:${each.value}\"\r\n  depends_on  = [google_service_account.sample_accounts]\r\n\r\n}\r\n```\r\n\r\nSince the service-accounts are created dynamically and I want to use them in the same terraform apply run, I run into this problem\r\n\r\n```\r\nError: Invalid for_each argument\r\n\r\n  on main.tf line 138, in resource \"google_storage_bucket_iam_member\" \"shared_buckets_iam\":\r\n 138:   for_each    = {for svc in google_service_account.sample_accounts: svc.email => svc.email}\r\n\r\nThe \"for_each\" value depends on resource attributes that cannot be determined\r\nuntil apply, so Terraform cannot predict how many instances will be created.\r\nTo work around this, use the -target argument to first apply only the\r\nresources that the for_each depends on.\r\n```\r\n\r\nCan I please get some assistance?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Using Terraform 0.12.24 I create multiple service-account, and want to assign each of those with Owner Permission to a list of buckets, and running into numerous problems ``` # Service-accounts created with random-integer suffix resource \"google_service_account\" \"sample_accounts\" { for_each = {for proj in var.target_projects: proj => proj} account_id = \"cost-saver-${random_integer.sa_id[each.key].result}\" project = var.project display_name = \"service account for ${each.key}\" } ``` ``` resource \"google_storage_bucket_iam_member\" \"shared_buckets_iam\" { for_each = {for svc in google_service_account.sample_accounts: svc.email => svc.email} bucket = \"${var.shared_project}-shared-files\" role = \"roles/storage.legacyBucketOwner\" member = \"serviceAccount:${each.value}\" depends_on = [google_service_account.sample_accounts] } ``` Since the service-accounts are created dynamically and I want to use them in the same terraform apply run, I run into this problem ``` ", "keywords": ["cost", "storage"]}]}, {"Id": "223869808", "PostHistoryTypeId": "1", "PostId": "62332249", "RevisionGUID": "704da655-5df7-4be7-abff-f041e492d983", "CreationDate": "2020-06-11T19:40:13.147", "UserId": "9676485", "Text": "How to assign multiple google_storage_bucket_iam_member on multiple service-accounts", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "223869809", "PostHistoryTypeId": "3", "PostId": "62332249", "RevisionGUID": "704da655-5df7-4be7-abff-f041e492d983", "CreationDate": "2020-06-11T19:40:13.147", "UserId": "9676485", "Text": "<google-cloud-storage><terraform-provider-gcp><terraform0.12+>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": []}