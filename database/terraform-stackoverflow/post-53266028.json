{"Id": "53266028", "PostTypeId": "1", "AcceptedAnswerId": "53272434", "CreationDate": "2018-11-12T16:11:46.163", "Score": "0", "ViewCount": "217", "Body": "<p>I deployed some infra using Terraform, including an application gateway. Unfortunately not all settings can be set/updated with terraform. SO I have a shell script that updates the application gateway. </p>\n\n<pre><code>#!/bin/bash\nSP_ID=${1}\nSP_SECRET=${2}\nTENANT_ID=${3}\nSUBSCRIPTION=${4}\nRG=${5}\n\naz login --service-principal -u ${SP_ID} -p ${SP_SECRET} -t ${TENANT_ID}\naz account set --subscription ${SUBSCRIPTION}\naz account list -o table\n\n# Get the name of the AG\necho \"RG = ${RG}\"\nAG=$(az network application-gateway list --resource-group ${RG} | tail -n 1 | awk '{ print $2 }')\necho \"AG = ${AG}\"\n\n# Get the AG backend pool name\nBP=$(az network application-gateway address-pool list --resource-group ${RG} --gateway-name ${AG} | tail -n 1 | awk '{ print $1 }')\necho \"Backend pool = ${BP}\"\n\n# Get the frontendip of the load balancer\nLB=$(az network lb list --resource-group ${RG} | tail -n 1 | awk '{ print $2         }')\nLBFEIP=$(az network lb frontend-ip list --lb-name ${LB} --resource-group    ${RG} | tail -n 1 | awk '{ print $2 }')\necho \"Load balancer = ${LB}\"\necho \"Frontend ip LB =  ${LBFEIP}\"\n\n# Update the backend pool of the AG with the frontend ip of the loadbalancer\necho \"Updating Backend address pool of AG ${AG}\"\naz network application-gateway address-pool update --gateway-name $AG --resource-group $RG --name $BP --servers ${LBFEIP}\n\n# Update http settings\necho \"Updating HTTP settings of AG ${AG}\"\nAG_HTS=$(az network application-gateway http-settings list --resource-group     ${RG} --gateway-name ${AG} | tail -n 1 | awk '{ print $2 }')\naz network application-gateway http-settings update --resource-group ${RG} --gateway-name ${AG} --name ${AG_HTS} --host-name-from-backend-pool true\n\n# Update health probe\necho \"Updating Health probe of AG ${AG}\"\nAG_HP=$(az network application-gateway probe list --resource-group ${RG} --gateway-name ${AG} | tail -n 1 | awk '{ print $4 }')\naz network application-gateway probe update --resource-group ${RG} --gateway-name ${AG} --name ${AG_HP} --host '' --host-name-from-http-settings true\n</code></pre>\n\n<p>This script works fine running locally from my laptop but via the azure devops release pipeline I get the error:</p>\n\n<pre><code>ERROR: az network application-gateway address-pool list: error: argument --gateway-name: expected one argument\n</code></pre>\n\n<p>Somehow it cannot get the application gateway name when the script is running through the release pipeline.\nAgain, when running this script locally it works fine. Anyoone an idea of what I maybe missing here or can try?</p>\n\n<p>I created the script on WSL Ubuntu and used a ubuntu hosted agent to publish the artifacts and also use a hosted ubuntu agent to deploy the script.</p>\n", "OwnerUserId": "7779815", "LastEditorUserId": "7779815", "LastEditDate": "2018-11-12T16:50:29.047", "LastActivityDate": "2018-11-13T01:24:22.943", "Title": "Azure DevOps hosted ubuntu agent issue updating Application Gateway", "Tags": "<azure><azure-devops><terraform><azure-cli>", "AnswerCount": "1", "CommentCount": "3", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "93416846", "PostId": "53266028", "Score": "0", "Text": "What is the output of the line above where you echo the result of `AG`? Also you seem to either have a copy-paste mistake on the line that's erroring or you are actually running `... -- resource-group...` instead of `... --resource-group...` (note the whitespace) which is likely to cause you issues.", "CreationDate": "2018-11-12T16:34:41.447", "UserId": "2291321", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "93417427", "PostId": "53266028", "Score": "0", "Text": "The echo doesn't give any value for AG, so somehow it doesn't get the AG name.\nOh sorry, that was a copy paste mistake. \nThe error is on this command:\n    `az network application-gateway address-pool update --gateway-name $AG --resource-group $RG --name $BP --servers ${LBFEIP}`.\n\nBut that is just because somehow this doesn't work:\n    `AG=$(az network application-gateway list --resource-group ${RG} | tail -n 1 | awk '{ print $2 }')`", "CreationDate": "2018-11-12T16:51:42.710", "UserId": "7779815", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "93417567", "PostId": "53266028", "Score": "0", "Text": "I think I know what the problem is already... going to try it right now. But I think it because the output is json and not table.", "CreationDate": "2018-11-12T16:56:16.187", "UserId": "7779815", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "185666270", "PostHistoryTypeId": "2", "PostId": "53266028", "RevisionGUID": "fddb49fb-3605-4b52-8245-4a0dd1c944b5", "CreationDate": "2018-11-12T16:11:46.163", "UserId": "7779815", "Text": "I deployed some infra using Terraform, including an application gateway. Unfortunately not all settings can be set/updated with terraform. SO I have a shell script that updates the application gateway. \r\n\r\n    #!/bin/bash\r\n    SP_ID=${1}\r\n    SP_SECRET=${2}\r\n    TENANT_ID=${3}\r\n    SUBSCRIPTION=${4}\r\n    RG=${5}\r\n\r\n    az login --service-principal -u ${SP_ID} -p ${SP_SECRET} -t ${TENANT_ID}\r\n    az account set --subscription ${SUBSCRIPTION}\r\n    az account list -o table\r\n\r\n    # Get the name of the AG\r\n    echo \"RG = ${RG}\"\r\n    AG=$(az network application-gateway list --resource-group ${RG} | tail -n 1 | awk '{ print $2 }')\r\n    echo \"AG = ${AG}\"\r\n\r\n    # Get the AG backend pool name\r\n    BP=$(az network application-gateway address-pool list --resource-group ${RG} --gateway-name ${AG} | tail -n 1 | awk '{ print $1 }')\r\n    echo \"Backend pool = ${BP}\"\r\n\r\n    # Get the frontendip of the load balancer\r\n    LB=$(az network lb list --resource-group ${RG} | tail -n 1 | awk '{ print $2         }')\r\n    LBFEIP=$(az network lb frontend-ip list --lb-name ${LB} --resource-group    ${RG} | tail -n 1 | awk '{ print $2 }')\r\n    echo \"Load balancer = ${LB}\"\r\n    echo \"Frontend ip LB =  ${LBFEIP}\"\r\n\r\n    # Update the backend pool of the AG with the frontend ip of the loadbalancer\r\n    echo \"Updating Backend address pool of AG ${AG}\"\r\n    az network application-gateway address-pool update --gateway-name $AG --            resource-group $RG --name $BP --servers ${LBFEIP}\r\n\r\n    # Update http settings\r\n    echo \"Updating HTTP settings of AG ${AG}\"\r\n    AG_HTS=$(az network application-gateway http-settings list --resource-group     ${RG} --gateway-name ${AG} | tail -n 1 | awk '{ print $2 }')\r\n    az network application-gateway http-settings update --resource-group ${RG} --gateway-name ${AG} --name ${AG_HTS} --host-name-from-backend-pool true\r\n\r\n    # Update health probe\r\n    echo \"Updating Health probe of AG ${AG}\"\r\n    AG_HP=$(az network application-gateway probe list --resource-group ${RG} --gateway-name ${AG} | tail -n 1 | awk '{ print $4 }')\r\n    az network application-gateway probe update --resource-group ${RG} --gateway-name ${AG} --name ${AG_HP} --host '' --host-name-from-http-settings true\r\n\r\n\r\nThis script works fine running locally from my laptop but via the azure devops release pipeline I get the error:\r\n\r\n    ERROR: az network application-gateway address-pool list: error: argument --gateway-name: expected one argument\r\n    \r\n\r\nSomehow it cannot get the application gateway name when the script is running through the release pipeline.\r\nAgain, when running this script locally it works fine. Anyoone an idea of what I maybe missing here or can try?\r\n\r\nI created the script on WSL Ubuntu and used a ubuntu hosted agent to publish the artifacts and also use a hosted ubuntu agent to deploy the script.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "185666271", "PostHistoryTypeId": "1", "PostId": "53266028", "RevisionGUID": "fddb49fb-3605-4b52-8245-4a0dd1c944b5", "CreationDate": "2018-11-12T16:11:46.163", "UserId": "7779815", "Text": "Azure DevOps hosted ubuntu agent issue updating Application Gateway", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "185666272", "PostHistoryTypeId": "3", "PostId": "53266028", "RevisionGUID": "fddb49fb-3605-4b52-8245-4a0dd1c944b5", "CreationDate": "2018-11-12T16:11:46.163", "UserId": "7779815", "Text": "<azure><azure-devops><terraform><azure-cli>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "185669007", "PostHistoryTypeId": "5", "PostId": "53266028", "RevisionGUID": "d2722d8b-9283-41fe-ad10-d6b6ab0d0253", "CreationDate": "2018-11-12T16:50:29.047", "UserId": "7779815", "Comment": "deleted 12 characters in body", "Text": "I deployed some infra using Terraform, including an application gateway. Unfortunately not all settings can be set/updated with terraform. SO I have a shell script that updates the application gateway. \r\n\r\n    #!/bin/bash\r\n    SP_ID=${1}\r\n    SP_SECRET=${2}\r\n    TENANT_ID=${3}\r\n    SUBSCRIPTION=${4}\r\n    RG=${5}\r\n\r\n    az login --service-principal -u ${SP_ID} -p ${SP_SECRET} -t ${TENANT_ID}\r\n    az account set --subscription ${SUBSCRIPTION}\r\n    az account list -o table\r\n\r\n    # Get the name of the AG\r\n    echo \"RG = ${RG}\"\r\n    AG=$(az network application-gateway list --resource-group ${RG} | tail -n 1 | awk '{ print $2 }')\r\n    echo \"AG = ${AG}\"\r\n\r\n    # Get the AG backend pool name\r\n    BP=$(az network application-gateway address-pool list --resource-group ${RG} --gateway-name ${AG} | tail -n 1 | awk '{ print $1 }')\r\n    echo \"Backend pool = ${BP}\"\r\n\r\n    # Get the frontendip of the load balancer\r\n    LB=$(az network lb list --resource-group ${RG} | tail -n 1 | awk '{ print $2         }')\r\n    LBFEIP=$(az network lb frontend-ip list --lb-name ${LB} --resource-group    ${RG} | tail -n 1 | awk '{ print $2 }')\r\n    echo \"Load balancer = ${LB}\"\r\n    echo \"Frontend ip LB =  ${LBFEIP}\"\r\n\r\n    # Update the backend pool of the AG with the frontend ip of the loadbalancer\r\n    echo \"Updating Backend address pool of AG ${AG}\"\r\n    az network application-gateway address-pool update --gateway-name $AG --resource-group $RG --name $BP --servers ${LBFEIP}\r\n\r\n    # Update http settings\r\n    echo \"Updating HTTP settings of AG ${AG}\"\r\n    AG_HTS=$(az network application-gateway http-settings list --resource-group     ${RG} --gateway-name ${AG} | tail -n 1 | awk '{ print $2 }')\r\n    az network application-gateway http-settings update --resource-group ${RG} --gateway-name ${AG} --name ${AG_HTS} --host-name-from-backend-pool true\r\n\r\n    # Update health probe\r\n    echo \"Updating Health probe of AG ${AG}\"\r\n    AG_HP=$(az network application-gateway probe list --resource-group ${RG} --gateway-name ${AG} | tail -n 1 | awk '{ print $4 }')\r\n    az network application-gateway probe update --resource-group ${RG} --gateway-name ${AG} --name ${AG_HP} --host '' --host-name-from-http-settings true\r\n\r\n\r\nThis script works fine running locally from my laptop but via the azure devops release pipeline I get the error:\r\n\r\n    ERROR: az network application-gateway address-pool list: error: argument --gateway-name: expected one argument\r\n    \r\n\r\nSomehow it cannot get the application gateway name when the script is running through the release pipeline.\r\nAgain, when running this script locally it works fine. Anyoone an idea of what I maybe missing here or can try?\r\n\r\nI created the script on WSL Ubuntu and used a ubuntu hosted agent to publish the artifacts and also use a hosted ubuntu agent to deploy the script.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "53272434", "PostTypeId": "2", "ParentId": "53266028", "CreationDate": "2018-11-13T01:24:22.943", "Score": "1", "Body": "<p>The error shows the problem directly. Your parameter \"AG\" is empty. You can get the parameter \"AG\" with the CLI command:</p>\n\n<pre><code>az network application-gateway list -g nancyweb --query \"[].name\" -o tsv\n</code></pre>\n\n<p>Or as you want with the output format table:</p>\n\n<pre><code>az network application-gateway list -g nancyweb -o table | tail -n 1 | awk '{print $3}'\n</code></pre>\n\n<p>You can get more details about <a href=\"https://learn.microsoft.com/en-us/cli/azure/network/application-gateway?view=azure-cli-latest#az-network-application-gateway-list\" rel=\"nofollow noreferrer\"><code>az network application-gateway list</code></a>. But if you want to get the specific one there is a point you should pay attention to because the list command shows all the application gateways.</p>\n", "OwnerUserId": "9773937", "LastActivityDate": "2018-11-13T01:24:22.943", "CommentCount": "4", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "93434762", "PostId": "53272434", "Score": "0", "Text": "Hi, the issue was that I didn't use the table output. Locally I use the table output but the az cli on the hosted agent uses json by default.", "CreationDate": "2018-11-13T08:02:57.583", "UserId": "7779815", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "93436129", "PostId": "53272434", "Score": "0", "Text": "I know it lists all AG's but I know there will only be one AG in the resource group.", "CreationDate": "2018-11-13T08:48:44.127", "UserId": "7779815", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "93436510", "PostId": "53272434", "Score": "0", "Text": "Yeah, the default output format is JSON. Also, the result is determined if you know there is only one AG in the group. I just point it out.", "CreationDate": "2018-11-13T09:00:38.057", "UserId": "9773937", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "93443301", "PostId": "53272434", "Score": "0", "Text": "I know, but maybe someone decides to change the variable value for the AG on the terraform template. Don't want others to have to change variables at different places.", "CreationDate": "2018-11-13T12:16:57.913", "UserId": "7779815", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I know, but maybe someone decides to change the variable value for the AG on the terraform template. ", "keywords": ["change"]}, {"source": "Text", "text": "Don't want others to have to change variables at different places.", "keywords": ["change"]}]}], "history": [{"Id": "185692844", "PostHistoryTypeId": "2", "PostId": "53272434", "RevisionGUID": "26824de0-0390-489b-b154-adbe1b8f6563", "CreationDate": "2018-11-13T01:24:22.943", "UserId": "9773937", "Text": "The error shows the problem directly. Your parameter \"AG\" is empty. You can get the parameter \"AG\" with the CLI command:\r\n\r\n    az network application-gateway list -g nancyweb --query \"[].name\" -o tsv\r\n\r\nOr as you want with the output format table:\r\n\r\n    az network application-gateway list -g nancyweb -o table | tail -n 1 | awk '{print $3}'\r\n\r\nYou can get more details about [`az network application-gateway list`][1]. But if you want to get the specific one there is a point you should pay attention to because the list command shows all the application gateways.\r\n\r\n\r\n  [1]: https://learn.microsoft.com/en-us/cli/azure/network/application-gateway?view=azure-cli-latest#az-network-application-gateway-list", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "But if you want to get the specific one there is a point you should pay attention to because the list command shows all the application gateways. [1]: https://learn.microsoft.com/en-us/cli/azure/network/application-gateway?view=azure-cli-latest#az-network-application-gateway-list", "keywords": ["pay"]}]}], "filtered-sentences": [{"source": "Body", "text": "But if you want to get the specific one there is a point you should pay attention to because the list command shows all the application gateways.", "keywords": ["pay"]}]}], "contains-topic": true, "filtered-sentences": []}