{"Id": "63030901", "PostTypeId": "1", "AcceptedAnswerId": "71130228", "CreationDate": "2020-07-22T09:18:51.047", "Score": "4", "ViewCount": "625", "Body": "<p>While migrating our existing infrastructure into an &quot;Infrastructure as Code&quot; Setup, we also needed to import an existing Firebase Project.</p>\n<p>Following the instructions from the <a href=\"https://www.terraform.io/docs/providers/google/r/firebase_project.html\" rel=\"nofollow noreferrer\">GCP beta Terraform provider</a>. The following snippet was added to the corresponding terraform module.</p>\n<pre><code>resource &quot;google_firebase_project&quot; &quot;default&quot; {\n  provider = google-beta\n  project = &quot;my-project-id&quot;\n}\n</code></pre>\n<p>The Import of the existing Firebase project was initiated by running the command</p>\n<pre class=\"lang-sh prettyprint-override\"><code>terraform import google_firebase_project.default my-project-id\n</code></pre>\n<p>This led to the following output:</p>\n<pre><code>google_firebase_project.default: Importing from ID &quot;my-project-id&quot;...\ngoogle_firebase_project.default: Import prepared!\n  Prepared google_firebase_project for import\ngoogle_firebase_project.default: Refreshing state... [id=projects/my-project-id]\nError: Error when reading or editing FirebaseProject &quot;projects/my-project-id&quot;: googleapi: Error 403: Your application has authenticated using end user credentials from the Google Cloud SDK or Google Cloud Shell which are not supported by the firebase.googleapis.com. We recommend configuring the billing/quota_project setting in gcloud or using a service account through the auth/impersonate_service_account setting. For more information about service accounts and how to use them in your application, see https://cloud.google.com/docs/authentication/.\n</code></pre>\n<p>The error was obtained running Terraform with a Service Account or using a end user account to impersonate a service account. All identities had Owner permissions on the corresponding GCP project.</p>\n", "OwnerUserId": "12117278", "LastActivityDate": "2022-02-15T16:44:52.760", "Title": "Import of existing Firebase Project into Terraform State receiving 403 error", "Tags": "<firebase><google-cloud-platform><terraform>", "AnswerCount": "1", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "115123244", "PostId": "63030901", "Score": "0", "Text": "Hi, have you come across a solution to this? I'm hitting credential errors as well for firebase apis.", "CreationDate": "2020-12-02T23:50:43.317", "UserId": "6463995", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "117137113", "PostId": "63030901", "Score": "1", "Text": "No, we've removed the usage of Firebase for new projects in our organisation, as the APIs are not good enough for a mature everything as code software delivery workflow. If you have okayish terraform skills, you can get the same from GCP native resources, without less tech debt and more possibilities.", "CreationDate": "2021-02-18T08:11:02.480", "UserId": "12117278", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "227162924", "PostHistoryTypeId": "2", "PostId": "63030901", "RevisionGUID": "9e3f5131-76dc-452e-96bd-c958b686beee", "CreationDate": "2020-07-22T09:18:51.047", "UserId": "12117278", "Text": "While migrating our existing infrastructure into an \"Infrastructure as Code\" Setup, we also needed to import an existing Firebase Project. \r\n\r\nFollowing the instructions from the [GCP beta Terraform provider]( https://www.terraform.io/docs/providers/google/r/firebase_project.html). The following snippet was added to the corresponding terraform module.\r\n\r\n```\r\nresource \"google_firebase_project\" \"default\" {\r\n  provider = google-beta\r\n  project = \"my-project-id\"\r\n}\r\n```\r\n\r\nThe Import of the existing Firebase project was initiated by running the command \r\n\r\n```bash\r\nterraform import google_firebase_project.default my-project-id\r\n```\r\n\r\nThis led to the following output:\r\n\r\n```\r\ngoogle_firebase_project.default: Importing from ID \"my-project-id\"...\r\ngoogle_firebase_project.default: Import prepared!\r\n  Prepared google_firebase_project for import\r\ngoogle_firebase_project.default: Refreshing state... [id=projects/my-project-id]\r\nError: Error when reading or editing FirebaseProject \"projects/my-project-id\": googleapi: Error 403: Your application has authenticated using end user credentials from the Google Cloud SDK or Google Cloud Shell which are not supported by the firebase.googleapis.com. We recommend configuring the billing/quota_project setting in gcloud or using a service account through the auth/impersonate_service_account setting. For more information about service accounts and how to use them in your application, see https://cloud.google.com/docs/authentication/.\r\n```\r\n\r\nThe error was obtained running Terraform with a Service Account or using a end user account to impersonate a service account. All identities had Owner permissions on the corresponding GCP project.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Following the instructions from the [GCP beta Terraform provider]( https://www.terraform.io/docs/providers/google/r/firebase_project.html). ", "keywords": ["provider"]}, {"source": "Text", "text": "``` resource \"google_firebase_project\" \"default\" { provider = google-beta project = \"my-project-id\" } ``` The Import of the existing Firebase project was initiated by running the command ```bash terraform import google_firebase_project.default my-project-id ``` This led to the following output: ``` google_firebase_project.default: Importing from ID \"my-project-id\"... google_firebase_project.default: Import prepared! Prepared google_firebase_project for import google_firebase_project.default: Refreshing state... [id=projects/my-project-id] Error: Error when reading or editing FirebaseProject \"projects/my-project-id\": googleapi: Error 403: ", "keywords": ["provider"]}, {"source": "Text", "text": "We recommend configuring the billing/quota_project setting in gcloud or using a service account through the auth/impersonate_service_account setting. ", "keywords": ["bill"]}]}, {"Id": "227162925", "PostHistoryTypeId": "1", "PostId": "63030901", "RevisionGUID": "9e3f5131-76dc-452e-96bd-c958b686beee", "CreationDate": "2020-07-22T09:18:51.047", "UserId": "12117278", "Text": "Import of existing Firebase Project into Terraform State receiving 403 error", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "227162926", "PostHistoryTypeId": "3", "PostId": "63030901", "RevisionGUID": "9e3f5131-76dc-452e-96bd-c958b686beee", "CreationDate": "2020-07-22T09:18:51.047", "UserId": "12117278", "Text": "<firebase><google-cloud-platform><terraform>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "71130228", "PostTypeId": "2", "ParentId": "63030901", "CreationDate": "2022-02-15T16:44:52.760", "Score": "1", "Body": "<p>Your error message is not directly related to your usage of firebase terraform resources, but rather to the fact that you can not talk to the firebase APIs with a human user. Instead you should create a service account, e.g. called <code>terraform</code>, give it the permissions needed to create firebase resources and give your user the permission to impersonate the service account.</p>\n<p>Then you need to configure your GCP provider like so</p>\n<pre><code>provider &quot;google&quot; {\n  impersonate_service_account = &quot;terraform@my-gcp-project.iam.gserviceaccount.com&quot;\n}\n\nprovider &quot;google-beta&quot; {\n  impersonate_service_account = &quot;terraform@my-gcp-project.iam.gserviceaccount.com&quot;\n}\n</code></pre>\n<p>It can be advisable to create a single terraform service account in a shared project and use it to create all other resources through terraform. See also <a href=\"https://github.com/terraform-google-modules/terraform-google-bootstrap\" rel=\"nofollow noreferrer\">https://github.com/terraform-google-modules/terraform-google-bootstrap</a> for this pattern.</p>\n", "OwnerUserId": "4873972", "LastActivityDate": "2022-02-15T16:44:52.760", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "125844890", "PostId": "71130228", "Score": "0", "Text": "This solution did not exist, when the question was originally posted. But I think it solves it.", "CreationDate": "2022-02-20T11:32:02.740", "UserId": "12117278", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "264184126", "PostHistoryTypeId": "2", "PostId": "71130228", "RevisionGUID": "c96c1b67-8faf-4d5e-b80e-c6274eaf4dc9", "CreationDate": "2022-02-15T16:44:52.760", "UserId": "4873972", "Text": "Your error message is not directly related to your usage of firebase terraform resources, but rather to the fact that you can not talk to the firebase APIs with a human user. Instead you should create a service account, e.g. called `terraform`, give it the permissions needed to create firebase resources and give your user the permission to impersonate the service account.\r\n\r\nThen you need to configure your GCP provider like so\r\n\r\n```hcl\r\nprovider \"google\" {\r\n  impersonate_service_account = \"terraform@my-gcp-project.iam.gserviceaccount.com\"\r\n}\r\n\r\nprovider \"google-beta\" {\r\n  impersonate_service_account = \"terraform@my-gcp-project.iam.gserviceaccount.com\"\r\n}\r\n```\r\n\r\nIt can be advisable to create a single terraform service account in a shared project and use it to create all other resources through terraform. See also https://github.com/terraform-google-modules/terraform-google-bootstrap for this pattern.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Then you need to configure your GCP provider like so ```hcl provider \"google\" { impersonate_service_account = \"terraform@my-gcp-project.iam.gserviceaccount.com\" } provider \"google-beta\" { impersonate_service_account = \"terraform@my-gcp-project.iam.gserviceaccount.com\" } ``` ", "keywords": ["provider"]}]}], "filtered-sentences": [{"source": "Body", "text": "Then you need to configure your GCP provider like so It can be advisable to create a single terraform service account in a shared project and use it to create all other resources through terraform. ", "keywords": ["provider"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "Following the instructions from the GCP beta Terraform provider. ", "keywords": ["provider"]}]}