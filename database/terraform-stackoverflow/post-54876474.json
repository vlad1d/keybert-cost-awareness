{"Id": "54876474", "PostTypeId": "1", "AcceptedAnswerId": "54876551", "CreationDate": "2019-02-25T23:48:38.220", "Score": "11", "ViewCount": "5131", "Body": "<p>I am testing out some Terraform code to create a Kubernetes cluster so I chose the smallest/cheapest VM</p>\n\n<pre><code>resource \"azurerm_kubernetes_cluster\" \"k8s\" {\n    name                = \"${var.cluster_name}\"\n    location            = \"${azurerm_resource_group.resource_group.location}\"\n    resource_group_name = \"${azurerm_resource_group.resource_group.name}\"\n    dns_prefix          = \"${var.dns_prefix}\"\n\n    agent_pool_profile {\n        name            = \"agentpool\"\n        count           = \"${var.agent_count}\"\n        vm_size         = \"Standard_B1s\"\n        os_type         = \"Linux\"\n        os_disk_size_gb = \"${var.agent_disk_size}\"\n    }\n\n    service_principal {\n        client_id     = \"${var.client_id}\"\n        client_secret = \"${var.client_secret}\"\n    }\n}\n</code></pre>\n\n<p>However, when I <code>terraform apply</code> I get this error message back from azure:</p>\n\n<blockquote>\n  <p>\"The VM SKU chosen for this cluster <code>Standard_B1s</code> does not have enough CPU/memory to run as an AKS node.\"</p>\n</blockquote>\n\n<p>How do I list the valid VM SKUs for AKS nodes and sort them by cost?</p>\n", "OwnerUserId": "1000011", "LastActivityDate": "2020-09-03T20:10:07.857", "Title": "What Is The Cheapest VM That Can Be Used As An AKS Node?", "Tags": "<azure><kubernetes><terraform>", "AnswerCount": "3", "CommentCount": "2", "FavoriteCount": "0", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "96524921", "PostId": "54876474", "Score": "0", "Text": "I marked it as useful. I'll leave it open for another 24 hours before accepting in case there is a command line way of listing valid VMs.", "CreationDate": "2019-02-26T02:24:32.773", "UserId": "1000011", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "96540501", "PostId": "54876474", "Score": "0", "Text": "Kubernetes minimal requirements could be found here: https://kubernetes.io/docs/setup/independent/install-kubeadm/#before-you-begin   Other recommendations should take into account workload analysis.", "CreationDate": "2019-02-26T12:42:21.373", "UserId": "9521610", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "192415754", "PostHistoryTypeId": "2", "PostId": "54876474", "RevisionGUID": "ad18dc9d-4142-4872-bdab-4cd7e3982b5f", "CreationDate": "2019-02-25T23:48:38.220", "UserId": "1000011", "Text": "I am testing out some Terraform code to create a Kubernetes cluster so I chose the smallest/cheapest VM\r\n\r\n    resource \"azurerm_kubernetes_cluster\" \"k8s\" {\r\n        name                = \"${var.cluster_name}\"\r\n        location            = \"${azurerm_resource_group.resource_group.location}\"\r\n        resource_group_name = \"${azurerm_resource_group.resource_group.name}\"\r\n        dns_prefix          = \"${var.dns_prefix}\"\r\n\r\n        agent_pool_profile {\r\n            name            = \"agentpool\"\r\n            count           = \"${var.agent_count}\"\r\n            vm_size         = \"Standard_B1s\"\r\n            os_type         = \"Linux\"\r\n            os_disk_size_gb = \"${var.agent_disk_size}\"\r\n        }\r\n\r\n        service_principal {\r\n            client_id     = \"${var.client_id}\"\r\n            client_secret = \"${var.client_secret}\"\r\n        }\r\n    }\r\n\r\nHowever, when I `terraform apply` I get this error message back from azure:\r\n\r\n> \"The VM SKU chosen for this cluster `Standard_B1s` does not have enough CPU/memory to run as an AKS node.\"\r\n\r\nHow do I list the valid VM SKUs for AKS nodes and sort them by cost?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I am testing out some Terraform code to create a Kubernetes cluster so I chose the smallest/cheapest VM resource \"azurerm_kubernetes_cluster\" \"k8s\" { name = \"${var.cluster_name}\" location = \"${azurerm_resource_group.resource_group.location}\" resource_group_name = \"${azurerm_resource_group.resource_group.name}\" dns_prefix = \"${var.dns_prefix}\" agent_pool_profile { name = \"agentpool\" count = \"${var.agent_count}\" vm_size = \"Standard_B1s\" os_type = \"Linux\" os_disk_size_gb = \"${var.agent_disk_size}\" } service_principal { client_id = \"${var.client_id}\" client_secret = \"${var.client_secret}\" ", "keywords": ["cheap", "cluster", "test"]}, {"source": "Text", "text": "> \"The VM SKU chosen for this cluster `Standard_B1s` does not have enough CPU/memory to run as an AKS node", "keywords": ["cpu", "cluster"]}, {"source": "Text", "text": "How do I list the valid VM SKUs for AKS nodes and sort them by cost?", "keywords": ["cost"]}]}, {"Id": "192415755", "PostHistoryTypeId": "1", "PostId": "54876474", "RevisionGUID": "ad18dc9d-4142-4872-bdab-4cd7e3982b5f", "CreationDate": "2019-02-25T23:48:38.220", "UserId": "1000011", "Text": "What Is The Cheapest VM That Can Be Used As An AKS Node?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "What Is The Cheapest VM That Can Be Used As An AKS Node?", "keywords": ["cheap"]}]}, {"Id": "192415756", "PostHistoryTypeId": "3", "PostId": "54876474", "RevisionGUID": "ad18dc9d-4142-4872-bdab-4cd7e3982b5f", "CreationDate": "2019-02-25T23:48:38.220", "UserId": "1000011", "Text": "<azure><kubernetes><terraform>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "54879688", "PostTypeId": "2", "ParentId": "54876474", "CreationDate": "2019-02-26T06:36:21.330", "Score": "0", "Body": "<p>Just to add to existing answer. I dont think there is an enum to list all the valid sizes of vms, but if you look at the <a href=\"https://learn.microsoft.com/en-us/rest/api/aks/managedclusters/createorupdate#containerservicevmsizetypes\" rel=\"nofollow noreferrer\">API definition</a>, it lists all of them pretty clearly.</p>\n\n<p>And you can use azureprice.net or something similar to figure out cheapest vm for your region (usually its B series).</p>\n", "OwnerUserId": "6067741", "LastActivityDate": "2019-02-26T06:36:21.330", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "192429319", "PostHistoryTypeId": "2", "PostId": "54879688", "RevisionGUID": "31c0202e-3a45-4453-a076-e6aab823299b", "CreationDate": "2019-02-26T06:36:21.330", "UserId": "6067741", "Text": "Just to add to existing answer. I dont think there is an enum to list all the valid sizes of vms, but if you look at the [API definition](https://learn.microsoft.com/en-us/rest/api/aks/managedclusters/createorupdate#containerservicevmsizetypes), it lists all of them pretty clearly.\r\n\r\nAnd you can use azureprice.net or something similar to figure out cheapest vm for your region (usually its B series).", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "And you can use azureprice.net or something similar to figure out cheapest vm for your region (usually its B series).", "keywords": ["cheap"]}]}], "filtered-sentences": [{"source": "Body", "text": "And you can use azureprice.net or something similar to figure out cheapest vm for your region (usually its B series).", "keywords": ["cheap"]}]}, {"Id": "63727149", "PostTypeId": "2", "ParentId": "54876474", "CreationDate": "2020-09-03T15:42:33.993", "Score": "4", "Body": "<p>You do a B1 which is cheaper than B2 if you resize the vmss, then upgrade the instance.\nThis one is $3.80/month for Linux and $10.22/month for Windows</p>\n<p>For whatever reason you can't do this in Terraform yet.</p>\n<p>Step 1:\nClick on vmss -&gt; settings -&gt; size -&gt; see all sizes (in small print) -&gt; resize</p>\n<p>Step 2:\nClick on vmss -&gt; settings -&gt; instance -&gt; _0 -&gt; upgrade (at top controller bar)</p>\n<p>I wouldn't worry about the vm instance size too much. This is where Terraform rips you off. os_disk_size_gb. Set this lower otherwise it defaults to $20/month per instance. There seems to be no way to change the tier, they defaulted to a premium 128GB disk, and made it seem like you would only spend $30 per node.</p>\n<p>UPDATE:\nI started experiencing some problems with instance at size b1ls.</p>\n", "OwnerUserId": "8360201", "LastEditorUserId": "8360201", "LastEditDate": "2020-09-03T20:10:07.857", "LastActivityDate": "2020-09-03T20:10:07.857", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "112696697", "PostId": "63727149", "Score": "0", "Text": "That's interesting. However, if you can't do it automatically it doesn't really help me.", "CreationDate": "2020-09-03T19:46:41.430", "UserId": "1000011", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "112697187", "PostId": "63727149", "Score": "0", "Text": "What I did is upped with Terraform, then wrote a PowerShell script to do the resize. You can then write a PowerShell that init and apply Terraform then runs the other PowerShell, so it is fully automated. However, I am running into a problem where I can't delete namespace with kubectl with the b1ls. I'll update my answer soon if resizing to b1ls does not make sense. I'd focus on the os_disk_size_gb if you are trying to save money. You can then write a script to deallocate vmss when not in use or terraform destroy when not in use.", "CreationDate": "2020-09-03T20:06:24.370", "UserId": "8360201", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "230103090", "PostHistoryTypeId": "2", "PostId": "63727149", "RevisionGUID": "6712055b-5afe-4681-bb01-e359b45e3c10", "CreationDate": "2020-09-03T15:42:33.993", "UserId": "8360201", "Text": "You do a B1 which is cheaper than B2 if you resize the vmss, then upgrade the instance.\r\nThis one is $3.80/month for Linux and $10.22/month for Windows \r\n\r\nFor whatever reason you can't do this in Terraform yet.\r\n\r\nStep 1:\r\nClick on vmss -> settings -> size -> see all sizes (in small print) -> resize\r\n\r\nStep 2:\r\nClick on vmss -> settings -> instance -> <instance name>_0 -> upgrade (at top controller bar)", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "You do a B1 which is cheaper than B2 if you resize the vmss, then upgrade the instance. ", "keywords": ["cheap", "instance"]}, {"source": "Text", "text": "Step 1: Click on vmss -> settings -> size -> see all sizes (in small print) -> resize Step 2: Click on vmss -> settings -> instance -> _0 -> upgrade (at top controller bar)", "keywords": ["instance"]}]}, {"Id": "230104391", "PostHistoryTypeId": "5", "PostId": "63727149", "RevisionGUID": "00f347a0-9088-47dd-96b3-6cae89209a0d", "CreationDate": "2020-09-03T16:00:33.500", "UserId": "8360201", "Comment": "added 176 characters in body", "Text": "You do a B1 which is cheaper than B2 if you resize the vmss, then upgrade the instance.\r\nThis one is $3.80/month for Linux and $10.22/month for Windows \r\n\r\nFor whatever reason you can't do this in Terraform yet.\r\n\r\nStep 1:\r\nClick on vmss -> settings -> size -> see all sizes (in small print) -> resize\r\n\r\nStep 2:\r\nClick on vmss -> settings -> instance -> <instance name>_0 -> upgrade (at top controller bar)\r\n\r\nI wouldn't worry about the vm instance size too much. This is where Terraform rips you off. os_disk_size_gb. Set this lower otherwise it defaults to $20/month per instance.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "You do a B1 which is cheaper than B2 if you resize the vmss, then upgrade the instance. ", "keywords": ["cheap", "instance"]}, {"source": "Text", "text": "Step 1: Click on vmss -> settings -> size -> see all sizes (in small print) -> resize Step 2: Click on vmss -> settings -> instance -> _0 -> upgrade (at top controller bar) I wouldn't worry about the vm instance size too much. ", "keywords": ["instance"]}, {"source": "Text", "text": "Set this lower otherwise it defaults to $20/month per instance.", "keywords": ["instance"]}]}, {"Id": "230106532", "PostHistoryTypeId": "5", "PostId": "63727149", "RevisionGUID": "663ac4cb-6620-4355-85a9-0fb8f249f2f3", "CreationDate": "2020-09-03T16:32:43.577", "UserId": "8360201", "Comment": "added 88 characters in body", "Text": "You do a B1 which is cheaper than B2 if you resize the vmss, then upgrade the instance.\r\nThis one is $3.80/month for Linux and $10.22/month for Windows \r\n\r\nFor whatever reason you can't do this in Terraform yet.\r\n\r\nStep 1:\r\nClick on vmss -> settings -> size -> see all sizes (in small print) -> resize\r\n\r\nStep 2:\r\nClick on vmss -> settings -> instance -> <instance name>_0 -> upgrade (at top controller bar)\r\n\r\nI wouldn't worry about the vm instance size too much. This is where Terraform rips you off. os_disk_size_gb. Set this lower otherwise it defaults to $20/month per instance. There seems to be no way to change the tier, they defaulted to a premium 128GB disk, and made it seem like you would only spend $30 per node.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "You do a B1 which is cheaper than B2 if you resize the vmss, then upgrade the instance. ", "keywords": ["cheap", "instance"]}, {"source": "Text", "text": "Step 1: Click on vmss -> settings -> size -> see all sizes (in small print) -> resize Step 2: Click on vmss -> settings -> instance -> _0 -> upgrade (at top controller bar) ", "keywords": ["instance"]}, {"source": "Text", "text": "I wouldn't worry about the vm instance size too much. ", "keywords": ["instance"]}, {"source": "Text", "text": "Set this lower otherwise it defaults to $20/month per instance. ", "keywords": ["instance"]}, {"source": "Text", "text": "There seems to be no way to change the tier, they defaulted to a premium 128GB disk, and made it seem like you would only spend $30 per node.", "keywords": ["change"]}]}, {"Id": "230118754", "PostHistoryTypeId": "5", "PostId": "63727149", "RevisionGUID": "d2a5163e-182c-43cc-b0ef-6e0f4f808df6", "CreationDate": "2020-09-03T20:10:07.857", "UserId": "8360201", "Comment": "added 77 characters in body", "Text": "You do a B1 which is cheaper than B2 if you resize the vmss, then upgrade the instance.\r\nThis one is $3.80/month for Linux and $10.22/month for Windows \r\n\r\nFor whatever reason you can't do this in Terraform yet.\r\n\r\nStep 1:\r\nClick on vmss -> settings -> size -> see all sizes (in small print) -> resize\r\n\r\nStep 2:\r\nClick on vmss -> settings -> instance -> <instance name>_0 -> upgrade (at top controller bar)\r\n\r\nI wouldn't worry about the vm instance size too much. This is where Terraform rips you off. os_disk_size_gb. Set this lower otherwise it defaults to $20/month per instance. There seems to be no way to change the tier, they defaulted to a premium 128GB disk, and made it seem like you would only spend $30 per node.\r\n\r\nUPDATE:\r\nI started experiencing some problems with instance at size b1ls.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "You do a B1 which is cheaper than B2 if you resize the vmss, then upgrade the instance. ", "keywords": ["cheap", "instance"]}, {"source": "Text", "text": "This one is $3.80/month for Linux and $10.22/month for Windows For whatever reason you can't do this in Terraform yet. Step 1: Click on vmss -> settings -> size -> see all sizes (in small print) -> resize Step 2: Click on vmss -> settings -> instance -> _0 -> upgrade (at top controller bar) ", "keywords": ["instance"]}, {"source": "Text", "text": "I wouldn't worry about the vm instance size too much. ", "keywords": ["instance"]}, {"source": "Text", "text": "Set this lower otherwise it defaults to $20/month per instance. ", "keywords": ["instance"]}, {"source": "Text", "text": "There seems to be no way to change the tier, they defaulted to a premium 128GB disk, and made it seem like you would only spend $30 per node. ", "keywords": ["change"]}, {"source": "Text", "text": "UPDATE: I started experiencing some problems with instance at size b1ls.", "keywords": ["instance"]}]}], "filtered-sentences": [{"source": "Body", "text": "You do a B1 which is cheaper than B2 if you resize the vmss, then upgrade the instance. ", "keywords": ["cheap", "instance"]}, {"source": "Body", "text": "This one is $3.80/month for Linux and $10.22/month for Windows For whatever reason you can't do this in Terraform yet. Step 1: Click on vmss -> settings -> size -> see all sizes (in small print) -> resize Step 2: Click on vmss -> settings -> instance -> _0 -> upgrade (at top controller bar) ", "keywords": ["instance"]}, {"source": "Body", "text": "I wouldn't worry about the vm instance size too much. ", "keywords": ["instance"]}, {"source": "Body", "text": "Set this lower otherwise it defaults to $20/month per instance. ", "keywords": ["instance"]}, {"source": "Body", "text": "There seems to be no way to change the tier, they defaulted to a premium 128GB disk, and made it seem like you would only spend $30 per node. ", "keywords": ["change"]}, {"source": "Body", "text": "UPDATE: I started experiencing some problems with instance at size b1ls.", "keywords": ["instance"]}]}, {"Id": "54876551", "PostTypeId": "2", "ParentId": "54876474", "CreationDate": "2019-02-25T23:59:17.050", "Score": "17", "Body": "<p>You need to select an instance with <strong>at least 3.5 GB of memory</strong>. Read <em>A note on node size</em> from this <a href=\"https://stackify.com/azure-container-service-kubernetes/\" rel=\"noreferrer\">blog</a>. You can list the VM size and price on the <a href=\"https://azure.microsoft.com/en-ca/pricing/details/virtual-machines/linux/\" rel=\"noreferrer\">Azure sales site</a>.</p>\n\n<p>Currently, the cheapest is <code>Standard_B2s</code> with 4 GB RAM. You can also sort it directly in the Azure portal.\n<a href=\"https://i.stack.imgur.com/p3uFf.jpg\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/p3uFf.jpg\" alt=\"enter image description here\"></a></p>\n", "OwnerUserId": "9833314", "LastEditorUserId": "9833314", "LastEditDate": "2019-02-26T02:14:16.753", "LastActivityDate": "2019-02-26T02:14:16.753", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "192416091", "PostHistoryTypeId": "2", "PostId": "54876551", "RevisionGUID": "9d913c06-8021-437c-b3f1-75b3fc83c0c2", "CreationDate": "2019-02-25T23:59:17.050", "UserId": "9833314", "Text": "You need to select an instance with **at least 3.5 GB of memory**. Read *A note on node size* from this [blog][1]. You can list the VM size on the Azure portal.\r\n\r\n\r\n  [1]: https://stackify.com/azure-container-service-kubernetes/", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "You need to select an instance with **at least 3.5 GB of memory**. ", "keywords": ["instance"]}]}, {"Id": "192419098", "PostHistoryTypeId": "5", "PostId": "54876551", "RevisionGUID": "1dc4278a-71f6-4ce8-80cc-986ca67f095e", "CreationDate": "2019-02-26T01:42:26.400", "UserId": "1000011", "Comment": "Linked to the pricing site and added the current cheapest VM", "Text": "You need to select an instance with **at least 3.5 GB of memory**. Read *A note on node size* from this [blog][1]. You can list the VM size and price on the [Azure sales site][2].\r\n\r\nCurrently the cheapest is `Standard_B2s` with 4 GB RAM.\r\n\r\n\r\n  [1]: https://stackify.com/azure-container-service-kubernetes/\r\n  [2]: https://azure.microsoft.com/en-ca/pricing/details/virtual-machines/linux/", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "You need to select an instance with **at least 3.5 GB of memory**. ", "keywords": ["instance"]}, {"source": "Text", "text": "Currently the cheapest is `Standard_B2s` with 4 GB RAM. [1]: https://stackify.com/azure-container-service-kubernetes/ [2]: https://azure.microsoft.com/en-ca/pricing/details/virtual-machines/linux/", "keywords": ["cheap", "ram"]}, {"source": "Comment", "text": "Linked to the pricing site and added the current cheapest VM", "keywords": ["cheap"]}]}, {"Id": "192419960", "PostHistoryTypeId": "5", "PostId": "54876551", "RevisionGUID": "132ff42b-0cd4-4a71-8142-7e23ebe46f55", "CreationDate": "2019-02-26T02:14:16.753", "UserId": "9833314", "Comment": "added 137 characters in body", "Text": "You need to select an instance with **at least 3.5 GB of memory**. Read *A note on node size* from this [blog][1]. You can list the VM size and price on the [Azure sales site][2].\r\n\r\nCurrently, the cheapest is `Standard_B2s` with 4 GB RAM. You can also sort it directly in the Azure portal.\r\n[![enter image description here][3]][3]\r\n\r\n\r\n  [1]: https://stackify.com/azure-container-service-kubernetes/\r\n  [2]: https://azure.microsoft.com/en-ca/pricing/details/virtual-machines/linux/\r\n  [3]: https://i.stack.imgur.com/p3uFf.jpg", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "You need to select an instance with **at least 3.5 GB of memory**. ", "keywords": ["instance"]}, {"source": "Text", "text": "Currently, the cheapest is `Standard_B2s` with 4 GB RAM. ", "keywords": ["cheap", "ram"]}]}], "filtered-sentences": [{"source": "Body", "text": "You need to select an instance with at least 3.5 GB of memory. ", "keywords": ["instance"]}, {"source": "Body", "text": "Currently, the cheapest is Standard_B2s with 4 GB RAM. ", "keywords": ["cheap", "ram"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Title", "text": "What Is The Cheapest VM That Can Be Used As An AKS Node?", "keywords": ["cheap"]}, {"source": "Body", "text": "I am testing out some Terraform code to create a Kubernetes cluster so I chose the smallest/cheapest VM However, when I terraform apply I get this error message back from azure: \"The VM SKU chosen for this cluster Standard_B1s does not have enough CPU/memory to run as an AKS node.\" ", "keywords": ["cheap", "cpu", "cluster", "test"]}, {"source": "Body", "text": "How do I list the valid VM SKUs for AKS nodes and sort them by cost?", "keywords": ["cost"]}]}