{"Id": "76665749", "PostTypeId": "1", "CreationDate": "2023-07-11T21:03:26.833", "Score": "-2", "ViewCount": "59", "Body": "<p>I am using terraform module vpc to create a VPC with more than 5 subnets</p>\n<pre><code>module &quot;vpc&quot; {\n  source  = &quot;terraform-aws-modules/vpc/aws&quot;\n  version = &quot;2.70.0&quot;\n\n  name = &quot;test&quot;\n  cidr = &quot;10.6.0.0/16&quot;\n  azs  = data.aws_availability_zones.available.names\n  public_subnets  = [cidrsubnet(&quot;10.6.0.0/16&quot;, 8, 0)]\n  private_subnets = [for i in range(1, 11): cidrsubnet(&quot;10.6.0.0/16&quot;, 8, i)]\n\n  enable_dns_hostnames = true\n  enable_nat_gateway   = true\n  create_igw           = true\n\n  default_security_group_egress = [{\n    cidr_blocks = &quot;0.0.0.0/0&quot;\n  }]\n\n  default_security_group_ingress = [{\n    description = &quot;Allow all internal TCP and UDP&quot;\n    self        = true\n  }]\n\n  tags = {\n    Resource  = &quot;vpc&quot;\n    Name      = &quot;test&quot;\n  }\n}\n</code></pre>\n<p>But I am getting the following error:</p>\n<pre><code>\u2502 Error: creating EC2 EIP: AddressLimitExceeded: The maximum number of addresses has been reached.\n\u2502       status code: 400, request id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\u2502 \n\u2502   with module.vpc.aws_eip.nat[6],\n\u2502   on .terraform/modules/vpc/main.tf line 926, in resource &quot;aws_eip&quot; &quot;nat&quot;:\n\u2502  926: resource &quot;aws_eip&quot; &quot;nat&quot; {\n</code></pre>\n<p>I have read that I can create 200 subnets per Availability Zone in a VPC in a Region. But can't make more than 5 when I tried.</p>\n", "OwnerUserId": "14152751", "LastEditorUserId": "174777", "LastEditDate": "2023-07-11T22:19:13.963", "LastActivityDate": "2023-07-11T22:57:01.763", "Title": "Unable to create more than 5 subnets in AWS VPC", "Tags": "<amazon-web-services><terraform><ip><amazon-vpc>", "AnswerCount": "1", "CommentCount": "3", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "135166583", "PostId": "76665749", "Score": "1", "Text": "This error is referring to an Elastic IP address (EIP), not a subnet. [Elastic IP address limit](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html#using-instance-addressing-limit) states that only five elastic IP addresses are allowed per account per region.", "CreationDate": "2023-07-11T21:43:06.433", "UserId": "281848", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "[Elastic IP address limit](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html#using-instance-addressing-limit) states that only five elastic IP addresses are allowed per account per region.", "keywords": ["instance"]}]}, {"Id": "135166859", "PostId": "76665749", "Score": "1", "Text": "It seems to be wanting to create a NAT Gateway in every subnet? You probably don't want one NAT Gateway per private subnet. At most you'd want one per Availability Zone.", "CreationDate": "2023-07-11T22:22:56.773", "UserId": "174777", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "It seems to be wanting to create a NAT Gateway in every subnet? ", "keywords": ["nat"]}, {"source": "Text", "text": "You probably don't want one NAT Gateway per private subnet. ", "keywords": ["nat"]}]}, {"Id": "135169046", "PostId": "76665749", "Score": "1", "Text": "or... you can increase the EIP quota...", "CreationDate": "2023-07-12T05:34:01.703", "UserId": "19198143", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "295265727", "PostHistoryTypeId": "2", "PostId": "76665749", "RevisionGUID": "06e22c20-4529-4203-8471-b4da26bc6810", "CreationDate": "2023-07-11T21:03:26.833", "UserId": "14152751", "Text": "I am using terraform module vpc to create a VPC with more than 5 subnets\r\n\r\n```\r\nmodule \"vpc\" {\r\n  source  = \"terraform-aws-modules/vpc/aws\"\r\n  version = \"2.70.0\"\r\n\r\n  name = \"test\"\r\n  cidr = \"10.6.0.0/16\"\r\n  azs  = data.aws_availability_zones.available.names\r\n  public_subnets  = [cidrsubnet(\"10.6.0.0/16\", 8, 0)]\r\n  private_subnets = [for i in range(1, 11): cidrsubnet(\"10.6.0.0/16\", 8, i)]\r\n\r\n  enable_dns_hostnames = true\r\n  enable_nat_gateway   = true\r\n  create_igw           = true\r\n\r\n  default_security_group_egress = [{\r\n    cidr_blocks = \"0.0.0.0/0\"\r\n  }]\r\n\r\n  default_security_group_ingress = [{\r\n    description = \"Allow all internal TCP and UDP\"\r\n    self        = true\r\n  }]\r\n\r\n  tags = {\r\n    Resource  = \"vpc\"\r\n    Name      = \"test\"\r\n  }\r\n}\r\n```\r\n\r\nBut I am getting the following error:\r\n\r\n```\r\n\u2502 Error: creating EC2 EIP: AddressLimitExceeded: The maximum number of addresses has been reached.\r\n\u2502       status code: 400, request id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\r\n\u2502 \r\n\u2502   with module.vpc.aws_eip.nat[6],\r\n\u2502   on .terraform/modules/vpc/main.tf line 926, in resource \"aws_eip\" \"nat\":\r\n\u2502  926: resource \"aws_eip\" \"nat\" {\r\n```\r\n\r\nI have read that I can create 200 subnets per Availability Zone in a VPC in a Region. But can't make more than 5 when I tried.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I am using terraform module vpc to create a VPC with more than 5 subnets ``` module \"vpc\" { source = \"terraform-aws-modules/vpc/aws\" version = \"2.70.0\" name = \"test\" cidr = \"10.6.0.0/16\" azs = data.aws_availability_zones.available.names public_subnets = [cidrsubnet(\"10.6.0.0/16\", 8, 0)] private_subnets = [for i in range(1, 11): cidrsubnet(\"10.6.0.0/16\", 8, i)] enable_dns_hostnames = true enable_nat_gateway = true create_igw = true default_security_group_egress = [{ cidr_blocks = \"0.0.0.0/0\" }] default_security_group_ingress = [{ description = \"Allow all internal TCP and UDP\" self = true }] tags = { Resource = \"vpc\" Name = \"test\" } } ``` But I am getting the following error: ``` \u2502 Error: creating EC2 EIP: AddressLimitExceeded: The maximum number of addresses has been reached. \u2502 status code: 400, request id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx \u2502 \u2502 with module.vpc.aws_eip.nat[6], \u2502 on .terraform/modules/vpc/main.tf line 926, in resource \"aws_eip\" \"nat\": \u2502 926: resource \"aws_eip\" \"nat\" { ``` I have read that I can create 200 subnets per Availability Zone in a VPC in a Region. ", "keywords": ["nat", "test"]}]}, {"Id": "295265729", "PostHistoryTypeId": "1", "PostId": "76665749", "RevisionGUID": "06e22c20-4529-4203-8471-b4da26bc6810", "CreationDate": "2023-07-11T21:03:26.833", "UserId": "14152751", "Text": "Unable to create more than 5 subnets in AWS VPC", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "295265730", "PostHistoryTypeId": "3", "PostId": "76665749", "RevisionGUID": "06e22c20-4529-4203-8471-b4da26bc6810", "CreationDate": "2023-07-11T21:03:26.833", "UserId": "14152751", "Text": "<amazon-web-services><terraform><ip><vpc>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "295267745", "PostHistoryTypeId": "6", "PostId": "76665749", "RevisionGUID": "da0a0664-874e-4bf0-9062-0cdd317921c4", "CreationDate": "2023-07-11T22:19:13.963", "UserId": "174777", "Comment": "edited tags", "Text": "<amazon-web-services><terraform><ip><amazon-vpc>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "76666247", "PostTypeId": "2", "ParentId": "76665749", "CreationDate": "2023-07-11T22:57:01.763", "Score": "3", "Body": "<p>The error message you encountered suggests that you have reached the limit for the number of Elastic IP (EIP) addresses that can be created in your AWS account. By default, AWS imposes a soft limit of five EIPs per region for EC2 instances. To create more EIPs, you can request a limit increase from AWS Support.</p>\n<p>However, it's important to note that using an EIP for each subnet might not be the most efficient or cost-effective approach. Instead, you can consider using NAT gateways or NAT instances to provide outbound internet access to your private subnets. NAT gateways and instances share EIPs and allow multiple subnets to use the same public IP for outbound connections.</p>\n<p>To modify your Terraform configuration, you can update the <code>enable_nat_gateway</code> parameter to <code>false</code> and remove the <code>aws_eip</code> resource block for NAT gateways. This way, you won't encounter the EIP limit issue.</p>\n<p>Here's an updated example:</p>\n<pre><code>module &quot;vpc&quot; {\n  source  = &quot;terraform-aws-modules/vpc/aws&quot;\n  version = &quot;2.70.0&quot;\n\n  name = &quot;test&quot;\n  cidr = &quot;10.6.0.0/16&quot;\n  azs  = data.aws_availability_zones.available.names\n  public_subnets  = [cidrsubnet(&quot;10.6.0.0/16&quot;, 8, 0)]\n  private_subnets = [for i in range(1, 11): cidrsubnet(&quot;10.6.0.0/16&quot;, 8, i)]\n\n  enable_dns_hostnames = true\n  enable_nat_gateway   = false\n  create_igw           = true\n\n  default_security_group_egress = [{\n    cidr_blocks = &quot;0.0.0.0/0&quot;\n  }]\n\n  default_security_group_ingress = [{\n    description = &quot;Allow all internal TCP and UDP&quot;\n    self        = true\n  }]\n\n  tags = {\n    Resource  = &quot;vpc&quot;\n    Name      = &quot;test&quot;\n  }\n}\n</code></pre>\n<p>By disabling the <code>enable_nat_gateway</code> parameter and removing the <code>aws_eip</code> resource block for NAT gateways, you'll rely on other methods (such as NAT gateways or instances) to provide internet access to your private subnets, and you won't hit the EIP limit.</p>\n<p>Remember to consider the costs and requirements of your specific use case when deciding whether to use NAT gateways or NAT instances.</p>\n", "OwnerUserId": "22212304", "LastActivityDate": "2023-07-11T22:57:01.763", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "135173714", "PostId": "76666247", "Score": "0", "Text": "I need nat gateway. Can I instead request for increase in IP address? Will that work?", "CreationDate": "2023-07-12T11:53:23.277", "UserId": "14152751", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I need nat gateway. ", "keywords": ["nat"]}]}], "history": [{"Id": "295268502", "PostHistoryTypeId": "2", "PostId": "76666247", "RevisionGUID": "0109c3a2-2285-4a0c-bd0c-19140fc7635b", "CreationDate": "2023-07-11T22:57:01.763", "UserId": "22212304", "Text": "The error message you encountered suggests that you have reached the limit for the number of Elastic IP (EIP) addresses that can be created in your AWS account. By default, AWS imposes a soft limit of five EIPs per region for EC2 instances. To create more EIPs, you can request a limit increase from AWS Support.\r\n\r\nHowever, it's important to note that using an EIP for each subnet might not be the most efficient or cost-effective approach. Instead, you can consider using NAT gateways or NAT instances to provide outbound internet access to your private subnets. NAT gateways and instances share EIPs and allow multiple subnets to use the same public IP for outbound connections.\r\n\r\nTo modify your Terraform configuration, you can update the `enable_nat_gateway` parameter to `false` and remove the `aws_eip` resource block for NAT gateways. This way, you won't encounter the EIP limit issue.\r\n\r\nHere's an updated example:\r\n\r\n```hcl\r\nmodule \"vpc\" {\r\n  source  = \"terraform-aws-modules/vpc/aws\"\r\n  version = \"2.70.0\"\r\n\r\n  name = \"test\"\r\n  cidr = \"10.6.0.0/16\"\r\n  azs  = data.aws_availability_zones.available.names\r\n  public_subnets  = [cidrsubnet(\"10.6.0.0/16\", 8, 0)]\r\n  private_subnets = [for i in range(1, 11): cidrsubnet(\"10.6.0.0/16\", 8, i)]\r\n\r\n  enable_dns_hostnames = true\r\n  enable_nat_gateway   = false\r\n  create_igw           = true\r\n\r\n  default_security_group_egress = [{\r\n    cidr_blocks = \"0.0.0.0/0\"\r\n  }]\r\n\r\n  default_security_group_ingress = [{\r\n    description = \"Allow all internal TCP and UDP\"\r\n    self        = true\r\n  }]\r\n\r\n  tags = {\r\n    Resource  = \"vpc\"\r\n    Name      = \"test\"\r\n  }\r\n}\r\n```\r\n\r\nBy disabling the `enable_nat_gateway` parameter and removing the `aws_eip` resource block for NAT gateways, you'll rely on other methods (such as NAT gateways or instances) to provide internet access to your private subnets, and you won't hit the EIP limit.\r\n\r\nRemember to consider the costs and requirements of your specific use case when deciding whether to use NAT gateways or NAT instances.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "However, it's important to note that using an EIP for each subnet might not be the most efficient or cost-effective approach. ", "keywords": ["cost", "efficient"]}, {"source": "Text", "text": "Instead, you can consider using NAT gateways or NAT instances to provide outbound internet access to your private subnets. ", "keywords": ["nat"]}, {"source": "Text", "text": "NAT gateways and instances share EIPs and allow multiple subnets to use the same public IP for outbound connections. ", "keywords": ["nat"]}, {"source": "Text", "text": "To modify your Terraform configuration, you can update the `enable_nat_gateway` parameter to `false` and remove the `aws_eip` resource block for NAT gateways. ", "keywords": ["nat"]}, {"source": "Text", "text": "Here's an updated example: ```hcl module \"vpc\" { source = \"terraform-aws-modules/vpc/aws\" version = \"2.70.0\" name = \"test\" cidr = \"10.6.0.0/16\" azs = data.aws_availability_zones.available.names public_subnets = [cidrsubnet(\"10.6.0.0/16\", 8, 0)] private_subnets = [for i in range(1, 11): cidrsubnet(\"10.6.0.0/16\", 8, i)] enable_dns_hostnames = true enable_nat_gateway = false create_igw = true default_security_group_egress = [{ cidr_blocks = \"0.0.0.0/0\" }] default_security_group_ingress = [{ description = \"Allow all internal TCP and UDP\" self = true }] tags = { Resource = \"vpc\" Name = \"test\" } } ``` ", "keywords": ["test"]}, {"source": "Text", "text": "By disabling the `enable_nat_gateway` parameter and removing the `aws_eip` resource block for NAT gateways, you'll rely on other methods (such as NAT gateways or instances) to provide internet access to your private subnets, and you won't hit the EIP limit. ", "keywords": ["nat"]}, {"source": "Text", "text": "Remember to consider the costs and requirements of your specific use case when deciding whether to use NAT gateways or NAT instances.", "keywords": ["nat"]}]}], "filtered-sentences": [{"source": "Body", "text": "However, it's important to note that using an EIP for each subnet might not be the most efficient or cost-effective approach. ", "keywords": ["cost", "efficient"]}, {"source": "Body", "text": "Instead, you can consider using NAT gateways or NAT instances to provide outbound internet access to your private subnets. ", "keywords": ["nat"]}, {"source": "Body", "text": "NAT gateways and instances share EIPs and allow multiple subnets to use the same public IP for outbound connections. ", "keywords": ["nat"]}, {"source": "Body", "text": "To modify your Terraform configuration, you can update the enable_nat_gateway parameter to false and remove the aws_eip resource block for NAT gateways. ", "keywords": ["nat"]}, {"source": "Body", "text": "Here's an updated example: By disabling the enable_nat_gateway parameter and removing the aws_eip resource block for NAT gateways, you'll rely on other methods (such as NAT gateways or instances) to provide internet access to your private subnets, and you won't hit the EIP limit. ", "keywords": ["nat"]}, {"source": "Body", "text": "Remember to consider the costs and requirements of your specific use case when deciding whether to use NAT gateways or NAT instances.", "keywords": ["nat"]}]}], "contains-topic": true, "filtered-sentences": []}