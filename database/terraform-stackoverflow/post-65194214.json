{"Id": "65194214", "PostTypeId": "1", "CreationDate": "2020-12-08T06:39:33.453", "Score": "1", "ViewCount": "1513", "Body": "<p>I am building a ASP.NET application where I need to implement a feature when user clicks a button, I need to trigger a terraform plan and apply. I already have the terraform templates ready. What is the best way to do it? Right now, I am using terraform enterprise which allows me to upload the terraform template to the TF cloud, create a configuration version, create a run, and the deployment runs on TF cloud, all via separate REST API calls. It works, but I don't know if that's the right way. Is it ok to call the terraform command as a separate process from the ASP.NET application like below?</p>\n<pre><code>    ProcessStartInfo startInfo = new ProcessStartInfo();\n    startInfo.CreateNoWindow = false;\n    startInfo.UseShellExecute = false;\n    startInfo.FileName = &quot;terraform.exe&quot;;\n</code></pre>\n<p>and pass arguments for plan/apply. The only problem I am facing with TF enterprise is that it allows only one run at a time. I need to pay more for concurrent runs. I believe the above approach would solve this issue. Any inputs on this would be appreciated. Thanks in advance.</p>\n", "OwnerUserId": "1750271", "LastActivityDate": "2020-12-08T09:08:01.627", "Title": "Calling terraform plan/apply from C#", "Tags": "<c#><terraform>", "AnswerCount": "1", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "236467504", "PostHistoryTypeId": "2", "PostId": "65194214", "RevisionGUID": "7447b3fd-3e6c-4ec9-a1b4-91d7a92a5dfd", "CreationDate": "2020-12-08T06:39:33.453", "UserId": "1750271", "Text": "I am building a ASP.NET application where I need to implement a feature when user clicks a button, I need to trigger a terraform plan and apply. I already have the terraform templates ready. What is the best way to do it? Right now, I am using terraform enterprise which allows me to upload the terraform template to the TF cloud, create a configuration version, create a run, and the deployment runs on TF cloud, all via separate REST API calls. It works, but I don't know if that's the right way. Is it ok to call the terraform command as a separate process from the ASP.NET application like below?\r\n\r\n        ProcessStartInfo startInfo = new ProcessStartInfo();\r\n        startInfo.CreateNoWindow = false;\r\n        startInfo.UseShellExecute = false;\r\n        startInfo.FileName = \"terraform.exe\";\r\n\r\nand pass arguments for plan/apply. The only problem I am facing with TF enterprise is that it allows only one run at a time. I need to pay more for concurrent runs. I believe the above approach would solve this issue. Any inputs on this would be appreciated. Thanks in advance.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I am building a ASP.NET application where I need to implement a feature when user clicks a button, I need to trigger a terraform plan and apply. ", "keywords": ["feature"]}, {"source": "Text", "text": "I need to pay more for concurrent runs. ", "keywords": ["pay"]}]}, {"Id": "236467505", "PostHistoryTypeId": "1", "PostId": "65194214", "RevisionGUID": "7447b3fd-3e6c-4ec9-a1b4-91d7a92a5dfd", "CreationDate": "2020-12-08T06:39:33.453", "UserId": "1750271", "Text": "Calling terraform plan/apply from C#", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "236467506", "PostHistoryTypeId": "3", "PostId": "65194214", "RevisionGUID": "7447b3fd-3e6c-4ec9-a1b4-91d7a92a5dfd", "CreationDate": "2020-12-08T06:39:33.453", "UserId": "1750271", "Text": "<c#><terraform>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "65196040", "PostTypeId": "2", "ParentId": "65194214", "CreationDate": "2020-12-08T09:08:01.627", "Score": "1", "Body": "<p>You can use Tfe.NetClient which is a .NET Client for Terraform Enterprise.\n<a href=\"https://github.com/everis-technology/Tfe.NetClient\" rel=\"nofollow noreferrer\">https://github.com/everis-technology/Tfe.NetClient</a></p>\n", "OwnerUserId": "8905909", "LastActivityDate": "2020-12-08T09:08:01.627", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "115263057", "PostId": "65196040", "Score": "0", "Text": "Thanks for the quick response. This .netclient is basically a wrapper around the enterprise REST API. Since I am already using the REST API, I don't think this would be very useful for me.", "CreationDate": "2020-12-08T11:29:19.447", "UserId": "1750271", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "236475048", "PostHistoryTypeId": "2", "PostId": "65196040", "RevisionGUID": "92b7fb89-0eec-463f-88ba-c1674db48bb9", "CreationDate": "2020-12-08T09:08:01.627", "UserId": "8905909", "Text": "You can use Tfe.NetClient which is a .NET Client for Terraform Enterprise.\r\nhttps://github.com/everis-technology/Tfe.NetClient", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I am building a ASP.NET application where I need to implement a feature when user clicks a button, I need to trigger a terraform plan and apply. ", "keywords": ["feature"]}, {"source": "Body", "text": "I need to pay more for concurrent runs. ", "keywords": ["pay"]}]}