{"Id": "66433348", "PostTypeId": "1", "AcceptedAnswerId": "66540768", "CreationDate": "2021-03-02T04:26:23.233", "Score": "1", "ViewCount": "601", "Body": "<p>I am using Terraform and am attempting to deploy a project into a folder which has a GCP organization policy applied to it where service accounts cannot be created within that folder/projects in that folder. I have code which will set that org policy to false as a project is being deployed. Additionally I have some service accounts being deployed within that same main.tf which will depend on the org policy being set to false.</p>\n<p>I have attempted to use <code>depends_on</code> statements for service account modules to wait for the org policy to be set to false prior to provisioning the service accounts. I have also used a <code>time_sleep</code> resource block to allow for the project factory and org policy to provision/make changes prior to service accounts being provisioned. I can occasionally get the whole deployment to work whereas other times I come across issues where the apply step will fail due to the organizational policy.</p>\n<p>If I check the project in GCP it shows that the org policy has been set to false which is what should happen. If I re-run the <code>apply</code> step in Terraform then everything will provision that was left over. Is there a better way to approach this issue? The fact that sometimes the provisioning works in one apply vs two applies is a bit odd and makes me believe there is some sort of state caching going on but that's just more of me guessing based on what I've seen.</p>\n<p>Code is as follows below:</p>\n<pre><code>  source  = &quot;terraform-google-modules/project-factory/google&quot;\n  version = &quot;~&gt; 10.1&quot;\n\n  name                        = var.project_name\n  random_project_id           = var.random_project_id\n  org_id                      = var.org_id\n  folder_id                   = var.folder_id\n  billing_account             = var.billing_account_id\n  create_project_sa           = false\n  default_service_account     = var.default_service_account\n  disable_dependent_services  = var.disable_dependent_services\n  disable_services_on_destroy = var.disable_services_on_destroy\n  labels                      = var.project_labels\n}\n</code></pre>\n<pre><code>module &quot;remove_disable_sa_creation&quot; {\n  source      = &quot;terraform-google-modules/org-policy/google&quot;\n  version     = &quot;~&gt; 3.0.2&quot;\n  constraint  = &quot;constraints/iam.disableServiceAccountCreation&quot;\n  policy_type = &quot;boolean&quot;\n  policy_for  = &quot;project&quot;\n  project_id  = module.project-factory.project_id\n  enforce     = false\n  depends_on  = [module.project-factory.project_id]\n}\n</code></pre>\n<pre><code>resource &quot;time_sleep&quot; &quot;wait_60_seconds&quot; {\n  depends_on      = [module.remove_disable_sa_creation]\n  create_duration = &quot;60s&quot;\n}\n</code></pre>\n<pre><code>module &quot;globus_service_account&quot; {\n  source             = &quot;../../../modules/service_account&quot;\n  project_id         = module.project-factory.project_id\n  prefix             = var.globus_sa_prefix\n  names              = var.globus_sa_names\n  project_roles      = var.globus_sa_project_roles\n  grant_billing_role = var.globus_grant_billing_role\n  billing_account_id = var.billing_account_id\n  grant_xpn_roles    = var.globus_grant_xpn_roles\n  org_id             = var.org_id\n  generate_keys      = var.globus_generate_keys\n  display_name       = var.globus_sa_display_name\n  description        = var.globus_sa_description\n  depends_on         = [time_sleep.wait_60_seconds]\n}\n</code></pre>\n", "OwnerUserId": "13291468", "LastActivityDate": "2021-03-09T04:22:19.140", "Title": "Terraform issues with waiting for GCP infrastructure changes to propagate", "Tags": "<google-cloud-platform><terraform><terraform-provider-gcp><terraform0.12+>", "AnswerCount": "1", "CommentCount": "3", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "117600283", "PostId": "66433348", "Score": "1", "Text": "I do not know the answer. Google Cloud is global and synchronizing permissions, policies, etc. takes time as in several minutes in some cases. 60 seconds is too short.", "CreationDate": "2021-03-08T02:02:36.590", "UserId": "8016720", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "117600302", "PostId": "66433348", "Score": "1", "Text": "Given that your organization policy is being disabled, you might want to consider a different approach. Create the project outside of the organization and then move it into the organization. That way the policy is never disabled.", "CreationDate": "2021-03-08T02:04:26.257", "UserId": "8016720", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Given that your organization policy is being disabled, you might want to consider a different approach. ", "keywords": ["policy"]}, {"source": "Text", "text": "That way the policy is never disabled.", "keywords": ["policy"]}]}, {"Id": "117630775", "PostId": "66433348", "Score": "0", "Text": "@JohnHanley Thanks for the reply. Forgot to update the post with the answer. Changing the sleep timer to 120 seconds was the main factor which helped solved this. What I did was create the project factory, have a depends on for the organization policy to wait on the project factory, have the timer wait on the organization policy, then have all other modules wait on the timer to finish.", "CreationDate": "2021-03-09T04:20:43.200", "UserId": "13291468", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Changing the sleep timer to 120 seconds was the main factor which helped solved this. ", "keywords": ["change"]}, {"source": "Text", "text": "What I did was create the project factory, have a depends on for the organization policy to wait on the project factory, have the timer wait on the organization policy, then have all other modules wait on the timer to finish.", "keywords": ["policy"]}]}], "history": [{"Id": "241825272", "PostHistoryTypeId": "2", "PostId": "66433348", "RevisionGUID": "33539c39-90a2-4655-ad20-fee0d93b8308", "CreationDate": "2021-03-02T04:26:23.233", "UserId": "13291468", "Text": "I am using Terraform and am attempting to deploy a project into a folder which has a GCP organization policy applied to it where service accounts cannot be created within that folder/projects in that folder. I have code which will set that org policy to false as a project is being deployed. Additionally I have some service accounts being deployed within that same main.tf which will depend on the org policy being set to false.\r\n\r\nI have attempted to use `depends_on` statements for service account modules to wait for the org policy to be set to false prior to provisioning the service accounts. I have also used a `time_sleep` resource block to allow for the project factory and org policy to provision/make changes prior to service accounts being provisioned. I can occasionally get the whole deployment to work whereas other times I come across issues where the apply step will fail due to the organizational policy. \r\n\r\nIf I check the project in GCP it shows that the org policy has been set to false which is what should happen. If I re-run the `apply` step in Terraform then everything will provision that was left over. Is there a better way to approach this issue? The fact that sometimes the provisioning works in one apply vs two applies is a bit odd and makes me believe there is some sort of state caching going on but that's just more of me guessing based on what I've seen.\r\n\r\nCode is as follows below:\r\n\r\n```module \"project-factory\" {\r\n  source  = \"terraform-google-modules/project-factory/google\"\r\n  version = \"~> 10.1\"\r\n\r\n  name                        = var.project_name\r\n  random_project_id           = var.random_project_id\r\n  org_id                      = var.org_id\r\n  folder_id                   = var.folder_id\r\n  billing_account             = var.billing_account_id\r\n  create_project_sa           = false\r\n  default_service_account     = var.default_service_account\r\n  disable_dependent_services  = var.disable_dependent_services\r\n  disable_services_on_destroy = var.disable_services_on_destroy\r\n  labels                      = var.project_labels\r\n}\r\n```\r\n```\r\nmodule \"remove_disable_sa_creation\" {\r\n  source      = \"terraform-google-modules/org-policy/google\"\r\n  version     = \"~> 3.0.2\"\r\n  constraint  = \"constraints/iam.disableServiceAccountCreation\"\r\n  policy_type = \"boolean\"\r\n  policy_for  = \"project\"\r\n  project_id  = module.project-factory.project_id\r\n  enforce     = false\r\n  depends_on  = [module.project-factory.project_id]\r\n}\r\n```\r\n```\r\nresource \"time_sleep\" \"wait_60_seconds\" {\r\n  depends_on      = [module.remove_disable_sa_creation]\r\n  create_duration = \"60s\"\r\n}\r\n```\r\n```\r\nmodule \"globus_service_account\" {\r\n  source             = \"../../../modules/service_account\"\r\n  project_id         = module.project-factory.project_id\r\n  prefix             = var.globus_sa_prefix\r\n  names              = var.globus_sa_names\r\n  project_roles      = var.globus_sa_project_roles\r\n  grant_billing_role = var.globus_grant_billing_role\r\n  billing_account_id = var.billing_account_id\r\n  grant_xpn_roles    = var.globus_grant_xpn_roles\r\n  org_id             = var.org_id\r\n  generate_keys      = var.globus_generate_keys\r\n  display_name       = var.globus_sa_display_name\r\n  description        = var.globus_sa_description\r\n  depends_on         = [time_sleep.wait_60_seconds]\r\n}\r\n```\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I am using Terraform and am attempting to deploy a project into a folder which has a GCP organization policy applied to it where service accounts cannot be created within that folder/projects in that folder. ", "keywords": ["policy"]}, {"source": "Text", "text": "I have code which will set that org policy to false as a project is being deployed. ", "keywords": ["policy"]}, {"source": "Text", "text": "Additionally I have some service accounts being deployed within that same main.tf which will depend on the org policy being set to false. ", "keywords": ["policy"]}, {"source": "Text", "text": "I have attempted to use `depends_on` statements for service account modules to wait for the org policy to be set to false prior to provisioning the service accounts. ", "keywords": ["policy"]}, {"source": "Text", "text": "I have also used a `time_sleep` resource block to allow for the project factory and org policy to provision/make changes prior to service accounts being provisioned. ", "keywords": ["policy", "change"]}, {"source": "Text", "text": "I can occasionally get the whole deployment to work whereas other times I come across issues where the apply step will fail due to the organizational policy. ", "keywords": ["policy"]}, {"source": "Text", "text": "If I check the project in GCP it shows that the org policy has been set to false which is what should happen. ", "keywords": ["policy"]}, {"source": "Text", "text": "Code is as follows below: ```module \"project-factory\" { source = \"terraform-google-modules/project-factory/google\" version = \"~> 10.1\" name = var.project_name random_project_id = var.random_project_id org_id = var.org_id folder_id = var.folder_id billing_account = var.billing_account_id create_project_sa = false default_service_account = var.default_service_account disable_dependent_services = var.disable_dependent_services disable_services_on_destroy = var.disable_services_on_destroy labels = var.project_labels } ``` ``` module \"remove_disable_sa_creation\" { source = \"terraform-google-modules/org-policy/google\" version = \"~> 3.0.2\" constraint = \"constraints/iam.disableServiceAccountCreation\" policy_type = \"boolean\" policy_for = \"project\" project_id = module.project-factory.project_id enforce = false depends_on = [module.project-factory.project_id] } ``` ``` resource \"time_sleep\" \"wait_60_seconds\" { depends_on = [module.remove_disable_sa_creation] create_duration = \"60s\" } ``` ``` module \"globus_service_account\" { source = \"../../../modules/service_account\" project_id = module.project-factory.project_id prefix = var.globus_sa_prefix names = var.globus_sa_names project_roles = var.globus_sa_project_roles grant_billing_role = var.globus_grant_billing_role billing_account_id = var.billing_account_id grant_xpn_roles = var.globus_grant_xpn_roles org_id = var.org_id generate_keys = var.globus_generate_keys display_name = var.globus_sa_display_name description = var.globus_sa_description depends_on = [time_sleep.wait_60_seconds] ", "keywords": ["bill", "policy"]}]}, {"Id": "241825273", "PostHistoryTypeId": "1", "PostId": "66433348", "RevisionGUID": "33539c39-90a2-4655-ad20-fee0d93b8308", "CreationDate": "2021-03-02T04:26:23.233", "UserId": "13291468", "Text": "Terraform issues with waiting for GCP infrastructure changes to propagate", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Terraform issues with waiting for GCP infrastructure changes to propagate", "keywords": ["change"]}]}, {"Id": "241825274", "PostHistoryTypeId": "3", "PostId": "66433348", "RevisionGUID": "33539c39-90a2-4655-ad20-fee0d93b8308", "CreationDate": "2021-03-02T04:26:23.233", "UserId": "13291468", "Text": "<google-cloud-platform><terraform><terraform-provider-gcp><terraform0.12+>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "66540768", "PostTypeId": "2", "ParentId": "66433348", "CreationDate": "2021-03-09T04:22:19.140", "Score": "2", "Body": "<p>Changing the sleep timer to 120 seconds was the main factor which helped solved this. What I did was create the project factory, have a depends on for the organization policy to wait on the project factory, have the timer wait on the organization policy, then have all other modules wait on the timer to finish.</p>\n<p>Essentially the flow was project &gt; organization policy &gt; timer for 120s &gt; all other modules provisioning after 120 seconds.</p>\n", "OwnerUserId": "13291468", "LastActivityDate": "2021-03-09T04:22:19.140", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "242286499", "PostHistoryTypeId": "2", "PostId": "66540768", "RevisionGUID": "c4209d7a-03c1-4856-9726-4b34dc4a75a6", "CreationDate": "2021-03-09T04:22:19.140", "UserId": "13291468", "Text": "Changing the sleep timer to 120 seconds was the main factor which helped solved this. What I did was create the project factory, have a depends on for the organization policy to wait on the project factory, have the timer wait on the organization policy, then have all other modules wait on the timer to finish.\r\n\r\nEssentially the flow was project > organization policy > timer for 120s > all other modules provisioning after 120 seconds.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Changing the sleep timer to 120 seconds was the main factor which helped solved this. ", "keywords": ["change"]}, {"source": "Text", "text": "What I did was create the project factory, have a depends on for the organization policy to wait on the project factory, have the timer wait on the organization policy, then have all other modules wait on the timer to finish. ", "keywords": ["policy"]}, {"source": "Text", "text": "Essentially the flow was project > organization policy > timer for 120s > all other modules provisioning after 120 seconds.", "keywords": ["policy"]}]}], "filtered-sentences": [{"source": "Body", "text": "Changing the sleep timer to 120 seconds was the main factor which helped solved this. ", "keywords": ["change"]}, {"source": "Body", "text": "What I did was create the project factory, have a depends on for the organization policy to wait on the project factory, have the timer wait on the organization policy, then have all other modules wait on the timer to finish. ", "keywords": ["policy"]}, {"source": "Body", "text": "Essentially the flow was project > organization policy > timer for 120s > all other modules provisioning after 120 seconds.", "keywords": ["policy"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Title", "text": "Terraform issues with waiting for GCP infrastructure changes to propagate", "keywords": ["change"]}, {"source": "Body", "text": "I am using Terraform and am attempting to deploy a project into a folder which has a GCP organization policy applied to it where service accounts cannot be created within that folder/projects in that folder. ", "keywords": ["policy"]}, {"source": "Body", "text": "I have code which will set that org policy to false as a project is being deployed. ", "keywords": ["policy"]}, {"source": "Body", "text": "Additionally I have some service accounts being deployed within that same main.tf which will depend on the org policy being set to false. ", "keywords": ["policy"]}, {"source": "Body", "text": "I have attempted to use depends_on statements for service account modules to wait for the org policy to be set to false prior to provisioning the service accounts. ", "keywords": ["policy"]}, {"source": "Body", "text": "I have also used a time_sleep resource block to allow for the project factory and org policy to provision/make changes prior to service accounts being provisioned. ", "keywords": ["policy", "change"]}, {"source": "Body", "text": "I can occasionally get the whole deployment to work whereas other times I come across issues where the apply step will fail due to the organizational policy. ", "keywords": ["policy"]}, {"source": "Body", "text": "If I check the project in GCP it shows that the org policy has been set to false which is what should happen. ", "keywords": ["policy"]}]}