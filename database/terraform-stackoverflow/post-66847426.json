{"Id": "66847426", "PostTypeId": "1", "AcceptedAnswerId": "66847519", "CreationDate": "2021-03-29T00:27:34.730", "Score": "1", "ViewCount": "728", "Body": "<pre><code>$ terraform -v\nTerraform v0.14.6\n</code></pre>\n<p>I have a plan that creates different CloudWatch alarms, like this</p>\n<pre><code>module &quot;rds_high_cpu_alarm&quot; {\n  source    = &quot;../modules/cw_alarm&quot;\n  namespace = &quot;AWS/RDS&quot;\n  statistic = &quot;Average&quot;\n  // Other parameters\n  ...\n}\n\nmodule &quot;ecs_task_count_alarm&quot; {\n  source    = &quot;../modules/cw_alarm&quot;\n  namespace = &quot;AWS/ECS&quot;\n  statistic = &quot;SampleCount&quot;\n  // Other parameters\n  ...\n}\n\nmodule &quot;other_aws_alarm&quot; {\n  source    = &quot;../modules/cw_alarm&quot;\n  namespace = &quot;AWS/OtherNamespace&quot;\n  statistic = &quot;OtherStatistic&quot;\n}\n</code></pre>\n<p>As you can see, the alarms share the same module, <code>../modules/cw_alarm</code>, which looks like this, per <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_metric_alarm\" rel=\"nofollow noreferrer\">aws_cloudwatch_metric_alarm</a></p>\n<pre><code># I want to use this for RDS DB instance high CPU alarm\nresource &quot;aws_cloudwatch_metric_alarm&quot; &quot;rds_aws_alarm&quot; {\n  count      = var.namespace == &quot;AWS/RDS&quot; ? 1 : 0\n  alarm_name = var.alarm_name\n  namespace  = var.namespace\n  statistic  = &quot;Average&quot;\n  ...\n  dimensions = {\n    DBInstanceIdentifier = var.db_instance_id\n  }\n}\n\n# I want to use this for ECS task count &lt; 1 alarm\nresource &quot;aws_cloudwatch_metric_alarm&quot; &quot;ecs_aws_alarm&quot; {\n  count      = var.namespace == &quot;AWS/ECS&quot; ? 1 : 0\n  alarm_name = var.alarm_name\n  namespace  = var.namespace\n  statistic  = &quot;SampleCount&quot;\n  ...\n  dimensions = {\n    ServiceName = var.servicename\n  }\n}\n\n# Other alarm resources\nresource &quot;aws_cloudwatch_metric_alarm&quot; &quot;other_aws_alarm&quot; {\n  ...\n}\n</code></pre>\n<p>How can I set up a generic output to use one of the above resources to put out say the ARN of the alarm?</p>\n<pre><code># In pseudo-code\noutput &quot;aws_alarm_arn&quot; {\n  switch var.namespace {\n    case &quot;AWS/RDS&quot;:\n      value = aws_cloudwatch_metric_alarm.rds_aws_alarm.arm\n      break\n    case &quot;AWS/ECS&quot;:\n      value = aws_cloudwatch_metric_alarm.ecs_aws_alarm.arm\n      break\n    default:\n      value = aws_cloudwatch_metric_alarm.other_aws_alarm.arm\n  }\n}\n</code></pre>\n<p><strong>In other words</strong>, how can I output the an alarm ARN based on the created alarm resource? Bear in mind that I can add a lot more alarms than just the 3 I show.</p>\n<p>I know I can create different source modules specific to each alarm namespace (which may be a good solution), but humor my geekiness.</p>\n", "OwnerUserId": "1401560", "LastEditorUserId": "12892553", "LastEditDate": "2021-05-11T05:39:25.553", "LastActivityDate": "2021-05-11T05:39:25.553", "Title": "Terraform conditional output based on passed-in AWS namespace?", "Tags": "<amazon-web-services><terraform><terraform-provider-aws>", "AnswerCount": "1", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "243593343", "PostHistoryTypeId": "2", "PostId": "66847426", "RevisionGUID": "1edec7f3-94cd-43a1-93c8-d56094bebf54", "CreationDate": "2021-03-29T00:27:34.730", "UserId": "1401560", "Text": "```\r\n$ terraform -v\r\nTerraform v0.14.6\r\n```\r\nI have module that creates an AWS CloudWatch alarm metric, and want to use it to create certain alarms based on passed-in variables, e.g., `namespace`.\r\n```\r\n# I want to use this for RDS DB instance high CPU alarm\r\nresource \"aws_cloudwatch_metric_alarm\" \"rds_aws_alarm\" {\r\n  count      = \"${var.namespace == \"AWS/RDS\" ? 1 : 0\"\r\n  alarm_name = var.alarm_name\r\n  namespace  = var.namespace\r\n  statistic  = \"Average\"\r\n  ...\r\n  dimensions = {\r\n    DBInstanceIdentifier = var.db_instance_id\r\n  }\r\n}\r\n\r\n# I want to use this for ECS task count < 1 alarm\r\nresource \"aws_cloudwatch_metric_alarm\" \"ecs_aws_alarm\" {\r\n  count      = \"${var.namespace == \"AWS/ECS\" ? 1 : 0\"\r\n  alarm_name = var.alarm_name\r\n  namespace  = var.namespace\r\n  statistic  = \"SampleCount\"\r\n  ...\r\n  dimensions = {\r\n    DBInstanceIdentifier = var.db_instance_id\r\n  }\r\n}\r\n\r\n# Other alarm resources\r\nresource \"aws_cloudwatch_metric_alarm\" \"other_aws_alarm\" {\r\n  ...\r\n}\r\n```\r\nHow can I set up a generic output to use one of the above resources to put out say the ARN of the alarm?\r\n```\r\n# In pseudo-code\r\noutput \"aws_alarm_arn\" {\r\n  if \"${namespace}\" == \"AWS/RDS\" {\r\n    value = aws_cloudwatch_metric_alarm.rds_aws_alarm.arm\r\n  }\r\n  else if \"${namespace}\" == \"AWS/ECS\" {\r\n    value = aws_cloudwatch_metric_alarm.ecs_aws_alarm.arm\r\n  }\r\n  else {\r\n    value = aws_cloudwatch_metric_alarm.other_aws_alarm.arm\r\n  }\r\n}\r\n```\r\nIOW, how can I output the an alarm ARN based on the created alarm resource?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "``` # I want to use this for RDS DB instance high CPU alarm resource \"aws_cloudwatch_metric_alarm\" \"rds_aws_alarm\" { count = \"${var.namespace == \"AWS/RDS\" ? 1 : 0\" alarm_name = var.alarm_name namespace = var.namespace statistic = \"Average\" ... dimensions = { DBInstanceIdentifier = var.db_instance_id } } # I want to use this for ECS task count < 1 alarm resource \"aws_cloudwatch_metric_alarm\" \"ecs_aws_alarm\" { count = \"${var.namespace == \"AWS/ECS\" ? 1 : 0\" alarm_name = var.alarm_name namespace = var.namespace statistic = \"SampleCount\" ... dimensions = { DBInstanceIdentifier = var.db_instance_id } } # Other alarm resources resource \"aws_cloudwatch_metric_alarm\" \"other_aws_alarm\" { ... } ``` How can I set up a generic output to use one of the above resources to put out say the ARN of the alarm? ``` # In pseudo-code output \"aws_alarm_arn\" { if \"${namespace}\" == \"AWS/RDS\" { value = aws_cloudwatch_metric_alarm.rds_aws_alarm.arm } else if \"${namespace}\" == \"AWS/ECS\" { value = aws_cloudwatch_metric_alarm.ecs_aws_alarm.arm } else { value = aws_cloudwatch_metric_alarm.other_aws_alarm.arm } } ``` IOW, how can I output the an alarm ARN based on the created alarm resource?", "keywords": ["instance", "cpu"]}]}, {"Id": "243593344", "PostHistoryTypeId": "1", "PostId": "66847426", "RevisionGUID": "1edec7f3-94cd-43a1-93c8-d56094bebf54", "CreationDate": "2021-03-29T00:27:34.730", "UserId": "1401560", "Text": "Terraform conditional output based on passed-in AWS namespace?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "243593345", "PostHistoryTypeId": "3", "PostId": "66847426", "RevisionGUID": "1edec7f3-94cd-43a1-93c8-d56094bebf54", "CreationDate": "2021-03-29T00:27:34.730", "UserId": "1401560", "Text": "<terraform><terraform-provider-aws>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "243593749", "PostHistoryTypeId": "6", "PostId": "66847426", "RevisionGUID": "da5d7bc9-57e3-418c-8cff-44d9399013ac", "CreationDate": "2021-03-29T00:45:51.280", "UserId": "248823", "Comment": "edited tags", "Text": "<amazon-web-services><terraform><terraform-provider-aws>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "243594918", "PostHistoryTypeId": "5", "PostId": "66847426", "RevisionGUID": "dfee1961-46ce-4393-b43a-c34c6eec27e2", "CreationDate": "2021-03-29T01:41:29.667", "UserId": "1401560", "Comment": "Updated post to reflect what exactly I'm doing.", "Text": "```\r\n$ terraform -v\r\nTerraform v0.14.6\r\n```\r\nI have a plan that creates different CloudWatch alarms, like this\r\n```\r\nmodule \"rds_high_cpu_alarm\" {\r\n  source    = \"../modules/cw_alarm\"\r\n  namespace = \"AWS/RDS\"\r\n  statistic = \"Average\"\r\n  // Other parameters\r\n  ...\r\n}\r\n\r\nmodule \"ecs_task_count_alarm\" {\r\n  source    = \"../modules/cw_alarm\"\r\n  namespace = \"AWS/ECS\"\r\n  statistic = \"SampleCount\"\r\n  // Other parameters\r\n  ...\r\n}\r\n\r\nmodule \"other_aws_alarm\" {\r\n  source    = \"../modules/cw_alarm\"\r\n  namespace = \"AWS/OtherNamespace\"\r\n  statistic = \"OtherStatistic\"\r\n}\r\n```\r\nAs you can see, the alarms share the same module, `../modules/cw_alarm`, which looks like per [aws_cloudwatch_metric_alarm][1]\r\n```\r\n# I want to use this for RDS DB instance high CPU alarm\r\nresource \"aws_cloudwatch_metric_alarm\" \"rds_aws_alarm\" {\r\n  count      = \"${var.namespace == \"AWS/RDS\" ? 1 : 0\"\r\n  alarm_name = var.alarm_name\r\n  namespace  = var.namespace\r\n  statistic  = \"Average\"\r\n  ...\r\n  dimensions = {\r\n    DBInstanceIdentifier = var.db_instance_id\r\n  }\r\n}\r\n\r\n# I want to use this for ECS task count < 1 alarm\r\nresource \"aws_cloudwatch_metric_alarm\" \"ecs_aws_alarm\" {\r\n  count      = \"${var.namespace == \"AWS/ECS\" ? 1 : 0\"\r\n  alarm_name = var.alarm_name\r\n  namespace  = var.namespace\r\n  statistic  = \"SampleCount\"\r\n  ...\r\n  dimensions = {\r\n    ServiceName = var.servicename\r\n  }\r\n}\r\n\r\n# Other alarm resources\r\nresource \"aws_cloudwatch_metric_alarm\" \"other_aws_alarm\" {\r\n  ...\r\n}\r\n```\r\nHow can I set up a generic output to use one of the above resources to put out say the ARN of the alarm?\r\n```\r\n# In pseudo-code\r\noutput \"aws_alarm_arn\" {\r\n  switch var.namespace {\r\n    case \"AWS/RDS\":\r\n      value = aws_cloudwatch_metric_alarm.rds_aws_alarm.arm\r\n      break\r\n    case \"AWS/ECS\":\r\n      value = aws_cloudwatch_metric_alarm.ecs_aws_alarm.arm\r\n      break\r\n    default:\r\n      value = aws_cloudwatch_metric_alarm.other_aws_alarm.arm\r\n  }\r\n}\r\n```\r\nIOW, how can I output the an alarm ARN based on the created alarm resource? Bear in mind that I can add a lot more alarms than just the 3 I show.\r\n\r\n  [1]: https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_metric_alarm", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "``` $ terraform -v Terraform v0.14.6 ``` I have a plan that creates different CloudWatch alarms, like this ``` module \"rds_high_cpu_alarm\" { source = \"../modules/cw_alarm\" namespace = \"AWS/RDS\" statistic = \"Average\" // Other parameters ... } module \"ecs_task_count_alarm\" { source = \"../modules/cw_alarm\" namespace = \"AWS/ECS\" statistic = \"SampleCount\" // Other parameters ... } module \"other_aws_alarm\" { source = \"../modules/cw_alarm\" namespace = \"AWS/OtherNamespace\" statistic = \"OtherStatistic\" } ``` As you can see, the alarms share the same module, `../modules/cw_alarm`, which looks like per [aws_cloudwatch_metric_alarm][1] ``` # I want to use this for RDS DB instance high CPU alarm resource \"aws_cloudwatch_metric_alarm\" \"rds_aws_alarm\" { count = \"${var.namespace == \"AWS/RDS\" ? 1 : 0\" alarm_name = var.alarm_name namespace = var.namespace statistic = \"Average\" ... dimensions = { DBInstanceIdentifier = var.db_instance_id } } # I want to use this for ECS task count < 1 alarm resource \"aws_cloudwatch_metric_alarm\" \"ecs_aws_alarm\" { count = \"${var.namespace == \"AWS/ECS\" ? 1 : 0\" alarm_name = var.alarm_name namespace = var.namespace statistic = \"SampleCount\" ... dimensions = { ServiceName = var.servicename } } # Other alarm resources resource \"aws_cloudwatch_metric_alarm\" \"other_aws_alarm\" { ... } ``` ", "keywords": ["instance", "cpu"]}]}, {"Id": "243595089", "PostHistoryTypeId": "5", "PostId": "66847426", "RevisionGUID": "b98eb6ff-e417-4b78-899b-60f06c51d612", "CreationDate": "2021-03-29T01:47:29.933", "UserId": "1401560", "Comment": "Updated post to reflect what exactly I'm doing.", "Text": "```\r\n$ terraform -v\r\nTerraform v0.14.6\r\n```\r\nI have a plan that creates different CloudWatch alarms, like this\r\n```\r\nmodule \"rds_high_cpu_alarm\" {\r\n  source    = \"../modules/cw_alarm\"\r\n  namespace = \"AWS/RDS\"\r\n  statistic = \"Average\"\r\n  // Other parameters\r\n  ...\r\n}\r\n\r\nmodule \"ecs_task_count_alarm\" {\r\n  source    = \"../modules/cw_alarm\"\r\n  namespace = \"AWS/ECS\"\r\n  statistic = \"SampleCount\"\r\n  // Other parameters\r\n  ...\r\n}\r\n\r\nmodule \"other_aws_alarm\" {\r\n  source    = \"../modules/cw_alarm\"\r\n  namespace = \"AWS/OtherNamespace\"\r\n  statistic = \"OtherStatistic\"\r\n}\r\n```\r\nAs you can see, the alarms share the same module, `../modules/cw_alarm`, which looks like this, per [aws_cloudwatch_metric_alarm][1]\r\n```\r\n# I want to use this for RDS DB instance high CPU alarm\r\nresource \"aws_cloudwatch_metric_alarm\" \"rds_aws_alarm\" {\r\n  count      = \"${var.namespace == \"AWS/RDS\" ? 1 : 0\"\r\n  alarm_name = var.alarm_name\r\n  namespace  = var.namespace\r\n  statistic  = \"Average\"\r\n  ...\r\n  dimensions = {\r\n    DBInstanceIdentifier = var.db_instance_id\r\n  }\r\n}\r\n\r\n# I want to use this for ECS task count < 1 alarm\r\nresource \"aws_cloudwatch_metric_alarm\" \"ecs_aws_alarm\" {\r\n  count      = \"${var.namespace == \"AWS/ECS\" ? 1 : 0\"\r\n  alarm_name = var.alarm_name\r\n  namespace  = var.namespace\r\n  statistic  = \"SampleCount\"\r\n  ...\r\n  dimensions = {\r\n    ServiceName = var.servicename\r\n  }\r\n}\r\n\r\n# Other alarm resources\r\nresource \"aws_cloudwatch_metric_alarm\" \"other_aws_alarm\" {\r\n  ...\r\n}\r\n```\r\nHow can I set up a generic output to use one of the above resources to put out say the ARN of the alarm?\r\n```\r\n# In pseudo-code\r\noutput \"aws_alarm_arn\" {\r\n  switch var.namespace {\r\n    case \"AWS/RDS\":\r\n      value = aws_cloudwatch_metric_alarm.rds_aws_alarm.arm\r\n      break\r\n    case \"AWS/ECS\":\r\n      value = aws_cloudwatch_metric_alarm.ecs_aws_alarm.arm\r\n      break\r\n    default:\r\n      value = aws_cloudwatch_metric_alarm.other_aws_alarm.arm\r\n  }\r\n}\r\n```\r\nIOW, how can I output the an alarm ARN based on the created alarm resource? Bear in mind that I can add a lot more alarms than just the 3 I show.\r\n\r\nI know I can create different source modules specific to each alarm namespace (which may be a good solution), but humor my geekiness.\r\n\r\n  [1]: https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_metric_alarm", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "``` $ terraform -v Terraform v0.14.6 ``` I have a plan that creates different CloudWatch alarms, like this ``` module \"rds_high_cpu_alarm\" { source = \"../modules/cw_alarm\" namespace = \"AWS/RDS\" statistic = \"Average\" // Other parameters ... } module \"ecs_task_count_alarm\" { source = \"../modules/cw_alarm\" namespace = \"AWS/ECS\" statistic = \"SampleCount\" // Other parameters ... } module \"other_aws_alarm\" { source = \"../modules/cw_alarm\" namespace = \"AWS/OtherNamespace\" statistic = \"OtherStatistic\" } ``` As you can see, the alarms share the same module, `../modules/cw_alarm`, which looks like this, per [aws_cloudwatch_metric_alarm][1] ``` # I want to use this for RDS DB instance high CPU alarm resource \"aws_cloudwatch_metric_alarm\" \"rds_aws_alarm\" { count = \"${var.namespace == \"AWS/RDS\" ? 1 : 0\" alarm_name = var.alarm_name namespace = var.namespace statistic = \"Average\" ... dimensions = { DBInstanceIdentifier = var.db_instance_id } } # I want to use this for ECS task count < 1 alarm resource \"aws_cloudwatch_metric_alarm\" \"ecs_aws_alarm\" { count = \"${var.namespace == \"AWS/ECS\" ? 1 : 0\" alarm_name = var.alarm_name namespace = var.namespace statistic = \"SampleCount\" ... dimensions = { ServiceName = var.servicename } } # Other alarm resources resource \"aws_cloudwatch_metric_alarm\" \"other_aws_alarm\" { ... } ``` How can I set up a generic output to use one of the above resources to put out say the ARN of the alarm? ``` # In pseudo-code output \"aws_alarm_arn\" { switch var.namespace { case \"AWS/RDS\": value = aws_cloudwatch_metric_alarm.rds_aws_alarm.arm break case \"AWS/ECS\": value = aws_cloudwatch_metric_alarm.ecs_aws_alarm.arm break default: value = aws_cloudwatch_metric_alarm.other_aws_alarm.arm } } ``` IOW, how can I output the an alarm ARN based on the created alarm resource? ", "keywords": ["instance", "cpu"]}]}, {"Id": "243651045", "PostHistoryTypeId": "5", "PostId": "66847426", "RevisionGUID": "8c18dd65-fc11-4315-8aaf-a2df05f81eb9", "CreationDate": "2021-03-29T19:56:48.183", "UserId": "1401560", "Comment": "Updated syntax", "Text": "```\r\n$ terraform -v\r\nTerraform v0.14.6\r\n```\r\nI have a plan that creates different CloudWatch alarms, like this\r\n```\r\nmodule \"rds_high_cpu_alarm\" {\r\n  source    = \"../modules/cw_alarm\"\r\n  namespace = \"AWS/RDS\"\r\n  statistic = \"Average\"\r\n  // Other parameters\r\n  ...\r\n}\r\n\r\nmodule \"ecs_task_count_alarm\" {\r\n  source    = \"../modules/cw_alarm\"\r\n  namespace = \"AWS/ECS\"\r\n  statistic = \"SampleCount\"\r\n  // Other parameters\r\n  ...\r\n}\r\n\r\nmodule \"other_aws_alarm\" {\r\n  source    = \"../modules/cw_alarm\"\r\n  namespace = \"AWS/OtherNamespace\"\r\n  statistic = \"OtherStatistic\"\r\n}\r\n```\r\nAs you can see, the alarms share the same module, `../modules/cw_alarm`, which looks like this, per [aws_cloudwatch_metric_alarm][1]\r\n```\r\n# I want to use this for RDS DB instance high CPU alarm\r\nresource \"aws_cloudwatch_metric_alarm\" \"rds_aws_alarm\" {\r\n  count      = var.namespace == \"AWS/RDS\" ? 1 : 0\r\n  alarm_name = var.alarm_name\r\n  namespace  = var.namespace\r\n  statistic  = \"Average\"\r\n  ...\r\n  dimensions = {\r\n    DBInstanceIdentifier = var.db_instance_id\r\n  }\r\n}\r\n\r\n# I want to use this for ECS task count < 1 alarm\r\nresource \"aws_cloudwatch_metric_alarm\" \"ecs_aws_alarm\" {\r\n  count      = var.namespace == \"AWS/ECS\" ? 1 : 0\r\n  alarm_name = var.alarm_name\r\n  namespace  = var.namespace\r\n  statistic  = \"SampleCount\"\r\n  ...\r\n  dimensions = {\r\n    ServiceName = var.servicename\r\n  }\r\n}\r\n\r\n# Other alarm resources\r\nresource \"aws_cloudwatch_metric_alarm\" \"other_aws_alarm\" {\r\n  ...\r\n}\r\n```\r\nHow can I set up a generic output to use one of the above resources to put out say the ARN of the alarm?\r\n```\r\n# In pseudo-code\r\noutput \"aws_alarm_arn\" {\r\n  switch var.namespace {\r\n    case \"AWS/RDS\":\r\n      value = aws_cloudwatch_metric_alarm.rds_aws_alarm.arm\r\n      break\r\n    case \"AWS/ECS\":\r\n      value = aws_cloudwatch_metric_alarm.ecs_aws_alarm.arm\r\n      break\r\n    default:\r\n      value = aws_cloudwatch_metric_alarm.other_aws_alarm.arm\r\n  }\r\n}\r\n```\r\nIOW, how can I output the an alarm ARN based on the created alarm resource? Bear in mind that I can add a lot more alarms than just the 3 I show.\r\n\r\nI know I can create different source modules specific to each alarm namespace (which may be a good solution), but humor my geekiness.\r\n\r\n  [1]: https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_metric_alarm", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "``` $ terraform -v Terraform v0.14.6 ``` I have a plan that creates different CloudWatch alarms, like this ``` module \"rds_high_cpu_alarm\" { source = \"../modules/cw_alarm\" namespace = \"AWS/RDS\" statistic = \"Average\" // Other parameters ... } module \"ecs_task_count_alarm\" { source = \"../modules/cw_alarm\" namespace = \"AWS/ECS\" statistic = \"SampleCount\" // Other parameters ... } module \"other_aws_alarm\" { source = \"../modules/cw_alarm\" namespace = \"AWS/OtherNamespace\" statistic = \"OtherStatistic\" } ``` As you can see, the alarms share the same module, `../modules/cw_alarm`, which looks like this, per [aws_cloudwatch_metric_alarm][1] ``` # I want to use this for RDS DB instance high CPU alarm resource \"aws_cloudwatch_metric_alarm\" \"rds_aws_alarm\" { count = var.namespace == \"AWS/RDS\" ? 1 : 0 alarm_name = var.alarm_name namespace = var.namespace statistic = \"Average\" ... dimensions = { DBInstanceIdentifier = var.db_instance_id } } # I want to use this for ECS task count < 1 alarm resource \"aws_cloudwatch_metric_alarm\" \"ecs_aws_alarm\" { count = var.namespace == \"AWS/ECS\" ? 1 : 0 alarm_name = var.alarm_name namespace = var.namespace statistic = \"SampleCount\" ... dimensions = { ServiceName = var.servicename } } # Other alarm resources resource \"aws_cloudwatch_metric_alarm\" \"other_aws_alarm\" { ... } ``` ", "keywords": ["instance", "cpu"]}]}, {"Id": "246357013", "PostHistoryTypeId": "5", "PostId": "66847426", "RevisionGUID": "ba04bac8-2e15-4580-8fe5-ce6d75291a45", "CreationDate": "2021-05-11T05:39:25.553", "UserId": "12892553", "Comment": "Changed \"IOW\" to \"In other words\" as it may be more easily understood by users; also, the phrase is in bold to maintain the highlighting effect of the capitalised variant", "Text": "```\r\n$ terraform -v\r\nTerraform v0.14.6\r\n```\r\nI have a plan that creates different CloudWatch alarms, like this\r\n```\r\nmodule \"rds_high_cpu_alarm\" {\r\n  source    = \"../modules/cw_alarm\"\r\n  namespace = \"AWS/RDS\"\r\n  statistic = \"Average\"\r\n  // Other parameters\r\n  ...\r\n}\r\n\r\nmodule \"ecs_task_count_alarm\" {\r\n  source    = \"../modules/cw_alarm\"\r\n  namespace = \"AWS/ECS\"\r\n  statistic = \"SampleCount\"\r\n  // Other parameters\r\n  ...\r\n}\r\n\r\nmodule \"other_aws_alarm\" {\r\n  source    = \"../modules/cw_alarm\"\r\n  namespace = \"AWS/OtherNamespace\"\r\n  statistic = \"OtherStatistic\"\r\n}\r\n```\r\nAs you can see, the alarms share the same module, `../modules/cw_alarm`, which looks like this, per [aws_cloudwatch_metric_alarm][1]\r\n```\r\n# I want to use this for RDS DB instance high CPU alarm\r\nresource \"aws_cloudwatch_metric_alarm\" \"rds_aws_alarm\" {\r\n  count      = var.namespace == \"AWS/RDS\" ? 1 : 0\r\n  alarm_name = var.alarm_name\r\n  namespace  = var.namespace\r\n  statistic  = \"Average\"\r\n  ...\r\n  dimensions = {\r\n    DBInstanceIdentifier = var.db_instance_id\r\n  }\r\n}\r\n\r\n# I want to use this for ECS task count < 1 alarm\r\nresource \"aws_cloudwatch_metric_alarm\" \"ecs_aws_alarm\" {\r\n  count      = var.namespace == \"AWS/ECS\" ? 1 : 0\r\n  alarm_name = var.alarm_name\r\n  namespace  = var.namespace\r\n  statistic  = \"SampleCount\"\r\n  ...\r\n  dimensions = {\r\n    ServiceName = var.servicename\r\n  }\r\n}\r\n\r\n# Other alarm resources\r\nresource \"aws_cloudwatch_metric_alarm\" \"other_aws_alarm\" {\r\n  ...\r\n}\r\n```\r\nHow can I set up a generic output to use one of the above resources to put out say the ARN of the alarm?\r\n```\r\n# In pseudo-code\r\noutput \"aws_alarm_arn\" {\r\n  switch var.namespace {\r\n    case \"AWS/RDS\":\r\n      value = aws_cloudwatch_metric_alarm.rds_aws_alarm.arm\r\n      break\r\n    case \"AWS/ECS\":\r\n      value = aws_cloudwatch_metric_alarm.ecs_aws_alarm.arm\r\n      break\r\n    default:\r\n      value = aws_cloudwatch_metric_alarm.other_aws_alarm.arm\r\n  }\r\n}\r\n```\r\n**In other words**, how can I output the an alarm ARN based on the created alarm resource? Bear in mind that I can add a lot more alarms than just the 3 I show.\r\n\r\nI know I can create different source modules specific to each alarm namespace (which may be a good solution), but humor my geekiness.\r\n\r\n  [1]: https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_metric_alarm", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "``` $ terraform -v Terraform v0.14.6 ``` I have a plan that creates different CloudWatch alarms, like this ``` module \"rds_high_cpu_alarm\" { source = \"../modules/cw_alarm\" namespace = \"AWS/RDS\" statistic = \"Average\" // Other parameters ... } module \"ecs_task_count_alarm\" { source = \"../modules/cw_alarm\" namespace = \"AWS/ECS\" statistic = \"SampleCount\" // Other parameters ... } module \"other_aws_alarm\" { source = \"../modules/cw_alarm\" namespace = \"AWS/OtherNamespace\" statistic = \"OtherStatistic\" } ``` As you can see, the alarms share the same module, `../modules/cw_alarm`, which looks like this, per [aws_cloudwatch_metric_alarm][1] ``` # I want to use this for RDS DB instance high CPU alarm resource \"aws_cloudwatch_metric_alarm\" \"rds_aws_alarm\" { count = var.namespace == \"AWS/RDS\" ? 1 : 0 alarm_name = var.alarm_name namespace = var.namespace statistic = \"Average\" ... dimensions = { DBInstanceIdentifier = var.db_instance_id } } # I want to use this for ECS task count < 1 alarm resource \"aws_cloudwatch_metric_alarm\" \"ecs_aws_alarm\" { count = var.namespace == \"AWS/ECS\" ? 1 : 0 alarm_name = var.alarm_name namespace = var.namespace statistic = \"SampleCount\" ... dimensions = { ServiceName = var.servicename } } # Other alarm resources resource \"aws_cloudwatch_metric_alarm\" \"other_aws_alarm\" { ... } ``` ", "keywords": ["instance", "cpu"]}, {"source": "Comment", "text": "Changed \"IOW\" to \"In other words\" as it may be more easily understood by users; also, the phrase is in bold to maintain the highlighting effect of the capitalised variant", "keywords": ["change"]}]}], "answers": [{"Id": "66847519", "PostTypeId": "2", "ParentId": "66847426", "CreationDate": "2021-03-29T00:45:39.010", "Score": "3", "Body": "<p>You can use <a href=\"https://www.terraform.io/docs/language/expressions/conditionals.html\" rel=\"nofollow noreferrer\">conditional expression</a>:</p>\n<pre><code>output &quot;aws_alarm_arn&quot; {\n\n  value = (var.namespace == &quot;AWS/RDS&quot; \n          ? aws_cloudwatch_metric_alarm.rds_aws_alarm.arm\n          : (var.namespace == &quot;AWS/ECS&quot;\n                ? aws_cloudwatch_metric_alarm.ecs_aws_alarm.arm\n                : aws_cloudwatch_metric_alarm.other_aws_alarm.arm\n            )\n          )\n}\n</code></pre>\n<p>If your alarms are <strong>mutually exclusive</strong>, you can simply the above using <a href=\"https://www.terraform.io/docs/language/functions/try.html\" rel=\"nofollow noreferrer\">try</a>:</p>\n<pre><code>output &quot;aws_alarm_arn&quot; {\n\n  value = try(\n         aws_cloudwatch_metric_alarm.rds_aws_alarm[0].arn,\n         aws_cloudwatch_metric_alarm.ecs_aws_alarm[0].arn,\n         aws_cloudwatch_metric_alarm.other_aws_alarm[0].arn)\n}\n</code></pre>\n", "OwnerUserId": "248823", "LastEditorUserId": "248823", "LastEditDate": "2021-03-29T02:08:10.750", "LastActivityDate": "2021-03-29T02:08:10.750", "CommentCount": "10", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "118163824", "PostId": "66847519", "Score": "0", "Text": "Thanks Marcin. This may be good for just 3 alarm resources, it if that list grows, it could be cumbersome code.", "CreationDate": "2021-03-29T00:47:38.173", "UserId": "1401560", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "118163856", "PostId": "66847519", "Score": "1", "Text": "@ChrisF Yes I agree. But this was your question. You have to redesign your code to avoid the conditions growing, and use `map` preferably for all the possible alarms of yours. Or create modules with the alarms.", "CreationDate": "2021-03-29T00:51:46.737", "UserId": "248823", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "118163915", "PostId": "66847519", "Score": "0", "Text": "I actually call the above in a `module {}` that's why I want to generalize it.", "CreationDate": "2021-03-29T00:57:46.950", "UserId": "1401560", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "118163933", "PostId": "66847519", "Score": "1", "Text": "@ChrisF I'm confused now. You provided `pseudo-code` of what you want. So can you exactly clarify what is your question, if you don't want the TF equivalent of your `pseudo-code`?", "CreationDate": "2021-03-29T00:59:09.830", "UserId": "248823", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "118164111", "PostId": "66847519", "Score": "0", "Text": "Is that the most efficient way to do it? Maybe it's the ONLY way to do it?", "CreationDate": "2021-03-29T01:18:46.243", "UserId": "1401560", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Is that the most efficient way to do it? ", "keywords": ["efficient"]}]}, {"Id": "118164136", "PostId": "66847519", "Score": "0", "Text": "@ChrisF I'm thinking now. I think you could re-design code. Just not sure how yet. Do you have many such alarms? Do they differ lots, or only in the namespace, dymention and metric name?", "CreationDate": "2021-03-29T01:22:38.460", "UserId": "248823", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "118164567", "PostId": "66847519", "Score": "0", "Text": "@ChrisF I updated the answer with simplification.", "CreationDate": "2021-03-29T02:08:46.303", "UserId": "248823", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "118164581", "PostId": "66847519", "Score": "1", "Text": "Mutually explosive, I like it! :) I will try this indeed.", "CreationDate": "2021-03-29T02:10:19.237", "UserId": "1401560", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "118164949", "PostId": "66847519", "Score": "0", "Text": "@ChrisF How did it go?", "CreationDate": "2021-03-29T02:56:36.717", "UserId": "248823", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "118182688", "PostId": "66847519", "Score": "1", "Text": "Wow, the `try()` expression worked! Thanks!", "CreationDate": "2021-03-29T16:22:10.133", "UserId": "1401560", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "243593745", "PostHistoryTypeId": "2", "PostId": "66847519", "RevisionGUID": "b9111123-ef7e-480f-bc4b-04d380acb6aa", "CreationDate": "2021-03-29T00:45:39.010", "UserId": "248823", "Text": "You can use [conditional expression](https://www.terraform.io/docs/language/expressions/conditionals.html):\r\n\r\n```\r\noutput \"aws_alarm_arn\" {\r\n\r\n  value = (var.namespace == \"AWS/RDS\" \r\n          ? aws_cloudwatch_metric_alarm.rds_aws_alarm.arm\r\n          : (var.namespace == \"AWS/ECS\"\r\n                ? aws_cloudwatch_metric_alarm.ecs_aws_alarm.arm\r\n                : aws_cloudwatch_metric_alarm.other_aws_alarm.arm\r\n            )\r\n          )\r\n}\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "243595597", "PostHistoryTypeId": "5", "PostId": "66847519", "RevisionGUID": "dbdf7b14-ed99-43e1-a8c2-82b84065d5f3", "CreationDate": "2021-03-29T02:08:10.750", "UserId": "248823", "Comment": "added 387 characters in body", "Text": "You can use [conditional expression](https://www.terraform.io/docs/language/expressions/conditionals.html):\r\n\r\n```\r\noutput \"aws_alarm_arn\" {\r\n\r\n  value = (var.namespace == \"AWS/RDS\" \r\n          ? aws_cloudwatch_metric_alarm.rds_aws_alarm.arm\r\n          : (var.namespace == \"AWS/ECS\"\r\n                ? aws_cloudwatch_metric_alarm.ecs_aws_alarm.arm\r\n                : aws_cloudwatch_metric_alarm.other_aws_alarm.arm\r\n            )\r\n          )\r\n}\r\n```\r\n\r\nIf your alarms are **mutually exclusive**, you can simply the above using [try](https://www.terraform.io/docs/language/functions/try.html):\r\n\r\n```\r\noutput \"aws_alarm_arn\" {\r\n\r\n  value = try(\r\n         aws_cloudwatch_metric_alarm.rds_aws_alarm[0].arn,\r\n         aws_cloudwatch_metric_alarm.ecs_aws_alarm[0].arn,\r\n         aws_cloudwatch_metric_alarm.other_aws_alarm[0].arn)\r\n}\r\n```\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": []}