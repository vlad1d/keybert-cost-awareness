{"Id": "76786335", "PostTypeId": "1", "AcceptedAnswerId": "76786840", "CreationDate": "2023-07-28T09:05:53.487", "Score": "1", "ViewCount": "57", "Body": "<p>I'm a newbie in the Terraform world. Excuse me in advance if this is a dumb question.</p>\n<p>This is my conf file:</p>\n<pre><code>terraform {\n  required_providers {\n    google = {\n      source  = &quot;hashicorp/google&quot;\n      version = &quot;~&gt; 4.75.0&quot;\n    }\n  }\n}\n\nprovider &quot;google&quot; {\n  credentials = file(var.credentials_file)\n  project = var.project\n  region  = var.region\n  zone    = var.zone\n}\n\nresource &quot;google_cloudfunctions_function&quot; &quot;all&quot; { \n\n    for_each = {\n        fct1 = {\n            name = &quot;bob&quot;\n            git_folder = &quot;bob_folder&quot;\n            var1 = &quot;pikachu&quot;\n            var2 = &quot;red&quot;\n            available_memory_mb = 256\n        },\n        fct2 = {\n            name = &quot;bill&quot;\n            git_folder = &quot;bill_folder&quot;\n            var1 = &quot;pidget&quot;\n            // var2 &lt;-- no need here\n            // available_memory_mb &lt;-- default value will be ok here\n        }\n    }\n\n  name = each.value.name\n  environment_variables = {\n    VAR1 = var.var1 // OR each.value.var1 IF DEFINED ?\n    VAR2 = each.value.var2 // OR DEFAULT VALUE IF UNDEFINED ?\n  } \n\n  trigger_http = true\n  available_memory_mb = // &quot;default value if not defined on fct\n  [...]\n\n  source_repository {\n    url = &quot;https://source.developers.google.com/projects/[...]/moveable-aliases/${var.git_branch}/paths/${each.value.git_folder}&quot;\n  }\n}\n</code></pre>\n<p>Like you've seen, I'm just trying to write all my google functions with their specific params. I don't succeed to specify default params than can be overwrite by specific params.</p>\n<p>How can I tell to Terraform : &quot;For this function, takes default param if undefined&quot; ?\nOr maybe : &quot;For this function, don't takes var.* param but the one defined here&quot; ?</p>\n", "OwnerUserId": "2373259", "LastEditorUserId": "2373259", "LastEditDate": "2023-07-28T09:43:09.120", "LastActivityDate": "2023-07-28T10:10:22.020", "Title": "Terraform - Foreach - Default value", "Tags": "<google-cloud-platform><terraform><terraform-provider-gcp>", "AnswerCount": "1", "CommentCount": "9", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "135370534", "PostId": "76786335", "Score": "0", "Text": "What does \"undefined\" mean? You provide a variable with a default value or you don't provide the variable at all?", "CreationDate": "2023-07-28T09:09:24.177", "UserId": "8343484", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135370576", "PostId": "76786335", "Score": "0", "Text": "Why not just make `var1` and `var2` into `vars = {VAR1: \"pikachu\", VAR2: \"red\"}` and then just doing `environment_variables = each.value.vars`!?", "CreationDate": "2023-07-28T09:12:27.210", "UserId": "2442804", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135370577", "PostId": "76786335", "Score": "0", "Text": "to @MarkoE : I would like to not provide all possible variables for each item in the foreach loop. If I don't provide one of them, Terraform stop and return `This object does not have an attribute named \"var2\"`.", "CreationDate": "2023-07-28T09:12:28.300", "UserId": "2373259", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135370619", "PostId": "76786335", "Score": "0", "Text": "To @luk2302 : because I want to be able to defined \"default\" environment_variables and not repeat it on all items. Maybe there is a way to defined a default environment_variables JSON and just some keys to be modified for each item ?", "CreationDate": "2023-07-28T09:15:34.033", "UserId": "2373259", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135370627", "PostId": "76786335", "Score": "0", "Text": "Then you can [`merge`](https://developer.hashicorp.com/terraform/language/functions/merge) the default and actual values.", "CreationDate": "2023-07-28T09:16:19.557", "UserId": "2442804", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135370640", "PostId": "76786335", "Score": "0", "Text": "Oh ! That seems to be a great way of doing this ! I'll try that and update this topic if it works. Thx !", "CreationDate": "2023-07-28T09:17:09.037", "UserId": "2373259", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135371035", "PostId": "76786335", "Score": "0", "Text": "This is working well for environement variables. But how can I do the same thing with simple attributes. Like \"available_memory_mb\"  in my edited question ? Is there something like `~merge(var.defaultattr,each.value.attr)` ? Like in python : `dict.get(key, default = \"default value\")` -> `available_memory_mb  = each.get('available_memory_mb', default='var.available_memory_mb')` ?", "CreationDate": "2023-07-28T09:48:01.280", "UserId": "2373259", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135371153", "PostId": "76786335", "Score": "0", "Text": "`available_memory_mb= lookup(each.value,\"available_memory_mb\", var.available_memory_mb)` seems to do the job ! If it's not a bad practice, I'll add clean answer.", "CreationDate": "2023-07-28T09:56:32.330", "UserId": "2373259", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135371369", "PostId": "76786335", "Score": "0", "Text": "Using `lookup` is perfectly fine, not at all bad practice.", "CreationDate": "2023-07-28T10:14:52.323", "UserId": "2442804", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "295963040", "PostHistoryTypeId": "2", "PostId": "76786335", "RevisionGUID": "da03102c-fe7f-4700-8178-5794632e8f7a", "CreationDate": "2023-07-28T09:05:53.487", "UserId": "2373259", "Text": "I'm a newbie in the Terraform world. Excuse me in advance if this is a dumb question. \r\n\r\nThis is my conf file : \r\n```\r\nterraform {\r\n  required_providers {\r\n    google = {\r\n      source  = \"hashicorp/google\"\r\n      version = \"~> 4.75.0\"\r\n    }\r\n  }\r\n}\r\n\r\nprovider \"google\" {\r\n  credentials = file(var.credentials_file)\r\n  project = var.project\r\n  region  = var.region\r\n  zone    = var.zone\r\n}\r\n\r\nresource \"google_cloudfunctions_function\" \"all\" { \r\n\r\n    for_each = {\r\n        fct1 = {\r\n            name = \"bob\"\r\n            git_folder = \"bob_folder\"\r\n            var1 = \"pikachu\"\r\n            var2 = \"red\"\r\n        },\r\n        fct2 = {\r\n            name = \"bill\"\r\n            git_folder = \"bill_folder\"\r\n            var1 = \"pidget\"\r\n            // var2 <-- no need here\r\n        }\r\n    }\r\n\r\n  name = each.value.name\r\n  environment_variables = {\r\n    VAR1 = var.var1 // OR each.value.var1 IF DEFINED ?\r\n    VAR2 = each.value.var2 // OR DEFAULT VALUE IF UNDEFINED ?\r\n  } \r\n\r\n  trigger_http = true\r\n  [...]\r\n\r\n  source_repository {\r\n    url = \"https://source.developers.google.com/projects/[...]/moveable-aliases/${var.git_branch}/paths/${each.value.git_folder}\"\r\n  }\r\n}\r\n```\r\n\r\nLike you've seen, I'm just trying to write all my google functions with their specific params. I don't succed to specify default params than can be overwrite by specific params. \r\n\r\nHow can I tell to Terraform : \"For this function, takes default param if undefined\" ?\r\nOr maybe : \"For this function, don't takes var.* param but the one defined here\" ?\r\n\r\nThanks in advance for your help ! ", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "This is my conf file : ``` terraform { required_providers { google = { source = \"hashicorp/google\" version = \"~> 4.75.0\" } } } provider \"google\" { credentials = file(var.credentials_file) project = var.project region = var.region zone = var.zone } resource \"google_cloudfunctions_function\" \"all\" { for_each = { fct1 = { name = \"bob\" git_folder = \"bob_folder\" var1 = \"pikachu\" var2 = \"red\" }, fct2 = { name = \"bill\" git_folder = \"bill_folder\" var1 = \"pidget\" // var2 <-- no need here } } name = each.value.name environment_variables = { VAR1 = var.var1 // OR each.value.var1 IF DEFINED ? VAR2 = each.value.var2 // OR DEFAULT VALUE IF UNDEFINED ? } trigger_http = true [...] source_repository { url = \"https://source.developers.google.com/projects/[...]/moveable-aliases/${var.git_branch}/paths/${each.value.git_folder}\" } } ``` ", "keywords": ["bill", "provider"]}]}, {"Id": "295963042", "PostHistoryTypeId": "1", "PostId": "76786335", "RevisionGUID": "da03102c-fe7f-4700-8178-5794632e8f7a", "CreationDate": "2023-07-28T09:05:53.487", "UserId": "2373259", "Text": "Terraform - Foreach - Default value", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "295963043", "PostHistoryTypeId": "3", "PostId": "76786335", "RevisionGUID": "da03102c-fe7f-4700-8178-5794632e8f7a", "CreationDate": "2023-07-28T09:05:53.487", "UserId": "2373259", "Text": "<terraform><terraform-provider-gcp>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "295963189", "PostHistoryTypeId": "5", "PostId": "76786335", "RevisionGUID": "3f972843-c886-4cf1-8154-707a600c8002", "CreationDate": "2023-07-28T09:10:24.220", "UserId": "8343484", "Comment": "deleted 33 characters in body; edited tags", "Text": "I'm a newbie in the Terraform world. Excuse me in advance if this is a dumb question. \r\n\r\nThis is my conf file:\r\n \r\n```hcl\r\nterraform {\r\n  required_providers {\r\n    google = {\r\n      source  = \"hashicorp/google\"\r\n      version = \"~> 4.75.0\"\r\n    }\r\n  }\r\n}\r\n\r\nprovider \"google\" {\r\n  credentials = file(var.credentials_file)\r\n  project = var.project\r\n  region  = var.region\r\n  zone    = var.zone\r\n}\r\n\r\nresource \"google_cloudfunctions_function\" \"all\" { \r\n\r\n    for_each = {\r\n        fct1 = {\r\n            name = \"bob\"\r\n            git_folder = \"bob_folder\"\r\n            var1 = \"pikachu\"\r\n            var2 = \"red\"\r\n        },\r\n        fct2 = {\r\n            name = \"bill\"\r\n            git_folder = \"bill_folder\"\r\n            var1 = \"pidget\"\r\n            // var2 <-- no need here\r\n        }\r\n    }\r\n\r\n  name = each.value.name\r\n  environment_variables = {\r\n    VAR1 = var.var1 // OR each.value.var1 IF DEFINED ?\r\n    VAR2 = each.value.var2 // OR DEFAULT VALUE IF UNDEFINED ?\r\n  } \r\n\r\n  trigger_http = true\r\n  [...]\r\n\r\n  source_repository {\r\n    url = \"https://source.developers.google.com/projects/[...]/moveable-aliases/${var.git_branch}/paths/${each.value.git_folder}\"\r\n  }\r\n}\r\n```\r\n\r\nLike you've seen, I'm just trying to write all my google functions with their specific params. I don't succeed to specify default params than can be overwrite by specific params. \r\n\r\nHow can I tell to Terraform : \"For this function, takes default param if undefined\" ?\r\nOr maybe : \"For this function, don't takes var.* param but the one defined here\" ?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "This is my conf file: ```hcl terraform { required_providers { google = { source = \"hashicorp/google\" version = \"~> 4.75.0\" } } } provider \"google\" { credentials = file(var.credentials_file) project = var.project region = var.region zone = var.zone } resource \"google_cloudfunctions_function\" \"all\" { for_each = { fct1 = { name = \"bob\" git_folder = \"bob_folder\" var1 = \"pikachu\" var2 = \"red\" }, fct2 = { name = \"bill\" git_folder = \"bill_folder\" var1 = \"pidget\" // var2 <-- no need here } } name = each.value.name environment_variables = { VAR1 = var.var1 // OR each.value.var1 IF DEFINED ? VAR2 = each.value.var2 // OR DEFAULT VALUE IF UNDEFINED ? } trigger_http = true [...] source_repository { url = \"https://source.developers.google.com/projects/[...]/moveable-aliases/${var.git_branch}/paths/${each.value.git_folder}\" } } ``` ", "keywords": ["bill", "provider"]}]}, {"Id": "295963190", "PostHistoryTypeId": "6", "PostId": "76786335", "RevisionGUID": "3f972843-c886-4cf1-8154-707a600c8002", "CreationDate": "2023-07-28T09:10:24.220", "UserId": "8343484", "Comment": "deleted 33 characters in body; edited tags", "Text": "<google-cloud-platform><terraform><terraform-provider-gcp>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "295964689", "PostHistoryTypeId": "5", "PostId": "76786335", "RevisionGUID": "e2940d68-7856-419d-980d-c68b9c4def1c", "CreationDate": "2023-07-28T09:43:09.120", "UserId": "2373259", "Comment": "added 174 characters in body", "Text": "I'm a newbie in the Terraform world. Excuse me in advance if this is a dumb question. \r\n\r\nThis is my conf file:\r\n \r\n```hcl\r\nterraform {\r\n  required_providers {\r\n    google = {\r\n      source  = \"hashicorp/google\"\r\n      version = \"~> 4.75.0\"\r\n    }\r\n  }\r\n}\r\n\r\nprovider \"google\" {\r\n  credentials = file(var.credentials_file)\r\n  project = var.project\r\n  region  = var.region\r\n  zone    = var.zone\r\n}\r\n\r\nresource \"google_cloudfunctions_function\" \"all\" { \r\n\r\n    for_each = {\r\n        fct1 = {\r\n            name = \"bob\"\r\n            git_folder = \"bob_folder\"\r\n            var1 = \"pikachu\"\r\n            var2 = \"red\"\r\n            available_memory_mb = 256\r\n        },\r\n        fct2 = {\r\n            name = \"bill\"\r\n            git_folder = \"bill_folder\"\r\n            var1 = \"pidget\"\r\n            // var2 <-- no need here\r\n            // available_memory_mb <-- default value will be ok here\r\n        }\r\n    }\r\n\r\n  name = each.value.name\r\n  environment_variables = {\r\n    VAR1 = var.var1 // OR each.value.var1 IF DEFINED ?\r\n    VAR2 = each.value.var2 // OR DEFAULT VALUE IF UNDEFINED ?\r\n  } \r\n\r\n  trigger_http = true\r\n  available_memory_mb = // \"default value if not defined on fct\r\n  [...]\r\n\r\n  source_repository {\r\n    url = \"https://source.developers.google.com/projects/[...]/moveable-aliases/${var.git_branch}/paths/${each.value.git_folder}\"\r\n  }\r\n}\r\n```\r\n\r\nLike you've seen, I'm just trying to write all my google functions with their specific params. I don't succeed to specify default params than can be overwrite by specific params. \r\n\r\nHow can I tell to Terraform : \"For this function, takes default param if undefined\" ?\r\nOr maybe : \"For this function, don't takes var.* param but the one defined here\" ?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "This is my conf file: ```hcl terraform { required_providers { google = { source = \"hashicorp/google\" version = \"~> 4.75.0\" } } } provider \"google\" { credentials = file(var.credentials_file) project = var.project region = var.region zone = var.zone } resource \"google_cloudfunctions_function\" \"all\" { for_each = { fct1 = { name = \"bob\" git_folder = \"bob_folder\" var1 = \"pikachu\" var2 = \"red\" available_memory_mb = 256 }, fct2 = { name = \"bill\" git_folder = \"bill_folder\" var1 = \"pidget\" // var2 <-- no need here // available_memory_mb <-- default value will be ok here } } name = each.value.name environment_variables = { VAR1 = var.var1 // OR each.value.var1 IF DEFINED ? VAR2 = each.value.var2 // OR DEFAULT VALUE IF UNDEFINED ? } trigger_http = true available_memory_mb = // \"default value if not defined on fct [...] source_repository { url = \"https://source.developers.google.com/projects/[...]/moveable-aliases/${var.git_branch}/paths/${each.value.git_folder}\" } } ``` ", "keywords": ["bill", "provider"]}]}], "answers": [{"Id": "76786840", "PostTypeId": "2", "ParentId": "76786335", "CreationDate": "2023-07-28T10:10:22.020", "Score": "1", "Body": "<p>This is working as expected :</p>\n<p><strong>variables.tf</strong></p>\n<pre><code>variable &quot;function_env&quot; {\n    default = {\n        var1 = &quot;A&quot;\n        var2 = &quot;B&quot;\n    }\n}\n\nvariable &quot;function_params&quot; {\n    default = {\n        runtime = &quot;python311&quot;\n        available_memory_mb = 512\n    }\n}\n</code></pre>\n<p><strong>main.tf</strong></p>\n<pre><code>resource &quot;google_cloudfunctions_function&quot; &quot;all&quot; { \n    for_each = {\n        funct1 = {\n            name = &quot;Billy&quot;\n            env = {\n                var1 = &quot;C&quot;\n            }\n            runtime = &quot;python310&quot;\n        },\n        funct2 = {\n            name = &quot;John&quot;\n            env = {\n                var2 = &quot;D&quot;\n            }\n        }\n    }\n\n    // Mandatory variables that needs to be defined for EACH item :\n    name = each.value.name\n    // Optionnal variables that can be defined for each item. If not, default in variables.tf :\n    environment_variables = merge(var.function_env, each.value.env)\n    runtime = lookup(each.value,&quot;runtime&quot;, var.function_params.runtime)\n    // Variables that can only be change by variables.tf :\n    available_memory_mb = var.function_params.available_memory_mb\n    // Constant variables that can't be change for each item. Always the same :\n    timeout = 60\n}\n</code></pre>\n<p>Tell me if this is not best pratice !</p>\n", "OwnerUserId": "2373259", "LastActivityDate": "2023-07-28T10:10:22.020", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "295965865", "PostHistoryTypeId": "2", "PostId": "76786840", "RevisionGUID": "5bb964cb-8aef-47b1-8ab1-b18f5631d7b6", "CreationDate": "2023-07-28T10:10:22.020", "UserId": "2373259", "Text": "This is working as expected : \r\n\r\n**variables.tf**\r\n```\r\nvariable \"function_env\" {\r\n    default = {\r\n        var1 = \"A\"\r\n        var2 = \"B\"\r\n    }\r\n}\r\n\r\nvariable \"function_params\" {\r\n    default = {\r\n        runtime = \"python311\"\r\n        available_memory_mb = 512\r\n    }\r\n}\r\n```\r\n\r\n**main.tf**\r\n```\r\nresource \"google_cloudfunctions_function\" \"all\" { \r\n    for_each = {\r\n        funct1 = {\r\n            name = \"Billy\"\r\n            env = {\r\n                var1 = \"C\"\r\n            }\r\n            runtime = \"python310\"\r\n        },\r\n        funct2 = {\r\n            name = \"John\"\r\n            env = {\r\n                var2 = \"D\"\r\n            }\r\n        }\r\n    }\r\n\r\n    // Mandatory variables that needs to be defined for EACH item :\r\n    name = each.value.name\r\n    // Optionnal variables that can be defined for each item. If not, default in variables.tf :\r\n    environment_variables = merge(var.function_env, each.value.env)\r\n    runtime = lookup(each.value,\"runtime\", var.function_params.runtime)\r\n    // Variables that can only be change by variables.tf :\r\n    available_memory_mb = var.function_params.available_memory_mb\r\n    // Constant variables that can't be change for each item. Always the same :\r\n    timeout = 60\r\n}\r\n```\r\n\r\nTell me if this is not best pratice ! ", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "If not, default in variables.tf : environment_variables = merge(var.function_env, each.value.env) runtime = lookup(each.value,\"runtime\", var.function_params.runtime) // Variables that can only be change by variables.tf : available_memory_mb = var.function_params.available_memory_mb // Constant variables that can't be change for each item. ", "keywords": ["change"]}]}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": []}