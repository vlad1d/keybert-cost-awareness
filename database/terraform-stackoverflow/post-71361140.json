{"Id": "71361140", "PostTypeId": "1", "CreationDate": "2022-03-05T09:48:07.900", "Score": "3", "ViewCount": "1154", "Body": "<p>I am trying to create dev environment in aws. Since my infra is not complete I try to destroy all the created resources at the end of the day and recreate them the next morning.</p>\n<p>However, I when I use <code>terraform destroy</code> command to destroy the resources, the dynamo db lock table is deleted and it also attempts to delete the backend s3 bucket.</p>\n<p>Since the lock table is deleted, it fails to retrieve/release lock when I create/destroy the resources the next time.</p>\n<p>My dynamo db table and s3 bucket were created using terraform and not by using console. Therefore, those resources are in the terraform state. I think it the reason terraform tries to delete them.</p>\n<p>I have this backend config:</p>\n<pre><code>\nterraform {\n  backend &quot;s3&quot; {\n    bucket         = &quot;project-tfstate-dev&quot;\n    key            = &quot;project-dev.tfstate&quot;\n    region         = &quot;us-west-2&quot;\n    dynamodb_table = &quot;tf-statelock-project-dev&quot;\n    encrypt        = true\n    acl            = &quot;private&quot;\n    \n  }\n}\n\n\n</code></pre>\n<p>The s3 bucket and dynamo db table are created as:</p>\n<pre><code>resource &quot;aws_s3_bucket&quot; &quot;tf_remote_state&quot; {\n  bucket = &quot;dev-tfstate-${var.env_name}&quot;\n}\n\nresource &quot;aws_s3_bucket_versioning&quot; &quot;version&quot; {\n  bucket = aws_s3_bucket.tf_remote_state.bucket\n  versioning_configuration {\n    status = &quot;Enabled&quot;\n  }\n}\nresource &quot;aws_s3_bucket_acl&quot; &quot;acl&quot; {\n  bucket = aws_s3_bucket.tf_remote_state.bucket\n  acl    = &quot;private&quot;\n}\nresource &quot;aws_s3_bucket_server_side_encryption_configuration&quot; &quot;encryption&quot; {\n  bucket = aws_s3_bucket.tf_remote_state.bucket\n  rule {\n    apply_server_side_encryption_by_default {\n      sse_algorithm = &quot;AES256&quot;\n\n    }\n  }\n}\n\n\nresource &quot;aws_dynamodb_table&quot; &quot;tf_statelock&quot; {\n\n  hash_key     = &quot;LockID&quot;\n  name         = &quot;tf-statelock-project-${var.env_name}&quot;\n  billing_mode = &quot;PAY_PER_REQUEST&quot;\n\n  attribute {\n    name = &quot;LockID&quot;\n    type = &quot;S&quot;\n  }\n\n}\n\n</code></pre>\n<p>Is there a way preventing the deletion of the lock table and s3 bucket, other than using the console to create the backend resources manually?</p>\n", "OwnerUserId": "9109675", "LastActivityDate": "2022-03-05T09:48:07.900", "Title": "Prevent deletion of terraform s3 backend and dynamo db table with destroy command", "Tags": "<amazon-web-services><terraform><terraform-provider-aws>", "AnswerCount": "0", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "126135874", "PostId": "71361140", "Score": "2", "Text": "Just put these resources in a different terraform project and don't destory them when tearing down your actual resources.", "CreationDate": "2022-03-05T09:55:27.073", "UserId": "4779904", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "126135910", "PostId": "71361140", "Score": "3", "Text": "https://www.terraform.io/language/meta-arguments/lifecycle - `prevent_destroy (bool) - This meta-argument, when set to true, will cause Terraform to reject with an error any plan that would destroy the infrastructure object associated with the resource, as long as the argument remains present in the configuration.`", "CreationDate": "2022-03-05T09:58:57.387", "UserId": "7748346", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "265419216", "PostHistoryTypeId": "2", "PostId": "71361140", "RevisionGUID": "ed2c3b4e-b735-49c1-bb64-f2cdabc4a983", "CreationDate": "2022-03-05T09:48:07.900", "UserId": "9109675", "Text": "I am trying to create dev environment in aws. Since my infra is not complete I try to destroy all the created resources at the end of the day and recreate them the next morning.\r\n\r\n\r\nHowever, I when I use `terraform destroy` command to destroy the resources, the dynamo db lock table is deleted and it also attempts to delete the backend s3 bucket. \r\n\r\nSince the lock table is deleted, it fails to retrieve/release lock when I create/destroy the resources the next time. \r\n\r\nMy dynamo db table and s3 bucket were created using terraform and not by using console. Therefore, those resources are in the terraform state. I think it the reason terraform tries to delete them. \r\n\r\n \r\nI have this backend config: \r\n\r\n```\r\n\r\nterraform {\r\n  backend \"s3\" {\r\n    bucket         = \"project-tfstate-dev\"\r\n    key            = \"project-dev.tfstate\"\r\n    region         = \"us-west-2\"\r\n    dynamodb_table = \"tf-statelock-project-dev\"\r\n    encrypt        = true\r\n    acl            = \"private\"\r\n    \r\n  }\r\n}\r\n\r\n\r\n```\r\n\r\nThe s3 bucket and dynamo db table are created as: \r\n\r\n\r\n```\r\nresource \"aws_s3_bucket\" \"tf_remote_state\" {\r\n  bucket = \"dev-tfstate-${var.env_name}\"\r\n}\r\n\r\nresource \"aws_s3_bucket_versioning\" \"version\" {\r\n  bucket = aws_s3_bucket.tf_remote_state.bucket\r\n  versioning_configuration {\r\n    status = \"Enabled\"\r\n  }\r\n}\r\nresource \"aws_s3_bucket_acl\" \"acl\" {\r\n  bucket = aws_s3_bucket.tf_remote_state.bucket\r\n  acl    = \"private\"\r\n}\r\nresource \"aws_s3_bucket_server_side_encryption_configuration\" \"encryption\" {\r\n  bucket = aws_s3_bucket.tf_remote_state.bucket\r\n  rule {\r\n    apply_server_side_encryption_by_default {\r\n      sse_algorithm = \"AES256\"\r\n\r\n    }\r\n  }\r\n}\r\n\r\n\r\nresource \"aws_dynamodb_table\" \"tf_statelock\" {\r\n\r\n  hash_key     = \"LockID\"\r\n  name         = \"tf-statelock-project-${var.env_name}\"\r\n  billing_mode = \"PAY_PER_REQUEST\"\r\n\r\n  attribute {\r\n    name = \"LockID\"\r\n    type = \"S\"\r\n  }\r\n\r\n}\r\n\r\n```\r\n\r\nIs there a way preventing the deletion of the lock table and s3 bucket, other than using the console to create the backend resources manually?\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "The s3 bucket and dynamo db table are created as: ``` resource \"aws_s3_bucket\" \"tf_remote_state\" { bucket = \"dev-tfstate-${var.env_name}\" } resource \"aws_s3_bucket_versioning\" \"version\" { bucket = aws_s3_bucket.tf_remote_state.bucket versioning_configuration { status = \"Enabled\" } } resource \"aws_s3_bucket_acl\" \"acl\" { bucket = aws_s3_bucket.tf_remote_state.bucket acl = \"private\" } resource \"aws_s3_bucket_server_side_encryption_configuration\" \"encryption\" { bucket = aws_s3_bucket.tf_remote_state.bucket rule { apply_server_side_encryption_by_default { sse_algorithm = \"AES256\" } } } resource \"aws_dynamodb_table\" \"tf_statelock\" { hash_key = \"LockID\" name = \"tf-statelock-project-${var.env_name}\" billing_mode = \"PAY_PER_REQUEST\" attribute { name = \"LockID\" type = \"S\" ", "keywords": ["bill"]}]}, {"Id": "265419218", "PostHistoryTypeId": "1", "PostId": "71361140", "RevisionGUID": "ed2c3b4e-b735-49c1-bb64-f2cdabc4a983", "CreationDate": "2022-03-05T09:48:07.900", "UserId": "9109675", "Text": "Prevent deletion of terraform s3 backend and dynamo db table with destroy command", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "265419219", "PostHistoryTypeId": "3", "PostId": "71361140", "RevisionGUID": "ed2c3b4e-b735-49c1-bb64-f2cdabc4a983", "CreationDate": "2022-03-05T09:48:07.900", "UserId": "9109675", "Text": "<amazon-web-services><terraform><terraform-provider-aws>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": []}