{"Id": "76306139", "PostTypeId": "1", "CreationDate": "2023-05-22T12:20:39.367", "Score": "1", "ViewCount": "214", "Body": "<p>I am upgrading my RDS postgresql from 10.21 to 14.4 by creating a new family group as well , my idea is to create new family group and upgrade the rds with new family group and then delete the old family group (deleting the old family is not that important as I know that cost money ), I get an error , please check my code</p>\n<p>My terraform version is 0.13.7</p>\n<pre><code>module &quot;rds_pgsql&quot; {\n  source = &quot;./modules/aws-rds-pgsql&quot;\n\n  stack                               = var.stack\n  environment                         = var.environment\n  app_name                            = var.app\n  description                         = var.app\n  db_username                         = data.aws_kms_secrets.rds.plaintext[&quot;master_username&quot;]\n  db_password                         = data.aws_kms_secrets.rds.plaintext[&quot;master_password&quot;]\n  db_name                             = var.db_name\n  security_group_db_access            = flatten([module.db_subnets.cidr_blocks, module.private_app_subnets.cidr_blocks])\n  db_param_group_family               = aws_db_parameter_group.rds_parameter_group.name\n  db_monitoring_interval              = var.db_monitoring_interval\n  db_engine_version                   = var.db_engine_version\n  db_instance_type                    = var.db_instance_type\n    db_apply_immediately                    = var.db_apply_immediately\n  allow_major_version_upgrade         = var.db_allow_major_version_upgrade\n  db_backup_plan                      = var.backup_plan_pgsql\n    db_backup_retention_period          = 35\n    db_backup_window                    = &quot;00:00-02:00&quot;\n}\n\nresource &quot;aws_db_parameter_group&quot; &quot;rds_parameter_group&quot; {\n  name_prefix = &quot;postgres14&quot;\n  description = var.stack\n  family      = var.db_param_group_family\n\n  parameter {\n    apply_method = &quot;pending-reboot&quot;  \n    name  = &quot;client_encoding&quot;\n    value = &quot;UTF8&quot;\n  }\n\n  lifecycle {\n    create_before_destroy = true\n  }\n\n  tags = {\n    Name        = &quot;${var.environment}-${var.stack}-rds-db-pg&quot;\n    Stack       = var.stack\n    Environment = var.environment\n    Description = var.stack\n  }\n}\n\nresource &quot;time_sleep&quot; &quot;wait_30_seconds&quot; {\n  depends_on = [module.rds_pgsql]\n\n  create_duration = &quot;90s&quot;\n}\n\n</code></pre>\n<p>module code , which has the old db parameter group creation</p>\n<pre><code>resource &quot;aws_db_parameter_group&quot; &quot;db_parameter_group&quot; {\n  name        = &quot;${var.stack}-${var.app_name}-rds-db-pg-${var.environment}&quot;\n  description = var.description\n  family      = var.db_param_group_family\n\n  parameter {\n    name  = &quot;client_encoding&quot;\n    value = &quot;UTF8&quot;\n  }\n\n  tags = {\n    Name        = &quot;${var.stack}-${var.app_name}-rds-db-pg-${var.environment}&quot;\n    Stack       = var.stack\n    Environment = var.environment\n    Description = var.description\n  }\n}\n</code></pre>\n<p>error i face</p>\n<pre><code>Error: Error deleting DB parameter group: InvalidDBParameterGroupState: One or more database instances are still members of this parameter group events-consents-events-consents-rds-db-pg-gentst, so the group cannot be deleted\n    status code: 400, request id: a9cb62d6-7607-4b8d-9d7d-ae9baf4e1f90\n\n</code></pre>\n<p>i have already added create_before_destroy = true and tried adding the time_sleep as well but still i get the above error , the thing i see is , it first creates the new db parameter group and then start deleting the old db parameter group ,</p>\n<p>my expectation is it first creates new db group then upgrade the db instance and then assing the new db group to the instance and then delete the old db group .</p>\n<p>Am i missing something or overlooking ??</p>\n<p>Thanks</p>\n<p>I tried adding</p>\n<p><code>lifecycle { create_before_destroy = true } </code>\nand also tried sleep time did not do the magic</p>\n", "OwnerUserId": "3678105", "LastEditorUserId": "3678105", "LastEditDate": "2023-05-22T13:08:17.220", "LastActivityDate": "2023-05-24T09:23:00.877", "Title": "Terraform RDS upgrade from 10 to 14", "Tags": "<postgresql><amazon-web-services><terraform><amazon-rds><terraform-provider-aws>", "AnswerCount": "2", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "293136660", "PostHistoryTypeId": "2", "PostId": "76306139", "RevisionGUID": "b19f6795-0f5c-413e-8f08-822e7b18ee60", "CreationDate": "2023-05-22T12:20:39.367", "UserId": "3678105", "Text": "`Hi All , \r\n\r\nNeed some information , i am upgrading my RDS postgresql from 10.21 to 14.4 by creating a new family group as well , my idea is to create new family group and upgrade the rds with new family group and then delete the old family group (deleting the old family is not that important as i know that cost money ), i get an error , please check my code\r\n\r\nMy terraform version is 0.13.7\r\n\r\n```\r\nmodule \"rds_pgsql\" {\r\n  source = \"./modules/aws-rds-pgsql\"\r\n\r\n  stack                               = var.stack\r\n  environment                         = var.environment\r\n  app_name                            = var.app\r\n  description                         = var.app\r\n  db_username                         = data.aws_kms_secrets.rds.plaintext[\"master_username\"]\r\n  db_password                         = data.aws_kms_secrets.rds.plaintext[\"master_password\"]\r\n  db_name                             = var.db_name\r\n  security_group_db_access            = flatten([module.db_subnets.cidr_blocks, module.private_app_subnets.cidr_blocks])\r\n  db_param_group_family               = aws_db_parameter_group.rds_parameter_group.name\r\n  db_monitoring_interval              = var.db_monitoring_interval\r\n  db_engine_version                   = var.db_engine_version\r\n  db_instance_type                    = var.db_instance_type\r\n db_apply_immediately              = var.db_apply_immediately\r\n  allow_major_version_upgrade         = var.db_allow_major_version_upgrade\r\n  db_backup_plan                      = var.backup_plan_pgsql\r\n db_backup_retention_period          = 35\r\n db_backup_window                    = \"00:00-02:00\"\r\n}\r\n\r\nresource \"aws_db_parameter_group\" \"rds_parameter_group\" {\r\n  name_prefix = \"postgres14\"\r\n  description = var.stack\r\n  family      = var.db_param_group_family\r\n\r\n  parameter {\r\n apply_method = \"pending-reboot\"  \r\n    name  = \"client_encoding\"\r\n    value = \"UTF8\"\r\n  }\r\n\r\n  lifecycle {\r\n    create_before_destroy = true\r\n  }\r\n\r\n  tags = {\r\n    Name        = \"${var.environment}-${var.stack}-rds-db-pg\"\r\n    Stack       = var.stack\r\n    Environment = var.environment\r\n    Description = var.stack\r\n  }\r\n}\r\n\r\nresource \"time_sleep\" \"wait_30_seconds\" {\r\n  depends_on = [module.rds_pgsql]\r\n\r\n  create_duration = \"90s\"\r\n}\r\n\r\n```\r\n\r\nerror i face \r\n\r\n``\r\nError: Error deleting DB parameter group: InvalidDBParameterGroupState: One or more database instances are still members of this parameter group events-consents-events-consents-rds-db-pg-gentst, so the group cannot be deleted\r\n status code: 400, request id: a9cb62d6-7607-4b8d-9d7d-ae9baf4e1f90\r\n\r\n``\r\n\r\ni have already added create_before_destroy = true and tried adding the time_sleep as well but still i get the above error , the thing i see is , it first creates the new db parameter group and then start deleting the old db parameter group , \r\n\r\nmy expectation is it first creates new db group then upgrade the db instance and then assing the new db group to the instance and then delete the old db group .\r\n\r\nAm i missing something or overlooking ??\r\n\r\nThanks  \r\n\r\nI tried adding \r\n\r\n`lifecycle {\r\n    create_before_destroy = true\r\n  }\r\n`\r\nand also tried sleep time did not do the magic`", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "`Hi All , Need some information , i am upgrading my RDS postgresql from 10.21 to 14.4 by creating a new family group as well , my idea is to create new family group and upgrade the rds with new family group and then delete the old family group (deleting the old family is not that important as i know that cost money ), i get an error , please check my code ", "keywords": ["cost"]}, {"source": "Text", "text": "Error: Error deleting DB parameter group: InvalidDBParameterGroupState: One or more database instances are still members of this parameter group events-consents-events-consents-rds-db-pg-gentst, so the group cannot be deleted status code: 400, request id: a9cb62d6-7607-4b8d-9d7d-ae9baf4e1f90 `` i have already added create_before_destroy = true and tried adding the time_sleep as well but still i get the above error , the thing i see is , it first creates the new db parameter group and then start deleting the old db parameter group , my expectation is it first creates new db group then upgrade the db instance and then assing the new db group to the instance and then delete the old db group . ", "keywords": ["instance"]}]}, {"Id": "293136662", "PostHistoryTypeId": "1", "PostId": "76306139", "RevisionGUID": "b19f6795-0f5c-413e-8f08-822e7b18ee60", "CreationDate": "2023-05-22T12:20:39.367", "UserId": "3678105", "Text": "Terraform RDS upgrade from 10 to 14", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "293136663", "PostHistoryTypeId": "3", "PostId": "76306139", "RevisionGUID": "b19f6795-0f5c-413e-8f08-822e7b18ee60", "CreationDate": "2023-05-22T12:20:39.367", "UserId": "3678105", "Text": "<postgresql><amazon-web-services><terraform><amazon-rds><terraform-provider-aws>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "293136664", "PostHistoryTypeId": "66", "PostId": "76306139", "RevisionGUID": "b19f6795-0f5c-413e-8f08-822e7b18ee60", "CreationDate": "2023-05-22T12:20:39.367", "UserId": "3678105", "filtered-sentences": []}, {"Id": "293138082", "PostHistoryTypeId": "5", "PostId": "76306139", "RevisionGUID": "078af739-60d9-42a0-9689-c229b22bfa41", "CreationDate": "2023-05-22T12:50:31.277", "UserId": "13070", "Comment": "Spelling and formatting", "Text": "I am upgrading my RDS postgresql from 10.21 to 14.4 by creating a new family group as well , my idea is to create new family group and upgrade the rds with new family group and then delete the old family group (deleting the old family is not that important as I know that cost money ), I get an error , please check my code\r\n\r\nMy terraform version is 0.13.7\r\n\r\n```\r\nmodule \"rds_pgsql\" {\r\n  source = \"./modules/aws-rds-pgsql\"\r\n\r\n  stack                               = var.stack\r\n  environment                         = var.environment\r\n  app_name                            = var.app\r\n  description                         = var.app\r\n  db_username                         = data.aws_kms_secrets.rds.plaintext[\"master_username\"]\r\n  db_password                         = data.aws_kms_secrets.rds.plaintext[\"master_password\"]\r\n  db_name                             = var.db_name\r\n  security_group_db_access            = flatten([module.db_subnets.cidr_blocks, module.private_app_subnets.cidr_blocks])\r\n  db_param_group_family               = aws_db_parameter_group.rds_parameter_group.name\r\n  db_monitoring_interval              = var.db_monitoring_interval\r\n  db_engine_version                   = var.db_engine_version\r\n  db_instance_type                    = var.db_instance_type\r\n db_apply_immediately              = var.db_apply_immediately\r\n  allow_major_version_upgrade         = var.db_allow_major_version_upgrade\r\n  db_backup_plan                      = var.backup_plan_pgsql\r\n db_backup_retention_period          = 35\r\n db_backup_window                    = \"00:00-02:00\"\r\n}\r\n\r\nresource \"aws_db_parameter_group\" \"rds_parameter_group\" {\r\n  name_prefix = \"postgres14\"\r\n  description = var.stack\r\n  family      = var.db_param_group_family\r\n\r\n  parameter {\r\n apply_method = \"pending-reboot\"  \r\n    name  = \"client_encoding\"\r\n    value = \"UTF8\"\r\n  }\r\n\r\n  lifecycle {\r\n    create_before_destroy = true\r\n  }\r\n\r\n  tags = {\r\n    Name        = \"${var.environment}-${var.stack}-rds-db-pg\"\r\n    Stack       = var.stack\r\n    Environment = var.environment\r\n    Description = var.stack\r\n  }\r\n}\r\n\r\nresource \"time_sleep\" \"wait_30_seconds\" {\r\n  depends_on = [module.rds_pgsql]\r\n\r\n  create_duration = \"90s\"\r\n}\r\n\r\n```\r\n\r\nerror i face \r\n\r\n```\r\nError: Error deleting DB parameter group: InvalidDBParameterGroupState: One or more database instances are still members of this parameter group events-consents-events-consents-rds-db-pg-gentst, so the group cannot be deleted\r\n status code: 400, request id: a9cb62d6-7607-4b8d-9d7d-ae9baf4e1f90\r\n\r\n```\r\n\r\ni have already added create_before_destroy = true and tried adding the time_sleep as well but still i get the above error , the thing i see is , it first creates the new db parameter group and then start deleting the old db parameter group , \r\n\r\nmy expectation is it first creates new db group then upgrade the db instance and then assing the new db group to the instance and then delete the old db group .\r\n\r\nAm i missing something or overlooking ??\r\n\r\nThanks  \r\n\r\nI tried adding \r\n\r\n`lifecycle {\r\n    create_before_destroy = true\r\n  }\r\n`\r\nand also tried sleep time did not do the magic", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I am upgrading my RDS postgresql from 10.21 to 14.4 by creating a new family group as well , my idea is to create new family group and upgrade the rds with new family group and then delete the old family group (deleting the old family is not that important as I know that cost money ), I get an error , please check my code My terraform version is 0.13.7 ``` module \"rds_pgsql\" { source = \"./modules/aws-rds-pgsql\" stack = var.stack environment = var.environment app_name = var.app description = var.app db_username = data.aws_kms_secrets.rds.plaintext[\"master_username\"] db_password = data.aws_kms_secrets.rds.plaintext[\"master_password\"] db_name = var.db_name security_group_db_access = flatten([module.db_subnets.cidr_blocks, module.private_app_subnets.cidr_blocks]) db_param_group_family = aws_db_parameter_group.rds_parameter_group.name db_monitoring_interval = var.db_monitoring_interval db_engine_version = var.db_engine_version db_instance_type = var.db_instance_type db_apply_immediately = var.db_apply_immediately allow_major_version_upgrade = var.db_allow_major_version_upgrade db_backup_plan = var.backup_plan_pgsql db_backup_retention_period = 35 db_backup_window = \"00:00-02:00\" } resource \"aws_db_parameter_group\" \"rds_parameter_group\" { name_prefix = \"postgres14\" description = var.stack family = var.db_param_group_family parameter { apply_method = \"pending-reboot\" name = \"client_encoding\" value = \"UTF8\" } lifecycle { create_before_destroy = true } tags = { Name = \"${var.environment}-${var.stack}-rds-db-pg\" Stack = var.stack Environment = var.environment Description = var.stack } } resource \"time_sleep\" \"wait_30_seconds\" { depends_on = [module.rds_pgsql] create_duration = \"90s\" } ``` error i face ``` ", "keywords": ["cost"]}, {"source": "Text", "text": "Error: Error deleting DB parameter group: InvalidDBParameterGroupState: One or more database instances are still members of this parameter group events-consents-events-consents-rds-db-pg-gentst, so the group cannot be deleted status code: 400, request id: a9cb62d6-7607-4b8d-9d7d-ae9baf4e1f90 ``` i have already added create_before_destroy = true and tried adding the time_sleep as well but still i get the above error , the thing i see is , it first creates the new db parameter group and then start deleting the old db parameter group , my expectation is it first creates new db group then upgrade the db instance and then assing the new db group to the instance and then delete the old db group . ", "keywords": ["instance"]}]}, {"Id": "293138991", "PostHistoryTypeId": "5", "PostId": "76306139", "RevisionGUID": "28e474ba-494c-4933-9205-eee34f53d7b8", "CreationDate": "2023-05-22T13:08:17.220", "UserId": "3678105", "Comment": "added 615 characters in body", "Text": "I am upgrading my RDS postgresql from 10.21 to 14.4 by creating a new family group as well , my idea is to create new family group and upgrade the rds with new family group and then delete the old family group (deleting the old family is not that important as I know that cost money ), I get an error , please check my code\r\n\r\nMy terraform version is 0.13.7\r\n\r\n```\r\nmodule \"rds_pgsql\" {\r\n  source = \"./modules/aws-rds-pgsql\"\r\n\r\n  stack                               = var.stack\r\n  environment                         = var.environment\r\n  app_name                            = var.app\r\n  description                         = var.app\r\n  db_username                         = data.aws_kms_secrets.rds.plaintext[\"master_username\"]\r\n  db_password                         = data.aws_kms_secrets.rds.plaintext[\"master_password\"]\r\n  db_name                             = var.db_name\r\n  security_group_db_access            = flatten([module.db_subnets.cidr_blocks, module.private_app_subnets.cidr_blocks])\r\n  db_param_group_family               = aws_db_parameter_group.rds_parameter_group.name\r\n  db_monitoring_interval              = var.db_monitoring_interval\r\n  db_engine_version                   = var.db_engine_version\r\n  db_instance_type                    = var.db_instance_type\r\n db_apply_immediately              = var.db_apply_immediately\r\n  allow_major_version_upgrade         = var.db_allow_major_version_upgrade\r\n  db_backup_plan                      = var.backup_plan_pgsql\r\n db_backup_retention_period          = 35\r\n db_backup_window                    = \"00:00-02:00\"\r\n}\r\n\r\nresource \"aws_db_parameter_group\" \"rds_parameter_group\" {\r\n  name_prefix = \"postgres14\"\r\n  description = var.stack\r\n  family      = var.db_param_group_family\r\n\r\n  parameter {\r\n apply_method = \"pending-reboot\"  \r\n    name  = \"client_encoding\"\r\n    value = \"UTF8\"\r\n  }\r\n\r\n  lifecycle {\r\n    create_before_destroy = true\r\n  }\r\n\r\n  tags = {\r\n    Name        = \"${var.environment}-${var.stack}-rds-db-pg\"\r\n    Stack       = var.stack\r\n    Environment = var.environment\r\n    Description = var.stack\r\n  }\r\n}\r\n\r\nresource \"time_sleep\" \"wait_30_seconds\" {\r\n  depends_on = [module.rds_pgsql]\r\n\r\n  create_duration = \"90s\"\r\n}\r\n\r\n```\r\nmodule code , which has the old db parameter group creation\r\n\r\n    resource \"aws_db_parameter_group\" \"db_parameter_group\" {\r\n      name        = \"${var.stack}-${var.app_name}-rds-db-pg-${var.environment}\"\r\n      description = var.description\r\n      family      = var.db_param_group_family\r\n    \r\n      parameter {\r\n        name  = \"client_encoding\"\r\n        value = \"UTF8\"\r\n      }\r\n    \r\n      tags = {\r\n        Name        = \"${var.stack}-${var.app_name}-rds-db-pg-${var.environment}\"\r\n        Stack       = var.stack\r\n        Environment = var.environment\r\n        Description = var.description\r\n      }\r\n    }\r\n\r\nerror i face \r\n\r\n```\r\nError: Error deleting DB parameter group: InvalidDBParameterGroupState: One or more database instances are still members of this parameter group events-consents-events-consents-rds-db-pg-gentst, so the group cannot be deleted\r\n status code: 400, request id: a9cb62d6-7607-4b8d-9d7d-ae9baf4e1f90\r\n\r\n```\r\n\r\ni have already added create_before_destroy = true and tried adding the time_sleep as well but still i get the above error , the thing i see is , it first creates the new db parameter group and then start deleting the old db parameter group , \r\n\r\nmy expectation is it first creates new db group then upgrade the db instance and then assing the new db group to the instance and then delete the old db group .\r\n\r\nAm i missing something or overlooking ??\r\n\r\nThanks  \r\n\r\nI tried adding \r\n\r\n`lifecycle {\r\n    create_before_destroy = true\r\n  }\r\n`\r\nand also tried sleep time did not do the magic", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I am upgrading my RDS postgresql from 10.21 to 14.4 by creating a new family group as well , my idea is to create new family group and upgrade the rds with new family group and then delete the old family group (deleting the old family is not that important as I know that cost money ), I get an error , please check my code My terraform version is 0.13.7 ``` module \"rds_pgsql\" { source = \"./modules/aws-rds-pgsql\" stack = var.stack environment = var.environment app_name = var.app description = var.app db_username = data.aws_kms_secrets.rds.plaintext[\"master_username\"] db_password = data.aws_kms_secrets.rds.plaintext[\"master_password\"] db_name = var.db_name security_group_db_access = flatten([module.db_subnets.cidr_blocks, module.private_app_subnets.cidr_blocks]) db_param_group_family = aws_db_parameter_group.rds_parameter_group.name db_monitoring_interval = var.db_monitoring_interval db_engine_version = var.db_engine_version db_instance_type = var.db_instance_type db_apply_immediately = var.db_apply_immediately allow_major_version_upgrade = var.db_allow_major_version_upgrade db_backup_plan = var.backup_plan_pgsql db_backup_retention_period = 35 db_backup_window = \"00:00-02:00\" } resource \"aws_db_parameter_group\" \"rds_parameter_group\" { name_prefix = \"postgres14\" description = var.stack family = var.db_param_group_family parameter { apply_method = \"pending-reboot\" name = \"client_encoding\" value = \"UTF8\" } lifecycle { create_before_destroy = true } tags = { Name = \"${var.environment}-${var.stack}-rds-db-pg\" Stack = var.stack Environment = var.environment Description = var.stack } } resource \"time_sleep\" \"wait_30_seconds\" { depends_on = [module.rds_pgsql] create_duration = \"90s\" } ``` module code , which has the old db parameter group creation resource \"aws_db_parameter_group\" \"db_parameter_group\" { name = \"${var.stack}-${var.app_name}-rds-db-pg-${var.environment}\" description = var.description family = var.db_param_group_family parameter { name = \"client_encoding\" value = \"UTF8\" } tags = { Name = \"${var.stack}-${var.app_name}-rds-db-pg-${var.environment}\" Stack = var.stack Environment = var.environment Description = var.description } } error i face ``` ", "keywords": ["cost"]}, {"source": "Text", "text": "Error: Error deleting DB parameter group: InvalidDBParameterGroupState: One or more database instances are still members of this parameter group events-consents-events-consents-rds-db-pg-gentst, so the group cannot be deleted status code: 400, request id: a9cb62d6-7607-4b8d-9d7d-ae9baf4e1f90 ``` i have already added create_before_destroy = true and tried adding the time_sleep as well but still i get the above error , the thing i see is , it first creates the new db parameter group and then start deleting the old db parameter group , my expectation is it first creates new db group then upgrade the db instance and then assing the new db group to the instance and then delete the old db group . ", "keywords": ["instance"]}]}], "answers": [{"Id": "76306443", "PostTypeId": "2", "ParentId": "76306139", "CreationDate": "2023-05-22T12:58:04.143", "Score": "0", "Body": "<p>I've gone through this recently and had to deal with the same error. The way I solved it was to create a second parameter group, so that you have one parameter group for the old RDS version, and one for the new version. Then apply the Terraform RDS upgrade. Then finally remove the old parameter group from Terraform and run <code>apply</code> again so that is is deleted in AWS.</p>\n<p>It's unfortunate that Terraform doesn't handle this more smoothly. It looks like there was <a href=\"https://github.com/hashicorp/terraform-provider-aws/pull/29663\" rel=\"nofollow noreferrer\">a fix for this</a> submitted a few months ago, but it hasn't been merged yet.</p>\n", "OwnerUserId": "13070", "LastActivityDate": "2023-05-22T12:58:04.143", "CommentCount": "3", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "134559558", "PostId": "76306443", "Score": "0", "Text": "Thanks Mark, that was exactly i have done , please find the updated question , the old db parameter group resource definition is inside the module , that is what confuses me , thanks", "CreationDate": "2023-05-22T13:10:08.303", "UserId": "3678105", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "134559726", "PostId": "76306443", "Score": "0", "Text": "I think the error is occurring because the old parameter group's family is changing. You can't actually modify a parameter group's family in AWS, so Terraform is trying to delete and recreate it. What your code is trying to do right now is just create two parameter groups with the new family, deleting the old one with the old family. You will have to somehow persist a parameter group with the old family during this upgrade process.", "CreationDate": "2023-05-22T13:21:58.463", "UserId": "13070", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I think the error is occurring because the old parameter group's family is changing. ", "keywords": ["change"]}]}, {"Id": "134560164", "PostId": "76306443", "Score": "0", "Text": "yes , that is what i am wondering how to handle this , checking my options", "CreationDate": "2023-05-22T13:53:44.877", "UserId": "3678105", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "293138463", "PostHistoryTypeId": "2", "PostId": "76306443", "RevisionGUID": "7e2db91f-4fda-4d0a-9276-a79904cd101d", "CreationDate": "2023-05-22T12:58:04.143", "UserId": "13070", "Text": "I've gone through this recently and had to deal with the same error. The way I solved it was to create a second parameter group, so that you have one parameter group for the old RDS version, and one for the new version. Then apply the Terraform RDS upgrade. Then finally remove the old parameter group from Terraform and run `apply` again so that is is deleted in AWS.\r\n\r\nIt's unfortunate that Terraform doesn't handle this more smoothly. It looks like there was [a fix for this][1] submitted a few months ago, but it hasn't been merged yet.\r\n\r\n\r\n  [1]: https://github.com/hashicorp/terraform-provider-aws/pull/29663", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "[1]: https://github.com/hashicorp/terraform-provider-aws/pull/29663", "keywords": ["provider"]}]}], "filtered-sentences": []}, {"Id": "76321974", "PostTypeId": "2", "ParentId": "76306139", "CreationDate": "2023-05-24T09:23:00.877", "Score": "0", "Body": "<p>fixed this , for any one in future</p>\n<pre><code>module &quot;rds_pgsql&quot; {\n  source = &quot;./modules/aws-rds-pgsql&quot;\n\n  stack                               = var.stack\n  environment                         = var.environment\n  app_name                            = var.app\n  description                         = var.app\n  db_username                         = data.aws_kms_secrets.rds.plaintext[&quot;master_username&quot;]\n  db_password                         = data.aws_kms_secrets.rds.plaintext[&quot;master_password&quot;]\n  db_name                             = var.db_name\n  security_group_db_access            = flatten([module.db_subnets.cidr_blocks, module.private_app_subnets.cidr_blocks])\n  db_monitoring_interval              = var.db_monitoring_interval\n  db_engine_version                   = var.db_engine_version\n  db_parameter_group_name             = aws_db_parameter_group.rds_parameter_group.name\n  db_instance_type                    = var.db_instance_type\n    db_apply_immediately                    = var.db_apply_immediately\n  allow_major_version_upgrade         = var.db_allow_major_version_upgrade\n  db_backup_plan                      = var.backup_plan_pgsql\n    db_backup_retention_period          = 35\n    db_backup_window                    = &quot;00:00-02:00&quot;\n  \n}\n\nresource &quot;aws_db_parameter_group&quot; &quot;rds_parameter_group&quot; {\n  name = &quot;events-consents-events-consents-postgres14&quot;\n  description = var.stack\n  family      = var.db_param_group_family\n\n  parameter {\n    apply_method = &quot;pending-reboot&quot;  \n    name  = &quot;client_encoding&quot;\n    value = &quot;UTF8&quot;\n  }\n\n  lifecycle {\n    create_before_destroy = true\n  }\n\n  tags = {\n    Name        = &quot;${var.environment}-${var.stack}-rds-db-pg&quot;\n    Stack       = var.stack\n    Environment = var.environment\n    Description = var.stack\n  }\n}\n</code></pre>\n<p>i created a parameter group and passed that as db_parameter_group_name to the module and in the module , the first parameter group is for family 10 and i dont want to delete it and the second db group for family 14, in this case i am checking for count if the value passed from root then dont create as the family is for psotgre14 is created from root itself and then in the resource for instance i pass the same , not sure if the solution is correct but this worked for me , thanks</p>\n<pre><code>resource &quot;aws_db_parameter_group&quot; &quot;db_parameter_group&quot; {\n  \n  name        = &quot;${var.stack}-${var.app_name}-rds-db-pg-${var.environment}&quot;\n  description = var.description\n  family      = var.db_param_group_family\n\n  parameter {\n    name  = &quot;client_encoding&quot;\n    value = &quot;UTF8&quot;\n  }\n\n  tags = {\n    Name        = &quot;${var.stack}-${var.app_name}-rds-db-pg-${var.environment}&quot;\n    Stack       = var.stack\n    Environment = var.environment\n    Description = var.description\n  }\n}\n\nresource &quot;aws_db_parameter_group&quot; &quot;db_parameter_group_20230523&quot; {\n  count = var.db_parameter_group_name == &quot;&quot; ? 1 : 0\n  name        = &quot;${var.stack}-${var.app_name}-rds-db-pg-${var.environment}&quot;\n  description = var.description\n  family      = var.db_param_group_family\n\n  parameter {\n    name  = &quot;client_encoding&quot;\n    value = &quot;UTF8&quot;\n  }\n\n  tags = {\n    Name        = &quot;${var.stack}-${var.app_name}-rds-db-pg-${var.environment}&quot;\n    Stack       = var.stack\n    Environment = var.environment\n    Description = var.description\n  }\n}\n\nresource &quot;aws_db_instance&quot; &quot;db_master&quot; {\n \n  parameter_group_name            = var.db_parameter_group_name == &quot;&quot; ? aws_db_parameter_group.db_parameter_group_20230523[0].name : var.db_parameter_group_name\n</code></pre>\n", "OwnerUserId": "3678105", "LastActivityDate": "2023-05-24T09:23:00.877", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "293230445", "PostHistoryTypeId": "2", "PostId": "76321974", "RevisionGUID": "06c64505-3932-42e4-a594-59b5407ba509", "CreationDate": "2023-05-24T09:23:00.877", "UserId": "3678105", "Text": "fixed this , for any one in future \r\n\r\n    module \"rds_pgsql\" {\r\n      source = \"./modules/aws-rds-pgsql\"\r\n    \r\n      stack                               = var.stack\r\n      environment                         = var.environment\r\n      app_name                            = var.app\r\n      description                         = var.app\r\n      db_username                         = data.aws_kms_secrets.rds.plaintext[\"master_username\"]\r\n      db_password                         = data.aws_kms_secrets.rds.plaintext[\"master_password\"]\r\n      db_name                             = var.db_name\r\n      security_group_db_access            = flatten([module.db_subnets.cidr_blocks, module.private_app_subnets.cidr_blocks])\r\n      db_monitoring_interval              = var.db_monitoring_interval\r\n      db_engine_version                   = var.db_engine_version\r\n      db_parameter_group_name             = aws_db_parameter_group.rds_parameter_group.name\r\n      db_instance_type                    = var.db_instance_type\r\n     db_apply_immediately              = var.db_apply_immediately\r\n      allow_major_version_upgrade         = var.db_allow_major_version_upgrade\r\n      db_backup_plan                      = var.backup_plan_pgsql\r\n     db_backup_retention_period          = 35\r\n     db_backup_window                    = \"00:00-02:00\"\r\n      \r\n    }\r\n    \r\n    resource \"aws_db_parameter_group\" \"rds_parameter_group\" {\r\n      name = \"events-consents-events-consents-postgres14\"\r\n      description = var.stack\r\n      family      = var.db_param_group_family\r\n    \r\n      parameter {\r\n     apply_method = \"pending-reboot\"  \r\n        name  = \"client_encoding\"\r\n        value = \"UTF8\"\r\n      }\r\n    \r\n      lifecycle {\r\n        create_before_destroy = true\r\n      }\r\n    \r\n      tags = {\r\n        Name        = \"${var.environment}-${var.stack}-rds-db-pg\"\r\n        Stack       = var.stack\r\n        Environment = var.environment\r\n        Description = var.stack\r\n      }\r\n    }\r\n\r\ni created a parameter group and passed that as db_parameter_group_name to the module and in the module , the first parameter group is for family 10 and i dont want to delete it and the second db group for family 14, in this case i am checking for count if the value passed from root then dont create as the family is for psotgre14 is created from root itself and then in the resource for instance i pass the same , not sure if the solution is correct but this worked for me , thanks\r\n\r\n    resource \"aws_db_parameter_group\" \"db_parameter_group\" {\r\n      \r\n      name        = \"${var.stack}-${var.app_name}-rds-db-pg-${var.environment}\"\r\n      description = var.description\r\n      family      = var.db_param_group_family\r\n    \r\n      parameter {\r\n        name  = \"client_encoding\"\r\n        value = \"UTF8\"\r\n      }\r\n    \r\n      tags = {\r\n        Name        = \"${var.stack}-${var.app_name}-rds-db-pg-${var.environment}\"\r\n        Stack       = var.stack\r\n        Environment = var.environment\r\n        Description = var.description\r\n      }\r\n    }\r\n    \r\n    resource \"aws_db_parameter_group\" \"db_parameter_group_20230523\" {\r\n      count = var.db_parameter_group_name == \"\" ? 1 : 0\r\n      name        = \"${var.stack}-${var.app_name}-rds-db-pg-${var.environment}\"\r\n      description = var.description\r\n      family      = var.db_param_group_family\r\n    \r\n      parameter {\r\n        name  = \"client_encoding\"\r\n        value = \"UTF8\"\r\n      }\r\n    \r\n      tags = {\r\n        Name        = \"${var.stack}-${var.app_name}-rds-db-pg-${var.environment}\"\r\n        Stack       = var.stack\r\n        Environment = var.environment\r\n        Description = var.description\r\n      }\r\n    }\r\n    \r\n    resource \"aws_db_instance\" \"db_master\" {\r\n     \r\n      parameter_group_name            = var.db_parameter_group_name == \"\" ? aws_db_parameter_group.db_parameter_group_20230523[0].name : var.db_parameter_group_name", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "fixed this , for any one in future module \"rds_pgsql\" { source = \"./modules/aws-rds-pgsql\" stack = var.stack environment = var.environment app_name = var.app description = var.app db_username = data.aws_kms_secrets.rds.plaintext[\"master_username\"] db_password = data.aws_kms_secrets.rds.plaintext[\"master_password\"] db_name = var.db_name security_group_db_access = flatten([module.db_subnets.cidr_blocks, module.private_app_subnets.cidr_blocks]) db_monitoring_interval = var.db_monitoring_interval db_engine_version = var.db_engine_version db_parameter_group_name = aws_db_parameter_group.rds_parameter_group.name db_instance_type = var.db_instance_type db_apply_immediately = var.db_apply_immediately allow_major_version_upgrade = var.db_allow_major_version_upgrade db_backup_plan = var.backup_plan_pgsql db_backup_retention_period = 35 db_backup_window = \"00:00-02:00\" } resource \"aws_db_parameter_group\" \"rds_parameter_group\" { name = \"events-consents-events-consents-postgres14\" description = var.stack family = var.db_param_group_family parameter { apply_method = \"pending-reboot\" name = \"client_encoding\" value = \"UTF8\" } lifecycle { create_before_destroy = true } tags = { Name = \"${var.environment}-${var.stack}-rds-db-pg\" Stack = var.stack Environment = var.environment Description = var.stack } } i created a parameter group and passed that as db_parameter_group_name to the module and in the module , the first parameter group is for family 10 and i dont want to delete it and the second db group for family 14, in this case i am checking for count if the value passed from root then dont create as the family is for psotgre14 is created from root itself and then in the resource for instance i pass the same , not sure if the solution is correct but this worked for me , thanks resource \"aws_db_parameter_group\" \"db_parameter_group\" { name = \"${var.stack}-${var.app_name}-rds-db-pg-${var.environment}\" description = var.description family = var.db_param_group_family parameter { name = \"client_encoding\" value = \"UTF8\" } tags = { Name = \"${var.stack}-${var.app_name}-rds-db-pg-${var.environment}\" Stack = var.stack Environment = var.environment Description = var.description } } resource \"aws_db_parameter_group\" \"db_parameter_group_20230523\" { count = var.db_parameter_group_name == \"\" ? 1 : 0 name = \"${var.stack}-${var.app_name}-rds-db-pg-${var.environment}\" description = var.description family = var.db_param_group_family parameter { name = \"client_encoding\" value = \"UTF8\" } tags = { Name = \"${var.stack}-${var.app_name}-rds-db-pg-${var.environment}\" Stack = var.stack Environment = var.environment Description = var.description } } resource \"aws_db_instance\" \"db_master\" { parameter_group_name = var.db_parameter_group_name == \"\" ? aws_db_parameter_group.db_parameter_group_20230523[0].name : var.db_parameter_group_name", "keywords": ["instance"]}]}], "filtered-sentences": [{"source": "Body", "text": "fixed this , for any one in future i created a parameter group and passed that as db_parameter_group_name to the module and in the module , the first parameter group is for family 10 and i dont want to delete it and the second db group for family 14, in this case i am checking for count if the value passed from root then dont create as the family is for psotgre14 is created from root itself and then in the resource for instance i pass the same , not sure if the solution is correct but this worked for me , thanks", "keywords": ["instance"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I am upgrading my RDS postgresql from 10.21 to 14.4 by creating a new family group as well , my idea is to create new family group and upgrade the rds with new family group and then delete the old family group (deleting the old family is not that important as I know that cost money ), I get an error , please check my code My terraform version is 0.13.7 module code , which has the old db parameter group creation error i face i have already added create_before_destroy = true and tried adding the time_sleep as well but still i get the above error , the thing i see is , it first creates the new db parameter group and then start deleting the old db parameter group , my expectation is it first creates new db group then upgrade the db instance and then assing the new db group to the instance and then delete the old db group . ", "keywords": ["cost", "instance"]}]}