{"Id": "69714648", "PostTypeId": "1", "CreationDate": "2021-10-25T20:54:07.907", "Score": "2", "ViewCount": "683", "Body": "<p>I've imported my firebase project as a terraform resource, but got this when ran <code>terraform plan</code>:</p>\n<pre><code>\u2502 Error: Error when reading or editing FirebaseProject &quot;projects/myproject&quot;: googleapi: Error 403: Your application has authenticated using end user credentials from the Google Cloud SDK or Google Cloud Shell which are not supported by the firebase.googleapis.com. We recommend configuring the billing/quota_project setting in gcloud or using a service account through the auth/impersonate_service_account setting. For more information about service accounts and how to use them in your application, see https://cloud.google.com/docs/authentication/. If you are getting this error with curl or similar tools, you may need to specify 'X-Goog-User-Project' HTTP header for quota and billing purposes. For more information regarding 'X-Goog-User-Project' header, please check https://cloud.google.com/apis/docs/system-parameters.\n\u2502 Details:\n\u2502 [\n\u2502   {\n\u2502     &quot;@type&quot;: &quot;type.googleapis.com/google.rpc.ErrorInfo&quot;,\n\u2502     &quot;domain&quot;: &quot;googleapis.com&quot;,\n\u2502     &quot;metadata&quot;: {\n\u2502       &quot;consumer&quot;: &quot;projects/774686551450&quot;,\n\u2502       &quot;service&quot;: &quot;firebase.googleapis.com&quot;\n\u2502     },\n\u2502     &quot;reason&quot;: &quot;SERVICE_DISABLED&quot;\n\u2502   }\n\u2502 ]\n\u2502 \n\u2502   with google_firebase_project.default,\n\u2502   on main.tf line 27, in resource &quot;google_firebase_project&quot; &quot;default&quot;:\n\u2502   27: resource &quot;google_firebase_project&quot; &quot;default&quot; {\n</code></pre>\n<p>If I set the <code>GOOGLE_APPLICATION_CREDENTIALS</code> env var to a service account of that project, it seems to work, but I'd like to avoid it as it is required to re-export that variable each time I'm changing environment.</p>\n<p>I've authenticated to <code>gcloud</code> via my user, which is admin for all the relevant project.</p>\n", "OwnerUserId": "5151909", "LastActivityDate": "2022-02-10T01:30:04.347", "Title": "Terraform auth problem with the google_firebase_project resource", "Tags": "<firebase><terraform><terraform-provider-gcp>", "AnswerCount": "1", "CommentCount": "3", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "123227320", "PostId": "69714648", "Score": "0", "Text": "If you have already created the service account for that project, could you try authenticating the Cloud SDK with `gcloud auth activate-service-account service_account_email --key-file=/path/to/your/service/account/keyfile.json`\nMore info here - https://cloud.google.com/sdk/gcloud/reference/auth/activate-service-account", "CreationDate": "2021-10-25T21:16:17.893", "UserId": "10846194", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "123227378", "PostId": "69714648", "Score": "0", "Text": "@st_rt_dl_8 I want to avoid the service account altogether, as it require to switch each time I'm deploying to a different environment.", "CreationDate": "2021-10-25T21:19:41.173", "UserId": "5151909", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "125110902", "PostId": "69714648", "Score": "0", "Text": "Were you able to figure this out? I'm facing the same issue. Service account is not an option for me either", "CreationDate": "2022-01-19T12:09:55.773", "UserId": "1889452", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "256602729", "PostHistoryTypeId": "2", "PostId": "69714648", "RevisionGUID": "9781e741-5ca9-4a83-872f-7655a0602b5b", "CreationDate": "2021-10-25T20:54:07.907", "UserId": "5151909", "Text": "\r\nI've imported my firebase project as a terraform resource, but got this when ran `terraform plan`:\r\n\r\n```\r\n\u2502 Error: Error when reading or editing FirebaseProject \"projects/myproject\": googleapi: Error 403: Your application has authenticated using end user credentials from the Google Cloud SDK or Google Cloud Shell which are not supported by the firebase.googleapis.com. We recommend configuring the billing/quota_project setting in gcloud or using a service account through the auth/impersonate_service_account setting. For more information about service accounts and how to use them in your application, see https://cloud.google.com/docs/authentication/. If you are getting this error with curl or similar tools, you may need to specify 'X-Goog-User-Project' HTTP header for quota and billing purposes. For more information regarding 'X-Goog-User-Project' header, please check https://cloud.google.com/apis/docs/system-parameters.\r\n\u2502 Details:\r\n\u2502 [\r\n\u2502   {\r\n\u2502     \"@type\": \"type.googleapis.com/google.rpc.ErrorInfo\",\r\n\u2502     \"domain\": \"googleapis.com\",\r\n\u2502     \"metadata\": {\r\n\u2502       \"consumer\": \"projects/774686551450\",\r\n\u2502       \"service\": \"firebase.googleapis.com\"\r\n\u2502     },\r\n\u2502     \"reason\": \"SERVICE_DISABLED\"\r\n\u2502   }\r\n\u2502 ]\r\n\u2502 \r\n\u2502   with google_firebase_project.default,\r\n\u2502   on main.tf line 27, in resource \"google_firebase_project\" \"default\":\r\n\u2502   27: resource \"google_firebase_project\" \"default\" {\r\n```\r\n\r\nIf I set the `GOOGLE_APPLICATION_CREDENTIALS` env var to a service account of that project, it seems to work, but I'd like to avoid it as it is required to re-export that variable each time I'm changing environment.\r\n\r\nI've authenticated to `gcloud` via my user, which is admin for all the relevant project.\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "We recommend configuring the billing/quota_project setting in gcloud or using a service account through the auth/impersonate_service_account setting. ", "keywords": ["bill"]}, {"source": "Text", "text": "If you are getting this error with curl or similar tools, you may need to specify 'X-Goog-User-Project' HTTP header for quota and billing purposes. ", "keywords": ["bill"]}, {"source": "Text", "text": "\u2502 Details: \u2502 [ \u2502 { \u2502 \"@type\": \"type.googleapis.com/google.rpc.ErrorInfo\", \u2502 \"domain\": \"googleapis.com\", \u2502 \"metadata\": { \u2502 \"consumer\": \"projects/774686551450\", \u2502 \"service\": \"firebase.googleapis.com\" \u2502 }, \u2502 \"reason\": \"SERVICE_DISABLED\" \u2502 } \u2502 ] \u2502 \u2502 with google_firebase_project.default, \u2502 on main.tf line 27, in resource \"google_firebase_project\" \"default\": \u2502 27: resource \"google_firebase_project\" \"default\" { ``` ", "keywords": ["domain"]}, {"source": "Text", "text": "If I set the `GOOGLE_APPLICATION_CREDENTIALS` env var to a service account of that project, it seems to work, but I'd like to avoid it as it is required to re-export that variable each time I'm changing environment. ", "keywords": ["change"]}]}, {"Id": "256602731", "PostHistoryTypeId": "1", "PostId": "69714648", "RevisionGUID": "9781e741-5ca9-4a83-872f-7655a0602b5b", "CreationDate": "2021-10-25T20:54:07.907", "UserId": "5151909", "Text": "Terraform auth problem with the google_firebase_project resource", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "256602732", "PostHistoryTypeId": "3", "PostId": "69714648", "RevisionGUID": "9781e741-5ca9-4a83-872f-7655a0602b5b", "CreationDate": "2021-10-25T20:54:07.907", "UserId": "5151909", "Text": "<firebase><terraform><terraform-provider-gcp>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "71058760", "PostTypeId": "2", "ParentId": "69714648", "CreationDate": "2022-02-10T01:30:04.347", "Score": "1", "Body": "<p>As an external tool, terraform requires <em>some</em> method of authenticating with GCP. You have only two options:</p>\n<ol>\n<li>A service account with the required permissions.</li>\n<li>A GSuite user or group with the required permissions.</li>\n</ol>\n<p>One service or group or user account can be granted permissions on multiple projects, although this has security implications (blast radius mainly) and I wouldn't recommend it.</p>\n<p>Switching accounts when working with different projects might be annoying, but is currently the best way.</p>\n<p>If you're working with GKE, you may be able to leverage their workload identity feature. I'm not exactly sure about how this works, but I believe it enables automatic switching to the correct service account depending on the workload. Ultimately, separate service accounts are still required.</p>\n", "OwnerUserId": "1637320", "LastActivityDate": "2022-02-10T01:30:04.347", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "263799418", "PostHistoryTypeId": "2", "PostId": "71058760", "RevisionGUID": "5b01df02-fa58-4a75-af3f-ad8289777ee2", "CreationDate": "2022-02-10T01:30:04.347", "UserId": "1637320", "Text": "As an external tool, terraform requires _some_ method of authenticating with GCP. You have only two options:\r\n1. A service account with the required permissions.\r\n2. A GSuite user or group with the required permissions.\r\n\r\nOne service or group or user account can be granted permissions on multiple projects, although this has security implications (blast radius mainly) and I wouldn't recommend it.\r\n\r\nSwitching accounts when working with different projects might be annoying, but is currently the best way.\r\n\r\nIf you're working with GKE, you may be able to leverage their workload identity feature. I'm not exactly sure about how this works, but I believe it enables automatic switching to the correct service account depending on the workload. Ultimately, separate service accounts are still required.\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "If you're working with GKE, you may be able to leverage their workload identity feature. ", "keywords": ["feature"]}]}], "filtered-sentences": [{"source": "Body", "text": "If you're working with GKE, you may be able to leverage their workload identity feature. ", "keywords": ["feature"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I've imported my firebase project as a terraform resource, but got this when ran terraform plan: If I set the GOOGLE_APPLICATION_CREDENTIALS env var to a service account of that project, it seems to work, but I'd like to avoid it as it is required to re-export that variable each time I'm changing environment. ", "keywords": ["change"]}]}