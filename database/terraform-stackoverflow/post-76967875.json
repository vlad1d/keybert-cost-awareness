{"Id": "76967875", "PostTypeId": "1", "AcceptedAnswerId": "76968483", "CreationDate": "2023-08-24T09:16:38.020", "Score": "0", "ViewCount": "71", "Body": "<p>I would like to add a new VM to existing resource group in Azure which already contains 3 VMs. While running tf apply, it throws an error saying the resource group already exists.</p>\n", "OwnerUserId": "6216109", "LastActivityDate": "2023-08-25T02:58:03.300", "Title": "How to add new instances in existing resource group in Azure via Terraform?", "Tags": "<azure><terraform>", "AnswerCount": "2", "CommentCount": "7", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "135683451", "PostId": "76967875", "Score": "1", "Text": "Please add any relevant code to the question. But based on your query, you would have to import what you already have into terraform state, and then you would be able to add more instances.", "CreationDate": "2023-08-24T09:19:15.140", "UserId": "8343484", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135683463", "PostId": "76967875", "Score": "0", "Text": "How do I achieve that ?", "CreationDate": "2023-08-24T09:20:07.813", "UserId": "6216109", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135683496", "PostId": "76967875", "Score": "1", "Text": "https://developer.hashicorp.com/terraform/language/import", "CreationDate": "2023-08-24T09:21:56.450", "UserId": "8343484", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135683622", "PostId": "76967875", "Score": "0", "Text": "But it says we can update the resource locally and then apply the changes via Iac. Won't we get the same error saying that the resource group already exists ?", "CreationDate": "2023-08-24T09:32:00.147", "UserId": "6216109", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "But it says we can update the resource locally and then apply the changes via Iac. ", "keywords": ["change"]}]}, {"Id": "135683637", "PostId": "76967875", "Score": "1", "Text": "Yes, you will, but if you don't have anything in terraform, you have to use import or alternatively if there's a resource group data source you can use that, but then all of the other stuff will remain outside of terraform, which is not a good idea.", "CreationDate": "2023-08-24T09:33:07.907", "UserId": "8343484", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135683814", "PostId": "76967875", "Score": "0", "Text": "I cannot delete existing infra on Azure. I just need to modify it. Is there any other alternative ?", "CreationDate": "2023-08-24T09:49:21.537", "UserId": "6216109", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135683854", "PostId": "76967875", "Score": "1", "Text": "To refer or create under the existing resource group, using `data` block is an efficient option to achieve. @Shivani", "CreationDate": "2023-08-24T09:53:02.650", "UserId": "19785512", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "To refer or create under the existing resource group, using `data` block is an efficient option to achieve. ", "keywords": ["efficient"]}]}], "history": [{"Id": "297042249", "PostHistoryTypeId": "2", "PostId": "76967875", "RevisionGUID": "5930d0c6-36a1-4e44-8e6f-3a224e254c8f", "CreationDate": "2023-08-24T09:16:38.020", "UserId": "6216109", "Text": "I would like to add a new VM to existing resource group in Azure which already contains 3 VMs. While running tf apply, it throws an error saying the resource group already exists.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "297042251", "PostHistoryTypeId": "1", "PostId": "76967875", "RevisionGUID": "5930d0c6-36a1-4e44-8e6f-3a224e254c8f", "CreationDate": "2023-08-24T09:16:38.020", "UserId": "6216109", "Text": "How to add new instances in existing resource group in Azure via Terraform?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "297042252", "PostHistoryTypeId": "3", "PostId": "76967875", "RevisionGUID": "5930d0c6-36a1-4e44-8e6f-3a224e254c8f", "CreationDate": "2023-08-24T09:16:38.020", "UserId": "6216109", "Text": "<azure><terraform>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "76968483", "PostTypeId": "2", "ParentId": "76967875", "CreationDate": "2023-08-24T10:40:29.963", "Score": "0", "Body": "<blockquote>\n<p>I would like to add a new VM to existing resource group in Azure which already contains 3 VMs. While running tf apply, it throws an error saying the resource group already exists.</p>\n</blockquote>\n<p>If you want to create a <strong>VM</strong> in an existing <code>resource group</code> instead of creating a new resource, you can use a data block to import the existing <code>resource group</code>.</p>\n<p>Here is the updated <code>Terraform</code> code for creating 3 resources in an existing <strong>Resource Group</strong>.</p>\n<pre><code>    provider  &quot;azurerm&quot;  {\n      features  {}\n    }\n    data &quot;azurerm_resource_group&quot; &quot;example&quot; {\n      name = &quot;Existing-RG-Name&quot; \n    }\n    \n  resource  &quot;azurerm_virtual_network&quot;  &quot;vnet&quot;  {\n    name                = &quot;venkat-vnet&quot;\n    address_space       = [&quot;10.0.0.0/16&quot;]\n    location            = data.azurerm_resource_group.example.location\n    resource_group_name = data.azurerm_resource_group.example.name\n  }\n  resource  &quot;azurerm_subnet&quot;  &quot;subnet&quot;  {\n    name                 = &quot;vm-subnet&quot;\n    resource_group_name  = data.azurerm_resource_group.example.name\n    virtual_network_name = azurerm_virtual_network.vnet.name\n    address_prefixes     = [&quot;10.0.1.0/24&quot;]\n  }\n  resource  &quot;azurerm_network_interface&quot;  &quot;samplenic&quot;  {\n    name                = &quot;VM-nic&quot;\n    location            = data.azurerm_resource_group.example.location\n    resource_group_name = data.azurerm_resource_group.example.name\n    ip_configuration  {\n      name                          = &quot;internal&quot;\n      subnet_id                     = azurerm_subnet.subnet.id\n      private_ip_address_allocation = &quot;Dynamic&quot;\n    }\n  }\n  resource  &quot;azurerm_windows_virtual_machine&quot;  &quot;myvm&quot;  {\n    name                  = &quot;venkat-vm&quot;\n    location              = data.azurerm_resource_group.example.location\n    resource_group_name   = data.azurerm_resource_group.example.name\n    network_interface_ids = [azurerm_network_interface.samplenic.id]\n    size                  = &quot;Standard_B1ls&quot;\n    admin_username        = &quot;Venkat&quot;\n    admin_password        = &quot;Password1234!&quot;\n    os_disk  {\n      name                 = &quot;VM-osdisk&quot;\n      caching              = &quot;ReadWrite&quot;\n      storage_account_type = &quot;Standard_LRS&quot;\n    }\n    source_image_reference  {\n      publisher = &quot;MicrosoftWindowsServer&quot;\n      offer     = &quot;WindowsServer&quot;\n      sku       = &quot;2019-Datacenter&quot;\n      version   = &quot;latest&quot;\n    }\n  } \n</code></pre>\n<p><strong>Terraform Apply:</strong>\n<img src=\"https://i.imgur.com/VPF1kzT.png\" alt=\"enter image description here\" /></p>\n<p>Reference: <a href=\"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/data-sources/resource_group\" rel=\"nofollow noreferrer\">Data Source: azurerm_resource_group</a></p>\n", "OwnerUserId": "20465725", "LastEditorUserId": "11502246", "LastEditDate": "2023-08-25T02:58:03.300", "LastActivityDate": "2023-08-25T02:58:03.300", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "297045866", "PostHistoryTypeId": "2", "PostId": "76968483", "RevisionGUID": "ec5d2afc-8473-4d07-be95-cc2972eeef6a", "CreationDate": "2023-08-24T10:40:29.963", "UserId": "20465725", "Text": "> I would like to add a new VM to existing resource group in Azure which already contains 3 VMs. While running tf apply, it throws an error saying the resource group already exists.\r\n\r\nIf you want to create a **VM** in an existing `resource group` instead of creating a new resource, you can use a data block to import the existing `resource group`.\r\n\r\nHere is the updated `Terraform` code for creating 3 resources in an existing **Resource Group**.\r\n\r\n```hcl\r\n    provider  \"azurerm\"  {\r\n    features  {}\r\n    }\r\n    data \"azurerm_resource_group\" \"example\" {\r\n      name = \"Existing-RG-Name\" \r\n      }\r\n    \r\n    resource  \"azurerm_virtual_network\"  \"vnet\"  {\r\n    name = \"venkat-vnet\"\r\n    address_space = [\"10.0.0.0/16\"]\r\n    location = data.azurerm_resource_group.example.location\r\n    resource_group_name = data.azurerm_resource_group.example.name\r\n       }\r\n    resource  \"azurerm_subnet\"  \"subnet\"  {\r\n    name = \"vm-subnet\"\r\n    resource_group_name = data.azurerm_resource_group.example.name\r\n    virtual_network_name = azurerm_virtual_network.vnet.name\r\n    address_prefixes = [\"10.0.1.0/24\"]\r\n    }\r\n    resource  \"azurerm_network_interface\"  \"samplenic\"  {\r\n    name = \"VM-nic\"\r\n    location = data.azurerm_resource_group.example.location\r\n    resource_group_name = data.azurerm_resource_group.example.name\r\n    ip_configuration  {\r\n    name = \"internal\"\r\n    subnet_id = azurerm_subnet.subnet.id\r\n    private_ip_address_allocation = \"Dynamic\"\r\n    }\r\n    }\r\n    resource  \"azurerm_windows_virtual_machine\"  \"myvm\"  {\r\n    name = \"venkat-vm\"\r\n    location = data.azurerm_resource_group.example.location\r\n    resource_group_name = data.azurerm_resource_group.example.name\r\n    network_interface_ids = [azurerm_network_interface.samplenic.id]\r\n    size = \"Standard_B1ls\"\r\n    admin_username = \"Venkat\"\r\n    admin_password = \"Password1234!\"\r\n    os_disk  {\r\n    name = \"VM-osdisk\"\r\n    caching = \"ReadWrite\"\r\n    storage_account_type = \"Standard_LRS\"\r\n    }\r\n    source_image_reference  {\r\n    publisher = \"MicrosoftWindowsServer\"\r\n    offer = \"WindowsServer\"\r\n    sku = \"2019-Datacenter\"\r\n    version = \"latest\"\r\n    }\r\n    } \r\n  ```\r\n\r\n**Terraform Apply:**\r\n![enter image description here](https://i.imgur.com/VPF1kzT.png)\r\n\r\nReference: [Data Source: azurerm_resource_group](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/data-sources/resource_group)\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "```hcl provider \"azurerm\" { features {} } data \"azurerm_resource_group\" \"example\" { name = \"Existing-RG-Name\" } resource \"azurerm_virtual_network\" \"vnet\" { name = \"venkat-vnet\" address_space = [\"10.0.0.0/16\"] location = data.azurerm_resource_group.example.location resource_group_name = data.azurerm_resource_group.example.name } resource \"azurerm_subnet\" \"subnet\" { name = \"vm-subnet\" resource_group_name = data.azurerm_resource_group.example.name virtual_network_name = azurerm_virtual_network.vnet.name address_prefixes = [\"10.0.1.0/24\"] } resource \"azurerm_network_interface\" \"samplenic\" { name = \"VM-nic\" location = data.azurerm_resource_group.example.location resource_group_name = data.azurerm_resource_group.example.name ip_configuration { name = \"internal\" subnet_id = azurerm_subnet.subnet.id private_ip_address_allocation = \"Dynamic\" } } resource \"azurerm_windows_virtual_machine\" \"myvm\" { name = \"venkat-vm\" location = data.azurerm_resource_group.example.location resource_group_name = data.azurerm_resource_group.example.name network_interface_ids = [azurerm_network_interface.samplenic.id] size = \"Standard_B1ls\" admin_username = \"Venkat\" admin_password = \"Password1234!\" os_disk { name = \"VM-osdisk\" caching = \"ReadWrite\" storage_account_type = \"Standard_LRS\" } source_image_reference { publisher = \"MicrosoftWindowsServer\" offer = \"WindowsServer\" sku = \"2019-Datacenter\" version = \"latest\" } } ``` ", "keywords": ["provider"]}]}, {"Id": "297045868", "PostHistoryTypeId": "33", "PostId": "76968483", "RevisionGUID": "5ffd97cc-f098-440b-bbcd-42caa1bfb9fc", "CreationDate": "2023-08-24T10:40:29.963", "UserId": "-1010", "Comment": "335011", "filtered-sentences": []}, {"Id": "297077294", "PostHistoryTypeId": "5", "PostId": "76968483", "RevisionGUID": "e4698148-7e58-4635-af18-8569eebc5911", "CreationDate": "2023-08-25T02:58:03.300", "UserId": "11502246", "Comment": "prettify tf code", "Text": "> I would like to add a new VM to existing resource group in Azure which already contains 3 VMs. While running tf apply, it throws an error saying the resource group already exists.\r\n\r\nIf you want to create a **VM** in an existing `resource group` instead of creating a new resource, you can use a data block to import the existing `resource group`.\r\n\r\nHere is the updated `Terraform` code for creating 3 resources in an existing **Resource Group**.\r\n\r\n```hcl\r\n    provider  \"azurerm\"  {\r\n      features  {}\r\n    }\r\n    data \"azurerm_resource_group\" \"example\" {\r\n      name = \"Existing-RG-Name\" \r\n    }\r\n    \r\n  resource  \"azurerm_virtual_network\"  \"vnet\"  {\r\n    name                = \"venkat-vnet\"\r\n    address_space       = [\"10.0.0.0/16\"]\r\n    location            = data.azurerm_resource_group.example.location\r\n    resource_group_name = data.azurerm_resource_group.example.name\r\n  }\r\n  resource  \"azurerm_subnet\"  \"subnet\"  {\r\n    name                 = \"vm-subnet\"\r\n    resource_group_name  = data.azurerm_resource_group.example.name\r\n    virtual_network_name = azurerm_virtual_network.vnet.name\r\n    address_prefixes     = [\"10.0.1.0/24\"]\r\n  }\r\n  resource  \"azurerm_network_interface\"  \"samplenic\"  {\r\n    name                = \"VM-nic\"\r\n    location            = data.azurerm_resource_group.example.location\r\n    resource_group_name = data.azurerm_resource_group.example.name\r\n    ip_configuration  {\r\n      name                          = \"internal\"\r\n      subnet_id                     = azurerm_subnet.subnet.id\r\n      private_ip_address_allocation = \"Dynamic\"\r\n    }\r\n  }\r\n  resource  \"azurerm_windows_virtual_machine\"  \"myvm\"  {\r\n    name                  = \"venkat-vm\"\r\n    location              = data.azurerm_resource_group.example.location\r\n    resource_group_name   = data.azurerm_resource_group.example.name\r\n    network_interface_ids = [azurerm_network_interface.samplenic.id]\r\n    size                  = \"Standard_B1ls\"\r\n    admin_username        = \"Venkat\"\r\n    admin_password        = \"Password1234!\"\r\n    os_disk  {\r\n      name                 = \"VM-osdisk\"\r\n      caching              = \"ReadWrite\"\r\n      storage_account_type = \"Standard_LRS\"\r\n    }\r\n    source_image_reference  {\r\n      publisher = \"MicrosoftWindowsServer\"\r\n      offer     = \"WindowsServer\"\r\n      sku       = \"2019-Datacenter\"\r\n      version   = \"latest\"\r\n    }\r\n  } \r\n  ```\r\n\r\n**Terraform Apply:**\r\n![enter image description here](https://i.imgur.com/VPF1kzT.png)\r\n\r\nReference: [Data Source: azurerm_resource_group](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/data-sources/resource_group)\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "```hcl provider \"azurerm\" { features {} } data \"azurerm_resource_group\" \"example\" { name = \"Existing-RG-Name\" } resource \"azurerm_virtual_network\" \"vnet\" { name = \"venkat-vnet\" address_space = [\"10.0.0.0/16\"] location = data.azurerm_resource_group.example.location resource_group_name = data.azurerm_resource_group.example.name } resource \"azurerm_subnet\" \"subnet\" { name = \"vm-subnet\" resource_group_name = data.azurerm_resource_group.example.name virtual_network_name = azurerm_virtual_network.vnet.name address_prefixes = [\"10.0.1.0/24\"] } resource \"azurerm_network_interface\" \"samplenic\" { name = \"VM-nic\" location = data.azurerm_resource_group.example.location resource_group_name = data.azurerm_resource_group.example.name ip_configuration { name = \"internal\" subnet_id = azurerm_subnet.subnet.id private_ip_address_allocation = \"Dynamic\" } } resource \"azurerm_windows_virtual_machine\" \"myvm\" { name = \"venkat-vm\" location = data.azurerm_resource_group.example.location resource_group_name = data.azurerm_resource_group.example.name network_interface_ids = [azurerm_network_interface.samplenic.id] size = \"Standard_B1ls\" admin_username = \"Venkat\" admin_password = \"Password1234!\" os_disk { name = \"VM-osdisk\" caching = \"ReadWrite\" storage_account_type = \"Standard_LRS\" } source_image_reference { publisher = \"MicrosoftWindowsServer\" offer = \"WindowsServer\" sku = \"2019-Datacenter\" version = \"latest\" } } ``` ", "keywords": ["provider"]}]}, {"Id": "297077295", "PostHistoryTypeId": "24", "PostId": "76968483", "RevisionGUID": "e4698148-7e58-4635-af18-8569eebc5911", "CreationDate": "2023-08-25T02:58:03.300", "Comment": "Proposed by 11502246 approved by 8343484, 20465725 edit id of 5549079", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "76969871", "PostTypeId": "2", "ParentId": "76967875", "CreationDate": "2023-08-24T13:38:02.147", "Score": "0", "Body": "<p>You can use terraform module by Azure <a href=\"https://github.com/Azure/terraform-azurerm-compute\" rel=\"nofollow noreferrer\">https://github.com/Azure/terraform-azurerm-compute</a></p>\n<pre><code>provider  &quot;azurerm&quot;  {\n  features  {}\n}\ndata &quot;azurerm_resource_group&quot; &quot;example&quot; {\n  name = &quot;Existing-RG-Name&quot; \n}\nmodule &quot;linuxservers&quot; {\n  source              = &quot;Azure/compute/azurerm&quot;\n  resource_group_name = data.azurerm_resource_group.example.name\n  vm_os_simple        = &quot;UbuntuServer&quot;\n  public_ip_dns       = [&quot;linsimplevmips&quot;]\n  vnet_subnet_id      = module.network.vnet_subnets[0]\n}\n    \n\n</code></pre>\n", "OwnerUserId": "11502246", "LastActivityDate": "2023-08-24T13:38:02.147", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "297053512", "PostHistoryTypeId": "2", "PostId": "76969871", "RevisionGUID": "1585201f-ef88-44f8-b8f3-11673366e78a", "CreationDate": "2023-08-24T13:38:02.147", "UserId": "11502246", "Text": "You can use terraform module by Azure https://github.com/Azure/terraform-azurerm-compute\r\n```terraform\r\nprovider  \"azurerm\"  {\r\n  features  {}\r\n}\r\ndata \"azurerm_resource_group\" \"example\" {\r\n  name = \"Existing-RG-Name\" \r\n}\r\nmodule \"linuxservers\" {\r\n  source              = \"Azure/compute/azurerm\"\r\n  resource_group_name = data.azurerm_resource_group.example.name\r\n  vm_os_simple        = \"UbuntuServer\"\r\n  public_ip_dns       = [\"linsimplevmips\"]\r\n  vnet_subnet_id      = module.network.vnet_subnets[0]\r\n}\r\n    \r\n\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "You can use terraform module by Azure https://github.com/Azure/terraform-azurerm-compute ```terraform provider \"azurerm\" { features {} } data \"azurerm_resource_group\" \"example\" { name = \"Existing-RG-Name\" } module \"linuxservers\" { source = \"Azure/compute/azurerm\" resource_group_name = data.azurerm_resource_group.example.name vm_os_simple = \"UbuntuServer\" public_ip_dns = [\"linsimplevmips\"] vnet_subnet_id = module.network.vnet_subnets[0] } ```", "keywords": ["provider"]}]}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": []}