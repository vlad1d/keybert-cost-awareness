{"Id": "62651102", "PostTypeId": "1", "CreationDate": "2020-06-30T05:55:49.553", "Score": "5", "ViewCount": "3899", "Body": "<p>I am executing <code>terraform.exe apply</code> on windows and receive the error:</p>\n<pre><code>azurerm_subnet.subnet: Refreshing state... [id=&lt;...&gt;]\nazurerm_app_service_plan.service_plan: Refreshing state... [id=&lt;...&gt;]\nazurerm_app_service.app: Refreshing state... [id=&lt;...&gt;]\nazurerm_app_service_virtual_network_swift_connection.test: Refreshing state... [id=&lt;...&gt;]\nazurerm_app_service_slot.production: Refreshing state... [id=&lt;...&gt;]\nazurerm_app_service_slot.staging: Refreshing state... [id=&lt;...&gt;]\n\nError: ID was missing the `slots` element\n</code></pre>\n<p>I am attempting to build an Azure WebApp with different slots and docker images with terraform. It should deploy an Azure WebApp with different slots based on Dockerfile images.</p>\n<p>The first run is without an error. I receive the error when I refresh the resources.</p>\n<p>I am using azurerm provider version 2.1.0 and the azurerm backend.</p>\n<p>See the following terraform file:</p>\n<pre><code>terraform {\n  backend &quot;azurerm&quot; {\n    resource_group_name  = &quot;...&quot;\n    storage_account_name = &quot;...&quot;\n    container_name       = &quot;...&quot;\n    key                  = &quot;...&quot;\n\n    subscription_id      = &quot;...&quot;\n    tenant_id            = &quot;...&quot;\n\n    sas_token            = &quot;....&quot;\n  }\n}\n\nprovider &quot;azurerm&quot; {\n  version = &quot;~&gt;2.1.0&quot;\n  features {}\n}\n\nvariable &quot;environment&quot; {\n  default = &quot;production&quot;\n}\nvariable &quot;resource_group&quot; {}\nvariable &quot;location&quot; {\n  default = &quot;West Europe&quot;\n}\nvariable &quot;app_name&quot; {}\nvariable &quot;network&quot; {}\nvariable &quot;subnet_prefix&quot; {}\n\nresource &quot;azurerm_app_service_plan&quot; &quot;service_plan&quot; {\n  name                = var.app_name\n  location            = var.location\n  resource_group_name = var.resource_group\n\n  kind = &quot;Linux&quot;\n  reserved = true\n\n  sku {\n    tier = &quot;Standard&quot;\n    size = &quot;S1&quot;\n  }\n\n  tags = {\n    Environment = var.environment\n    Cost        = &quot;\u20ac0,081/Stunde&quot;\n  }\n}\n\nresource &quot;azurerm_app_service&quot; &quot;app&quot; {\n  name                = var.app_name\n  location            = var.location\n  resource_group_name = var.resource_group\n  app_service_plan_id = azurerm_app_service_plan.service_plan.id\n  depends_on = [azurerm_app_service_plan.service_plan]\n\n  site_config {\n    linux_fx_version = &quot;DOCKER|&lt;...&gt;.azurecr.io/&lt;...&gt;:0.0.1-95&quot;\n    always_on        = &quot;true&quot;\n  }\n\n  app_settings = {\n    ...\n  }\n\n  storage_account {\n    access_key = &quot;...&quot;\n    account_name = &quot;...&quot;\n    name = &quot;certs&quot;\n    share_name = &quot;certs&quot;\n    type = &quot;AzureBlob&quot;\n    mount_path = &quot;/var/certs&quot;\n  }\n\n  tags = {\n    Environment = var.environment\n  }\n}\n\nresource &quot;azurerm_app_service_slot&quot; &quot;production&quot; {\n  name                = var.app_name\n  app_service_name    = azurerm_app_service.app.name\n  location            = azurerm_app_service.app.location\n  resource_group_name = var.resource_group\n  app_service_plan_id = azurerm_app_service_plan.service_plan.id\n\n  depends_on = [azurerm_app_service.app]\n\n  site_config {\n    linux_fx_version = &quot;DOCKER|&lt;...&gt;.azurecr.io/&lt;...&gt;:0.0.1-95&quot;\n    always_on        = &quot;true&quot;\n\n  }\n\n  app_settings = {\n    &quot;SOME_KEY&quot; = &quot;some-value&quot;\n  }\n}\n\nresource &quot;azurerm_app_service_slot&quot; &quot;staging&quot; {\n  name                = &quot;staging&quot;\n  app_service_name    = azurerm_app_service.app.name\n  location            = azurerm_app_service.app.location\n  resource_group_name = var.resource_group\n  app_service_plan_id = azurerm_app_service_plan.service_plan.id\n\n  depends_on = [azurerm_app_service.app]\n\n  site_config {\n    linux_fx_version = &quot;DOCKER|&lt;...&gt;.azurecr.io/&lt;...&gt;:latest&quot;\n    always_on        = &quot;true&quot;\n  }\n}\n\nresource &quot;azurerm_subnet&quot; &quot;subnet&quot; {\n  name                 = var.app_name\n  resource_group_name  = var.resource_group\n  virtual_network_name = var.network\n  address_prefix       = var.subnet_prefix\n\n  delegation {\n    name = var.app_name\n\n    service_delegation {\n      name    = &quot;Microsoft.Web/serverFarms&quot;\n      actions = [\n        &quot;Microsoft.Network/networkinterfaces/*&quot;,\n        &quot;Microsoft.Network/virtualNetworks/subnets/action&quot;,\n        &quot;Microsoft.Network/virtualNetworks/subnets/join/action&quot;,\n        &quot;Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action&quot;,\n        &quot;Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action&quot;\n      ]\n    }\n  }\n}\n\nresource &quot;azurerm_app_service_virtual_network_swift_connection&quot; &quot;test&quot; {\n  app_service_id = azurerm_app_service.app.id\n  subnet_id      = azurerm_subnet.subnet.id\n  depends_on = [\n    azurerm_app_service.app,\n    azurerm_subnet.subnet\n  ]\n}\n</code></pre>\n<p>What does a missing slots element mean in this context?</p>\n", "OwnerUserId": "11441190", "LastEditorUserId": "3665058", "LastEditDate": "2020-07-23T06:59:01.237", "LastActivityDate": "2022-04-26T18:41:12.170", "Title": "The Terraform CLI get a Error: ID was missing the `slots` element", "Tags": "<azure><runtime-error><terraform><azure-web-app-service><terraform-provider-azure>", "AnswerCount": "1", "CommentCount": "4", "FavoriteCount": "0", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "110793941", "PostId": "62651102", "Score": "0", "Text": "Share the whole Terraform code, please.", "CreationDate": "2020-06-30T06:08:58.873", "UserId": "9773937", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "110797195", "PostId": "62651102", "Score": "0", "Text": "You should also edit your question to include the full error output including the surrounding context that shows where the error is coming from.", "CreationDate": "2020-06-30T08:10:23.260", "UserId": "2291321", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "110800923", "PostId": "62651102", "Score": "0", "Text": "Does this issue can be reproduced every time? To narrow down this issue, if you remove the `resource \"azurerm_app_service_slot\"` when terraform init, plan, apply, Is this issue still appearing? The configuration files looks correct.", "CreationDate": "2020-06-30T10:12:39.077", "UserId": "9833314", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "110824471", "PostId": "62651102", "Score": "0", "Text": "I'm not familiar enough with this provider to be able to say exactly what's going on here, but this error seems to come from [the resource ID parsing in the Azure provider](https://github.com/terraform-providers/terraform-provider-azurerm/blob/8174fd51cada9a1fd982d2e7e9fe36a5d70ce2b1/azurerm/helpers/azure/resourceid.go#L97) and seems to mean that one of these resource instances is supposed to have an id containing a `/slots/...` portion. I'd run `terraform show` and look at the `id` of each instance to see if any of them look strange.", "CreationDate": "2020-07-01T01:24:02.217", "UserId": "281848", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I'm not familiar enough with this provider to be able to say exactly what's going on here, but this error seems to come from [the resource ID parsing in the Azure provider](https://github.com/terraform-providers/terraform-provider-azurerm/blob/8174fd51cada9a1fd982d2e7e9fe36a5d70ce2b1/azurerm/helpers/azure/resourceid.go#L97) and seems to mean that one of these resource instances is supposed to have an id containing a `/slots/...` portion. ", "keywords": ["provider"]}, {"source": "Text", "text": "I'd run `terraform show` and look at the `id` of each instance to see if any of them look strange.", "keywords": ["instance"]}]}], "history": [{"Id": "225549664", "PostHistoryTypeId": "2", "PostId": "62651102", "RevisionGUID": "839a1b87-1d75-47d6-ae15-ecd9d5b1ba5a", "CreationDate": "2020-06-30T05:55:49.553", "UserId": "11441190", "Text": "when i make ```terraform apply``` became i the the error:\r\n```\r\nError: ID was missing the `slots` element\r\n```\r\n\r\nI will create a azure webapp with different slots and docker images. \r\n\r\nin my terrafom file:\r\n\r\n```tf\r\nresource \"azurerm_app_service\" \"app\" {\r\n  name                = var.app_name\r\n  ...\r\n\r\n  site_config {\r\n    linux_fx_version = \"DOCKER|<register>.azurecr.io/<repo>\"\r\n    always_on        = \"true\"\r\n  }\r\n\r\n  app_settings = {\r\n\r\n  }\r\n\r\n  storage_account {\r\n    ...\r\n  }\r\n}\r\n\r\nresource \"azurerm_app_service_slot\" \"production\" {\r\n  name                = var.app_name\r\n  ...\r\n\r\n  site_config {\r\n    linux_fx_version = \"DOCKER|<register>.azurecr.io/<repo>\"\r\n    always_on        = \"true\"\r\n\r\n  }\r\n\r\n  app_settings = {\r\n    \"SOME_KEY\" = \"some-value\"\r\n  }\r\n}\r\n\r\nresource \"azurerm_app_service_slot\" \"staging\" {\r\n  name                = \"staging\"\r\n  ...\r\n\r\n  site_config {\r\n    linux_fx_version = \"DOCKER|<register>.azurecr.io/<repo>\"\r\n    always_on        = \"true\"\r\n  }\r\n}\r\n```\r\n\r\nI use terraform azurerm provider version 2.1.0 and the azurerm backend. \r\n\r\nCan who help?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I use terraform azurerm provider version 2.1.0 and the azurerm backend", "keywords": ["provider"]}]}, {"Id": "225549665", "PostHistoryTypeId": "1", "PostId": "62651102", "RevisionGUID": "839a1b87-1d75-47d6-ae15-ecd9d5b1ba5a", "CreationDate": "2020-06-30T05:55:49.553", "UserId": "11441190", "Text": "azure terraform Error: ID was missing the `slots` element", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "225549666", "PostHistoryTypeId": "3", "PostId": "62651102", "RevisionGUID": "839a1b87-1d75-47d6-ae15-ecd9d5b1ba5a", "CreationDate": "2020-06-30T05:55:49.553", "UserId": "11441190", "Text": "<azure><runtime-error><terraform><azure-web-app-service><terraform-provider-azure>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "225555877", "PostHistoryTypeId": "5", "PostId": "62651102", "RevisionGUID": "1b9a291e-73ac-464a-b2e9-71d3a54d7d3e", "CreationDate": "2020-06-30T07:48:44.640", "UserId": "11441190", "Comment": "complett the example code", "Text": "when i make ```terraform apply``` became i the the error:\r\n\r\nError: ID was missing the `slots` element\r\n\r\n\r\nI will create a azure webapp with different slots and docker images with terraform cli. Its would deploy a Azure WebApp with different slots based on Dockerfiles/ -Images.\r\n\r\nThe error came when i apply the plan by refresh all resources. The first run is without an error, only be the second run became i an error.\r\n\r\nI use terraform azurerm provider version 2.1.0 and the azurerm backend. \r\n\r\nin my terrafom file:\r\n\r\n```tf\r\nterraform {\r\n  backend \"azurerm\" {\r\n    resource_group_name  = \"...\"\r\n    storage_account_name = \"...\"\r\n    container_name       = \"...\"\r\n    key                  = \"...\"\r\n\r\n    subscription_id      = \"...\"\r\n    tenant_id            = \"...\"\r\n\r\n    sas_token            = \"....\"\r\n  }\r\n}\r\n\r\nprovider \"azurerm\" {\r\n  version = \"~>2.1.0\"\r\n  features {}\r\n}\r\n\r\nvariable \"environment\" {\r\n  default = \"production\"\r\n}\r\nvariable \"resource_group\" {}\r\nvariable \"location\" {\r\n  default = \"West Europe\"\r\n}\r\nvariable \"app_name\" {}\r\nvariable \"network\" {}\r\nvariable \"subnet_prefix\" {}\r\n\r\nresource \"azurerm_app_service_plan\" \"service_plan\" {\r\n  name                = var.app_name\r\n  location            = var.location\r\n  resource_group_name = var.resource_group\r\n\r\n  kind = \"Linux\"\r\n  reserved = true\r\n\r\n  sku {\r\n    tier = \"Standard\"\r\n    size = \"S1\"\r\n  }\r\n\r\n  tags = {\r\n    Environment = var.environment\r\n    Cost        = \"\u20ac0,081/Stunde\"\r\n  }\r\n}\r\n\r\nresource \"azurerm_app_service\" \"app\" {\r\n  name                = var.app_name\r\n  location            = var.location\r\n  resource_group_name = var.resource_group\r\n  app_service_plan_id = azurerm_app_service_plan.service_plan.id\r\n  depends_on = [azurerm_app_service_plan.service_plan]\r\n\r\n  site_config {\r\n    linux_fx_version = \"DOCKER|<...>.azurecr.io/<...>:0.0.1-95\"\r\n    always_on        = \"true\"\r\n  }\r\n\r\n  app_settings = {\r\n    ...\r\n  }\r\n\r\n  storage_account {\r\n    access_key = \"...\"\r\n    account_name = \"...\"\r\n    name = \"certs\"\r\n    share_name = \"certs\"\r\n    type = \"AzureBlob\"\r\n    mount_path = \"/var/certs\"\r\n  }\r\n\r\n  tags = {\r\n    Environment = var.environment\r\n  }\r\n}\r\n\r\nresource \"azurerm_app_service_slot\" \"production\" {\r\n  name                = var.app_name\r\n  app_service_name    = azurerm_app_service.app.name\r\n  location            = azurerm_app_service.app.location\r\n  resource_group_name = var.resource_group\r\n  app_service_plan_id = azurerm_app_service_plan.service_plan.id\r\n\r\n  depends_on = [azurerm_app_service.app]\r\n\r\n  site_config {\r\n    linux_fx_version = \"DOCKER|<...>.azurecr.io/<...>:0.0.1-95\"\r\n    always_on        = \"true\"\r\n\r\n  }\r\n\r\n  app_settings = {\r\n    \"SOME_KEY\" = \"some-value\"\r\n  }\r\n}\r\n\r\nresource \"azurerm_app_service_slot\" \"staging\" {\r\n  name                = \"staging\"\r\n  app_service_name    = azurerm_app_service.app.name\r\n  location            = azurerm_app_service.app.location\r\n  resource_group_name = var.resource_group\r\n  app_service_plan_id = azurerm_app_service_plan.service_plan.id\r\n\r\n  depends_on = [azurerm_app_service.app]\r\n\r\n  site_config {\r\n    linux_fx_version = \"DOCKER|<...>.azurecr.io/<...>:latest\"\r\n    always_on        = \"true\"\r\n  }\r\n}\r\n\r\nresource \"azurerm_subnet\" \"subnet\" {\r\n  name                 = var.app_name\r\n  resource_group_name  = var.resource_group\r\n  virtual_network_name = var.network\r\n  address_prefix       = var.subnet_prefix\r\n\r\n  delegation {\r\n    name = var.app_name\r\n\r\n    service_delegation {\r\n      name    = \"Microsoft.Web/serverFarms\"\r\n      actions = [\r\n        \"Microsoft.Network/networkinterfaces/*\",\r\n        \"Microsoft.Network/virtualNetworks/subnets/action\",\r\n        \"Microsoft.Network/virtualNetworks/subnets/join/action\",\r\n        \"Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action\",\r\n        \"Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n\r\nresource \"azurerm_app_service_virtual_network_swift_connection\" \"test\" {\r\n  app_service_id = azurerm_app_service.app.id\r\n  subnet_id      = azurerm_subnet.subnet.id\r\n  depends_on = [\r\n    azurerm_app_service.app,\r\n    azurerm_subnet.subnet\r\n  ]\r\n}\r\n```\r\n\r\nCan who help?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I use terraform azurerm provider version 2.1.0 and the azurerm backend. ", "keywords": ["provider"]}, {"source": "Text", "text": "in my terrafom file: ```tf terraform { backend \"azurerm\" { resource_group_name = \"...\" storage_account_name = \"...\" container_name = \"...\" key = \"...\" subscription_id = \"...\" tenant_id = \"...\" sas_token = \"....\" } } provider \"azurerm\" { version = \"~", "keywords": ["provider"]}, {"source": "Text", "text": ">2.1.0\" features {} } variable \"environment\" { default = \"production\" } variable \"resource_group\" {} variable \"location\" { default = \"West Europe\" } variable \"app_name\" {} variable \"network\" {} variable \"subnet_prefix\" {} resource \"azurerm_app_service_plan\" \"service_plan\" { name = var.app_name location = var.location resource_group_name = var.resource_group kind = \"Linux\" reserved = true sku { tier = \"Standard\" size = \"S1\" } tags = { Environment = var.environment Cost = \"\u20ac0,081/Stunde\" } } resource \"azurerm_app_service\" \"app\" { name = var.app_name location = var.location resource_group_name = var.resource_group app_service_plan_id = azurerm_app_service_plan.service_plan.id depends_on = [azurerm_app_service_plan.service_plan] site_config { linux_fx_version = \"DOCKER|<...>.azurecr.io/<.", "keywords": ["cost"]}, {"source": "Text", "text": ">:0.0.1-95\" always_on = \"true\" } app_settings = { \"SOME_KEY\" = \"some-value\" } } resource \"azurerm_app_service_slot\" \"staging\" { name = \"staging\" app_service_name = azurerm_app_service.app.name location = azurerm_app_service.app.location resource_group_name = var.resource_group app_service_plan_id = azurerm_app_service_plan.service_plan.id depends_on = [azurerm_app_service.app] site_config { linux_fx_version = \"DOCKER|<...>.azurecr.io/<...>:latest\" always_on = \"true\" } } resource \"azurerm_subnet\" \"subnet\" { name = var.app_name resource_group_name = var.resource_group virtual_network_name = var.network address_prefix = var.subnet_prefix delegation { name = var.app_name service_delegation { name = \"Microsoft.Web/serverFarms\" actions = [ \"Microsoft.Network/networkinterfaces/*\", \"Microsoft.Network/virtualNetworks/subnets/action\", \"Microsoft.Network/virtualNetworks/subnets/join/action\", \"Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action\", \"Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action\" ] } } } resource \"azurerm_app_service_virtual_network_swift_connection\" \"test\" { app_service_id = azurerm_app_service.app.id subnet_id = azurerm_subnet.subnet.id depends_on = [ azurerm_app_service.app, azurerm_subnet.subnet ] } ``` ", "keywords": ["test"]}]}, {"Id": "225555878", "PostHistoryTypeId": "4", "PostId": "62651102", "RevisionGUID": "1b9a291e-73ac-464a-b2e9-71d3a54d7d3e", "CreationDate": "2020-06-30T07:48:44.640", "UserId": "11441190", "Comment": "complett the example code", "Text": "The Terraform CLI get a Error: ID was missing the `slots` element", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "225557773", "PostHistoryTypeId": "5", "PostId": "62651102", "RevisionGUID": "fd26ccad-5d38-4c3b-a228-8ecd3cedd11b", "CreationDate": "2020-06-30T08:18:51.647", "UserId": "11441190", "Comment": "added 471 characters in body", "Text": "when i call the cli ```terraform.exe apply``` on windows became i the the error:\r\n\r\n```\r\nazurerm_subnet.subnet: Refreshing state... [id=<...>]\r\nazurerm_app_service_plan.service_plan: Refreshing state... [id=<...>]\r\nazurerm_app_service.app: Refreshing state... [id=<...>]\r\nazurerm_app_service_virtual_network_swift_connection.test: Refreshing state... [id=<...>]\r\nazurerm_app_service_slot.production: Refreshing state... [id=<...>]\r\nazurerm_app_service_slot.staging: Refreshing state... [id=<...>]\r\n\r\nError: ID was missing the `slots` element\r\n```\r\nThis is the complet output.\r\n\r\nI will create a azure webapp with different slots and docker images with terraform cli. Its would deploy a Azure WebApp with different slots based on Dockerfiles/ -Images.\r\n\r\nThe error came when i apply the plan by refresh all resources. The first run is without an error, only be the second run became i an error.\r\n\r\nI use terraform azurerm provider version 2.1.0 and the azurerm backend. \r\n\r\nin my terrafom file:\r\n\r\n```tf\r\nterraform {\r\n  backend \"azurerm\" {\r\n    resource_group_name  = \"...\"\r\n    storage_account_name = \"...\"\r\n    container_name       = \"...\"\r\n    key                  = \"...\"\r\n\r\n    subscription_id      = \"...\"\r\n    tenant_id            = \"...\"\r\n\r\n    sas_token            = \"....\"\r\n  }\r\n}\r\n\r\nprovider \"azurerm\" {\r\n  version = \"~>2.1.0\"\r\n  features {}\r\n}\r\n\r\nvariable \"environment\" {\r\n  default = \"production\"\r\n}\r\nvariable \"resource_group\" {}\r\nvariable \"location\" {\r\n  default = \"West Europe\"\r\n}\r\nvariable \"app_name\" {}\r\nvariable \"network\" {}\r\nvariable \"subnet_prefix\" {}\r\n\r\nresource \"azurerm_app_service_plan\" \"service_plan\" {\r\n  name                = var.app_name\r\n  location            = var.location\r\n  resource_group_name = var.resource_group\r\n\r\n  kind = \"Linux\"\r\n  reserved = true\r\n\r\n  sku {\r\n    tier = \"Standard\"\r\n    size = \"S1\"\r\n  }\r\n\r\n  tags = {\r\n    Environment = var.environment\r\n    Cost        = \"\u20ac0,081/Stunde\"\r\n  }\r\n}\r\n\r\nresource \"azurerm_app_service\" \"app\" {\r\n  name                = var.app_name\r\n  location            = var.location\r\n  resource_group_name = var.resource_group\r\n  app_service_plan_id = azurerm_app_service_plan.service_plan.id\r\n  depends_on = [azurerm_app_service_plan.service_plan]\r\n\r\n  site_config {\r\n    linux_fx_version = \"DOCKER|<...>.azurecr.io/<...>:0.0.1-95\"\r\n    always_on        = \"true\"\r\n  }\r\n\r\n  app_settings = {\r\n    ...\r\n  }\r\n\r\n  storage_account {\r\n    access_key = \"...\"\r\n    account_name = \"...\"\r\n    name = \"certs\"\r\n    share_name = \"certs\"\r\n    type = \"AzureBlob\"\r\n    mount_path = \"/var/certs\"\r\n  }\r\n\r\n  tags = {\r\n    Environment = var.environment\r\n  }\r\n}\r\n\r\nresource \"azurerm_app_service_slot\" \"production\" {\r\n  name                = var.app_name\r\n  app_service_name    = azurerm_app_service.app.name\r\n  location            = azurerm_app_service.app.location\r\n  resource_group_name = var.resource_group\r\n  app_service_plan_id = azurerm_app_service_plan.service_plan.id\r\n\r\n  depends_on = [azurerm_app_service.app]\r\n\r\n  site_config {\r\n    linux_fx_version = \"DOCKER|<...>.azurecr.io/<...>:0.0.1-95\"\r\n    always_on        = \"true\"\r\n\r\n  }\r\n\r\n  app_settings = {\r\n    \"SOME_KEY\" = \"some-value\"\r\n  }\r\n}\r\n\r\nresource \"azurerm_app_service_slot\" \"staging\" {\r\n  name                = \"staging\"\r\n  app_service_name    = azurerm_app_service.app.name\r\n  location            = azurerm_app_service.app.location\r\n  resource_group_name = var.resource_group\r\n  app_service_plan_id = azurerm_app_service_plan.service_plan.id\r\n\r\n  depends_on = [azurerm_app_service.app]\r\n\r\n  site_config {\r\n    linux_fx_version = \"DOCKER|<...>.azurecr.io/<...>:latest\"\r\n    always_on        = \"true\"\r\n  }\r\n}\r\n\r\nresource \"azurerm_subnet\" \"subnet\" {\r\n  name                 = var.app_name\r\n  resource_group_name  = var.resource_group\r\n  virtual_network_name = var.network\r\n  address_prefix       = var.subnet_prefix\r\n\r\n  delegation {\r\n    name = var.app_name\r\n\r\n    service_delegation {\r\n      name    = \"Microsoft.Web/serverFarms\"\r\n      actions = [\r\n        \"Microsoft.Network/networkinterfaces/*\",\r\n        \"Microsoft.Network/virtualNetworks/subnets/action\",\r\n        \"Microsoft.Network/virtualNetworks/subnets/join/action\",\r\n        \"Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action\",\r\n        \"Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n\r\nresource \"azurerm_app_service_virtual_network_swift_connection\" \"test\" {\r\n  app_service_id = azurerm_app_service.app.id\r\n  subnet_id      = azurerm_subnet.subnet.id\r\n  depends_on = [\r\n    azurerm_app_service.app,\r\n    azurerm_subnet.subnet\r\n  ]\r\n}\r\n```\r\n\r\nCan who help?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "when i call the cli ```terraform.exe apply``` on windows became i the the error: ``` azurerm_subnet.subnet: Refreshing state... [id=<...>] azurerm_app_service_plan.service_plan: Refreshing state... [id=<...>] azurerm_app_service.app: Refreshing state... [id=<...>] azurerm_app_service_virtual_network_swift_connection.test: Refreshing state... [id=<...>] azurerm_app_service_slot.production: Refreshing state... [id=<...>] azurerm_app_service_slot.staging: Refreshing state... [id=<...>] Error: ID was missing the `slots` element ``` ", "keywords": ["test"]}, {"source": "Text", "text": "I use terraform azurerm provider version 2.1.0 and the azurerm backend. ", "keywords": ["provider"]}, {"source": "Text", "text": "in my terrafom file: ```tf terraform { backend \"azurerm\" { resource_group_name = \"...\" storage_account_name = \"...\" container_name = \"...\" key = \"...\" subscription_id = \"...\" tenant_id = \"...\" sas_token = \"....\" } } provider \"azurerm\" { version = \"~", "keywords": ["provider"]}, {"source": "Text", "text": ">2.1.0\" features {} } variable \"environment\" { default = \"production\" } variable \"resource_group\" {} variable \"location\" { default = \"West Europe\" } variable \"app_name\" {} variable \"network\" {} variable \"subnet_prefix\" {} resource \"azurerm_app_service_plan\" \"service_plan\" { name = var.app_name location = var.location resource_group_name = var.resource_group kind = \"Linux\" reserved = true sku { tier = \"Standard\" size = \"S1\" } tags = { Environment = var.environment Cost = \"\u20ac0,081/Stunde\" } } resource \"azurerm_app_service\" \"app\" { name = var.app_name location = var.location resource_group_name = var.resource_group app_service_plan_id = azurerm_app_service_plan.service_plan.id depends_on = [azurerm_app_service_plan.service_plan] site_config { linux_fx_version = \"DOCKER|<...>.azurecr.io/<...>:0.0.1-95\" always_on = \"true\" } app_settings = { ... } storage_account { access_key = \"...\" account_name = \"...\" name = \"certs\" share_name = \"certs\" type = \"AzureBlob\" mount_path = \"/var/certs\" } tags = { Environment = var.environment } } resource \"azurerm_app_service_slot\" \"production\" { name = var.app_name app_service_name = azurerm_app_service.app.name location = azurerm_app_service.app.location resource_group_name = var.resource_group app_service_plan_id = azurerm_app_service_plan.service_plan.id depends_on = [azurerm_app_service.app] site_config { linux_fx_version = \"DOCKER|<...>.azurecr.io/<.", "keywords": ["cost"]}, {"source": "Text", "text": ">:0.0.1-95\" always_on = \"true\" } app_settings = { \"SOME_KEY\" = \"some-value\" } } resource \"azurerm_app_service_slot\" \"staging\" { name = \"staging\" app_service_name = azurerm_app_service.app.name location = azurerm_app_service.app.location resource_group_name = var.resource_group app_service_plan_id = azurerm_app_service_plan.service_plan.id depends_on = [azurerm_app_service.app] site_config { linux_fx_version = \"DOCKER|<...>.azurecr.io/<...>:latest\" always_on = \"true\" } } resource \"azurerm_subnet\" \"subnet\" { name = var.app_name resource_group_name = var.resource_group virtual_network_name = var.network address_prefix = var.subnet_prefix delegation { name = var.app_name service_delegation { name = \"Microsoft.Web/serverFarms\" actions = [ \"Microsoft.Network/networkinterfaces/*\", \"Microsoft.Network/virtualNetworks/subnets/action\", \"Microsoft.Network/virtualNetworks/subnets/join/action\", \"Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action\", \"Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action\" ] } } } resource \"azurerm_app_service_virtual_network_swift_connection\" \"test\" { app_service_id = azurerm_app_service.app.id subnet_id = azurerm_subnet.subnet.id depends_on = [ azurerm_app_service.app, azurerm_subnet.subnet ] } ``` ", "keywords": ["test"]}]}, {"Id": "227235798", "PostHistoryTypeId": "5", "PostId": "62651102", "RevisionGUID": "243dd05e-f418-40a0-9e28-cf2c47f47155", "CreationDate": "2020-07-23T06:59:01.237", "UserId": "3665058", "Comment": "Fixed grammar and spelling.  Cleaned up some of the structure to make it more understandable.", "Text": "I am executing ```terraform.exe apply``` on windows and receive the error:\r\n\r\n```\r\nazurerm_subnet.subnet: Refreshing state... [id=<...>]\r\nazurerm_app_service_plan.service_plan: Refreshing state... [id=<...>]\r\nazurerm_app_service.app: Refreshing state... [id=<...>]\r\nazurerm_app_service_virtual_network_swift_connection.test: Refreshing state... [id=<...>]\r\nazurerm_app_service_slot.production: Refreshing state... [id=<...>]\r\nazurerm_app_service_slot.staging: Refreshing state... [id=<...>]\r\n\r\nError: ID was missing the `slots` element\r\n```\r\n\r\nI am attempting to build an Azure WebApp with different slots and docker images with terraform. It should deploy an Azure WebApp with different slots based on Dockerfile images.\r\n\r\nThe first run is without an error. I receive the error when I refresh the resources.\r\n\r\nI am using azurerm provider version 2.1.0 and the azurerm backend. \r\n\r\nSee the following terraform file:\r\n\r\n```tf\r\nterraform {\r\n  backend \"azurerm\" {\r\n    resource_group_name  = \"...\"\r\n    storage_account_name = \"...\"\r\n    container_name       = \"...\"\r\n    key                  = \"...\"\r\n\r\n    subscription_id      = \"...\"\r\n    tenant_id            = \"...\"\r\n\r\n    sas_token            = \"....\"\r\n  }\r\n}\r\n\r\nprovider \"azurerm\" {\r\n  version = \"~>2.1.0\"\r\n  features {}\r\n}\r\n\r\nvariable \"environment\" {\r\n  default = \"production\"\r\n}\r\nvariable \"resource_group\" {}\r\nvariable \"location\" {\r\n  default = \"West Europe\"\r\n}\r\nvariable \"app_name\" {}\r\nvariable \"network\" {}\r\nvariable \"subnet_prefix\" {}\r\n\r\nresource \"azurerm_app_service_plan\" \"service_plan\" {\r\n  name                = var.app_name\r\n  location            = var.location\r\n  resource_group_name = var.resource_group\r\n\r\n  kind = \"Linux\"\r\n  reserved = true\r\n\r\n  sku {\r\n    tier = \"Standard\"\r\n    size = \"S1\"\r\n  }\r\n\r\n  tags = {\r\n    Environment = var.environment\r\n    Cost        = \"\u20ac0,081/Stunde\"\r\n  }\r\n}\r\n\r\nresource \"azurerm_app_service\" \"app\" {\r\n  name                = var.app_name\r\n  location            = var.location\r\n  resource_group_name = var.resource_group\r\n  app_service_plan_id = azurerm_app_service_plan.service_plan.id\r\n  depends_on = [azurerm_app_service_plan.service_plan]\r\n\r\n  site_config {\r\n    linux_fx_version = \"DOCKER|<...>.azurecr.io/<...>:0.0.1-95\"\r\n    always_on        = \"true\"\r\n  }\r\n\r\n  app_settings = {\r\n    ...\r\n  }\r\n\r\n  storage_account {\r\n    access_key = \"...\"\r\n    account_name = \"...\"\r\n    name = \"certs\"\r\n    share_name = \"certs\"\r\n    type = \"AzureBlob\"\r\n    mount_path = \"/var/certs\"\r\n  }\r\n\r\n  tags = {\r\n    Environment = var.environment\r\n  }\r\n}\r\n\r\nresource \"azurerm_app_service_slot\" \"production\" {\r\n  name                = var.app_name\r\n  app_service_name    = azurerm_app_service.app.name\r\n  location            = azurerm_app_service.app.location\r\n  resource_group_name = var.resource_group\r\n  app_service_plan_id = azurerm_app_service_plan.service_plan.id\r\n\r\n  depends_on = [azurerm_app_service.app]\r\n\r\n  site_config {\r\n    linux_fx_version = \"DOCKER|<...>.azurecr.io/<...>:0.0.1-95\"\r\n    always_on        = \"true\"\r\n\r\n  }\r\n\r\n  app_settings = {\r\n    \"SOME_KEY\" = \"some-value\"\r\n  }\r\n}\r\n\r\nresource \"azurerm_app_service_slot\" \"staging\" {\r\n  name                = \"staging\"\r\n  app_service_name    = azurerm_app_service.app.name\r\n  location            = azurerm_app_service.app.location\r\n  resource_group_name = var.resource_group\r\n  app_service_plan_id = azurerm_app_service_plan.service_plan.id\r\n\r\n  depends_on = [azurerm_app_service.app]\r\n\r\n  site_config {\r\n    linux_fx_version = \"DOCKER|<...>.azurecr.io/<...>:latest\"\r\n    always_on        = \"true\"\r\n  }\r\n}\r\n\r\nresource \"azurerm_subnet\" \"subnet\" {\r\n  name                 = var.app_name\r\n  resource_group_name  = var.resource_group\r\n  virtual_network_name = var.network\r\n  address_prefix       = var.subnet_prefix\r\n\r\n  delegation {\r\n    name = var.app_name\r\n\r\n    service_delegation {\r\n      name    = \"Microsoft.Web/serverFarms\"\r\n      actions = [\r\n        \"Microsoft.Network/networkinterfaces/*\",\r\n        \"Microsoft.Network/virtualNetworks/subnets/action\",\r\n        \"Microsoft.Network/virtualNetworks/subnets/join/action\",\r\n        \"Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action\",\r\n        \"Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n\r\nresource \"azurerm_app_service_virtual_network_swift_connection\" \"test\" {\r\n  app_service_id = azurerm_app_service.app.id\r\n  subnet_id      = azurerm_subnet.subnet.id\r\n  depends_on = [\r\n    azurerm_app_service.app,\r\n    azurerm_subnet.subnet\r\n  ]\r\n}\r\n```\r\n\r\nWhat does a missing slots element mean in this context?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I am executing ```terraform.exe apply``` on windows and receive the error: ``` azurerm_subnet.subnet: Refreshing state... [id=<...>] azurerm_app_service_plan.service_plan: Refreshing state... [id=<...>] azurerm_app_service.app: Refreshing state... [id=<...>] azurerm_app_service_virtual_network_swift_connection.test: Refreshing state... [id=<...>] azurerm_app_service_slot.production: Refreshing state... [id=<...>] azurerm_app_service_slot.staging: Refreshing state... [id=<...>] Error: ID was missing the `slots` element ``` ", "keywords": ["test"]}, {"source": "Text", "text": "I am using azurerm provider version 2.1.0 and the azurerm backend. ", "keywords": ["provider"]}, {"source": "Text", "text": "See the following terraform file: ```tf terraform { backend \"azurerm\" { resource_group_name = \"...\" storage_account_name = \"...\" container_name = \"...\" key = \"...\" subscription_id = \"...\" tenant_id = \"...\" sas_token = \"....\" } } provider \"azurerm\" { version = \"~", "keywords": ["provider"]}, {"source": "Text", "text": ">2.1.0\" features {} } variable \"environment\" { default = \"production\" } variable \"resource_group\" {} variable \"location\" { default = \"West Europe\" } variable \"app_name\" {} variable \"network\" {} variable \"subnet_prefix\" {} resource \"azurerm_app_service_plan\" \"service_plan\" { name = var.app_name location = var.location resource_group_name = var.resource_group kind = \"Linux\" reserved = true sku { tier = \"Standard\" size = \"S1\" } tags = { Environment = var.environment Cost = \"\u20ac0,081/Stunde\" } } resource \"azurerm_app_service\" \"app\" { name = var.app_name location = var.location resource_group_name = var.resource_group app_service_plan_id = azurerm_app_service_plan.service_plan.id depends_on = [azurerm_app_service_plan.service_plan] site_config { linux_fx_version = \"DOCKER|<...>.azurecr.io/<.", "keywords": ["cost"]}, {"source": "Text", "text": ">:0.0.1-95\" always_on = \"true\" } app_settings = { \"SOME_KEY\" = \"some-value\" } } resource \"azurerm_app_service_slot\" \"staging\" { name = \"staging\" app_service_name = azurerm_app_service.app.name location = azurerm_app_service.app.location resource_group_name = var.resource_group app_service_plan_id = azurerm_app_service_plan.service_plan.id depends_on = [azurerm_app_service.app] site_config { linux_fx_version = \"DOCKER|<...>.azurecr.io/<...>:latest\" always_on = \"true\" } } resource \"azurerm_subnet\" \"subnet\" { name = var.app_name resource_group_name = var.resource_group virtual_network_name = var.network address_prefix = var.subnet_prefix delegation { name = var.app_name service_delegation { name = \"Microsoft.Web/serverFarms\" actions = [ \"Microsoft.Network/networkinterfaces/*\", \"Microsoft.Network/virtualNetworks/subnets/action\", \"Microsoft.Network/virtualNetworks/subnets/join/action\", \"Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action\", \"Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action\" ] } } } resource \"azurerm_app_service_virtual_network_swift_connection\" \"test\" { app_service_id = azurerm_app_service.app.id subnet_id = azurerm_subnet.subnet.id depends_on = [ azurerm_app_service.app, azurerm_subnet.subnet ] } ", "keywords": ["test"]}]}, {"Id": "227235799", "PostHistoryTypeId": "24", "PostId": "62651102", "RevisionGUID": "243dd05e-f418-40a0-9e28-cf2c47f47155", "CreationDate": "2020-07-23T06:59:01.237", "Comment": "Proposed by 3665058 approved by 8699120, 4090219 edit id of 4894077", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "72018983", "PostTypeId": "2", "ParentId": "62651102", "CreationDate": "2022-04-26T18:41:12.170", "Score": "4", "Body": "<p>Terraform treates resource identifiers as case sensitive, but azure doesn't.</p>\n<p>Somewhere inside your state file you probably have an id like <code>/Slots/</code> instead of <code>/slots/</code>.</p>\n<p>You can use <code>terraform state pull</code> and <code>terraform state push</code> to manually edit your state file I think. Usually not recommended, but TF validation insists on forcing case sensitivity while the azure portal itself will show you resource IDs with inconsistent capitalization :/</p>\n", "OwnerUserId": "11141271", "LastActivityDate": "2022-04-26T18:41:12.170", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "268951999", "PostHistoryTypeId": "2", "PostId": "72018983", "RevisionGUID": "da4e5de2-ed39-4a7a-92dc-1deb048e6a1d", "CreationDate": "2022-04-26T18:41:12.170", "UserId": "11141271", "Text": "Terraform treates resource identifiers as case sensitive, but azure doesn't.\r\n\r\nSomewhere inside your state file you probably have an id like `/Slots/` instead of `/slots/`.\r\n\r\nYou can use `terraform state pull` and `terraform state push` to manually edit your state file I think. Usually not recommended, but TF validation insists on forcing case sensitivity while the azure portal itself will show you resource IDs with inconsistent capitalization :/", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I am using azurerm provider version 2.1.0 and the azurerm backend. ", "keywords": ["provider"]}]}