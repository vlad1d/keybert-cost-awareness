{"Id": "66973388", "PostTypeId": "1", "CreationDate": "2021-04-06T17:15:42.787", "Score": "1", "ViewCount": "399", "Body": "<p>I would like to use terraform for prod/dev split. However, when it's development, we prefer to use the Local DynamoDB because of delay and cost. Created a sample .tf file as follows:</p>\n<pre><code>variable &quot;workspace&quot; {\n  default = {\n    local = &quot;aws.local&quot;\n    prod = &quot;aws.prod&quot;\n  }\n}\n\nprovider &quot;aws&quot; {\n  alias = &quot;prod&quot;\n  region = &quot;us-west-2&quot;\n}\n\nprovider &quot;aws&quot; {\n  alias = &quot;local&quot;\n  access_key = &quot;mock_access_key&quot;\n  region = &quot;us-east-1&quot;\n  s3_force_path_style = true\n  secret_key = &quot;mock_secret_key&quot;\n  skip_credentials_validation = true\n  skip_metadata_api_check = true\n  skip_requesting_account_id = true\n  endpoints {\n    dynamodb = &quot;http://localhost:4000&quot;\n  }\n}\n\nresource &quot;aws_sqs_queue&quot; &quot;terraform_queue&quot; {\n  provider = var.workspace[terraform.workspace]\n  name = &quot;terraform-example-queue&quot;\n}\n</code></pre>\n<p>Don't mind the SQS, using it as it's the simplest one. However when I try do <code>terraform init/plan</code>:</p>\n<pre><code>Error: Invalid provider configuration reference\n\n  on deneme.tf line 28, in resource &quot;aws_sqs_queue&quot; &quot;terraform_queue&quot;:\n  28:   provider = var.workspace[terraform.workspace]\n\nThe provider argument requires a provider type name, optionally followed by a\nperiod and then a configuration alias.\n</code></pre>\n<p>It looks like it needs provider to be an exact value, not an expression/interpolation, why Terraform is unable to deduce parametric configuration for provider? How does one achieve such split and handle seperation per workspace? I confirm my <code>terraform workspace show</code> returns <code>local</code></p>\n", "OwnerUserId": "337504", "LastActivityDate": "2021-11-12T13:27:14.323", "Title": "Terraform provider customization per different workspaces", "Tags": "<amazon-web-services><terraform>", "AnswerCount": "1", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "244130518", "PostHistoryTypeId": "2", "PostId": "66973388", "RevisionGUID": "6ce385b6-c6e0-42cd-91ce-1aef5cdb1ed0", "CreationDate": "2021-04-06T17:15:42.787", "UserId": "337504", "Text": "I would like to use terraform for prod/dev split. However, when it's development, we prefer to use the Local DynamoDB because of delay and cost. Created a sample .tf file as follows:\r\n\r\n```\r\nvariable \"workspace\" {\r\n  default = {\r\n    local = \"aws.local\"\r\n    prod = \"aws.prod\"\r\n  }\r\n}\r\n\r\nprovider \"aws\" {\r\n  alias = \"prod\"\r\n  region = \"us-west-2\"\r\n}\r\n\r\nprovider \"aws\" {\r\n  alias = \"local\"\r\n  access_key = \"mock_access_key\"\r\n  region = \"us-east-1\"\r\n  s3_force_path_style = true\r\n  secret_key = \"mock_secret_key\"\r\n  skip_credentials_validation = true\r\n  skip_metadata_api_check = true\r\n  skip_requesting_account_id = true\r\n  endpoints {\r\n    dynamodb = \"http://localhost:4000\"\r\n  }\r\n}\r\n\r\nresource \"aws_sqs_queue\" \"terraform_queue\" {\r\n  provider = var.workspace[terraform.workspace]\r\n  name = \"terraform-example-queue\"\r\n}\r\n```\r\n\r\nDon't mind the SQS, using it as it's the simplest one. However when I try do `terraform init/plan`:\r\n\r\n```\r\nError: Invalid provider configuration reference\r\n\r\n  on deneme.tf line 28, in resource \"aws_sqs_queue\" \"terraform_queue\":\r\n  28:   provider = var.workspace[terraform.workspace]\r\n\r\nThe provider argument requires a provider type name, optionally followed by a\r\nperiod and then a configuration alias.\r\n```\r\n\r\nIt looks like it needs provider to be an exact value, not an expression/interpolation, why Terraform is unable to deduce parametric configuration for provider? How does one achieve such split and handle seperation per workspace? I confirm my `terraform workspace show` returns `local`\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "However, when it's development, we prefer to use the Local DynamoDB because of delay and cost. ", "keywords": ["cost"]}, {"source": "Text", "text": "Created a sample .tf file as follows: ``` variable \"workspace\" { default = { local = \"aws.local\" prod = \"aws.prod\" } } provider \"aws\" { alias = \"prod\" region = \"us-west-2\" } provider \"aws\" { alias = \"local\" access_key = \"mock_access_key\" region = \"us-east-1\" s3_force_path_style = true secret_key = \"mock_secret_key\" skip_credentials_validation = true skip_metadata_api_check = true skip_requesting_account_id = true endpoints { dynamodb = \"http://localhost:4000\" } } resource \"aws_sqs_queue\" \"terraform_queue\" { provider = var.workspace[terraform.workspace] name = \"terraform-example-queue\" } ``` Don't mind the SQS, using it as it's the simplest one. ", "keywords": ["provider"]}, {"source": "Text", "text": "Error: Invalid provider configuration reference on deneme.tf line 28, in resource \"aws_sqs_queue\" \"terraform_queue\": 28: provider = var.workspace[terraform.workspace] ", "keywords": ["provider"]}, {"source": "Text", "text": "The provider argument requires a provider type name, optionally followed by a period and then a configuration alias. ", "keywords": ["provider"]}, {"source": "Text", "text": "It looks like it needs provider to be an exact value, not an expression/interpolation, why Terraform is unable to deduce parametric configuration for provider? ", "keywords": ["provider"]}]}, {"Id": "244130519", "PostHistoryTypeId": "1", "PostId": "66973388", "RevisionGUID": "6ce385b6-c6e0-42cd-91ce-1aef5cdb1ed0", "CreationDate": "2021-04-06T17:15:42.787", "UserId": "337504", "Text": "Terraform provider customization per different workspaces", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Terraform provider customization per different workspaces", "keywords": ["provider"]}]}, {"Id": "244130520", "PostHistoryTypeId": "3", "PostId": "66973388", "RevisionGUID": "6ce385b6-c6e0-42cd-91ce-1aef5cdb1ed0", "CreationDate": "2021-04-06T17:15:42.787", "UserId": "337504", "Text": "<amazon-web-services><terraform>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "69943630", "PostTypeId": "2", "ParentId": "66973388", "CreationDate": "2021-11-12T13:27:14.323", "Score": "0", "Body": "<p>I was looking to do something similar, what I ended up with was a single aws provider, configured dynamically using variables.</p>\n<pre><code>variable dynamodb_endpoint {\n  type = string\n  default = null\n}\n\nprovider &quot;aws&quot; {\n  region = &quot;eu-west-2&quot;\n\n  endpoints {\n    dynamodb = var.dynamodb_endpoint\n  }\n}\n</code></pre>\n<p>During development I would then run with</p>\n<pre><code>terraform apply -var dynamodb_endpoint=http://localhost:9001\n</code></pre>\n<p>In production I didn't specify dynamodb_endpoint at all</p>\n<pre><code>terraform apply \n</code></pre>\n<p>In my setup the variables were overriden from the command line, but you could (and probably should) alter them based on the curent workspace.</p>\n", "OwnerUserId": "804954", "LastActivityDate": "2021-11-12T13:27:14.323", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "257839925", "PostHistoryTypeId": "2", "PostId": "69943630", "RevisionGUID": "c9d3c98f-4231-4bea-8ae7-e8d766dc8de8", "CreationDate": "2021-11-12T13:27:14.323", "UserId": "804954", "Text": "I was looking to do something similar, what I ended up with was a single aws provider, configured dynamically using variables.\r\n \r\n\r\n    variable dynamodb_endpoint {\r\n      type = string\r\n      default = null\r\n    }\r\n    \r\n    provider \"aws\" {\r\n      region = \"eu-west-2\"\r\n    \r\n      endpoints {\r\n        dynamodb = var.dynamodb_endpoint\r\n      }\r\n    }\r\n\r\n\r\nDuring development I would then run with\r\n\r\n    terraform apply -var dynamodb_endpoint=http://localhost:9001\r\n\r\nIn production I didn't specify dynamodb_endpoint at all\r\n\r\n    terraform apply \r\n\r\nIn my setup the variables were overriden from the command line, but you could (and probably should) alter them based on the curent workspace.\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I was looking to do something similar, what I ended up with was a single aws provider, configured dynamically using variables. variable dynamodb_endpoint { type = string default = null } provider \"aws\" { region = \"eu-west-2\" endpoints { dynamodb = var.dynamodb_endpoint } } During development I would then run with terraform apply -var dynamodb_endpoint=http://localhost:9001 In production I didn't specify dynamodb_endpoint at all terraform apply ", "keywords": ["provider"]}]}], "filtered-sentences": [{"source": "Body", "text": "I was looking to do something similar, what I ended up with was a single aws provider, configured dynamically using variables. ", "keywords": ["provider"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Title", "text": "Terraform provider customization per different workspaces", "keywords": ["provider"]}, {"source": "Body", "text": "However, when it's development, we prefer to use the Local DynamoDB because of delay and cost. ", "keywords": ["cost"]}, {"source": "Body", "text": "However when I try do terraform init/plan: It looks like it needs provider to be an exact value, not an expression/interpolation, why Terraform is unable to deduce parametric configuration for provider? ", "keywords": ["provider"]}]}