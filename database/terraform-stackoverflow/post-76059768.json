{"Id": "76059768", "PostTypeId": "1", "CreationDate": "2023-04-20T00:43:12.737", "Score": "0", "ViewCount": "129", "Body": "<p>I was trying to find out a way to schedule stop/start the latest version of app engine in google cloud, but couldn't find any way for that. I just found gcloud command for stopping/starting a specific version, but don't know how can I schedule gcloud command.</p>\n<p>We have manual scaling standard app engine , and I want to stop it every night at specific time, and re-start it again in morning.\nWhat is the best way to do that?</p>\n<p>My implemented solution is separate python cloud function for stopping and starting the app engine, then scheduling those functions at the specific time</p>\n<p><a href=\"https://cloud.google.com/appengine/docs/standard/python3/runtime#environment_variables\" rel=\"nofollow noreferrer\">https://cloud.google.com/appengine/docs/standard/python3/runtime#environment_variables</a></p>\n<p>Thanks,</p>\n", "OwnerUserId": "3719146", "LastEditorUserId": "3719146", "LastEditDate": "2023-04-20T05:00:23.990", "LastActivityDate": "2023-04-20T12:28:52.947", "Title": "How can schedule stop-start of standard app engine in gcp", "Tags": "<python><google-app-engine><google-cloud-platform><terraform><scheduling>", "AnswerCount": "2", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "134141867", "PostId": "76059768", "Score": "0", "Text": "You can stop app engine versions if the scaling is set to `manual`. Also you can use Cloud Scheduler to call the App Engine API and stop/start versions as needed. Keep in mind that asking recommendations is off-topic so please try something and investigate on your own and comeback with any specific question you may have", "CreationDate": "2023-04-20T03:12:32.470", "UserId": "12265927", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "134142432", "PostId": "76059768", "Score": "0", "Text": "Thanks for your response, I have created a cloud function for stopping/starting the app engine, then I want to schedule calling that cloud function at the specific time, but first I am not sure is it the best and easiest solution or not", "CreationDate": "2023-04-20T04:55:11.127", "UserId": "3719146", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "links": [{"Id": "2041803091", "CreationDate": "2023-04-20T11:57:58.523", "PostId": "76059768", "RelatedPostId": "3948861", "LinkTypeId": "1"}], "history": [{"Id": "291637735", "PostHistoryTypeId": "2", "PostId": "76059768", "RevisionGUID": "af3dc9a0-3e83-4dc3-8011-8dfd8d3617e3", "CreationDate": "2023-04-20T00:43:12.737", "UserId": "3719146", "Text": "I was trying to find out a way to schedule stop/start the latest version of app engine in google cloud, but couldn't find any way for that. I just found gcloud command for stopping/starting a specific version, but don't know how can I schedule gcloud command.\r\n\r\nWe have manual scaling standard app engine , and I want to stop it every night at specific time, and re-start it again in morning. \r\nWhat is the best way to do that?\r\n\r\nThanks,\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "291637737", "PostHistoryTypeId": "1", "PostId": "76059768", "RevisionGUID": "af3dc9a0-3e83-4dc3-8011-8dfd8d3617e3", "CreationDate": "2023-04-20T00:43:12.737", "UserId": "3719146", "Text": "How can schedule stop-start of standard app engine in gcp", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "291637738", "PostHistoryTypeId": "3", "PostId": "76059768", "RevisionGUID": "af3dc9a0-3e83-4dc3-8011-8dfd8d3617e3", "CreationDate": "2023-04-20T00:43:12.737", "UserId": "3719146", "Text": "<python><google-app-engine><google-cloud-platform><terraform><scheduling>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "291643489", "PostHistoryTypeId": "5", "PostId": "76059768", "RevisionGUID": "2850c252-be30-44b9-abe3-fd609b8785e1", "CreationDate": "2023-04-20T05:00:23.990", "UserId": "3719146", "Comment": "added 246 characters in body", "Text": "I was trying to find out a way to schedule stop/start the latest version of app engine in google cloud, but couldn't find any way for that. I just found gcloud command for stopping/starting a specific version, but don't know how can I schedule gcloud command.\r\n\r\nWe have manual scaling standard app engine , and I want to stop it every night at specific time, and re-start it again in morning. \r\nWhat is the best way to do that?\r\n\r\nMy implemented solution is separate python cloud function for stopping and starting the app engine, then scheduling those functions at the specific time\r\n\r\nhttps://cloud.google.com/appengine/docs/standard/python3/runtime#environment_variables\r\n\r\nThanks,\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "76063863", "PostTypeId": "2", "ParentId": "76059768", "CreationDate": "2023-04-20T12:06:39.263", "Score": "1", "Body": "<p>Finally I could disable/serving the app engine in cloud function, instead of stopping a specific version.</p>\n<p>1- Creating a cloud function which is triggered by pub/sub</p>\n<pre><code>import os\nfrom googleapiclient import discovery\nfrom oauth2client.client import GoogleCredentials\n\n\ndef disableEnable(event, context):\n   credentials = GoogleCredentials.get_application_default()\n   appengine = discovery.build('appengine', 'v1', \n     credentials=credentials)\n   apps = appengine.apps()\n   APP_NAME = os.getenv(&quot;APP_NAME&quot;)\n   messageServingStatus = event['message']\n\n   # Get the target app's serving status\n   target_app = apps.get(appsId=APP_NAME).execute()\n   current_status = target_app['servingStatus']\n\n   # Disable target app, if necessary\n   if current_status == 'SERVING' and messageServingStatus == 'STOPPED':\n     print(f'Attempting to disable app {APP_NAME}...')\n     body = {'servingStatus': 'USER_DISABLED'}\n   if current_status == 'USER_DISABLED' and messageServingStatus == \n     'SERVING':\n     print(f'Attempting to enable app {APP_NAME}...')\n     body = {'servingStatus': 'SERVING'}   \n   apps.patch(appsId=APP_NAME, updateMask='serving_status', body=body).execute()\n</code></pre>\n<p>2-create two scheduler with specific frequency (FOR ENABLING/DISABLING appengine)\nTarget Type= Pub/Sub\nSelect created Pub/sub topic name</p>\n", "OwnerUserId": "3719146", "LastEditorUserId": "3719146", "LastEditDate": "2023-04-20T12:28:52.947", "LastActivityDate": "2023-04-20T12:28:52.947", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "291661625", "PostHistoryTypeId": "2", "PostId": "76063863", "RevisionGUID": "c2471dc3-3df7-4e0d-9986-2ffd4c9ace35", "CreationDate": "2023-04-20T12:06:39.263", "UserId": "3719146", "Text": "Finally I could disable/serving the app engine in cloud function, instead of stopping a specific version.\r\n\r\n1- Creating a cloud function which is triggered by pub/sub\r\n\r\n    import os\r\n    from googleapiclient import discovery\r\n    from oauth2client.client import GoogleCredentials\r\n    \r\n    \r\n    def disableEnable(event, context):\r\n       credentials = GoogleCredentials.get_application_default()\r\n       appengine = discovery.build('appengine', 'v1', \r\n         credentials=credentials)\r\n       apps = appengine.apps()\r\n       APP_NAME = os.getenv(\"APP_NAME\")\r\n       messageServingStatus = event['message']\r\n    \r\n       # Get the target app's serving status\r\n       target_app = apps.get(appsId=APP_NAME).execute()\r\n       current_status = target_app['servingStatus']\r\n    \r\n       # Disable target app, if necessary\r\n       if current_status == 'SERVING' and messageServingStatus == 'STOPPED':\r\n         print(f'Attempting to disable app {APP_NAME}...')\r\n         body = {'servingStatus': 'USER_DISABLED'}\r\n       if current_status == 'USER_DISABLED' and messageServingStatus == \r\n         'SERVING':\r\n         print(f'Attempting to enable app {APP_NAME}...')\r\n         body = {'servingStatus': 'SERVING'}   \r\n       apps.patch(appsId=APP_NAME, updateMask='serving_status', body=body).execute()\r\n\r\n2-create two scheduler with specific frequency (one for disable app engine, another for enable appengine)\r\n  Target Type= Pub/Sub\r\n  Select created Pub/sub topic name\r\n  ", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "291662686", "PostHistoryTypeId": "5", "PostId": "76063863", "RevisionGUID": "4f3ba4dd-5e10-4110-acf8-3413c6caada4", "CreationDate": "2023-04-20T12:28:52.947", "UserId": "3719146", "Comment": "deleted 24 characters in body", "Text": "Finally I could disable/serving the app engine in cloud function, instead of stopping a specific version.\r\n\r\n1- Creating a cloud function which is triggered by pub/sub\r\n\r\n    import os\r\n    from googleapiclient import discovery\r\n    from oauth2client.client import GoogleCredentials\r\n    \r\n    \r\n    def disableEnable(event, context):\r\n       credentials = GoogleCredentials.get_application_default()\r\n       appengine = discovery.build('appengine', 'v1', \r\n         credentials=credentials)\r\n       apps = appengine.apps()\r\n       APP_NAME = os.getenv(\"APP_NAME\")\r\n       messageServingStatus = event['message']\r\n    \r\n       # Get the target app's serving status\r\n       target_app = apps.get(appsId=APP_NAME).execute()\r\n       current_status = target_app['servingStatus']\r\n    \r\n       # Disable target app, if necessary\r\n       if current_status == 'SERVING' and messageServingStatus == 'STOPPED':\r\n         print(f'Attempting to disable app {APP_NAME}...')\r\n         body = {'servingStatus': 'USER_DISABLED'}\r\n       if current_status == 'USER_DISABLED' and messageServingStatus == \r\n         'SERVING':\r\n         print(f'Attempting to enable app {APP_NAME}...')\r\n         body = {'servingStatus': 'SERVING'}   \r\n       apps.patch(appsId=APP_NAME, updateMask='serving_status', body=body).execute()\r\n\r\n2-create two scheduler with specific frequency (FOR ENABLING/DISABLING appengine)\r\n  Target Type= Pub/Sub\r\n  Select created Pub/sub topic name\r\n  ", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "76061680", "PostTypeId": "2", "ParentId": "76059768", "CreationDate": "2023-04-20T07:46:37.580", "Score": "0", "Body": "<p>App Engine Standard is a serverless product managed by Google. It scales up and down (up to 0) automatically (in automatic and basic mode). In manual mode, the scaling is not so elastic, and you set the number of instances that you want, it's flat.</p>\n<p>The power of App Engine is that elasticity. I use it only in automatic mode. There are some trade off like the start up time when you scale from 0 (also called cold start), and the instance live duration (that you don't manage, after a while with no request handling, the instance is offloaded).</p>\n<p>But it also means you have nothing to manage to scale up and down. If there is traffic, you have instances. If you have nothing (the night) all the instance are shut down automatically and you pay nothing.</p>\n<hr />\n<p>There are some counterpart, like the max duration of request processing, the incapacity to perform background processing and stuff like that.</p>\n<p>Let us now more about your app constraint to review with you if app engine is the best fit for you.</p>\n", "OwnerUserId": "11372593", "LastActivityDate": "2023-04-20T07:46:37.580", "CommentCount": "6", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "134144494", "PostId": "76061680", "Score": "0", "Text": "Thanks for comprehensive response, We used to use automatic scaling app engine, but there was a timeout error after 10 minutes for some requests, so we had to change it to manual . But manual scaling continuously runs the numbers of instances, for decreasing the cost, we need to stop start instance", "CreationDate": "2023-04-20T08:21:56.163", "UserId": "3719146", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Thanks for comprehensive response, We used to use automatic scaling app engine, but there was a timeout error after 10 minutes for some requests, so we had to change it to manual . ", "keywords": ["change"]}, {"source": "Text", "text": "But manual scaling continuously runs the numbers of instances, for decreasing the cost, we need to stop start instance", "keywords": ["cost", "instance"]}]}, {"Id": "134144532", "PostId": "76061680", "Score": "0", "Text": "In terms of using cloud function for stop/starting latest version of app engine, I am using app engine patches(apps.services().versions().patch(....), , is there any way to fetch the latest running version of app engine instance from cloud function?", "CreationDate": "2023-04-20T08:25:06.347", "UserId": "3719146", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "In terms of using cloud function for stop/starting latest version of app engine, I am using app engine patches(apps.services().versions().patch(....), , is there any way to fetch the latest running version of app engine instance from cloud function?", "keywords": ["instance"]}]}, {"Id": "134147425", "PostId": "76061680", "Score": "0", "Text": "Have a look at this [Stackoverflow Link](https://stackoverflow.com/a/66467473/18265702) and the [Documentatiom](https://cloud.google.com/scheduler/docs/tut-pub-sub).", "CreationDate": "2023-04-20T11:57:58.523", "UserId": "18265702", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "134147598", "PostId": "76061680", "Score": "0", "Text": "I tested by os.environ['GAE_VERSION'], but cloud function couldn't find GAE_VERSION key and raised an error.  I assume this solution would work in an app running inside appengine, but won't fetch the latest version of instance from cloud function .", "CreationDate": "2023-04-20T12:10:40.953", "UserId": "3719146", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I tested by os.environ['GAE_VERSION'], but cloud function couldn't find GAE_VERSION key and raised an error. ", "keywords": ["test"]}, {"source": "Text", "text": "I assume this solution would work in an app running inside appengine, but won't fetch the latest version of instance from cloud function .", "keywords": ["instance"]}]}, {"Id": "134156232", "PostId": "76061680", "Score": "0", "Text": "@guillaume blaquiere , would you please let me know how manual scaling with the specific numbers of instances behaves if requests increase? Does it create a queue for processing the requests? Does it just cause the performance issue and slowness in the busy days? Doesn't it support background processing?", "CreationDate": "2023-04-20T23:17:23.453", "UserId": "3719146", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "134161823", "PostId": "76061680", "Score": "0", "Text": "Manual scaling does not scale with the traffic, it's manual. However, because you ask for keeping a certain number of instance up, yes you can perform background process because you pay for it (for the CPU). You have a similar feature with the min instance parameter, to keep a certain number of instance up, but scale above if required (automatic scaling, or Min Instance with Cloud Run)", "CreationDate": "2023-04-21T10:25:36.373", "UserId": "11372593", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "However, because you ask for keeping a certain number of instance up, yes you can perform background process because you pay for it (for the CPU). ", "keywords": ["pay", "instance", "cpu"]}, {"source": "Text", "text": "You have a similar feature with the min instance parameter, to keep a certain number of instance up, but scale above if required (automatic scaling, or Min Instance with Cloud Run)", "keywords": ["instance", "feature"]}]}], "history": [{"Id": "291649270", "PostHistoryTypeId": "2", "PostId": "76061680", "RevisionGUID": "5790d2d3-6584-41e5-80db-728bc77cb953", "CreationDate": "2023-04-20T07:46:37.580", "UserId": "11372593", "Text": "App Engine Standard is a serverless product managed by Google. It scales up and down (up to 0) automatically (in automatic and basic mode). In manual mode, the scaling is not so elastic, and you set the number of instances that you want, it's flat.\r\n\r\nThe power of App Engine is that elasticity. I use it only in automatic mode. There are some trade off like the start up time when you scale from 0 (also called cold start), and the instance live duration (that you don't manage, after a while with no request handling, the instance is offloaded).\r\n\r\nBut it also means you have nothing to manage to scale up and down. If there is traffic, you have instances. If you have nothing (the night) all the instance are shut down automatically and you pay nothing.\r\n\r\n-----\r\nThere are some counterpart, like the max duration of request processing, the incapacity to perform background processing and stuff like that.\r\n\r\nLet us now more about your app constraint to review with you if app engine is the best fit for you.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "It scales up and down (up to 0) automatically (in automatic and basic mode). ", "keywords": ["billing mode"]}, {"source": "Text", "text": "In manual mode, the scaling is not so elastic, and you set the number of instances that you want, it's flat. ", "keywords": ["billing mode"]}, {"source": "Text", "text": "I use it only in automatic mode. ", "keywords": ["billing mode"]}, {"source": "Text", "text": "There are some trade off like the start up time when you scale from 0 (also called cold start), and the instance live duration (that you don't manage, after a while with no request handling, the instance is offloaded). ", "keywords": ["instance"]}, {"source": "Text", "text": "If you have nothing (the night) all the instance are shut down automatically and you pay nothing. ", "keywords": ["pay", "instance"]}]}, {"Id": "291649272", "PostHistoryTypeId": "33", "PostId": "76061680", "RevisionGUID": "a5b9092e-e269-446f-92ec-a7f7013f5a97", "CreationDate": "2023-04-20T07:46:37.580", "UserId": "-1002", "Comment": "314711", "filtered-sentences": []}], "filtered-sentences": [{"source": "Body", "text": "It scales up and down (up to 0) automatically (in automatic and basic mode). ", "keywords": ["billing mode"]}, {"source": "Body", "text": "In manual mode, the scaling is not so elastic, and you set the number of instances that you want, it's flat. ", "keywords": ["billing mode"]}, {"source": "Body", "text": "I use it only in automatic mode. ", "keywords": ["billing mode"]}, {"source": "Body", "text": "There are some trade off like the start up time when you scale from 0 (also called cold start), and the instance live duration (that you don't manage, after a while with no request handling, the instance is offloaded). ", "keywords": ["instance"]}, {"source": "Body", "text": "If you have nothing (the night) all the instance are shut down automatically and you pay nothing. ", "keywords": ["pay", "instance"]}]}], "contains-topic": true, "filtered-sentences": []}