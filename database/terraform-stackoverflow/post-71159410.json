{"Id": "71159410", "PostTypeId": "1", "CreationDate": "2022-02-17T13:51:43.453", "Score": "0", "ViewCount": "2421", "Body": "<p>My terraform script is setup up for a web app in production.<br />\nAs part of that I have Azure DDoS protection enabled.</p>\n<p>However, this is really expensive compared to the rest of the infrastructure.<br />\nFor this reason, I don't want to create it for my development environment.</p>\n<p>I run terraform using Azure pipelines so I would like to configure the pipeline to optionally not create it. e.g. with a variable in the pipeline</p>\n<p>Is there an option I can pass to terraform to skip this resource?</p>\n<p>Assuming there <em>is</em> an option and I <em>can</em> skip the ddos resource, will the creation of the vnet fail in the snippet below if it doesn't exist?</p>\n<pre><code>#---------------------------------------\n#    DDOS Protection Plan Definition\n#---------------------------------------\n\nresource &quot;azurerm_network_ddos_protection_plan&quot; &quot;ddos&quot; {\n  name                = var.ddos_plan_name\n  location            = var.location\n  resource_group_name = azurerm_resource_group.rg.name\n}\n\n#---------------------------------------\n#            vNet Definition\n#---------------------------------------\n\nresource &quot;azurerm_virtual_network&quot; &quot;vnet&quot; {\n\n  name                = lower(&quot;${local.vNet_id}-${var.location_id}-${var.env_id}-1&quot;)\n  resource_group_name = azurerm_resource_group.rg.name\n  location            = var.location\n  address_space       = var.address_space\n\n  ddos_protection_plan {\n    id     = azurerm_network_ddos_protection_plan.ddos.id\n    enable = true\n  }\n\n  depends_on = [\n    azurerm_resource_group.rg\n  ]\n}\n</code></pre>\n", "OwnerUserId": "1000011", "LastActivityDate": "2022-02-18T00:30:34.753", "Title": "How Do I Skip The Creation Of A Terraform Resource?", "Tags": "<terraform><azure-pipelines>", "AnswerCount": "2", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "264334364", "PostHistoryTypeId": "2", "PostId": "71159410", "RevisionGUID": "8b280229-0ce8-40e6-921c-33fb349593f4", "CreationDate": "2022-02-17T13:51:43.453", "UserId": "1000011", "Text": "My terraform script is setup up for a web app in production.  \r\nAs part of that I have Azure DDoS protection enabled.\r\n\r\nHowever, this is really expensive compared to the rest of the infrastructure.  \r\nFor this reason, I don't want to create it for my development environment.\r\n\r\nI run terraform using Azure pipelines so I would like to configure the pipeline to optionally not create it. e.g. with a variable in the pipeline\r\n\r\nIs there an option I can pass to terraform to skip this resource?  \r\n\r\nAssuming there *is* an option and I *can* skip the ddos resource, will the creation of the vnet fail in the snippet below if it doesn't exist?\r\n\r\n    #---------------------------------------\r\n    #    DDOS Protection Plan Definition\r\n    #---------------------------------------\r\n    \r\n    resource \"azurerm_network_ddos_protection_plan\" \"ddos\" {\r\n      name                = var.ddos_plan_name\r\n      location            = var.location\r\n      resource_group_name = azurerm_resource_group.rg.name\r\n    }\r\n    \r\n    #---------------------------------------\r\n    #            vNet Definition\r\n    #---------------------------------------\r\n    \r\n    resource \"azurerm_virtual_network\" \"vnet\" {\r\n    \r\n      name                = lower(\"${local.vNet_id}-${var.location_id}-${var.env_id}-1\")\r\n      resource_group_name = azurerm_resource_group.rg.name\r\n      location            = var.location\r\n      address_space       = var.address_space\r\n    \r\n      ddos_protection_plan {\r\n        id     = azurerm_network_ddos_protection_plan.ddos.id\r\n        enable = true\r\n      }\r\n    \r\n      depends_on = [\r\n        azurerm_resource_group.rg\r\n      ]\r\n    }\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "However, this is really expensive compared to the rest of the infrastructure. ", "keywords": ["expense"]}]}, {"Id": "264334366", "PostHistoryTypeId": "1", "PostId": "71159410", "RevisionGUID": "8b280229-0ce8-40e6-921c-33fb349593f4", "CreationDate": "2022-02-17T13:51:43.453", "UserId": "1000011", "Text": "How Do I Skip The Creation Of A Terraform Resource?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "264334367", "PostHistoryTypeId": "3", "PostId": "71159410", "RevisionGUID": "8b280229-0ce8-40e6-921c-33fb349593f4", "CreationDate": "2022-02-17T13:51:43.453", "UserId": "1000011", "Text": "<terraform><azure-pipelines>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "71159615", "PostTypeId": "2", "ParentId": "71159410", "CreationDate": "2022-02-17T14:04:36.550", "Score": "2", "Body": "<p>The way I would do it is to use the <code>count</code> meta-argument [1]. For example, create a variable with a name <code>create_ddos_protection_plan</code>, set it to be of type <code>bool</code> and by default set it to <code>false</code>:</p>\n<pre><code>variable &quot;create_ddos_protection_plan&quot; {\n  description = &quot;Whether to create DDoS resource or not.&quot;\n  type = bool\n  \n  default = false\n}\n\nresource &quot;azurerm_network_ddos_protection_plan&quot; &quot;ddos&quot; {\n  count               = var.create_ddos_protection_plan ? 1 : 0\n  name                = var.ddos_plan_name\n  location            = var.location\n  resource_group_name = azurerm_resource_group.rg.name\n}\n\n</code></pre>\n<p>Later on if you decide you want to create it, you can set the value of the variable to <code>true</code> or remove the <code>count</code> meta-argument completely.</p>\n<p>The <code>vnet</code> creation would fail if the resource does not exist based on the current setup.</p>\n<hr />\n<p>[1] <a href=\"https://www.terraform.io/language/meta-arguments/count\" rel=\"nofollow noreferrer\">https://www.terraform.io/language/meta-arguments/count</a></p>\n", "OwnerUserId": "8343484", "LastActivityDate": "2022-02-17T14:04:36.550", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "264335441", "PostHistoryTypeId": "2", "PostId": "71159615", "RevisionGUID": "41e4460f-0cbb-4d93-96dc-1cffcb3c1215", "CreationDate": "2022-02-17T14:04:36.550", "UserId": "8343484", "Text": "The way I would do it is to use the `count` meta-argument [1]. For example, create a variable with a name `create_ddos_protection_plan`, set it to be of type `bool` and by default set it to `false`:\r\n\r\n```hcl\r\nvariable \"create_ddos_protection_plan\" {\r\n  description = \"Whether to create DDoS resource or not.\"\r\n  type = bool\r\n  \r\n  default = false\r\n}\r\n\r\nresource \"azurerm_network_ddos_protection_plan\" \"ddos\" {\r\n  count               = var.create_ddos_protection_plan ? 1 : 0\r\n  name                = var.ddos_plan_name\r\n  location            = var.location\r\n  resource_group_name = azurerm_resource_group.rg.name\r\n}\r\n\r\n```\r\n\r\nLater on if you decide you want to create it, you can set the value of the variable to `true` or remove the `count` meta-argument completely.\r\n\r\nThe `vnet` creation would fail if the resource does not exist based on the current setup.\r\n\r\n---\r\n\r\n[1] https://www.terraform.io/language/meta-arguments/count", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "71167068", "PostTypeId": "2", "ParentId": "71159410", "CreationDate": "2022-02-18T00:30:34.753", "Score": "2", "Body": "<p>You can use <a href=\"https://www.terraform.io/language/meta-arguments/count\" rel=\"nofollow noreferrer\">the <code>count</code> meta-argument</a> to dynamically choose how many instances of a particular resource to create, including possibly choosing to create <em>zero</em> of them, which therefore effectively disables the resource altogether:</p>\n<pre><code>variable &quot;enable_ddos_protection&quot; {\n  type = bool\n\n  default = true\n}\n\nresource &quot;azurerm_network_ddos_protection_plan&quot; &quot;ddos&quot; {\n  count = var.enable_ddos_protection ? 1 : 0\n\n  name                = var.ddos_plan_name\n  location            = var.location\n  resource_group_name = azurerm_resource_group.rg.name\n}\n</code></pre>\n<p>Since the number of instances of this resource is now dynamic, <code>azurerm_network_ddos_protection_plan.ddos</code> will appear as a list of objects instead of a single object. Therefore you'll also need to change how you refer to it in the virtual network configuration.</p>\n<p>The most direct way to declare that would be to use a <a href=\"https://www.terraform.io/language/expressions/dynamic-blocks\" rel=\"nofollow noreferrer\"><code>dynamic</code> block</a> to tell Terraform to generate one <code>ddos_protection_plan</code> block per instance of that resource, so there will be no blocks of that type if there are no protection plan instances:</p>\n<pre><code>resource &quot;azurerm_virtual_network&quot; &quot;vnet&quot; {\n  name = lower(&quot;${local.vNet_id}-${var.location_id}-${var.env_id}-1&quot;)\n\n  resource_group_name = azurerm_resource_group.rg.name\n  location            = var.location\n  address_space       = var.address_space\n\n  dynamic &quot;ddos_protection_plan&quot; {\n    for_each = azurerm_network_ddos_protection_plan.ddos\n    content {\n      id     = ddos_protection_plan.value.id\n      enable = true\n    }\n  }\n}\n</code></pre>\n<p>(I removed the <code>depends_on</code> declaration here because it was redundant with the reference in the <code>resource_group_name</code> argument, but the <code>dynamic</code> block is the main point of this example.)</p>\n", "OwnerUserId": "281848", "LastActivityDate": "2022-02-18T00:30:34.753", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "125805021", "PostId": "71167068", "Score": "0", "Text": "I knew I was missing something, great addition to my answer. :)", "CreationDate": "2022-02-18T08:05:49.270", "UserId": "8343484", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "264373798", "PostHistoryTypeId": "2", "PostId": "71167068", "RevisionGUID": "1b14e25e-4211-4770-8aa4-ba1cf1a273f2", "CreationDate": "2022-02-18T00:30:34.753", "UserId": "281848", "Text": "You can use [the `count` meta-argument](https://www.terraform.io/language/meta-arguments/count) to dynamically choose how many instances of a particular resource to create, including possibly choosing to create _zero_ of them, which therefore effectively disables the resource altogether:\r\n\r\n```\r\nvariable \"enable_ddos_protection\" {\r\n  type = bool\r\n\r\n  default = true\r\n}\r\n\r\nresource \"azurerm_network_ddos_protection_plan\" \"ddos\" {\r\n  count = var.enable_ddos_protection ? 1 : 0\r\n\r\n  name                = var.ddos_plan_name\r\n  location            = var.location\r\n  resource_group_name = azurerm_resource_group.rg.name\r\n}\r\n```\r\n\r\nSince the number of instances of this resource is now dynamic, `azurerm_network_ddos_protection_plan.ddos` will appear as a list of objects instead of a single object. Therefore you'll also need to change how you refer to it in the virtual network configuration.\r\n\r\nThe most direct way to declare that would be to use a [`dynamic` block](https://www.terraform.io/language/expressions/dynamic-blocks) to tell Terraform to generate one `ddos_protection_plan` block per instance of that resource, so there will be no blocks of that type if there are no protection plan instances:\r\n\r\n```\r\nresource \"azurerm_virtual_network\" \"vnet\" {\r\n  name = lower(\"${local.vNet_id}-${var.location_id}-${var.env_id}-1\")\r\n\r\n  resource_group_name = azurerm_resource_group.rg.name\r\n  location            = var.location\r\n  address_space       = var.address_space\r\n\r\n  dynamic \"ddos_protection_plan\" {\r\n    for_each = azurerm_network_ddos_protection_plan.ddos\r\n    content {\r\n      id     = ddos_protection_plan.value.id\r\n      enable = true\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n(I removed the `depends_on` declaration here because it was redundant with the reference in the `resource_group_name` argument, but the `dynamic` block is the main point of this example.)\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Therefore you'll also need to change how you refer to it in the virtual network configuration. ", "keywords": ["change"]}, {"source": "Text", "text": "The most direct way to declare that would be to use a [`dynamic` block](https://www.terraform.io/language/expressions/dynamic-blocks) to tell Terraform to generate one `ddos_protection_plan` block per instance of that resource, so there will be no blocks of that type if there are no protection plan instances: ``` resource \"azurerm_virtual_network\" \"vnet\" { name = lower(\"${local.vNet_id}-${var.location_id}-${var.env_id}-1\") resource_group_name = azurerm_resource_group.rg.name location = var.location address_space = var.address_space dynamic \"ddos_protection_plan\" { for_each = azurerm_network_ddos_protection_plan.ddos content { id = ddos_protection_plan.value.id enable = true } } } ``` ", "keywords": ["instance"]}]}], "filtered-sentences": [{"source": "Body", "text": "Therefore you'll also need to change how you refer to it in the virtual network configuration. ", "keywords": ["change"]}, {"source": "Body", "text": "The most direct way to declare that would be to use a dynamic block to tell Terraform to generate one ddos_protection_plan block per instance of that resource, so there will be no blocks of that type if there are no protection plan instances: (I removed the depends_on declaration here because it was redundant with the reference in the resource_group_name argument, but the dynamic block is the main point of this example.)", "keywords": ["instance"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "However, this is really expensive compared to the rest of the infrastructure. ", "keywords": ["expense"]}]}