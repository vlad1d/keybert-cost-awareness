{"Id": "57811596", "PostTypeId": "1", "AcceptedAnswerId": "57816160", "CreationDate": "2019-09-05T19:03:37.683", "Score": "10", "ViewCount": "19274", "Body": "<p>I've deployed my infra using Terraform and I noticed that I have some interesting information in the state (<code>terraform.tfstate</code>) file of terraform which I would like to extract. For example</p>\n\n<pre><code>$ terraform state show 'packet_device.worker'\nid                = 6015bg2b-b8c4-4925-aad2-f0671d5d3b13\nbilling_cycle     = hourly\ncreated           = 2015-12-17T00:06:56Z\nfacility          = ewr1\n...\n</code></pre>\n\n<p>which I would like to transform somehow to </p>\n\n<pre><code>$ terraform state show 'packet_device.worker.id'\n6015bg2b-b8c4-4925-aad2-f0671d5d3b13\n</code></pre>\n\n<p>But adding the <code>id</code> at the end doesn't seem to work. Any suggestions how I can achieve this behaviour?</p>\n", "OwnerUserId": "419425", "LastEditorUserId": "419425", "LastEditDate": "2019-09-05T19:12:46.237", "LastActivityDate": "2022-09-30T04:44:06.647", "Title": "Get specific value out of the Terraform state file", "Tags": "<terraform>", "AnswerCount": "4", "CommentCount": "1", "FavoriteCount": "0", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "128869004", "PostId": "57811596", "Score": "0", "Text": "In case other folks find it useful, it's worth noting that the `state show` command has changed its output format from the version described in this question to something more JSON-like (but not quite) as in https://stackoverflow.com/q/67461595/2053165 - the solution in both cases is the same if you need to extract a specific value: switch to `terraform show -json` and pipe to `jq`.", "CreationDate": "2022-07-13T07:16:07.683", "UserId": "2053165", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "In case other folks find it useful, it's worth noting that the `state show` command has changed its output format from the version described in this question to something more JSON-like (but not quite) as in https://stackoverflow.com/q/67461595/2053165 - the solution in both cases is the same if you need to extract a specific value: switch to `terraform show -json` and pipe to `jq`.", "keywords": ["change"]}]}], "links": [{"Id": "1991469310", "CreationDate": "2022-07-13T07:16:07.683", "PostId": "57811596", "RelatedPostId": "67461595", "LinkTypeId": "1"}], "history": [{"Id": "204825350", "PostHistoryTypeId": "2", "PostId": "57811596", "RevisionGUID": "a7a74049-ba54-4427-88e2-d260fb1fb01f", "CreationDate": "2019-09-05T19:03:37.683", "UserId": "419425", "Text": "I've deployed my infra using Terraform and I noticed that I have some interesting information in the state file of terraform which I would like to extract. For example\r\n\r\n    $ terraform state show 'packet_device.worker'\r\n    id                = 6015bg2b-b8c4-4925-aad2-f0671d5d3b13\r\n    billing_cycle     = hourly\r\n    created           = 2015-12-17T00:06:56Z\r\n    facility          = ewr1\r\n    ...\r\n\r\nwhich I would like to transform somehow to \r\n\r\n    $ terraform state show 'packet_device.worker.id'\r\n    6015bg2b-b8c4-4925-aad2-f0671d5d3b13\r\n    \r\nBut adding the `id` at the end doesn't seem to work. Any suggestions how I can achieve this behaviour?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "For example $ terraform state show 'packet_device.worker' id = 6015bg2b-b8c4-4925-aad2-f0671d5d3b13 billing_cycle = hourly created = 2015-12-17T00:06:56Z facility = ewr1 ... ", "keywords": ["bill"]}]}, {"Id": "204825351", "PostHistoryTypeId": "1", "PostId": "57811596", "RevisionGUID": "a7a74049-ba54-4427-88e2-d260fb1fb01f", "CreationDate": "2019-09-05T19:03:37.683", "UserId": "419425", "Text": "Get specific value out of the Terraform state file", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "204825352", "PostHistoryTypeId": "3", "PostId": "57811596", "RevisionGUID": "a7a74049-ba54-4427-88e2-d260fb1fb01f", "CreationDate": "2019-09-05T19:03:37.683", "UserId": "419425", "Text": "<terraform>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "204825811", "PostHistoryTypeId": "5", "PostId": "57811596", "RevisionGUID": "b2915441-32a1-4ba1-a030-93f15b7f94ae", "CreationDate": "2019-09-05T19:12:46.237", "UserId": "419425", "Comment": "added 22 characters in body", "Text": "I've deployed my infra using Terraform and I noticed that I have some interesting information in the state (`terraform.tfstate`) file of terraform which I would like to extract. For example\r\n\r\n    $ terraform state show 'packet_device.worker'\r\n    id                = 6015bg2b-b8c4-4925-aad2-f0671d5d3b13\r\n    billing_cycle     = hourly\r\n    created           = 2015-12-17T00:06:56Z\r\n    facility          = ewr1\r\n    ...\r\n\r\nwhich I would like to transform somehow to \r\n\r\n    $ terraform state show 'packet_device.worker.id'\r\n    6015bg2b-b8c4-4925-aad2-f0671d5d3b13\r\n    \r\nBut adding the `id` at the end doesn't seem to work. Any suggestions how I can achieve this behaviour?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "For example $ terraform state show 'packet_device.worker' id = 6015bg2b-b8c4-4925-aad2-f0671d5d3b13 billing_cycle = hourly created = 2015-12-17T00:06:56Z facility = ewr1 ... ", "keywords": ["bill"]}]}], "answers": [{"Id": "65454624", "PostTypeId": "2", "ParentId": "57811596", "CreationDate": "2020-12-26T08:13:02.087", "Score": "10", "Body": "<p>You can utilize <code>terraform show -json</code> and <code>jq</code> to get a specific value out of a Terraform state file.</p>\n<pre><code>terraform show -json &lt;state_file&gt; | jq '.values.root_module.resources[] | select(.address==&quot;&lt;terraform_resource_name&gt;&quot;) | .values.&lt;property_name&gt;'\n</code></pre>\n<p>You have a state file named <code>terraform.tfstate</code> and a Terraform resource as <code>packet_device.worker</code> and you want to get <code>id</code>. Then it would be as follows:</p>\n<pre><code>terraform show -json terraform.tfstate | jq '.values.root_module.resources[] | select(.address==&quot;packet_device.worker&quot;) | .values.id'\n</code></pre>\n<p><code>terraform.tfstate</code> also can be omitted since it is a default name for a state file.</p>\n", "OwnerUserId": "950762", "LastActivityDate": "2020-12-26T08:13:02.087", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "237603468", "PostHistoryTypeId": "2", "PostId": "65454624", "RevisionGUID": "9904fe7d-cfe8-4a52-8c97-a05c9b92e4a5", "CreationDate": "2020-12-26T08:13:02.087", "UserId": "950762", "Text": "You can utilize `terraform show -json` and `jq` to get a specific value out of a Terraform state file.\r\n\r\n    terraform show -json <state_file> | jq '.values.root_module.resources[] | select(.address==\"<terraform_resource_name>\") | .values.<property_name>'\r\n\r\nYou have a state file named `terraform.tfstate` and a Terraform resource as `packet_device.worker` and you want to get `id`. Then it would be as follows:\r\n\r\n    terraform show -json terraform.tfstate | jq '.values.root_module.resources[] | select(.address==\"packet_device.worker\") | .values.id'\r\n\r\n`terraform.tfstate` also can be omitted since it is a default name for a state file.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "73904098", "PostTypeId": "2", "ParentId": "57811596", "CreationDate": "2022-09-30T04:44:06.647", "Score": "1", "Body": "<p>If you want to get the exact value and are willing to install <code>jq</code>, the other answers here are great!</p>\n<p>If you're looking for a quick answer to manually copy/paste, etc., piping to grep does the trick.</p>\n<p>ex:\n<code>terraform state show 'packet_device.worker' | grep &quot;id&quot;</code></p>\n<p>which would show the relevant line(s), like:</p>\n<pre><code>id = 6015bg2b-b8c4-4925-aad2-f0671d5d3b13\n</code></pre>\n", "OwnerUserId": "2514961", "LastActivityDate": "2022-09-30T04:44:06.647", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "279216252", "PostHistoryTypeId": "2", "PostId": "73904098", "RevisionGUID": "7456f139-ae68-43b0-b8e3-f2d8fa5b3562", "CreationDate": "2022-09-30T04:44:06.647", "UserId": "2514961", "Text": "If you want to get the exact value and are willing to install `jq`, the other answers here are great!\r\n\r\nIf you're looking for a quick answer to manually copy/paste, etc., piping to grep does the trick.\r\n\r\nex:\r\n`terraform state show 'packet_device.worker' | grep \"id\"`\r\n\r\nwhich would show the relevant line(s), like:\r\n\r\n```\r\nid = 6015bg2b-b8c4-4925-aad2-f0671d5d3b13", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "57829260", "PostTypeId": "2", "ParentId": "57811596", "CreationDate": "2019-09-06T22:41:46.393", "Score": "3", "Body": "<p>The primary way to export information from a Terraform configuration is to declare <a href=\"https://www.terraform.io/docs/configuration/outputs.html\" rel=\"nofollow noreferrer\">Output Values</a> in your root module. You can then access them using <a href=\"https://www.terraform.io/docs/commands/output.html\" rel=\"nofollow noreferrer\"><code>terraform output</code></a> once the apply has completed. If you need that information in a machine-readable way, you can alternatively run <a href=\"https://www.terraform.io/docs/commands/output.html#json\" rel=\"nofollow noreferrer\"><code>terraform output -json</code></a> from the consuming program and parse the output as JSON.</p>\n\n<p>If you are in an unusual situation where you need programmatic access to <em>all</em> values in the state (for example, if you were implementing some sort of generic Terraform state visualization tool) then you can instead use <code>terraform show -json</code>, which will print out all of the data from the state in <a href=\"https://www.terraform.io/docs/internals/json-format.html#state-representation\" rel=\"nofollow noreferrer\">a JSON format</a>.</p>\n\n<p>If you <em>are</em> accessing only specific values, perhaps to integrate with some other system in an automation solution, I'd recommend using explicit Output Values because then it's explicit to future maintainers what the interface with the caller is, and so they are less likely to accidentally break the caller by e.g. refactoring the <code>packet_device.worker</code> resource into a child module, which would cause it to appear in a different place in the state. The usual assumption is that the resources inside a module are an implementation detail of that module and thus that you can safely refactor them as needed as long as the output values remain unchanged.</p>\n", "OwnerUserId": "281848", "LastActivityDate": "2019-09-06T22:41:46.393", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "204898181", "PostHistoryTypeId": "2", "PostId": "57829260", "RevisionGUID": "353eb8ac-dc05-46ce-bd65-da07d68553ca", "CreationDate": "2019-09-06T22:41:46.393", "UserId": "281848", "Text": "The primary way to export information from a Terraform configuration is to declare [Output Values](https://www.terraform.io/docs/configuration/outputs.html) in your root module. You can then access them using [`terraform output`](https://www.terraform.io/docs/commands/output.html) once the apply has completed. If you need that information in a machine-readable way, you can alternatively run [`terraform output -json`](https://www.terraform.io/docs/commands/output.html#json) from the consuming program and parse the output as JSON.\r\n\r\nIf you are in an unusual situation where you need programmatic access to _all_ values in the state (for example, if you were implementing some sort of generic Terraform state visualization tool) then you can instead use `terraform show -json`, which will print out all of the data from the state in [a JSON format](https://www.terraform.io/docs/internals/json-format.html#state-representation).\r\n\r\nIf you _are_ accessing only specific values, perhaps to integrate with some other system in an automation solution, I'd recommend using explicit Output Values because then it's explicit to future maintainers what the interface with the caller is, and so they are less likely to accidentally break the caller by e.g. refactoring the `packet_device.worker` resource into a child module, which would cause it to appear in a different place in the state. The usual assumption is that the resources inside a module are an implementation detail of that module and thus that you can safely refactor them as needed as long as the output values remain unchanged.\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "57816160", "PostTypeId": "2", "ParentId": "57811596", "CreationDate": "2019-09-06T05:23:44.913", "Score": "8", "Body": "<p>Terraform <strong>state show command</strong> is used to retrieve all the attributes of a given resource and you won't be able to fetch a single attribute from it as the argument is resource <strong>ADDRESS</strong> and is used to refer a resource specifically. Documented in <a href=\"https://www.terraform.io/docs/internals/resource-addressing.html\" rel=\"noreferrer\">https://www.terraform.io/docs/internals/resource-addressing.html</a></p>\n\n<p>What you can do is store the resource attribute in output value and use the command </p>\n\n<p><strong>terraform output {output-valaue-extractor}</strong></p>\n\n<p>Refer: <a href=\"https://www.terraform.io/docs/configuration/outputs.html\" rel=\"noreferrer\">https://www.terraform.io/docs/configuration/outputs.html</a></p>\n", "OwnerUserId": "4359931", "LastActivityDate": "2019-09-06T05:23:44.913", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "204844987", "PostHistoryTypeId": "2", "PostId": "57816160", "RevisionGUID": "614418c9-ea4c-4e09-87ab-7534ed26b08e", "CreationDate": "2019-09-06T05:23:44.913", "UserId": "4359931", "Text": "Terraform **state show command** is used to retrieve all the attributes of a given resource and you won't be able to fetch a single attribute from it as the argument is resource **ADDRESS** and is used to refer a resource specifically. Documented in https://www.terraform.io/docs/internals/resource-addressing.html\r\n\r\nWhat you can do is store the resource attribute in output value and use the command \r\n\r\n**terraform output {output-valaue-extractor}**\r\n\r\nRefer: https://www.terraform.io/docs/configuration/outputs.html\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": []}