{"Id": "71561417", "PostTypeId": "1", "AcceptedAnswerId": "71569338", "CreationDate": "2022-03-21T17:04:48.230", "Score": "0", "ViewCount": "416", "Body": "<p>I'm trying to deploy a crd using terraform with the code bellow</p>\n<pre class=\"lang-sh prettyprint-override\"><code>resource &quot;kubectl_manifest&quot; &quot;crd-deploy&quot; {\n  for_each  = [ for crd in var.crdslist : crd ]\n  yaml_body = (fileexists(&quot;${path.module}/crds/${crd}.yaml&quot;) ? file(&quot;${path.module}/crds/${crd}&quot;) : &quot;&quot;)\n}\n</code></pre>\n<p>but i still get an error</p>\n<pre class=\"lang-sh prettyprint-override\"><code> Error: Invalid reference\n \n   on ../../00-modules/00-global/25-crd/10-crd.tf line 3, in resource &quot;kubectl_manifest&quot; &quot;crd-deploy&quot;:\n    3:   yaml_body = (fileexists(&quot;${path.module}/crds/${crd}.yaml&quot;) ? file(&quot;${path.module}/crds/${crd}&quot;) : &quot;&quot;)\n \n A reference to a resource type must be followed by at least one attribute access, specifying the resource name.\n</code></pre>\n<p>input.tf in module_level</p>\n<pre class=\"lang-sh prettyprint-override\"><code>variable &quot;crdslist&quot; {\n  type        = list(string)\n  default     = []\n}\n</code></pre>\n<p>input.tf in execution_module_level</p>\n<pre class=\"lang-sh prettyprint-override\"><code>locals {\n  crdslist            = [&quot;crd-test&quot;]\n}\n</code></pre>\n<p>From where i run the terraform plan to deploy K8s CRDs</p>\n<pre class=\"lang-sh prettyprint-override\"><code>module &quot;crds&quot; {\n  source   = &quot;../../modules/global/25-crd&quot;\n  crdslist = local.crdslist\n}\n</code></pre>\n", "OwnerUserId": "14632949", "LastEditorUserId": "14632949", "LastEditDate": "2022-03-21T17:24:51.170", "LastActivityDate": "2022-03-22T09:00:08.383", "Title": "getting an error while trying deploy a crd using terrafom", "Tags": "<kubernetes><terraform><kubernetes-custom-resources>", "AnswerCount": "1", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "126479754", "PostId": "71561417", "Score": "0", "Text": "Try `for_each = toset(var.crdlist)`.", "CreationDate": "2022-03-21T18:35:28.190", "UserId": "8343484", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "126491134", "PostId": "71561417", "Score": "0", "Text": "Converted it to an answer.", "CreationDate": "2022-03-22T09:02:36.070", "UserId": "8343484", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "266483761", "PostHistoryTypeId": "2", "PostId": "71561417", "RevisionGUID": "6ed59463-fb7e-40a5-97b1-05f2229d6446", "CreationDate": "2022-03-21T17:04:48.230", "UserId": "14632949", "Text": "I'm trying to deploy a crd using terraform with the code bellow \r\n```bash\r\nresource \"kubectl_manifest\" \"crd-deploy\" {\r\n  for_each  = [ for crd in var.crdslist : crd ]\r\n  yaml_body = (fileexists(\"${path.module}/crds/${crd}.yaml\") ? file(\"${path.module}/crds/${crd}\") : \"\")\r\n}\r\n```\r\nbut i still get an error\r\n```bash\r\n Error: Invalid reference\r\n \r\n   on ../../00-modules/00-global/25-crd/10-crd.tf line 3, in resource \"kubectl_manifest\" \"crd-deploy\":\r\n    3:   yaml_body = (fileexists(\"${path.module}/crds/${crd}.yaml\") ? file(\"${path.module}/crds/${crd}\") : \"\")\r\n \r\n A reference to a resource type must be followed by at least one attribute access, specifying the resource name.\r\n```\r\n\r\ninput.tf in module_level\r\n```bash\r\nvariable \"crdslist\" {\r\n  type        = list(string)\r\n  default     = []\r\n}\r\n```\r\ninput.tf in execution_module_level\r\n```bash\r\nlocals {\r\n  crdslist            = [\"business-metric\"]\r\n}\r\n```\r\nFrom where i run the terraform plan to deploy K8s CRDs\r\n```bash\r\nmodule \"crds\" {\r\n  source   = \"../../modules/global/25-crd\"\r\n  crdslist = local.crdslist\r\n}\r\n```\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "266483763", "PostHistoryTypeId": "1", "PostId": "71561417", "RevisionGUID": "6ed59463-fb7e-40a5-97b1-05f2229d6446", "CreationDate": "2022-03-21T17:04:48.230", "UserId": "14632949", "Text": "getting an error while trying deploy a crd using terrafom", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "266483764", "PostHistoryTypeId": "3", "PostId": "71561417", "RevisionGUID": "6ed59463-fb7e-40a5-97b1-05f2229d6446", "CreationDate": "2022-03-21T17:04:48.230", "UserId": "14632949", "Text": "<kubernetes><terraform><kubernetes-custom-resources>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "266484976", "PostHistoryTypeId": "5", "PostId": "71561417", "RevisionGUID": "8ed5eb74-b3b3-4dba-94f2-dde0e1dbb592", "CreationDate": "2022-03-21T17:24:51.170", "UserId": "14632949", "Comment": "deleted 7 characters in body", "Text": "I'm trying to deploy a crd using terraform with the code bellow \r\n```bash\r\nresource \"kubectl_manifest\" \"crd-deploy\" {\r\n  for_each  = [ for crd in var.crdslist : crd ]\r\n  yaml_body = (fileexists(\"${path.module}/crds/${crd}.yaml\") ? file(\"${path.module}/crds/${crd}\") : \"\")\r\n}\r\n```\r\nbut i still get an error\r\n```bash\r\n Error: Invalid reference\r\n \r\n   on ../../00-modules/00-global/25-crd/10-crd.tf line 3, in resource \"kubectl_manifest\" \"crd-deploy\":\r\n    3:   yaml_body = (fileexists(\"${path.module}/crds/${crd}.yaml\") ? file(\"${path.module}/crds/${crd}\") : \"\")\r\n \r\n A reference to a resource type must be followed by at least one attribute access, specifying the resource name.\r\n```\r\n\r\ninput.tf in module_level\r\n```bash\r\nvariable \"crdslist\" {\r\n  type        = list(string)\r\n  default     = []\r\n}\r\n```\r\ninput.tf in execution_module_level\r\n```bash\r\nlocals {\r\n  crdslist            = [\"crd-test\"]\r\n}\r\n```\r\nFrom where i run the terraform plan to deploy K8s CRDs\r\n```bash\r\nmodule \"crds\" {\r\n  source   = \"../../modules/global/25-crd\"\r\n  crdslist = local.crdslist\r\n}\r\n```\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "``` input.tf in module_level ```bash variable \"crdslist\" { type = list(string) default = [] } ``` input.tf in execution_module_level ```bash locals { crdslist = [\"crd-test\"] } ``` From where i run the terraform plan to deploy K8s CRDs ```bash module \"crds\" { source = \"../.", "keywords": ["test"]}]}], "answers": [{"Id": "71569338", "PostTypeId": "2", "ParentId": "71561417", "CreationDate": "2022-03-22T09:00:08.383", "Score": "0", "Body": "<p>Since the variable that is used is of type <code>list(string)</code>, that means it cannot be used with <code>for_each</code> in its original form. The <code>for_each</code> meta-argument requires a variable to be of type <code>map</code> or <code>set</code> [1]:</p>\n<blockquote>\n<p>If a resource or module block includes a for_each argument whose value is a map or a set of strings, Terraform will create one instance for each member of that map or set.</p>\n</blockquote>\n<p>In order for the current configuration to work as expected, it is enough to use a Terraform built-in function <code>toset</code> [2]. The only change that needs to be made is inside of the module:</p>\n<pre><code>resource &quot;kubectl_manifest&quot; &quot;crd-deploy&quot; {\n  for_each  = toset(var.crdslist)\n  yaml_body = (fileexists(&quot;${path.module}/crds/${each.vlaue}.yaml&quot;) ? file(&quot;${path.module}/crds/${each.vlaue}&quot;) : &quot;&quot;)\n}\n</code></pre>\n<p>Note that when the list is converted to a set, the key and value are the same, i.e., <code>each.key</code> and <code>each.value</code> can be used interchangeably [3].</p>\n<hr />\n<p>[1] <a href=\"https://www.terraform.io/language/meta-arguments/for_each\" rel=\"nofollow noreferrer\">https://www.terraform.io/language/meta-arguments/for_each</a></p>\n<p>[2] <a href=\"https://www.terraform.io/language/functions/toset\" rel=\"nofollow noreferrer\">https://www.terraform.io/language/functions/toset</a></p>\n<p>[3] <a href=\"https://www.terraform.io/language/meta-arguments/for_each#the-each-object\" rel=\"nofollow noreferrer\">https://www.terraform.io/language/meta-arguments/for_each#the-each-object</a></p>\n", "OwnerUserId": "8343484", "LastActivityDate": "2022-03-22T09:00:08.383", "CommentCount": "4", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "126497742", "PostId": "71569338", "Score": "0", "Text": "so helpful, sufficient explanation, I couldn't agree more, i applied the changes, it works, Thanks :-D", "CreationDate": "2022-03-22T13:52:07.173", "UserId": "14632949", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "so helpful, sufficient explanation, I couldn't agree more, i applied the changes, it works, ", "keywords": ["change"]}]}, {"Id": "126498032", "PostId": "71569338", "Score": "0", "Text": "Would you mind accepting the answer as the correct one: https://stackoverflow.com/help/accepted-answer?", "CreationDate": "2022-03-22T14:01:56.020", "UserId": "8343484", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "126500279", "PostId": "71569338", "Score": "0", "Text": "yes with pleasure, what's the more efficient resource ? to use kubectl_manifest or using kubernetes_manifest ?", "CreationDate": "2022-03-22T15:22:43.837", "UserId": "14632949", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "yes with pleasure, what's the more efficient resource ? to use kubectl_manifest or using kubernetes_manifest ?", "keywords": ["efficient"]}]}, {"Id": "126500573", "PostId": "71569338", "Score": "0", "Text": "I tend to use the official providers whenever I can, but not sure what is more efficient.", "CreationDate": "2022-03-22T15:33:55.913", "UserId": "8343484", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I tend to use the official providers whenever I can, but not sure what is more efficient.", "keywords": ["efficient"]}]}], "history": [{"Id": "266525774", "PostHistoryTypeId": "2", "PostId": "71569338", "RevisionGUID": "8da8245e-e023-4ef1-acee-4599ca9ee674", "CreationDate": "2022-03-22T09:00:08.383", "UserId": "8343484", "Text": "Since the variable that is used is of type `list(string)`, that means it cannot be used with `for_each` in its original form. The `for_each` meta-argument requires a variable to be of type `map` or `set` [1]:\r\n\r\n> If a resource or module block includes a for_each argument whose value is a map or a set of strings, Terraform will create one instance for each member of that map or set.\r\n\r\nIn order for the current configuration to work as expected, it is enough to use a Terraform built-in function `toset` [2]. The only change that needs to be made is inside of the module:\r\n\r\n```hcl\r\nresource \"kubectl_manifest\" \"crd-deploy\" {\r\n  for_each  = toset(var.crdslist)\r\n  yaml_body = (fileexists(\"${path.module}/crds/${each.vlaue}.yaml\") ? file(\"${path.module}/crds/${each.vlaue}\") : \"\")\r\n}\r\n```\r\n\r\nNote that when the list is converted to a set, the key and value are the same, i.e., `each.key` and `each.value` can be used interchangeably [3].\r\n\r\n---\r\n\r\n[1] https://www.terraform.io/language/meta-arguments/for_each\r\n\r\n[2] https://www.terraform.io/language/functions/toset\r\n\r\n[3] https://www.terraform.io/language/meta-arguments/for_each#the-each-object", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "The `for_each` meta-argument requires a variable to be of type `map` or `set` [1]: > If a resource or module block includes a for_each argument whose value is a map or a set of strings, Terraform will create one instance for each member of that map or set. ", "keywords": ["instance"]}, {"source": "Text", "text": "The only change that needs to be made is inside of the module: ```hcl resource \"kubectl_manifest\" \"crd-deploy\" { for_each = toset(var.crdslist) yaml_body = (fileexists(\"${path.module}/crds/${each.vlaue}.yaml\") ? file(\"${path.module}/crds/${each.vlaue}\") : \"\") } ``` ", "keywords": ["change"]}]}], "filtered-sentences": [{"source": "Body", "text": "If a resource or module block includes a for_each argument whose value is a map or a set of strings, Terraform will create one instance for each member of that map or set. ", "keywords": ["instance"]}, {"source": "Body", "text": "The only change that needs to be made is inside of the module: Note that when the list is converted to a set, the key and value are the same, i.e., each.key and each.", "keywords": ["change"]}]}], "contains-topic": true, "filtered-sentences": []}