{"Id": "59140673", "PostTypeId": "1", "CreationDate": "2019-12-02T14:11:43.297", "Score": "1", "ViewCount": "425", "Body": "<p>I have created an AMI that performs work when a machine is started using systemd. Since the work is not time-critical, I would like to optimize for cost using an AWS auto-scaling group. I am using Terraform to manage my infrastructure. </p>\n\n<p>Here is what I have so far: </p>\n\n<pre><code># ...\n\nresource \"aws_launch_template\" \"default\" {\n  name = \"autoscaling-launch-template\"\n\n  capacity_reservation_specification {\n    capacity_reservation_preference = \"open\"\n  }\n\n  credit_specification {\n    cpu_credits = \"standard\"\n  }\n\n  iam_instance_profile {\n    name = aws_iam_instance_profile.default.name\n  }\n\n  image_id = data.aws_ami.default.id\n\n  instance_market_options {\n    market_type = \"spot\"\n  }\n\n  instance_type = \"t2.small\"\n  key_name      = var.master_key\n\n  monitoring {\n    enabled = true\n  }\n\n  placement {\n    availability_zone = \"us-east-1a\"\n  }\n\n  vpc_security_group_ids = [ \"${aws_security_group.default.id}\" ]\n\n  tag_specifications {\n    resource_type = \"instance\"\n  }\n\n  user_data = base64encode(local.user_data)\n}\n\nresource \"aws_autoscaling_group\" \"default\" {\n  name                 = \"my-autoscaling-group\"\n  min_size             = 1\n  max_size             = 5\n  desired_capacity     = 2\n  availability_zones   = [ \"us-east-1a\" ]\n\n  launch_template {\n    id      = aws_launch_template.default.id\n    version = \"$Latest\"\n  }\n\n  lifecycle {\n    create_before_destroy = true\n  }\n}\n\n# ...\n</code></pre>\n\n<p>What I would like to achieve is the following: </p>\n\n<ul>\n<li>When the spot instance price is low, scale up to the maximum</li>\n<li>When the spot instance price is high, scale down to the minimum</li>\n</ul>\n\n<p>\"high\" and \"low\" price should be defined approximately using a rolling average or similar. I don't want to have to maintain minimum and maximum prices. </p>\n\n<p>I always want to use <code>t2.small</code>. </p>\n\n<p>How can I achieve this in Terraform?</p>\n", "OwnerUserId": "1256041", "LastActivityDate": "2019-12-30T20:44:56.590", "Title": "Configure an AWS auto-scaling group for price in Terraform?", "Tags": "<amazon-web-services><terraform><autoscaling>", "AnswerCount": "1", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "210387349", "PostHistoryTypeId": "2", "PostId": "59140673", "RevisionGUID": "84cabb13-e76b-489a-8314-b7def4feda5f", "CreationDate": "2019-12-02T14:11:43.297", "UserId": "1256041", "Text": "I have created an AMI that performs work when a machine is started using systemd. Since the work is not time-critical, I would like to optimize for cost using an AWS auto-scaling group. I am using Terraform to manage my infrastructure. \r\n\r\nHere is what I have so far: \r\n\r\n```hctl\r\n# ...\r\n\r\nresource \"aws_launch_template\" \"default\" {\r\n  name = \"autoscaling-launch-template\"\r\n\r\n  capacity_reservation_specification {\r\n    capacity_reservation_preference = \"open\"\r\n  }\r\n\r\n  credit_specification {\r\n    cpu_credits = \"standard\"\r\n  }\r\n\r\n  iam_instance_profile {\r\n    name = aws_iam_instance_profile.default.name\r\n  }\r\n\r\n  image_id = data.aws_ami.default.id\r\n\r\n  instance_market_options {\r\n    market_type = \"spot\"\r\n  }\r\n\r\n  instance_type = \"t2.small\"\r\n  key_name      = var.master_key\r\n\r\n  monitoring {\r\n    enabled = true\r\n  }\r\n\r\n  placement {\r\n    availability_zone = \"us-east-1a\"\r\n  }\r\n\r\n  vpc_security_group_ids = [ \"${aws_security_group.default.id}\" ]\r\n\r\n  tag_specifications {\r\n    resource_type = \"instance\"\r\n  }\r\n\r\n  user_data = base64encode(local.user_data)\r\n}\r\n\r\nresource \"aws_autoscaling_group\" \"default\" {\r\n  name                 = \"my-autoscaling-group\"\r\n  min_size             = 1\r\n  max_size             = 5\r\n  desired_capacity     = 2\r\n  availability_zones   = [ \"us-east-1a\" ]\r\n\r\n  launch_template {\r\n    id      = aws_launch_template.default.id\r\n    version = \"$Latest\"\r\n  }\r\n\r\n  lifecycle {\r\n    create_before_destroy = true\r\n  }\r\n}\r\n\r\n# ...\r\n```\r\n\r\nWhat I would like to achieve is the following: \r\n \r\n * When the spot instance price is low, scale up to the maximum\r\n * When the spot instance price is high, scale down to the minimum\r\n\r\n\"high\" and \"low\" price should be defined approximately using a rolling average or similar. I don't want to have to maintain minimum and maximum prices. \r\n\r\nI always want to use `t2.small`. \r\n\r\nHow can I achieve this in Terraform?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Since the work is not time-critical, I would like to optimize for cost using an AWS auto-scaling group. ", "keywords": ["cost"]}, {"source": "Text", "text": "Here is what I have so far: ```hctl # ... resource \"aws_launch_template\" \"default\" { name = \"autoscaling-launch-template\" capacity_reservation_specification { capacity_reservation_preference = \"open\" } credit_specification { cpu_credits = \"standard\" } iam_instance_profile { name = aws_iam_instance_profile.default.name } image_id = data.aws_ami.default.id instance_market_options { market_type = \"spot\" } instance_type = \"t2.small\" key_name = var.master_key monitoring { enabled = true } placement { availability_zone = \"us-east-1a\" } vpc_security_group_ids = [ \"${aws_security_group.default.id}\" ] tag_specifications { resource_type = \"instance\" } user_data = base64encode(local.user_data) } resource \"aws_autoscaling_group\" \"default\" { name = \"my-autoscaling-group\" min_size = 1 max_size = 5 desired_capacity = 2 availability_zones = [ \"us-east-1a\" ] launch_template { id = aws_launch_template.default.id version = \"$Latest\" } lifecycle { create_before_destroy = true } } # ... ``` ", "keywords": ["instance"]}, {"source": "Text", "text": "What I would like to achieve is the following: * When the spot instance price is low, scale up to the maximum * When the spot instance price is high, scale down to the minimum \"high\" and \"low\" price should be defined approximately using a rolling average or similar. ", "keywords": ["instance"]}]}, {"Id": "210387350", "PostHistoryTypeId": "1", "PostId": "59140673", "RevisionGUID": "84cabb13-e76b-489a-8314-b7def4feda5f", "CreationDate": "2019-12-02T14:11:43.297", "UserId": "1256041", "Text": "Configure an AWS auto-scaling group for price in Terraform?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "210387351", "PostHistoryTypeId": "3", "PostId": "59140673", "RevisionGUID": "84cabb13-e76b-489a-8314-b7def4feda5f", "CreationDate": "2019-12-02T14:11:43.297", "UserId": "1256041", "Text": "<amazon-web-services><terraform><autoscaling>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "59536662", "PostTypeId": "2", "ParentId": "59140673", "CreationDate": "2019-12-30T20:44:56.590", "Score": "-2", "Body": "<p>The terraform registry has a nice verified module for creating autoscaling groups:</p>\n\n<p><a href=\"https://registry.terraform.io/modules/terraform-aws-modules/autoscaling/aws/3.4.0\" rel=\"nofollow noreferrer\">https://registry.terraform.io/modules/terraform-aws-modules/autoscaling/aws/3.4.0</a></p>\n\n<p>You can use the <code>spot_price</code> variable to launch spot instances into the ASG.</p>\n", "OwnerUserId": "3894599", "LastActivityDate": "2019-12-30T20:44:56.590", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "212083762", "PostHistoryTypeId": "2", "PostId": "59536662", "RevisionGUID": "4b68b0dd-6b88-4857-a032-7f98f8cfaace", "CreationDate": "2019-12-30T20:44:56.590", "UserId": "3894599", "Text": "The terraform registry has a nice verified module for creating autoscaling groups:\r\n\r\nhttps://registry.terraform.io/modules/terraform-aws-modules/autoscaling/aws/3.4.0\r\n\r\nYou can use the `spot_price` variable to launch spot instances into the ASG.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "Since the work is not time-critical, I would like to optimize for cost using an AWS auto-scaling group. ", "keywords": ["cost"]}, {"source": "Body", "text": "Here is what I have so far: What I would like to achieve is the following: When the spot instance price is low, scale up to the maximum ", "keywords": ["instance"]}, {"source": "Body", "text": "When the spot instance price is high, scale down to the minimum \"high\" and \"low\" price should be defined approximately using a rolling average or similar. ", "keywords": ["instance"]}]}