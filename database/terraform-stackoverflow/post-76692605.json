{"Id": "76692605", "PostTypeId": "1", "CreationDate": "2023-07-15T07:07:15.443", "Score": "0", "ViewCount": "68", "Body": "<p>I am facing an issue with an AWS API Gateway and DynamoDB integration. I have configured an API Gateway endpoint to retrieve all projects from a DynamoDB table. When testing the API Gateway using the AWS console, I can successfully retrieve the data. However, when I try to invoke the same API using tools like Insomnia, I receive a &quot;401 Unauthorized&quot; error.</p>\n<p>Here is an overview of my setup:</p>\n<ul>\n<li>DynamoDB table name: test-dynamodb</li>\n<li>Primary key in DynamoDB: pk</li>\n<li>API Gateway configuration: HTTP method: GET</li>\n<li>Authorization: AWS_IAM</li>\n<li>API key required: true</li>\n</ul>\n<p><strong>I have verified the following:</strong></p>\n<ul>\n<li>The API key value is correctly included in the request headers (x-api-key) when invoking the API.</li>\n<li>The IAM role associated with the API Gateway has the necessary permissions to access DynamoDB, including the dynamodb:Scan action on the test-dynamodb table.</li>\n<li>The API key is associated with the usage plan and the usage plan is correctly linked to the API Gateway deployment.</li>\n</ul>\n<p>Despite these checks, I still encounter the &quot;401 Unauthorized&quot; error when invoking the API Gateway.</p>\n<p>Can someone help me troubleshoot this issue and identify what could be causing the unauthorized error? Are there any additional steps or configurations I should consider?</p>\n<p>Thank you in advance for your assistance.</p>\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>data \"aws_caller_identity\" \"id\" {}\n\ndata \"aws_region\" \"region\" {}\n\nresource \"aws_dynamodb_table\" \"apigw_dynamo\" {\n  name         = \"apgw-dynamo-prod\"\n  billing_mode = \"PAY_PER_REQUEST\"\n  hash_key     = \"pk\"\n\n  attribute {\n    name = \"pk\"\n    type = \"S\"\n  }\n\n  tags = {\n    Name        = \"apgw-dynamo-prod\"\n    Environment = \"prod\"\n  }\n}\n\nresource \"aws_api_gateway_rest_api\" \"dynamodb_api\" {\n  name = \"apgw-dynamo-prod\"\n}\n\nresource \"aws_api_gateway_resource\" \"dynamodb_resource\" {\n  rest_api_id = aws_api_gateway_rest_api.dynamodb_api.id\n  parent_id   = aws_api_gateway_rest_api.dynamodb_api.root_resource_id\n  path_part   = \"apgw-dynamo-projects\"\n}\n\nresource \"aws_api_gateway_method\" \"dynamodb_method\" {\n  rest_api_id      = aws_api_gateway_rest_api.dynamodb_api.id\n  resource_id      = aws_api_gateway_resource.dynamodb_resource.id\n  http_method      = \"GET\"\n  authorization    = \"AWS_IAM\"\n  api_key_required = true\n}\n\nresource \"aws_api_gateway_usage_plan\" \"dynamodb_usage_plan\" {\n  name         = \"dynamodb-usage-plan\"\n  description  = \"Usage plan for DynamoDB API\"\n  product_code = \"dynamodb-product-code\"\n\n  api_stages {\n    api_id = aws_api_gateway_rest_api.dynamodb_api.id\n    stage  = aws_api_gateway_stage.dynamodb_stage.stage_name\n  }\n\n  quota_settings {\n    limit  = 10000\n    period = \"MONTH\"\n  }\n\n  throttle_settings {\n    rate_limit  = 1000\n    burst_limit = 2000\n  }\n}\nresource \"random_string\" \"api_key_value\" {\n  length  = 32\n  special = false\n}\n\nresource \"aws_api_gateway_api_key\" \"dynamodb_api_key\" {\n  name  = \"my-api-key\"\n  value = random_string.api_key_value.result\n\n}\n\n\nresource \"aws_api_gateway_usage_plan_key\" \"dynamodb_usage_plan_key\" {\n  key_id        = aws_api_gateway_api_key.dynamodb_api_key.id\n  key_type      = \"API_KEY\"\n  usage_plan_id = aws_api_gateway_usage_plan.dynamodb_usage_plan.id\n}\nresource \"aws_api_gateway_gateway_response\" \"dynamodb_gateway_response\" {\n  rest_api_id   = aws_api_gateway_rest_api.dynamodb_api.id\n  response_type = \"MISSING_AUTHENTICATION_TOKEN\"\n  status_code   = \"401\"\n\n  response_templates = {\n    \"application/json\" = \"{\\\"message\\\": \\\"Missing Authentication Token\\\"}\"\n  }\n}\n\nresource \"aws_api_gateway_gateway_response\" \"dynamodb_gateway_response_403\" {\n  rest_api_id   = aws_api_gateway_rest_api.dynamodb_api.id\n  response_type = \"API_CONFIGURATION_ERROR\"\n  status_code   = \"403\"\n\n  response_templates = {\n    \"application/json\" = \"{\\\"message\\\": \\\"Forbidden\\\"}\"\n  }\n}\n\nresource \"aws_api_gateway_integration\" \"dynamodb_integration\" {\n  rest_api_id             = aws_api_gateway_rest_api.dynamodb_api.id\n  resource_id             = aws_api_gateway_resource.dynamodb_resource.id\n  http_method             = aws_api_gateway_method.dynamodb_method.http_method\n  integration_http_method = \"POST\"\n  type                    = \"AWS\"\n  uri                     = \"arn:aws:apigateway:${data.aws_region.region.name}:dynamodb:action/Scan\"\n  credentials             = aws_iam_role.api_gateway_role.arn\n\n  request_templates = {\n    \"application/json\" = &lt;&lt;EOF\n      {\n        \"TableName\": \"${aws_dynamodb_table.apigw_dynamo.name}\"\n      }\n    EOF\n  }\n}\n\n\n\nresource \"aws_api_gateway_integration_response\" \"dynamodb_integration_response\" {\n  rest_api_id = aws_api_gateway_rest_api.dynamodb_api.id\n  resource_id = aws_api_gateway_resource.dynamodb_resource.id\n  http_method = aws_api_gateway_method.dynamodb_method.http_method\n  status_code = \"200\"\n  response_parameters = {\n    \"method.response.header.Access-Control-Allow-Origin\" = \"'*'\"\n  }\n  response_templates = {\n    \"application/json\" = &lt;&lt;EOF\n    #set($inputRoot = $input.path('$'))\n    #set($projects = [])\n    #foreach($elem in $inputRoot.Items)\n      $projects.add($elem)\n    #end\n    {\n      \"projects\": $projects\n    }\n    EOF\n  }\n}\n\n\n\n\nresource \"aws_api_gateway_method_response\" \"dynamodb_method_response\" {\n  rest_api_id = aws_api_gateway_rest_api.dynamodb_api.id\n  resource_id = aws_api_gateway_resource.dynamodb_resource.id\n  http_method = aws_api_gateway_method.dynamodb_method.http_method\n  status_code = \"200\"\n\n  response_models = {\n    \"application/json\" = \"Empty\"\n  }\n\n  response_parameters = {\n    \"method.response.header.Access-Control-Allow-Headers\" = true,\n    \"method.response.header.Access-Control-Allow-Methods\" = true,\n    \"method.response.header.Access-Control-Allow-Origin\"  = true\n  }\n}\n\nresource \"aws_api_gateway_deployment\" \"dynamodb_deployment\" {\n  rest_api_id = aws_api_gateway_rest_api.dynamodb_api.id\n  stage_name  = \"prod\"\n\n  stage_description = \"Production Stage\"\n  variables = {\n    api_key = aws_api_gateway_api_key.dynamodb_api_key.value\n  }\n\n  lifecycle {\n    create_before_destroy = true\n  }\n}\n\n\n\n\nresource \"aws_cloudwatch_log_group\" \"main_api_gw\" {\n  name              = \"/aws/api-gw/${aws_api_gateway_rest_api.dynamodb_api.name}\"\n  retention_in_days = 5\n}\n\nresource \"aws_api_gateway_stage\" \"dynamodb_stage\" {\n  deployment_id = aws_api_gateway_deployment.dynamodb_deployment.id\n  rest_api_id   = aws_api_gateway_rest_api.dynamodb_api.id\n  stage_name    = \"prod\"\n  tags = {\n    Name        = \"prod\"\n    Environment = \"prod\"\n  }\n\n      access_log_settings {\n    destination_arn = aws_cloudwatch_log_group.main_api_gw.arn\n    format = jsonencode({\n      requestId        = \"$context.requestId\"\n      requestTime      = \"$context.requestTime\"\n      requestTimeEpoch = \"$context.requestTimeEpoch\"\n      path             = \"$context.path\"\n      method           = \"$context.httpMethod\"\n      status           = \"$context.status\"\n      responseLength   = \"$context.responseLength\"\n    })\n  }\n\n}\n\n## dynamo role\nresource \"aws_iam_role\" \"api_gateway_role\" {\n  name = \"apgw-dynamo\"\n\n  assume_role_policy = &lt;&lt;EOF\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"apigateway.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\nEOF\n}\n\n# dynamo access policy\nresource \"aws_iam_policy\" \"api_gateway_policy\" {\n  name = \"apgw-dynamo\"\n\n  policy = &lt;&lt;EOF\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"dynamodb:BatchGet*\",\n        \"dynamodb:Get*\",\n        \"dynamodb:Query\",\n                \"dynamodb:Scan\"\n      ],\n    \"Resource\": [\n        \"${aws_dynamodb_table.apigw_dynamo.arn}/*\"\n      ]\n    }\n  ]\n}\nEOF\n}\n\nresource \"aws_iam_role_policy_attachment\" \"api_gateway_policy_attachment\" {\n  role       = aws_iam_role.api_gateway_role.name\n  policy_arn = aws_iam_policy.api_gateway_policy.arn\n}\n\n\noutput \"api_gateway_url\" {\n  value = \"${aws_api_gateway_stage.dynamodb_stage.invoke_url}/${aws_api_gateway_resource.dynamodb_resource.path_part}\"\n}\n\n## cloud watch for API GATE WAY:\n\nresource \"aws_iam_role\" \"api_gateway_cloud_watch_role\" {\n  name = \"AmazonAPIGatewaysPushToCloudWatchLogs\"\n\n  assume_role_policy = &lt;&lt;-EOF\n    {\n      \"Version\": \"2012-10-17\",\n      \"Statement\": [\n        {\n          \"Action\": \"sts:AssumeRole\",\n          \"Principal\": {\n            \"Service\": \"apigateway.amazonaws.com\"\n          },\n          \"Effect\": \"Allow\"\n        }\n      ]\n    }\n  EOF\n}\n\n\nresource \"aws_iam_role_policy_attachment\" \"api_gateway_cloudwatchlogs\" {\n  role       = aws_iam_role.api_gateway_cloud_watch_role.name\n  policy_arn = \"arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs\"\n}\n\nresource \"aws_api_gateway_account\" \"api_gateway_account\" {\n  cloudwatch_role_arn = aws_iam_role.api_gateway_cloud_watch_role.arn\n}\n\n\nresource \"aws_api_gateway_method_settings\" \"api_gateway_log_settings\" {\n  rest_api_id = aws_api_gateway_rest_api.dynamodb_api.id\n  stage_name  = \"prod\"\n  method_path = \"*/*\"\n\n  settings {\n    metrics_enabled = true\n    logging_level   = \"INFO\"\n  }\n}</code></pre>\r\n</div>\r\n</div>\r\n</p>\n", "OwnerUserId": "12494839", "LastEditorUserId": "12494839", "LastEditDate": "2023-07-16T04:40:06.237", "LastActivityDate": "2023-07-16T04:40:06.237", "Title": "AWS: API Gateway and DynamoDB Integration - 401 Unauthorized Error", "Tags": "<amazon-web-services><terraform><amazon-dynamodb><aws-api-gateway>", "AnswerCount": "0", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "295423689", "PostHistoryTypeId": "2", "PostId": "76692605", "RevisionGUID": "a77cff13-f5c9-4ecb-b3ef-baa2b49c4c63", "CreationDate": "2023-07-15T07:07:15.443", "UserId": "12494839", "Text": "I am facing an issue with an AWS API Gateway and DynamoDB integration. I have configured an API Gateway endpoint to retrieve all projects from a DynamoDB table. When testing the API Gateway using the AWS console, I can successfully retrieve the data. However, when I try to invoke the same API using tools like Insomnia, I receive a \"401 Unauthorized\" error.\r\n\r\nHere is an overview of my setup:\r\n\r\n- DynamoDB table name: test-dynamodb\r\n- Primary key in DynamoDB: pk\r\n- API Gateway configuration: HTTP method: GET\r\n- Authorization: AWS_IAM\r\n- API key required: true\r\n\r\n**I have verified the following:**\r\n\r\n- The API key value is correctly included in the request headers (x-api-key) when invoking the API.\r\n- The IAM role associated with the API Gateway has the necessary permissions to access DynamoDB, including the dynamodb:Scan action on the test-dynamodb table.\r\n- The API key is associated with the usage plan and the usage plan is correctly linked to the API Gateway deployment.\r\n\r\nDespite these checks, I still encounter the \"401 Unauthorized\" error when invoking the API Gateway.\r\n\r\nCan someone help me troubleshoot this issue and identify what could be causing the unauthorized error? Are there any additional steps or configurations I should consider?\r\n\r\nThank you in advance for your assistance.\r\n\r\n<!-- begin snippet: js hide: false console: true babel: false -->\r\n\r\n<!-- language: lang-js -->\r\n\r\n    data \"aws_caller_identity\" \"id\" {}\r\n\r\n    data \"aws_region\" \"region\" {}\r\n\r\n    resource \"aws_dynamodb_table\" \"apigw_dynamo\" {\r\n      name         = \"apgw-dynamo-prod\"\r\n      billing_mode = \"PAY_PER_REQUEST\"\r\n      hash_key     = \"pk\"\r\n\r\n      attribute {\r\n        name = \"pk\"\r\n        type = \"S\"\r\n      }\r\n\r\n      tags = {\r\n        Name        = \"apgw-dynamo-prod\"\r\n        Environment = \"prod\"\r\n      }\r\n    }\r\n\r\n    resource \"aws_api_gateway_rest_api\" \"dynamodb_api\" {\r\n      name = \"apgw-dynamo-prod\"\r\n    }\r\n\r\n    resource \"aws_api_gateway_resource\" \"dynamodb_resource\" {\r\n      rest_api_id = aws_api_gateway_rest_api.dynamodb_api.id\r\n      parent_id   = aws_api_gateway_rest_api.dynamodb_api.root_resource_id\r\n      path_part   = \"apgw-dynamo-projects\"\r\n    }\r\n\r\n    resource \"aws_api_gateway_method\" \"dynamodb_method\" {\r\n      rest_api_id      = aws_api_gateway_rest_api.dynamodb_api.id\r\n      resource_id      = aws_api_gateway_resource.dynamodb_resource.id\r\n      http_method      = \"GET\"\r\n      authorization    = \"AWS_IAM\"\r\n      api_key_required = true\r\n    }\r\n\r\n    resource \"aws_api_gateway_usage_plan\" \"dynamodb_usage_plan\" {\r\n      name         = \"dynamodb-usage-plan\"\r\n      description  = \"Usage plan for DynamoDB API\"\r\n      product_code = \"dynamodb-product-code\"\r\n\r\n      api_stages {\r\n        api_id = aws_api_gateway_rest_api.dynamodb_api.id\r\n        stage  = aws_api_gateway_stage.dynamodb_stage.stage_name\r\n      }\r\n\r\n      quota_settings {\r\n        limit  = 10000\r\n        period = \"MONTH\"\r\n      }\r\n\r\n      throttle_settings {\r\n        rate_limit  = 1000\r\n        burst_limit = 2000\r\n      }\r\n    }\r\n    resource \"random_string\" \"api_key_value\" {\r\n      length  = 32\r\n      special = false\r\n    }\r\n\r\n    resource \"aws_api_gateway_api_key\" \"dynamodb_api_key\" {\r\n      name  = \"my-api-key\"\r\n      value = random_string.api_key_value.result\r\n\r\n    }\r\n\r\n\r\n    resource \"aws_api_gateway_usage_plan_key\" \"dynamodb_usage_plan_key\" {\r\n      key_id        = aws_api_gateway_api_key.dynamodb_api_key.id\r\n      key_type      = \"API_KEY\"\r\n      usage_plan_id = aws_api_gateway_usage_plan.dynamodb_usage_plan.id\r\n    }\r\n    resource \"aws_api_gateway_gateway_response\" \"dynamodb_gateway_response\" {\r\n      rest_api_id   = aws_api_gateway_rest_api.dynamodb_api.id\r\n      response_type = \"MISSING_AUTHENTICATION_TOKEN\"\r\n      status_code   = \"401\"\r\n\r\n      response_templates = {\r\n        \"application/json\" = \"{\\\"message\\\": \\\"Missing Authentication Token\\\"}\"\r\n      }\r\n    }\r\n\r\n    resource \"aws_api_gateway_gateway_response\" \"dynamodb_gateway_response_403\" {\r\n      rest_api_id   = aws_api_gateway_rest_api.dynamodb_api.id\r\n      response_type = \"API_CONFIGURATION_ERROR\"\r\n      status_code   = \"403\"\r\n\r\n      response_templates = {\r\n        \"application/json\" = \"{\\\"message\\\": \\\"Forbidden\\\"}\"\r\n      }\r\n    }\r\n\r\n    resource \"aws_api_gateway_integration\" \"dynamodb_integration\" {\r\n      rest_api_id             = aws_api_gateway_rest_api.dynamodb_api.id\r\n      resource_id             = aws_api_gateway_resource.dynamodb_resource.id\r\n      http_method             = aws_api_gateway_method.dynamodb_method.http_method\r\n      integration_http_method = \"POST\"\r\n      type                    = \"AWS\"\r\n      uri                     = \"arn:aws:apigateway:${data.aws_region.region.name}:dynamodb:action/Scan\"\r\n      credentials             = aws_iam_role.api_gateway_role.arn\r\n\r\n      request_templates = {\r\n        \"application/json\" = <<EOF\r\n          {\r\n            \"TableName\": \"${aws_dynamodb_table.apigw_dynamo.name}\"\r\n          }\r\n        EOF\r\n      }\r\n    }\r\n\r\n\r\n\r\n    resource \"aws_api_gateway_integration_response\" \"dynamodb_integration_response\" {\r\n      rest_api_id = aws_api_gateway_rest_api.dynamodb_api.id\r\n      resource_id = aws_api_gateway_resource.dynamodb_resource.id\r\n      http_method = aws_api_gateway_method.dynamodb_method.http_method\r\n      status_code = \"200\"\r\n      response_parameters = {\r\n        \"method.response.header.Access-Control-Allow-Origin\" = \"'*'\"\r\n      }\r\n      response_templates = {\r\n        \"application/json\" = <<EOF\r\n        #set($inputRoot = $input.path('$'))\r\n        #set($projects = [])\r\n        #foreach($elem in $inputRoot.Items)\r\n          $projects.add($elem)\r\n        #end\r\n        {\r\n          \"projects\": $projects\r\n        }\r\n        EOF\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n    resource \"aws_api_gateway_method_response\" \"dynamodb_method_response\" {\r\n      rest_api_id = aws_api_gateway_rest_api.dynamodb_api.id\r\n      resource_id = aws_api_gateway_resource.dynamodb_resource.id\r\n      http_method = aws_api_gateway_method.dynamodb_method.http_method\r\n      status_code = \"200\"\r\n\r\n      response_models = {\r\n        \"application/json\" = \"Empty\"\r\n      }\r\n\r\n      response_parameters = {\r\n        \"method.response.header.Access-Control-Allow-Headers\" = true,\r\n        \"method.response.header.Access-Control-Allow-Methods\" = true,\r\n        \"method.response.header.Access-Control-Allow-Origin\"  = true\r\n      }\r\n    }\r\n\r\n    resource \"aws_api_gateway_deployment\" \"dynamodb_deployment\" {\r\n      rest_api_id = aws_api_gateway_rest_api.dynamodb_api.id\r\n      stage_name  = \"prod\"\r\n\r\n      stage_description = \"Production Stage\"\r\n      variables = {\r\n        api_key = aws_api_gateway_api_key.dynamodb_api_key.value\r\n      }\r\n\r\n      lifecycle {\r\n        create_before_destroy = true\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n    resource \"aws_cloudwatch_log_group\" \"main_api_gw\" {\r\n      name              = \"/aws/api-gw/${aws_api_gateway_rest_api.dynamodb_api.name}\"\r\n      retention_in_days = 5\r\n    }\r\n\r\n    resource \"aws_api_gateway_stage\" \"dynamodb_stage\" {\r\n      deployment_id = aws_api_gateway_deployment.dynamodb_deployment.id\r\n      rest_api_id   = aws_api_gateway_rest_api.dynamodb_api.id\r\n      stage_name    = \"prod\"\r\n      tags = {\r\n        Name        = \"prod\"\r\n        Environment = \"prod\"\r\n      }\r\n\r\n       access_log_settings {\r\n        destination_arn = aws_cloudwatch_log_group.main_api_gw.arn\r\n        format = jsonencode({\r\n          requestId        = \"$context.requestId\"\r\n          requestTime      = \"$context.requestTime\"\r\n          requestTimeEpoch = \"$context.requestTimeEpoch\"\r\n          path             = \"$context.path\"\r\n          method           = \"$context.httpMethod\"\r\n          status           = \"$context.status\"\r\n          responseLength   = \"$context.responseLength\"\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    ## dynamo role\r\n    resource \"aws_iam_role\" \"api_gateway_role\" {\r\n      name = \"apgw-dynamo\"\r\n\r\n      assume_role_policy = <<EOF\r\n    {\r\n      \"Version\": \"2012-10-17\",\r\n      \"Statement\": [\r\n        {\r\n          \"Effect\": \"Allow\",\r\n          \"Principal\": {\r\n            \"Service\": \"apigateway.amazonaws.com\"\r\n          },\r\n          \"Action\": \"sts:AssumeRole\"\r\n        }\r\n      ]\r\n    }\r\n    EOF\r\n    }\r\n\r\n    # dynamo access policy\r\n    resource \"aws_iam_policy\" \"api_gateway_policy\" {\r\n      name = \"apgw-dynamo\"\r\n\r\n      policy = <<EOF\r\n    {\r\n      \"Version\": \"2012-10-17\",\r\n      \"Statement\": [\r\n        {\r\n          \"Effect\": \"Allow\",\r\n          \"Action\": [\r\n            \"dynamodb:BatchGet*\",\r\n            \"dynamodb:Get*\",\r\n            \"dynamodb:Query\",\r\n        \"dynamodb:Scan\"\r\n          ],\r\n        \"Resource\": [\r\n            \"${aws_dynamodb_table.apigw_dynamo.arn}/*\"\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n    EOF\r\n    }\r\n\r\n    resource \"aws_iam_role_policy_attachment\" \"api_gateway_policy_attachment\" {\r\n      role       = aws_iam_role.api_gateway_role.name\r\n      policy_arn = aws_iam_policy.api_gateway_policy.arn\r\n    }\r\n\r\n\r\n    output \"api_gateway_url\" {\r\n      value = \"${aws_api_gateway_stage.dynamodb_stage.invoke_url}/${aws_api_gateway_resource.dynamodb_resource.path_part}\"\r\n    }\r\n\r\n    ## cloud watch for API GATE WAY:\r\n\r\n    resource \"aws_iam_role\" \"api_gateway_cloud_watch_role\" {\r\n      name = \"AmazonAPIGatewaysPushToCloudWatchLogs\"\r\n\r\n      assume_role_policy = <<-EOF\r\n        {\r\n          \"Version\": \"2012-10-17\",\r\n          \"Statement\": [\r\n            {\r\n              \"Action\": \"sts:AssumeRole\",\r\n              \"Principal\": {\r\n                \"Service\": \"apigateway.amazonaws.com\"\r\n              },\r\n              \"Effect\": \"Allow\"\r\n            }\r\n          ]\r\n        }\r\n      EOF\r\n    }\r\n\r\n\r\n    resource \"aws_iam_role_policy_attachment\" \"api_gateway_cloudwatchlogs\" {\r\n      role       = aws_iam_role.api_gateway_cloud_watch_role.name\r\n      policy_arn = \"arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs\"\r\n    }\r\n\r\n    resource \"aws_api_gateway_account\" \"api_gateway_account\" {\r\n      cloudwatch_role_arn = aws_iam_role.api_gateway_cloud_watch_role.arn\r\n    }\r\n\r\n\r\n    resource \"aws_api_gateway_method_settings\" \"api_gateway_log_settings\" {\r\n      rest_api_id = aws_api_gateway_rest_api.dynamodb_api.id\r\n      stage_name  = \"prod\"\r\n      method_path = \"*/*\"\r\n\r\n      settings {\r\n        metrics_enabled = true\r\n        logging_level   = \"INFO\"\r\n      }\r\n    }\r\n\r\n\r\n<!-- end snippet -->\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "When testing the API Gateway using the AWS console, I can successfully retrieve the data. ", "keywords": ["test"]}, {"source": "Text", "text": "Here is an overview of my setup: - DynamoDB table name: test-dynamodb - Primary key in DynamoDB: pk - API Gateway configuration: HTTP method: GET - Authorization: AWS_IAM - API key required: true **I have verified the following:** - The API key value is correctly included in the request headers (x-api-key) when invoking the API. ", "keywords": ["test"]}, {"source": "Text", "text": "- The IAM role associated with the API Gateway has the necessary permissions to access DynamoDB, including the dynamodb:Scan action on the test-dynamodb table. ", "keywords": ["test"]}, {"source": "Text", "text": "Thank you in advance for your assistance. data \"aws_caller_identity\" \"id\" {} data \"aws_region\" \"region\" {} resource \"aws_dynamodb_table\" \"apigw_dynamo\" { name = \"apgw-dynamo-prod\" billing_mode = \"PAY_PER_REQUEST\" hash_key = \"pk\" attribute { name = \"pk\" type = \"S\" } tags = { Name = \"apgw-dynamo-prod\" Environment = \"prod\" } } resource \"aws_api_gateway_rest_api\" \"dynamodb_api\" { name = \"apgw-dynamo-prod\" } resource \"aws_api_gateway_resource\" \"dynamodb_resource\" { rest_api_id = aws_api_gateway_rest_api.dynamodb_api.id parent_id = aws_api_gateway_rest_api.dynamodb_api.root_resource_id path_part = \"apgw-dynamo-projects\" } resource \"aws_api_gateway_method\" \"dynamodb_method\" { rest_api_id = aws_api_gateway_rest_api.dynamodb_api.id resource_id = aws_api_gateway_resource.dynamodb_resource.id http_method = \"GET\" authorization = \"AWS_IAM\" api_key_required = true } resource \"aws_api_gateway_usage_plan\" \"dynamodb_usage_plan\" { name = \"dynamodb-usage-plan\" description = \"Usage plan for DynamoDB API\" product_code = \"dynamodb-product-code\" api_stages { api_id = aws_api_gateway_rest_api.dynamodb_api.id stage = aws_api_gateway_stage.dynamodb_stage.stage_name } quota_settings { limit = 10000 period = \"MONTH\" } throttle_settings { rate_limit = 1000 burst_limit = 2000 } } resource \"random_string\" \"api_key_value\" { length = 32 special = false } resource \"aws_api_gateway_api_key\" \"dynamodb_api_key\" { name = \"my-api-key\" value = random_string.api_key_value.result } resource \"aws_api_gateway_usage_plan_key\" \"dynamodb_usage_plan_key\" { key_id = aws_api_gateway_api_key.dynamodb_api_key.id key_type = \"API_KEY\" usage_plan_id = aws_api_gateway_usage_plan.dynamodb_usage_plan.id } resource \"aws_api_gateway_gateway_response\" \"dynamodb_gateway_response\" { rest_api_id = aws_api_gateway_rest_api.dynamodb_api.id response_type = \"MISSING_AUTHENTICATION_TOKEN\" status_code = \"401\" response_templates = { \"application/json\" = \"{\\\"message\\\": \\\"Missing Authentication Token\\\"}\" } } resource \"aws_api_gateway_gateway_response\" \"dynamodb_gateway_response_403\" { rest_api_id = aws_api_gateway_rest_api.dynamodb_api.id response_type = \"API_CONFIGURATION_ERROR\" status_code = \"403\" response_templates = { \"application/json\" = \"{\\\"message\\\": \\\"Forbidden\\\"}\" } } resource \"aws_api_gateway_integration\" \"dynamodb_integration\" { rest_api_id = aws_api_gateway_rest_api.dynamodb_api.id resource_id = aws_api_gateway_resource.dynamodb_resource.id http_method = aws_api_gateway_method.dynamodb_method.http_method integration_http_method = \"POST\" type = \"AWS\" uri = \"arn:aws:apigateway:${data.aws_region.region.name}:dynamodb:action/Scan\" credentials = aws_iam_role.api_gateway_role.arn request_templates = { \"application/json\" = <", "keywords": ["bill"]}]}, {"Id": "295423691", "PostHistoryTypeId": "1", "PostId": "76692605", "RevisionGUID": "a77cff13-f5c9-4ecb-b3ef-baa2b49c4c63", "CreationDate": "2023-07-15T07:07:15.443", "UserId": "12494839", "Text": "Terraform-AWS: API Gateway and DynamoDB Integration - 401 Unauthorized Error", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "295423692", "PostHistoryTypeId": "3", "PostId": "76692605", "RevisionGUID": "a77cff13-f5c9-4ecb-b3ef-baa2b49c4c63", "CreationDate": "2023-07-15T07:07:15.443", "UserId": "12494839", "Text": "<amazon-web-services><terraform><amazon-dynamodb><aws-api-gateway>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "295447446", "PostHistoryTypeId": "4", "PostId": "76692605", "RevisionGUID": "5d3c1597-7a1e-4233-8c4d-f9747e13a04e", "CreationDate": "2023-07-16T04:40:06.237", "UserId": "12494839", "Comment": "edited title", "Text": "AWS: API Gateway and DynamoDB Integration - 401 Unauthorized Error", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "When testing the API Gateway using the AWS console, I can successfully retrieve the data. ", "keywords": ["test"]}, {"source": "Body", "text": "Here is an overview of my setup: DynamoDB table name: test-dynamodb Primary key in DynamoDB: pk API Gateway configuration: HTTP method: GET Authorization: AWS_IAM API key required: true I have verified the following: The API key value is correctly included in the request headers (x-api-key) when invoking the API. ", "keywords": ["test"]}, {"source": "Body", "text": "The IAM role associated with the API Gateway has the necessary permissions to access DynamoDB, including the dynamodb:Scan action on the test-dynamodb table. ", "keywords": ["test"]}]}