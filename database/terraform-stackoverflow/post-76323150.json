{"Id": "76323150", "PostTypeId": "1", "CreationDate": "2023-05-24T11:43:48.973", "Score": "0", "ViewCount": "90", "Body": "<p>I wanted to get the highest value of a column from aws dynamo db in a .net core application(deployed as lambda). I came across this <a href=\"https://repost.aws/questions/QUtU_mhuDoRM-Z3YoqIrCTaA/get-max-partition-key-value-from-dynamodb-table\" rel=\"nofollow noreferrer\">https://repost.aws/questions/QUtU_mhuDoRM-Z3YoqIrCTaA/get-max-partition-key-value-from-dynamodb-table</a>. After trying the below code</p>\n<pre><code> var maxIdRequest = new QueryRequest\n            {\n                TableName = &quot;Customers&quot;,\n                IndexName = &quot;CustomerIdIndex&quot;,\n                Select = &quot;SPECIFIC_ATTRIBUTES&quot;,\n                AttributesToGet = { &quot;Id&quot; },\n                ScanIndexForward = false,\n                Limit = 1,\n            };\n\n            var result = await _dynamoDBClient.QueryAsync(maxIdRequest);\n            var attributeList = result.Items[0];\n</code></pre>\n<p>I am getting the error</p>\n<pre><code>Amazon.DynamoDBv2.AmazonDynamoDBException: Either the KeyConditions or KeyConditionExpression parameter must be specified in the request.\n ---&gt; Amazon.Runtime.Internal.HttpErrorResponseException: Exception of type 'Amazon.Runtime.Internal.HttpErrorResponseException' was thrown.\n</code></pre>\n<p>My terraform to setup dynamo db table and GSI with dummy Id column is like below.</p>\n<pre><code>resource &quot;aws_dynamodb_table&quot; &quot;customer-dynamodb-table&quot; {\n  name           = var.table_name\n  billing_mode = &quot;PAY_PER_REQUEST&quot;\n  hash_key       = &quot;Id&quot;\n\n  attribute {\n    name = &quot;Id&quot;\n    type = &quot;N&quot;\n  }\n\n  attribute {\n    name = &quot;CustomerId&quot;\n    type = &quot;N&quot;\n  }\n\n  global_secondary_index {\n    name               = &quot;CustomerIdIndex&quot;\n    hash_key           = &quot;Id&quot;\n    range_key = &quot;CustomerId&quot;\n    write_capacity     = 10\n    read_capacity      = 10\n    projection_type    = &quot;INCLUDE&quot;\n    non_key_attributes = [&quot;Id&quot;]\n  }\n\n}\n</code></pre>\n<p>Can anyone guide me how to achieve this?</p>\n", "OwnerUserId": "2203868", "LastEditorUserId": "2203868", "LastEditDate": "2023-05-24T14:04:50.787", "LastActivityDate": "2023-05-24T14:04:50.787", "Title": "How to get the highest value of a column in Aws dynamo DB from .net core lambda", "Tags": "<terraform><amazon-dynamodb><.net-6.0>", "AnswerCount": "1", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "134588640", "PostId": "76323150", "Score": "0", "Text": "Can you explain what you mean by maximum value of a column?", "CreationDate": "2023-05-24T11:50:13.350", "UserId": "7909676", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "134590769", "PostId": "76323150", "Score": "0", "Text": "I mean something like an Id column, where I wanted to get the highest number and increment by one before inserting a new record.", "CreationDate": "2023-05-24T14:04:05.997", "UserId": "2203868", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "293237167", "PostHistoryTypeId": "2", "PostId": "76323150", "RevisionGUID": "45d3523d-3b8d-4262-baf3-2901077e82d7", "CreationDate": "2023-05-24T11:43:48.973", "UserId": "2203868", "Text": "I wanted to get the maximum value of a column from aws dynamo db in a .net core application(deployed as lambda). I came across this https://repost.aws/questions/QUtU_mhuDoRM-Z3YoqIrCTaA/get-max-partition-key-value-from-dynamodb-table. After trying the below code\r\n\r\n     var maxIdRequest = new QueryRequest\r\n                {\r\n                    TableName = \"Customers\",\r\n                    IndexName = \"CustomerIdIndex\",\r\n                    Select = \"SPECIFIC_ATTRIBUTES\",\r\n                    AttributesToGet = { \"Id\" },\r\n                    ScanIndexForward = false,\r\n                    Limit = 1,\r\n                };\r\n    \r\n                var result = await _dynamoDBClient.QueryAsync(maxIdRequest);\r\n                var attributeList = result.Items[0];\r\n\r\nI am getting the error \r\n\r\n    Amazon.DynamoDBv2.AmazonDynamoDBException: Either the KeyConditions or KeyConditionExpression parameter must be specified in the request.\r\n     ---> Amazon.Runtime.Internal.HttpErrorResponseException: Exception of type 'Amazon.Runtime.Internal.HttpErrorResponseException' was thrown.\r\n\r\nMy terraform to setup dynamo db table and GSI with dummy Id column is like below.\r\n\r\n    resource \"aws_dynamodb_table\" \"customer-dynamodb-table\" {\r\n      name           = var.table_name\r\n      billing_mode = \"PAY_PER_REQUEST\"\r\n      hash_key       = \"Id\"\r\n    \r\n      attribute {\r\n        name = \"Id\"\r\n        type = \"N\"\r\n      }\r\n    \r\n      attribute {\r\n        name = \"CustomerId\"\r\n        type = \"N\"\r\n      }\r\n    \r\n      global_secondary_index {\r\n        name               = \"CustomerIdIndex\"\r\n        hash_key           = \"Id\"\r\n        range_key = \"CustomerId\"\r\n        write_capacity     = 10\r\n        read_capacity      = 10\r\n        projection_type    = \"INCLUDE\"\r\n        non_key_attributes = [\"Id\"]\r\n      }\r\n    \r\n    }\r\n\r\nCan anyone guide me how to achieve this?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "My terraform to setup dynamo db table and GSI with dummy Id column is like below. resource \"aws_dynamodb_table\" \"customer-dynamodb-table\" { name = var.table_name billing_mode = \"PAY_PER_REQUEST\" hash_key = \"Id\" attribute { name = \"Id\" type = \"N\" } attribute { name = \"CustomerId\" type = \"N\" } global_secondary_index { name = \"CustomerIdIndex\" hash_key = \"Id\" range_key = \"CustomerId\" write_capacity = 10 read_capacity = 10 projection_type = \"INCLUDE\" non_key_attributes = [\"Id\"] } } Can anyone guide me how to achieve this", "keywords": ["bill"]}]}, {"Id": "293237169", "PostHistoryTypeId": "1", "PostId": "76323150", "RevisionGUID": "45d3523d-3b8d-4262-baf3-2901077e82d7", "CreationDate": "2023-05-24T11:43:48.973", "UserId": "2203868", "Text": "How to get the maximum value of a column in Aws dynamo DB from .net core lambda", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "293237170", "PostHistoryTypeId": "3", "PostId": "76323150", "RevisionGUID": "45d3523d-3b8d-4262-baf3-2901077e82d7", "CreationDate": "2023-05-24T11:43:48.973", "UserId": "2203868", "Text": "<terraform><amazon-dynamodb><.net-6.0>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "293244475", "PostHistoryTypeId": "5", "PostId": "76323150", "RevisionGUID": "476260b2-62ff-4250-87d4-c469c865db37", "CreationDate": "2023-05-24T14:04:50.787", "UserId": "2203868", "Comment": "edited body; edited title", "Text": "I wanted to get the highest value of a column from aws dynamo db in a .net core application(deployed as lambda). I came across this https://repost.aws/questions/QUtU_mhuDoRM-Z3YoqIrCTaA/get-max-partition-key-value-from-dynamodb-table. After trying the below code\r\n\r\n     var maxIdRequest = new QueryRequest\r\n                {\r\n                    TableName = \"Customers\",\r\n                    IndexName = \"CustomerIdIndex\",\r\n                    Select = \"SPECIFIC_ATTRIBUTES\",\r\n                    AttributesToGet = { \"Id\" },\r\n                    ScanIndexForward = false,\r\n                    Limit = 1,\r\n                };\r\n    \r\n                var result = await _dynamoDBClient.QueryAsync(maxIdRequest);\r\n                var attributeList = result.Items[0];\r\n\r\nI am getting the error \r\n\r\n    Amazon.DynamoDBv2.AmazonDynamoDBException: Either the KeyConditions or KeyConditionExpression parameter must be specified in the request.\r\n     ---> Amazon.Runtime.Internal.HttpErrorResponseException: Exception of type 'Amazon.Runtime.Internal.HttpErrorResponseException' was thrown.\r\n\r\nMy terraform to setup dynamo db table and GSI with dummy Id column is like below.\r\n\r\n    resource \"aws_dynamodb_table\" \"customer-dynamodb-table\" {\r\n      name           = var.table_name\r\n      billing_mode = \"PAY_PER_REQUEST\"\r\n      hash_key       = \"Id\"\r\n    \r\n      attribute {\r\n        name = \"Id\"\r\n        type = \"N\"\r\n      }\r\n    \r\n      attribute {\r\n        name = \"CustomerId\"\r\n        type = \"N\"\r\n      }\r\n    \r\n      global_secondary_index {\r\n        name               = \"CustomerIdIndex\"\r\n        hash_key           = \"Id\"\r\n        range_key = \"CustomerId\"\r\n        write_capacity     = 10\r\n        read_capacity      = 10\r\n        projection_type    = \"INCLUDE\"\r\n        non_key_attributes = [\"Id\"]\r\n      }\r\n    \r\n    }\r\n\r\nCan anyone guide me how to achieve this?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "My terraform to setup dynamo db table and GSI with dummy Id column is like below. resource \"aws_dynamodb_table\" \"customer-dynamodb-table\" { name = var.table_name billing_mode = \"PAY_PER_REQUEST\" hash_key = \"Id\" attribute { name = \"Id\" type = \"N\" } attribute { name = \"CustomerId\" type = \"N\" } global_secondary_index { name = \"CustomerIdIndex\" hash_key = \"Id\" range_key = \"CustomerId\" write_capacity = 10 read_capacity = 10 projection_type = \"INCLUDE\" non_key_attributes = [\"Id\"] } } Can anyone guide me how to achieve this", "keywords": ["bill"]}]}, {"Id": "293244476", "PostHistoryTypeId": "4", "PostId": "76323150", "RevisionGUID": "476260b2-62ff-4250-87d4-c469c865db37", "CreationDate": "2023-05-24T14:04:50.787", "UserId": "2203868", "Comment": "edited body; edited title", "Text": "How to get the highest value of a column in Aws dynamo DB from .net core lambda", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "76323394", "PostTypeId": "2", "ParentId": "76323150", "CreationDate": "2023-05-24T12:10:47.313", "Score": "0", "Body": "<p>You'd first need a Global Secondary Index with Id as the sort key value, and a static value as the partition key:</p>\n<div class=\"s-table-container\">\n<table class=\"s-table\">\n<thead>\n<tr>\n<th>GSI_PK</th>\n<th>GSI_SK</th>\n<th>Data</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>ID_01</td>\n<td>Data</td>\n</tr>\n<tr>\n<td>1</td>\n<td>ID_02</td>\n<td>Data</td>\n</tr>\n<tr>\n<td>1</td>\n<td>ID_03</td>\n<td>Data</td>\n</tr>\n<tr>\n<td>1</td>\n<td>ID_14</td>\n<td>Data</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>Then you would <code>Query</code> your index with <code>ScanIndexForward=False</code> (DESC order) with a <code>Limit=1</code> (return biggest ID).</p>\n<pre><code>        var client = new AmazonDynamoDBClient();\n\n        var request = new QueryRequest\n        {\n            TableName = &quot;Table_Name&quot;,\n            IndexName = &quot;Index_Name&quot;,\n            KeyConditionExpression = &quot;#pk = :pk&quot;,\n            ExpressionAttributeValues = new Dictionary&lt;string, AttributeValue&gt;\n            {\n                { &quot;:pk&quot;, new AttributeValue { N = &quot;1&quot; } }\n            },\n            ExpressionAttributeNames = new Dictionary&lt;string, string&gt;\n            {\n                { &quot;#pk&quot;, &quot;GSI_PK&quot; }\n            },\n            ProjectionExpression = &quot;GSI_SK&quot;,\n            Limit = 1\n        };\n\n        var response = await client.QueryAsync(request);\n\n        Console.WriteLine(response);\n</code></pre>\n", "OwnerUserId": "7909676", "LastEditorUserId": "7909676", "LastEditDate": "2023-05-24T12:37:51.430", "LastActivityDate": "2023-05-24T12:37:51.430", "CommentCount": "6", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "134588935", "PostId": "76323394", "Score": "1", "Text": "As a side note, the OP is asking about .NET. :)", "CreationDate": "2023-05-24T12:12:38.883", "UserId": "8343484", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "134589323", "PostId": "76323394", "Score": "0", "Text": "Yes they are, but this is not a code requesting site.", "CreationDate": "2023-05-24T12:36:30.880", "UserId": "7909676", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "134590729", "PostId": "76323394", "Score": "0", "Text": "I did not quite understand \"and a static value as the partition key:\". You mean a column having same value for all rows?", "CreationDate": "2023-05-24T14:01:48.390", "UserId": "2203868", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "134590825", "PostId": "76323394", "Score": "0", "Text": "Correct. DynamoDB cannot provide sort order across partition keys, so all the items must have a single key value if you need to retrieve a record in sorted order.", "CreationDate": "2023-05-24T14:07:21.157", "UserId": "7909676", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "134606163", "PostId": "76323394", "Score": "0", "Text": "I think, I still did not understand what is meant by pk here. Is it the original partition key when you define the table or the one you define as part of GSI. Also why GSI_PK is shown as same in each row(value as 1).", "CreationDate": "2023-05-25T14:33:48.553", "UserId": "2203868", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "134606323", "PostId": "76323394", "Score": "0", "Text": "PK are only variable holders, the index partition key is GSI_PK. They have to be the same value if you want sorted order.", "CreationDate": "2023-05-25T14:44:48.023", "UserId": "7909676", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "293238539", "PostHistoryTypeId": "2", "PostId": "76323394", "RevisionGUID": "a152bfa9-a45b-4160-b6dc-6d72a51add91", "CreationDate": "2023-05-24T12:10:47.313", "UserId": "7909676", "Text": "You'd first need a Global Secondary Index with Id as the sort key value, and a static value as the partition key:\r\n\r\n| GSI_PK | GSI_SK | Data |\r\n| --- | --- | --- |\r\n| 1 | ID_01 | Data |\r\n| 1 | ID_02 | Data |\r\n| 1 | ID_03 | Data |\r\n| 1 | ID_14 | Data |\r\n\r\nThen you would `Query` your index with `ScanIndexForward=False` (DESC order) with a `Limit=1` (return biggest ID).\r\n\r\n```\r\nresponse = client.query(\r\n    TableName='Table_Name', \r\n    IndexName='Index_Name',\r\n    KeyConditionExpression='#pk=:pk',\r\n    ExpressionAttributeValues={':pk':{'N':'1'}},   \r\n    ExpressionAttributeNames={'#pk':'GSI_PK'}, \r\n    ProjectionExpression='GSI_SK',\r\n    Limit=1\r\n)\r\n\r\nprint(response)\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "293239907", "PostHistoryTypeId": "5", "PostId": "76323394", "RevisionGUID": "f74dd27f-4771-41b9-a8be-22f82918aa9e", "CreationDate": "2023-05-24T12:37:51.430", "UserId": "7909676", "Comment": "added 425 characters in body", "Text": "You'd first need a Global Secondary Index with Id as the sort key value, and a static value as the partition key:\r\n\r\n| GSI_PK | GSI_SK | Data |\r\n| --- | --- | --- |\r\n| 1 | ID_01 | Data |\r\n| 1 | ID_02 | Data |\r\n| 1 | ID_03 | Data |\r\n| 1 | ID_14 | Data |\r\n\r\nThen you would `Query` your index with `ScanIndexForward=False` (DESC order) with a `Limit=1` (return biggest ID).\r\n\r\n```\r\n        var client = new AmazonDynamoDBClient();\r\n\r\n        var request = new QueryRequest\r\n        {\r\n            TableName = \"Table_Name\",\r\n            IndexName = \"Index_Name\",\r\n            KeyConditionExpression = \"#pk = :pk\",\r\n            ExpressionAttributeValues = new Dictionary<string, AttributeValue>\r\n            {\r\n                { \":pk\", new AttributeValue { N = \"1\" } }\r\n            },\r\n            ExpressionAttributeNames = new Dictionary<string, string>\r\n            {\r\n                { \"#pk\", \"GSI_PK\" }\r\n            },\r\n            ProjectionExpression = \"GSI_SK\",\r\n            Limit = 1\r\n        };\r\n\r\n        var response = await client.QueryAsync(request);\r\n\r\n        Console.WriteLine(response);\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": false, "filtered-sentences": []}