{"Id": "58346520", "PostTypeId": "1", "AcceptedAnswerId": "58385013", "CreationDate": "2019-10-11T18:12:55.797", "Score": "2", "ViewCount": "2365", "Body": "<p>I was wondering if there is a good way to enforce the tagging of AWS resources for all developers. Or at least provide a predefined set of tags that are inserted automatically. The reason behind this is that some team members forget to tag their resources or using a different set of tags. Furthermore if you want to change the tags for future deployments you have to change it everywhere.\nSo, my idea up to now is to create a map that includes all tags that should be set by default (project, version, cost allocation). Now everyone can use this default list and add further tags if needed for their resources. But there is no guarantee that everybody is using this map for default tagging.\nI don't know a way how I could achieve that but maybe someone has a good idea to do this...  </p>\n", "OwnerUserId": "1959724", "LastActivityDate": "2019-10-14T22:54:18.207", "Title": "Forced tagging for terraform resources in AWS", "Tags": "<amazon-web-services><terraform><terraform-provider-aws>", "AnswerCount": "2", "CommentCount": "3", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "103048137", "PostId": "58346520", "Score": "2", "Text": "I'm not aware of anything that will enforce this automatically. Generally the best way to enforce policies like this is not to give access to people that can't be trusted to use it correctly.", "CreationDate": "2019-10-11T18:17:56.227", "UserId": "7426", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "103048291", "PostId": "58346520", "Score": "0", "Text": "That is easier said than done. In addition, this would be a comfort gain as well. But you are right, I dont think that there is a way to enforce this. I just want to give it a try...", "CreationDate": "2019-10-11T18:24:48.080", "UserId": "1959724", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "103048359", "PostId": "58346520", "Score": "0", "Text": "With a decent terraform setup it shouldn't be that hard. Anyone not smart enough to tag things correctly should just be using modules created by people who actually know what they're doing. Those modules can set the necessary tags on everything. A separate process could also be created to search for untagged resources every so often, and use CloudTrail to find out who created them, so that they can be suitably chastised.", "CreationDate": "2019-10-11T18:27:28.880", "UserId": "7426", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "207070226", "PostHistoryTypeId": "2", "PostId": "58346520", "RevisionGUID": "174eaaa0-d48f-47d9-adba-becb0c985cf7", "CreationDate": "2019-10-11T18:12:55.797", "UserId": "1959724", "Text": "I was wondering if there is a good way to enforce the tagging of AWS resources for all developers. Or at least provide a predefined set of tags that are inserted automatically. The reason behind this is that some team members forget to tag their resources or using a different set of tags. Furthermore if you want to change the tags for future deployments you have to change it everywhere.\r\nSo, my idea up to now is to create a map that includes all tags that should be set by default (project, version, cost allocation). Now everyone can use this default list and add further tags if needed for their resources. But there is no guarantee that everybody is using this map for default tagging.\r\nI don't know a way how I could achieve that but maybe someone has a good idea to do this...  ", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Furthermore if you want to change the tags for future deployments you have to change it everywhere. ", "keywords": ["change"]}, {"source": "Text", "text": "So, my idea up to now is to create a map that includes all tags that should be set by default (project, version, cost allocation). ", "keywords": ["cost"]}]}, {"Id": "207070227", "PostHistoryTypeId": "1", "PostId": "58346520", "RevisionGUID": "174eaaa0-d48f-47d9-adba-becb0c985cf7", "CreationDate": "2019-10-11T18:12:55.797", "UserId": "1959724", "Text": "Forced tagging for terraform resources in AWS", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "207070228", "PostHistoryTypeId": "3", "PostId": "58346520", "RevisionGUID": "174eaaa0-d48f-47d9-adba-becb0c985cf7", "CreationDate": "2019-10-11T18:12:55.797", "UserId": "1959724", "Text": "<amazon-web-services><terraform><terraform-provider-aws>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "58347406", "PostTypeId": "2", "ParentId": "58346520", "CreationDate": "2019-10-11T19:28:33.773", "Score": "2", "Body": "<p>To solve this problem, we created a <code>tags</code> module which each project is expected to use when defining resources. The module has parameters for <code>product_name</code>, <code>service_name</code>, as well as an <code>extra_tags</code> parameter. It then combines those values with an internal map and exports the final map so that it can be used throughout the project.</p>\n\n<p>Within our team culture, each team understands that tagging is important to maintaining control and responsibility of the resources and costs in AWS. Not tagging your resources is a reason for getting a PR marked <code>declined</code> or <code>needs work</code>. </p>\n\n<p>We do use AWS Config to monitor for untagged resourced and notify us, however your best line of defense for keeping resources tagged is culture and pull reviews.</p>\n", "OwnerUserId": "1015162", "LastActivityDate": "2019-10-11T19:28:33.773", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "207073746", "PostHistoryTypeId": "2", "PostId": "58347406", "RevisionGUID": "59fc789c-be5d-494a-b7f0-4c5a42031fe3", "CreationDate": "2019-10-11T19:28:33.773", "UserId": "1015162", "Text": "To solve this problem, we created a `tags` module which each project is expected to use when defining resources. The module has parameters for `product_name`, `service_name`, as well as an `extra_tags` parameter. It then combines those values with an internal map and exports the final map so that it can be used throughout the project.\r\n\r\nWithin our team culture, each team understands that tagging is important to maintaining control and responsibility of the resources and costs in AWS. Not tagging your resources is a reason for getting a PR marked `declined` or `needs work`. \r\n\r\nWe do use AWS Config to monitor for untagged resourced and notify us, however your best line of defense for keeping resources tagged is culture and pull reviews.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "58385013", "PostTypeId": "2", "ParentId": "58346520", "CreationDate": "2019-10-14T22:54:18.207", "Score": "3", "Body": "<p>Option 1: Within Terraform Enterprise, you can use Sentinel to enforce policies how a resource should look like. See the Hashicorp example for enforced tags: <a href=\"https://github.com/hashicorp/terraform-guides/blob/master/governance/second-generation/aws/enforce-mandatory-tags.sentinel\" rel=\"nofollow noreferrer\">https://github.com/hashicorp/terraform-guides/blob/master/governance/second-generation/aws/enforce-mandatory-tags.sentinel</a></p>\n\n<p>Option 2: If you don't have Terraform Enterprise, create modules with parameters that are filling the tags within the module, and discourage usage of \"plain\" aws resources. </p>\n\n<p>Option 3: Make tag inspection part of your automated test suite (e.g. with terratest), and let tests fail when they do not have appropriate tags.</p>\n", "OwnerUserId": "11701591", "LastActivityDate": "2019-10-14T22:54:18.207", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "103763325", "PostId": "58385013", "Score": "0", "Text": "Actually that answers my question, even if I would like to have a better process for that. Thanks.", "CreationDate": "2019-11-06T18:41:09.400", "UserId": "1959724", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "133969099", "PostId": "58385013", "Score": "0", "Text": "Would like to add tfsec tool as option 4, it has ability to add custom checks to require tags, docs can be found here - https://aquasecurity.github.io/tfsec/v1.28.1/guides/configuration/custom-checks/", "CreationDate": "2023-04-07T06:11:02.143", "UserId": "1168586", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "207237393", "PostHistoryTypeId": "2", "PostId": "58385013", "RevisionGUID": "d806fded-5845-4823-a479-0a2df8de88ab", "CreationDate": "2019-10-14T22:54:18.207", "UserId": "11701591", "Text": "Option 1: Within Terraform Enterprise, you can use Sentinel to enforce policies how a resource should look like. See the Hashicorp example for enforced tags: https://github.com/hashicorp/terraform-guides/blob/master/governance/second-generation/aws/enforce-mandatory-tags.sentinel\r\n\r\nOption 2: If you don't have Terraform Enterprise, create modules with parameters that are filling the tags within the module, and discourage usage of \"plain\" aws resources. \r\n\r\nOption 3: Make tag inspection part of your automated test suite (e.g. with terratest), and let tests fail when they do not have appropriate tags.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Option 3: Make tag inspection part of your automated test suite (e.g. with terratest), and let tests fail when they do not have appropriate tags.", "keywords": ["test"]}]}], "filtered-sentences": [{"source": "Body", "text": "Option 3: Make tag inspection part of your automated test suite (e.g. with terratest), and let tests fail when they do not have appropriate tags.", "keywords": ["test"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "Furthermore if you want to change the tags for future deployments you have to change it everywhere. ", "keywords": ["change"]}, {"source": "Body", "text": "So, my idea up to now is to create a map that includes all tags that should be set by default (project, version, cost allocation). ", "keywords": ["cost"]}]}