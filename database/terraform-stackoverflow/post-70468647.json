{"Id": "70468647", "PostTypeId": "1", "AcceptedAnswerId": "70468758", "CreationDate": "2021-12-24T00:48:02.227", "Score": "1", "ViewCount": "1083", "Body": "<p>I am trying to using Terraform to automate my VNet setup.  this includes setting up the subnet and nsg association.  Below partial exerts of the code.</p>\n<h2><strong>CODE SAMPLE:</strong></h2>\n<pre><code>====== locals.tf ==================\n\nlocals {\n    subnets = {\n        private = var.allow_sub\n        public  = var.notallow_sub\n        admin    = var.admin_sub\n    }\n}\n\n\n====== variables.tf ====================\n\nvariable &quot;allow_sub&quot; {\n  description = &quot;private&quot;\n  type = object({\n    name                   = string\n    address_prefixes       = list(string)\n    network_security_group = string\n    route_table            = string\n  })\n}\n\nvariable &quot;notallow_sub&quot; {\n  description = &quot;public&quot;\n  type = object({\n    name                   = string\n    address_prefixes       = list(string)\n    network_security_group = string\n    route_table            = string\n  })\n}\n\nvariable &quot;admin_sub&quot; {\n  description = &quot;management&quot;\n  type = object({\n    name                   = string\n    address_prefixes       = list(string)\n    network_security_group = string\n    route_table            = string\n  })\n}\n\n\n==== input.tfvar ==============\n\nnotallow_sub = {\n  name                   = &quot;test1&quot;\n  address_prefixes       = [&quot;10.100.1.0/24&quot;]\n  network_security_group = &quot;testnsg1&quot; \n  route_table            = &quot;testrt3&quot;    \n}\nallow_sub = {\n  name                   = &quot;test2&quot;\n  address_prefixes       = [&quot;10.100.2.16/28&quot;]\n  network_security_group = &quot;testnsg2&quot; \n  route_table            = &quot;testrt2&quot;     \n}\nadmin_sub = {\n  name                   = &quot;test3&quot;\n  address_prefixes       = [&quot;10.100.3.0/28&quot;]\n  network_security_group = &quot;testnsg3&quot; \n  route_table            = &quot;testrt21&quot;   \n}\n\n\n\n=== main.tf ====\n\nresource &quot;azurerm_subnet&quot; &quot;mysubnet&quot; {\n  for_each = var.subnets\n\n  name                 = each.key\n  resource_group_name  = var.rg_name\n  virtual_network_name = var.vnet_name\n  address_prefixes     = each.value.address_prefixes\n}\n.\n.\n.\n\nresource &quot;azurerm_subnet_network_security_group_association&quot; &quot;this&quot; {\n  for_each = { for k, v in local.subnets : k =&gt; v if lookup(v, &quot;network_security_group&quot;, &quot;&quot;) != &quot;&quot; }\n\n  subnet_id                 = azurerm_subnet[each.value].id\n  network_security_group_id = azurerm_network_security_group[each.value].network_security_group.id\n}\n\nresource &quot;azurerm_subnet_route_table_association&quot; &quot;this&quot; {\n  for_each = { for k, v in local.subnets : k =&gt; v if lookup(v, &quot;route_table&quot;, &quot;&quot;) != &quot;&quot; }\n\n  subnet_id      = azurerm_subnet[each.value].id\n  route_table_id = azurerm_route_table[each.value].route_table.id\n}\n</code></pre>\n<h2><strong>ISSUE:</strong></h2>\n<p>I am getting &quot;<em><strong>Error: Invalidate Reference... A reference to a resource type must be followed by at least one attribute access, specifying the resource name.</strong></em>&quot; during TF validate on the below lines in main.tf:</p>\n<ul>\n<li>subnet_id</li>\n<li>rout_table_id</li>\n</ul>\n<p>I don't think I setup the resource reference loop correctly and need some guidance.  Thanks in advance.</p>\n", "OwnerUserId": "5982308", "LastEditorUserId": "5982308", "LastEditDate": "2021-12-24T05:20:27.647", "LastActivityDate": "2021-12-24T05:20:27.647", "Title": "Azure Subnet NSG Association using Terraform", "Tags": "<terraform><terraform-provider-azure><terraform0.12+>", "AnswerCount": "1", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "260659428", "PostHistoryTypeId": "2", "PostId": "70468647", "RevisionGUID": "f5c73e36-f528-4204-a8cb-5313242016ad", "CreationDate": "2021-12-24T00:48:02.227", "UserId": "5982308", "Text": "I am trying to using Terraform to automate my VNet setup.  this includes setting up the subnet and nsg association.  Below partial exerts of the code.    \r\n\r\n**CODE SAMPLE:**\r\n------------------\r\n\r\n    ====== locals.tf ==================\r\n    \r\n    locals {\r\n        subnets = {\r\n            private = var.allow_sub\r\n            public  = var.notallow_sub\r\n            admin    = var.admin_sub\r\n        }\r\n    }\r\n    \r\n    \r\n    ====== variables.tf ====================\r\n    \r\n    variable \"allow_sub\" {\r\n      description = \"private\"\r\n      type = object({\r\n        name                   = string\r\n        address_prefixes       = list(string)\r\n        network_security_group = string\r\n        route_table            = string\r\n      })\r\n    }\r\n    \r\n    variable \"notallow_sub\" {\r\n      description = \"public\"\r\n      type = object({\r\n        name                   = string\r\n        address_prefixes       = list(string)\r\n        network_security_group = string\r\n        route_table            = string\r\n      })\r\n    }\r\n    \r\n    variable \"admin_sub\" {\r\n      description = \"management\"\r\n      type = object({\r\n        name                   = string\r\n        address_prefixes       = list(string)\r\n        network_security_group = string\r\n        route_table            = string\r\n      })\r\n    }\r\n    \r\n    \r\n    ==== input.tfvar ==============\r\n    \r\n    notallow_sub = {\r\n      name                   = \"test1\"\r\n      address_prefixes       = [\"10.100.1.0/24\"]\r\n      network_security_group = \"testnsg1\" \r\n      route_table            = \"testrt3\"    \r\n    }\r\n    allow_sub = {\r\n      name                   = \"test2\"\r\n      address_prefixes       = [\"10.100.2.16/28\"]\r\n      network_security_group = \"testnsg2\" \r\n      route_table            = \"testrt2\"     \r\n    }\r\n    admin_sub = {\r\n      name                   = \"test3\"\r\n      address_prefixes       = [\"10.100.3.0/28\"]\r\n      network_security_group = \"testnsg3\" \r\n      route_table            = \"testrt21\"   \r\n    }\r\n    \r\n    \r\n    \r\n    === main.tf ====\r\n    .\r\n    .\r\n    .\r\n    \r\n    resource \"azurerm_subnet_network_security_group_association\" \"this\" {\r\n      for_each = { for k, v in local.subnets : k => v if lookup(v, \"network_security_group\", \"\") != \"\" }\r\n    \r\n      subnet_id                 = azurerm_subnet[each.value].id\r\n      network_security_group_id = azurerm_network_security_group[each.value].network_security_group.id\r\n    }\r\n    \r\n    resource \"azurerm_subnet_route_table_association\" \"this\" {\r\n      for_each = { for k, v in local.subnets : k => v if lookup(v, \"route_table\", \"\") != \"\" }\r\n    \r\n      subnet_id      = azurerm_subnet[each.value].id\r\n      route_table_id = azurerm_route_table[each.value].route_table.id\r\n    }\r\n\r\n**ISSUE:**\r\n-----------\r\nI am getting \"***Error: Invalidate Reference... A reference to a resource type must be followed by at least one attribute access, specifying the resource name.***\" during TF validate on the below lines in main.tf:\r\n\r\n - subnet_id \r\n - rout_table_id\r\n\r\nI don't think I setup the resource reference loop correctly and need some guidance.  Thanks in advance.\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Below partial exerts of the code. **CODE SAMPLE:** ------------------ ====== locals.tf ================== locals { subnets = { private = var.allow_sub public = var.notallow_sub admin = var.admin_sub } } ====== variables.tf ==================== variable \"allow_sub\" { description = \"private\" type = object({ name = string address_prefixes = list(string) network_security_group = string route_table = string }) } variable \"notallow_sub\" { description = \"public\" type = object({ name = string address_prefixes = list(string) network_security_group = string route_table = string }) } variable \"admin_sub\" { description = \"management\" type = object({ name = string address_prefixes = list(string) network_security_group = string route_table = string }) } ==== input.tfvar ============== notallow_sub = { name = \"test1\" address_prefixes = [\"10.100.1.0/24\"] network_security_group = \"testnsg1\" route_table = \"testrt3\" } allow_sub = { name = \"test2\" address_prefixes = [\"10.100.2.16/28\"] network_security_group = \"testnsg2\" route_table = \"testrt2\" } admin_sub = { name = \"test3\" address_prefixes = [\"10.100.3.0/28\"] network_security_group = \"testnsg3\" route_table = \"testrt21\" } === main.tf ==== . . . resource \"azurerm_subnet_network_security_group_association\" \"this\" { for_each = { for k, v in local.subnets : k => v if lookup(v, \"network_security_group\", \"\") != \"\" } subnet_id = azurerm_subnet[each.value].id network_security_group_id = azurerm_network_security_group[each.value].network_security_group.id } resource \"azurerm_subnet_route_table_association\" \"this\" { for_each = { for k, v in local.subnets : k => v if lookup(v, \"route_table\", \"\") != \"\" } subnet_id = azurerm_subnet[each.value].id route_table_id = azurerm_route_table[each.value].route_table.id } **ISSUE:** ----------- I am getting \"***Error: Invalidate Reference..", "keywords": ["test"]}]}, {"Id": "260659430", "PostHistoryTypeId": "1", "PostId": "70468647", "RevisionGUID": "f5c73e36-f528-4204-a8cb-5313242016ad", "CreationDate": "2021-12-24T00:48:02.227", "UserId": "5982308", "Text": "Azure Subnet NSG Association using Terraform", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "260659431", "PostHistoryTypeId": "3", "PostId": "70468647", "RevisionGUID": "f5c73e36-f528-4204-a8cb-5313242016ad", "CreationDate": "2021-12-24T00:48:02.227", "UserId": "5982308", "Text": "<azure-devops><terraform><terraform-provider-azure><terraform0.12+>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "260660361", "PostHistoryTypeId": "6", "PostId": "70468647", "RevisionGUID": "2ff25cd1-ec18-430f-9e75-9761d0353df2", "CreationDate": "2021-12-24T01:29:22.970", "UserId": "8093394", "Comment": "Removing tag. It's not about azure-devops", "Text": "<terraform><terraform-provider-azure><terraform0.12+>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "260665825", "PostHistoryTypeId": "5", "PostId": "70468647", "RevisionGUID": "1c41de83-baba-4640-890e-339b9e6b1c6c", "CreationDate": "2021-12-24T05:20:27.647", "UserId": "5982308", "Comment": "added 272 characters in body", "Text": "I am trying to using Terraform to automate my VNet setup.  this includes setting up the subnet and nsg association.  Below partial exerts of the code.    \r\n\r\n**CODE SAMPLE:**\r\n------------------\r\n\r\n    ====== locals.tf ==================\r\n    \r\n    locals {\r\n        subnets = {\r\n            private = var.allow_sub\r\n            public  = var.notallow_sub\r\n            admin    = var.admin_sub\r\n        }\r\n    }\r\n    \r\n    \r\n    ====== variables.tf ====================\r\n    \r\n    variable \"allow_sub\" {\r\n      description = \"private\"\r\n      type = object({\r\n        name                   = string\r\n        address_prefixes       = list(string)\r\n        network_security_group = string\r\n        route_table            = string\r\n      })\r\n    }\r\n    \r\n    variable \"notallow_sub\" {\r\n      description = \"public\"\r\n      type = object({\r\n        name                   = string\r\n        address_prefixes       = list(string)\r\n        network_security_group = string\r\n        route_table            = string\r\n      })\r\n    }\r\n    \r\n    variable \"admin_sub\" {\r\n      description = \"management\"\r\n      type = object({\r\n        name                   = string\r\n        address_prefixes       = list(string)\r\n        network_security_group = string\r\n        route_table            = string\r\n      })\r\n    }\r\n    \r\n    \r\n    ==== input.tfvar ==============\r\n    \r\n    notallow_sub = {\r\n      name                   = \"test1\"\r\n      address_prefixes       = [\"10.100.1.0/24\"]\r\n      network_security_group = \"testnsg1\" \r\n      route_table            = \"testrt3\"    \r\n    }\r\n    allow_sub = {\r\n      name                   = \"test2\"\r\n      address_prefixes       = [\"10.100.2.16/28\"]\r\n      network_security_group = \"testnsg2\" \r\n      route_table            = \"testrt2\"     \r\n    }\r\n    admin_sub = {\r\n      name                   = \"test3\"\r\n      address_prefixes       = [\"10.100.3.0/28\"]\r\n      network_security_group = \"testnsg3\" \r\n      route_table            = \"testrt21\"   \r\n    }\r\n    \r\n    \r\n    \r\n    === main.tf ====\r\n\r\n    resource \"azurerm_subnet\" \"mysubnet\" {\r\n      for_each = var.subnets\r\n    \r\n      name                 = each.key\r\n      resource_group_name  = var.rg_name\r\n      virtual_network_name = var.vnet_name\r\n      address_prefixes     = each.value.address_prefixes\r\n    }\r\n    .\r\n    .\r\n    .\r\n    \r\n    resource \"azurerm_subnet_network_security_group_association\" \"this\" {\r\n      for_each = { for k, v in local.subnets : k => v if lookup(v, \"network_security_group\", \"\") != \"\" }\r\n    \r\n      subnet_id                 = azurerm_subnet[each.value].id\r\n      network_security_group_id = azurerm_network_security_group[each.value].network_security_group.id\r\n    }\r\n    \r\n    resource \"azurerm_subnet_route_table_association\" \"this\" {\r\n      for_each = { for k, v in local.subnets : k => v if lookup(v, \"route_table\", \"\") != \"\" }\r\n    \r\n      subnet_id      = azurerm_subnet[each.value].id\r\n      route_table_id = azurerm_route_table[each.value].route_table.id\r\n    }\r\n\r\n**ISSUE:**\r\n-----------\r\nI am getting \"***Error: Invalidate Reference... A reference to a resource type must be followed by at least one attribute access, specifying the resource name.***\" during TF validate on the below lines in main.tf:\r\n\r\n - subnet_id \r\n - rout_table_id\r\n\r\nI don't think I setup the resource reference loop correctly and need some guidance.  Thanks in advance.\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Below partial exerts of the code. **CODE SAMPLE:** ------------------ ====== locals.tf ================== locals { subnets = { private = var.allow_sub public = var.notallow_sub admin = var.admin_sub } } ====== variables.tf ==================== variable \"allow_sub\" { description = \"private\" type = object({ name = string address_prefixes = list(string) network_security_group = string route_table = string }) } variable \"notallow_sub\" { description = \"public\" type = object({ name = string address_prefixes = list(string) network_security_group = string route_table = string }) } variable \"admin_sub\" { description = \"management\" type = object({ name = string address_prefixes = list(string) network_security_group = string route_table = string }) } ==== input.tfvar ============== notallow_sub = { name = \"test1\" address_prefixes = [\"10.100.1.0/24\"] network_security_group = \"testnsg1\" route_table = \"testrt3\" } allow_sub = { name = \"test2\" address_prefixes = [\"10.100.2.16/28\"] network_security_group = \"testnsg2\" route_table = \"testrt2\" } admin_sub = { name = \"test3\" address_prefixes = [\"10.100.3.0/28\"] network_security_group = \"testnsg3\" route_table = \"testrt21\" } === main.tf ==== resource \"azurerm_subnet\" \"mysubnet\" { for_each = var.subnets name = each.key resource_group_name = var.rg_name virtual_network_name = var.vnet_name address_prefixes = each.value.address_prefixes } . . . resource \"azurerm_subnet_network_security_group_association\" \"this\" { for_each = { for k, v in local.subnets : k => v if lookup(v, \"network_security_group\", \"\") != \"\" } subnet_id = azurerm_subnet[each.value].id network_security_group_id = azurerm_network_security_group[each.value].network_security_group.id } resource \"azurerm_subnet_route_table_association\" \"this\" { for_each = { for k, v in local.subnets : k => v if lookup(v, \"route_table\", \"\") != \"\" } subnet_id = azurerm_subnet[each.value].id route_table_id = azurerm_route_table[each.value].route_table.id } **ISSUE:** ----------- I am getting \"***Error: Invalidate Reference..", "keywords": ["test"]}]}], "answers": [{"Id": "70468758", "PostTypeId": "2", "ParentId": "70468647", "CreationDate": "2021-12-24T01:17:51.527", "Score": "1", "Body": "<p>I'm assuming you are creating a collection of <code>azurerm_subnet</code> resources named &quot;mysubnet&quot; (you are not show that part on your example).</p>\n<p>So, the item of your collection is the resource itself, not the type of resource. You should do like this:</p>\n<pre><code>resource &quot;azurerm_subnet_route_table_association&quot; &quot;this&quot; {\n  for_each = { for k, v in local.subnets : k =&gt; v if lookup(v, &quot;route_table&quot;, &quot;&quot;) != &quot;&quot; }\n\n  subnet_id      = azurerm_subnet.mysubnet[each.key].id\n  route_table_id = azurerm_route_table.routetable[each.key].id\n}\n</code></pre>\n<p>Pay special attention in the reference of <code>mysubnet[each.key]</code> element. The <code>each.key</code> here should be the same key you've used in the <code>azurerm_subnet</code> definition.</p>\n<p>I'm unable to test it right now, but I'm confident that it's the way to go.</p>\n", "OwnerUserId": "8093394", "LastEditorUserId": "8093394", "LastEditDate": "2021-12-24T01:28:38.793", "LastActivityDate": "2021-12-24T01:28:38.793", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "124569536", "PostId": "70468758", "Score": "0", "Text": "Hey Diego.  Thanks for the quick response and the suggestion.  Make sense.  Here's my azurerm_subnet.mysubnet\n\nresource \"azurerm_subnet\" \"mysubnet\" {\n  for_each = var.subnets\n\n  name                 = each.key\n  resource_group_name  = var.gh_name\n  virtual_network_name = var.vnetk_name\n  address_prefixes     = each.value.address_prefixes\n}", "CreationDate": "2021-12-24T05:07:31.013", "UserId": "5982308", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "124569694", "PostId": "70468758", "Score": "0", "Text": "Can't edit my previous comment.  I updated the sample code to include the azurerm_subnet.  Should \"for_each = var.subnets\" be set to \"for_each = local.subnets\"?", "CreationDate": "2021-12-24T05:24:07.413", "UserId": "5982308", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "260660072", "PostHistoryTypeId": "2", "PostId": "70468758", "RevisionGUID": "baa0cafd-a9a6-4223-ba3c-758c5f3f95b6", "CreationDate": "2021-12-24T01:17:51.527", "UserId": "8093394", "Text": "I'm assuming you are creating a collection of `azurerm_subnet` resources named \"mysubnet\" (you are not show that part on your example).\r\n\r\nSo, the item of your collection is the resource itself, not the type of resource. You should do like this:\r\n\r\n```\r\nresource \"azurerm_subnet_route_table_association\" \"this\" {\r\n  for_each = { for k, v in local.subnets : k => v if lookup(v, \"route_table\", \"\") != \"\" }\r\n\r\n  subnet_id      = azurerm_subnet.mysubnet[each.value].id\r\n  route_table_id = azurerm_route_table.routetable[each.value].id\r\n}\r\n```\r\n\r\nI'm unable to test it right now, but I'm confident that it's the way to go.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I'm unable to test it right now, but I'm confident that it's the way to go", "keywords": ["test"]}]}, {"Id": "260660346", "PostHistoryTypeId": "5", "PostId": "70468758", "RevisionGUID": "f4016b85-e616-4080-ac39-8f0aad7fd2ac", "CreationDate": "2021-12-24T01:28:38.793", "UserId": "8093394", "Comment": "added 162 characters in body", "Text": "I'm assuming you are creating a collection of `azurerm_subnet` resources named \"mysubnet\" (you are not show that part on your example).\r\n\r\nSo, the item of your collection is the resource itself, not the type of resource. You should do like this:\r\n\r\n```\r\nresource \"azurerm_subnet_route_table_association\" \"this\" {\r\n  for_each = { for k, v in local.subnets : k => v if lookup(v, \"route_table\", \"\") != \"\" }\r\n\r\n  subnet_id      = azurerm_subnet.mysubnet[each.key].id\r\n  route_table_id = azurerm_route_table.routetable[each.key].id\r\n}\r\n```\r\n\r\nPay special attention in the reference of `mysubnet[each.key]` element. The `each.key` here should be the same key you've used in the `azurerm_subnet` definition.\r\n\r\nI'm unable to test it right now, but I'm confident that it's the way to go.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "You should do like this: ``` resource \"azurerm_subnet_route_table_association\" \"this\" { for_each = { for k, v in local.subnets : k => v if lookup(v, \"route_table\", \"\") != \"\" } subnet_id = azurerm_subnet.mysubnet[each.key].id route_table_id = azurerm_route_table.routetable[each.key].id } ``` Pay special attention in the reference of `mysubnet[each.key]` element", "keywords": ["pay"]}, {"source": "Text", "text": "I'm unable to test it right now, but I'm confident that it's the way to go", "keywords": ["test"]}]}], "filtered-sentences": [{"source": "Body", "text": "You should do like this: Pay special attention in the reference of mysubnet[each.key] element. ", "keywords": ["pay"]}, {"source": "Body", "text": "I'm unable to test it right now, but I'm confident that it's the way to go.", "keywords": ["test"]}]}], "contains-topic": true, "filtered-sentences": []}