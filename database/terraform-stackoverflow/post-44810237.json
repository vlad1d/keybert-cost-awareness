{"Id": "44810237", "PostTypeId": "1", "AcceptedAnswerId": "44811143", "CreationDate": "2017-06-28T18:41:17.620", "Score": "21", "ViewCount": "11822", "Body": "<p>I am using AWS CodeBuild along with Terraform for automated deployment of a Lambda based service. I have a very simple <code>buildscript.yml</code> that accomplishes the following:</p>\n\n<ul>\n<li>Get dependencies</li>\n<li>Run Tests</li>\n<li>Get AWS credentials and save to file (detailed below)</li>\n<li>Source the creds file</li>\n<li>Run Terraform</li>\n</ul>\n\n<p>The step \"source the creds file\" is where I am having my difficulty. I have a simply bash one-liner that grabs the AWS container creds off of <code>curl 169.254.170.2$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI</code> and then saves them to a file in the following format:</p>\n\n<pre><code>export AWS_ACCESS_KEY_ID=SOMEACCESSKEY\nexport AWS_SECRET_ACCESS_KEY=MYSECRETKEY\nexport AWS_SESSION_TOKEN=MYSESSIONTOKEN\n</code></pre>\n\n<p>Of course, the obvious step is to simply <code>source</code> this file so that these variables can be added to my environment for Terraform to use. However, when I do <code>source /path/to/creds_file.txt</code>, CodeBuild returns: </p>\n\n<pre><code>[Container] 2017/06/28 18:28:26 Running command source /path/to/creds_file.txt\n/codebuild/output/tmp/script.sh: 4: /codebuild/output/tmp/script.sh: source: not found\n</code></pre>\n\n<p>I have tried to install <code>source</code> through <code>apt</code> but then I get an error saying that <code>source</code> cannot be found (yes, I've run <code>apt update</code> etc.). I am using a standard Ubuntu image with the Python 2.7 environment for CodeBuild. What can I do to either get Terraform working credentials for source this credentials file in Codebuild.</p>\n\n<p>Thanks!</p>\n", "OwnerUserId": "2676875", "LastActivityDate": "2020-06-26T06:48:20.230", "Title": "Cannot run `source` in AWS Codebuild", "Tags": "<bash><amazon-web-services><terraform><aws-codebuild>", "AnswerCount": "5", "CommentCount": "3", "FavoriteCount": "0", "ContentLicense": "CC BY-SA 3.0", "comments": [{"Id": "76601726", "PostId": "44810237", "Score": "2", "Text": "Have you tried using `.` instead of `source`?  `source` is not POSIX https://ss64.com/bash/source.html", "CreationDate": "2017-06-28T19:05:26.180", "UserId": "3586311", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "76602612", "PostId": "44810237", "Score": "1", "Text": "That did it! Thanks so much! As a side question, are AWS containers strictly POSIX compliant? (also if you make your comment into an answer, I'll accept and close)", "CreationDate": "2017-06-28T19:33:02.797", "UserId": "2676875", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "76602749", "PostId": "44810237", "Score": "2", "Text": "That is a good question, I think they just do raw shell calls rather then bash or anything like that, however I am not sure. Until a certain guru told me that `source` was a common alias for `.` I had thought it was the other way around.", "CreationDate": "2017-06-28T19:37:15.347", "UserId": "3586311", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "history": [{"Id": "150414504", "PostHistoryTypeId": "2", "PostId": "44810237", "RevisionGUID": "b5684915-a9c7-423a-b9b7-0834cdfda86e", "CreationDate": "2017-06-28T18:41:17.620", "UserId": "2676875", "Text": "I am using AWS CodeBuild along with Terraform for automated deployment of a Lambda based service. I have a very simple `buildscript.yml` that accomplishes the following:\r\n\r\n - Get dependencies\r\n - Run Tests\r\n - Get AWS credentials and save to file (detailed below)\r\n - Source the creds file\r\n - Run Terraform\r\n\r\nThe step \"source the creds file\" is where I am having my difficulty. I have a simply bash one-liner that grabs the AWS container creds off of `curl 169.254.170.2$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI` and then saves them to a file in the following format:\r\n\r\n\r\n    export AWS_ACCESS_KEY_ID=SOMEACCESSKEY\r\n    export AWS_SECRET_ACCESS_KEY=MYSECRETKEY\r\n    export AWS_SESSION_TOKEN=MYSESSIONTOKEN\r\n\r\nOf course, the obvious step is to simply `source` this file so that these variables can be added to my environment for Terraform to use. However, when I do `source /path/to/creds_file.txt`, CodeBuild returns: \r\n\r\n    [Container] 2017/06/28 18:28:26 Running command source /path/to/creds_file.txt\r\n    /codebuild/output/tmp/script.sh: 4: /codebuild/output/tmp/script.sh: source: not found\r\n\r\nI have tried to install `source` through `apt` but then I get an error saying that `source` cannot be found (yes, I've run `apt update` etc.). I am using a standard Ubuntu image with the Python 2.7 environment for CodeBuild. What can I do to either get Terraform working credentials for source this credentials file in Codebuild.\r\n\r\nThanks!", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "I have a very simple `buildscript.yml` that accomplishes the following: - Get dependencies - Run Tests - Get AWS credentials and save to file (detailed below) - Source the creds file - Run Terraform ", "keywords": ["test"]}]}, {"Id": "150414505", "PostHistoryTypeId": "1", "PostId": "44810237", "RevisionGUID": "b5684915-a9c7-423a-b9b7-0834cdfda86e", "CreationDate": "2017-06-28T18:41:17.620", "UserId": "2676875", "Text": "Cannot run `source` in AWS Codebuild", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "150414506", "PostHistoryTypeId": "3", "PostId": "44810237", "RevisionGUID": "b5684915-a9c7-423a-b9b7-0834cdfda86e", "CreationDate": "2017-06-28T18:41:17.620", "UserId": "2676875", "Text": "<bash><amazon-web-services><terraform><aws-codebuild>", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "answers": [{"Id": "52987736", "PostTypeId": "2", "ParentId": "44810237", "CreationDate": "2018-10-25T11:03:20.090", "Score": "4", "Body": "<p>I had a similar issue. I solved it by calling the script directly via <code>/bin/bash &lt;script&gt;.sh</code> </p>\n", "OwnerUserId": "4509634", "LastActivityDate": "2018-10-25T11:03:20.090", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "184500411", "PostHistoryTypeId": "2", "PostId": "52987736", "RevisionGUID": "2a8aec12-9e3b-4679-907e-42e7d8bd5825", "CreationDate": "2018-10-25T11:03:20.090", "UserId": "4509634", "Text": "I had a similar issue. I solved it by calling the script directly via `/bin/bash <script>.sh` ", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "59999409", "PostTypeId": "2", "ParentId": "44810237", "CreationDate": "2020-01-31T07:08:45.703", "Score": "4", "Body": "<p>I don't have enough reputation to comment so here it goes an extension of jeffrey's answer which is on spot. </p>\n\n<p>Just in case if your filename starts with a dot(.), the following will fail</p>\n\n<pre><code>. .filename\n</code></pre>\n\n<p>You will need to qualify the filename with directory name like</p>\n\n<pre><code> . ./.filename\n</code></pre>\n", "OwnerUserId": "2003712", "LastActivityDate": "2020-01-31T07:08:45.703", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "214030159", "PostHistoryTypeId": "2", "PostId": "59999409", "RevisionGUID": "a8810fa9-98dc-4046-81f5-cd1d2fc77fed", "CreationDate": "2020-01-31T07:08:45.703", "UserId": "2003712", "Text": "I don't have enough reputation to comment so here it goes an extension of jeffrey's answer which is on spot. \r\n\r\nJust in case if your filename starts with a dot(.), the following will fail\r\n```\r\n. .filename\r\n```\r\n\r\nYou will need to qualify the filename with directory name like\r\n```\r\n . ./.filename\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "62589427", "PostTypeId": "2", "ParentId": "44810237", "CreationDate": "2020-06-26T06:48:20.230", "Score": "15", "Body": "<p>CodeBuild now supports <code>bash</code> as your default shell. You just need to specify it in your <code>buildspec.yml</code>.</p>\n<pre><code>env:\n  shell: bash\n</code></pre>\n<p>Reference: <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec-ref-syntax\" rel=\"noreferrer\">https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec-ref-syntax</a></p>\n", "OwnerUserId": "1252647", "LastActivityDate": "2020-06-26T06:48:20.230", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "225280923", "PostHistoryTypeId": "2", "PostId": "62589427", "RevisionGUID": "726fb717-1174-43c1-a164-3d5bef223ea0", "CreationDate": "2020-06-26T06:48:20.230", "UserId": "1252647", "Text": "CodeBuild now supports `bash` as your default shell. You just need to specify it in your `buildspec.yml`.\r\n\r\n```\r\nenv:\r\n  shell: bash\r\n```\r\n\r\nReference: https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec-ref-syntax", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "44811491", "PostTypeId": "2", "ParentId": "44810237", "CreationDate": "2017-06-28T19:56:32.150", "Score": "4", "Body": "<p>The AWS CodeBuild images ship with a POSIX compliant shell. You can see what's inside the images here: <a href=\"https://github.com/aws/aws-codebuild-docker-images\" rel=\"nofollow noreferrer\">https://github.com/aws/aws-codebuild-docker-images</a>.</p>\n\n<p>If you're using specific shell features (such as source), it is best to wrap your commands in a script file with a shebang specifying the shell you'd like the commands to execute with, and then execute this script from buildspec.yml.</p>\n\n<p>build-script.sh</p>\n\n<pre><code>     #!/bin/bash\n      &lt;commands&gt;\n      ...\n</code></pre>\n\n<p>buildspec.yml (snippet)</p>\n\n<p><code>build:\n    commands:\n      - path/to/script/build-script.sh\n</code></p>\n", "OwnerUserId": "2796505", "LastActivityDate": "2017-06-28T19:56:32.150", "CommentCount": "2", "ContentLicense": "CC BY-SA 3.0", "comments": [{"Id": "76604128", "PostId": "44811491", "Score": "2", "Text": "Interesting, thanks for clarifying that. I've always been able to use `source` on my linux/UNIX machines so never gave it a second thought. As of right now, we've gone POSIX compliant on our scripts just to ensure full compatibility.", "CreationDate": "2017-06-28T20:16:59.907", "UserId": "2676875", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "76606079", "PostId": "44811491", "Score": "1", "Text": "Unless you are writing something that can only be done with bash, or is drastically more efficient with something non-POSIX compliant, sticking to POSIX is a good idea for portability.", "CreationDate": "2017-06-28T21:21:04.867", "UserId": "2081835", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "Unless you are writing something that can only be done with bash, or is drastically more efficient with something non-POSIX compliant, sticking to POSIX is a good idea for portability.", "keywords": ["efficient"]}]}], "history": [{"Id": "150419523", "PostHistoryTypeId": "2", "PostId": "44811491", "RevisionGUID": "29515086-df24-4a24-8ee2-842771044454", "CreationDate": "2017-06-28T19:56:32.150", "UserId": "2796505", "Text": "The AWS CodeBuild images ship with a POSIX compliant shell. You can see what's inside the images here: https://github.com/aws/aws-codebuild-docker-images.\r\n\r\nIf you're using specific shell features (such as source), it is best to wrap your commands in a script file with a shebang specifying the shell you'd like the commands to execute with, and then execute this script from buildspec.yml.\r\n\r\nbuild-script.sh\r\n\r\n         #!/bin/bash\r\n          <commands>\r\n          ...\r\n\r\nbuildspec.yml (snippet)\r\n\r\n\r\n `build:\r\n    commands:\r\n      - path/to/script/build-script.sh\r\n`\r\n", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "44811143", "PostTypeId": "2", "ParentId": "44810237", "CreationDate": "2017-06-28T19:35:17.457", "Score": "24", "Body": "<p>Try using <code>.</code> instead of <code>source</code>. <code>source</code> is not POSIX compliant. <a href=\"http://ss64.com/bash/source.html\" rel=\"noreferrer\">ss64.com/bash/source.html</a></p>\n", "OwnerUserId": "3586311", "LastEditorUserId": "2081835", "LastEditDate": "2017-06-28T19:51:59.480", "LastActivityDate": "2017-06-28T19:51:59.480", "CommentCount": "0", "ContentLicense": "CC BY-SA 3.0", "history": [{"Id": "150418121", "PostHistoryTypeId": "2", "PostId": "44811143", "RevisionGUID": "b6059743-8301-417f-9182-36c38b0b3134", "CreationDate": "2017-06-28T19:35:17.457", "UserId": "3586311", "Text": "Try using . instead of source? source is not POSIX ss64.com/bash/source.html", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "150418349", "PostHistoryTypeId": "5", "PostId": "44811143", "RevisionGUID": "d71a5f8f-8c51-4fea-a6f7-dd870667da55", "CreationDate": "2017-06-28T19:39:11.360", "UserId": "2676875", "Comment": "Format link", "Text": "Try using . instead of source? source is not POSIX [ss64.com/bash/source.html][1]\r\n\r\n\r\n  [1]: http://ss64.com/bash/source.html", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "150418350", "PostHistoryTypeId": "24", "PostId": "44811143", "RevisionGUID": "d71a5f8f-8c51-4fea-a6f7-dd870667da55", "CreationDate": "2017-06-28T19:39:11.360", "Comment": "Proposed by 2676875 approved by 3586311 edit id of 3161269", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "150419257", "PostHistoryTypeId": "5", "PostId": "44811143", "RevisionGUID": "ac16ac24-5e75-48be-b940-9611d722edf2", "CreationDate": "2017-06-28T19:51:59.480", "UserId": "2081835", "Comment": "Formatting and adding \"compliant\".", "Text": "Try using `.` instead of `source`. `source` is not POSIX compliant. [ss64.com/bash/source.html][1]\r\n\r\n\r\n  [1]: http://ss64.com/bash/source.html", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "150419258", "PostHistoryTypeId": "24", "PostId": "44811143", "RevisionGUID": "ac16ac24-5e75-48be-b940-9611d722edf2", "CreationDate": "2017-06-28T19:51:59.480", "Comment": "Proposed by 2081835 approved by 3586311 edit id of 3161281", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I have a very simple buildscript.yml that accomplishes the following: Get dependencies Run Tests Get AWS credentials and save to file (detailed below) ", "keywords": ["test"]}]}