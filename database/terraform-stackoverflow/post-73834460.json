{"Id": "73834460", "PostTypeId": "1", "CreationDate": "2022-09-24T02:59:25.920", "Score": "0", "ViewCount": "244", "Body": "<p>I've been using terraform for a while now and I have deployed everything into separate clusters. Now due to cost, we'd like to merge the different clusters into one cluster and use kubernetes namespaces.</p>\n<p>My desired outcome would be that I could call <code>terraform apply - var=&quot;kubernetes_namespace=my-namespace&quot;</code> and it would create the namespace which could live alongside my other namespaces, however, due to how terraform remote state is managed, any new deployment will overwrite the old and I can't have co-existing namespaces.</p>\n<p>When I try to redeploy another namespace I get\n<code>namespace        = &quot;deploy-pr-image&quot; -&gt; &quot;test-second-branch-pr&quot; # forces replacement</code></p>\n<p>I can see why because it's writing everything to a single workspace file.</p>\n<pre><code>terraform {\n  backend &quot;s3&quot; {\n    bucket               = &quot;my-tf-state&quot;\n    key                  = &quot;terraform-services.tfstate&quot;\n    region               = &quot;us-west-1&quot;\n    workspace_key_prefix = &quot;workspaces&quot;\n    #dynamodb_table       = &quot;terraform-state-lock-dynamo&quot;\n  }\n}\n</code></pre>\n<p>Is there some way to use the workspace/namespace combination to keep terraform from overwriting my other namespace ?</p>\n", "OwnerUserId": "377044", "LastActivityDate": "2022-09-25T16:36:06.127", "Title": "How to manage multiple kubernetes namespaces in a terraform project", "Tags": "<kubernetes><terraform>", "AnswerCount": "1", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "130376045", "PostId": "73834460", "Score": "0", "Text": "You would need to switch the workspace first and probably keep a different set of variables for each of them.", "CreationDate": "2022-09-24T06:55:54.470", "UserId": "8343484", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "278843500", "PostHistoryTypeId": "2", "PostId": "73834460", "RevisionGUID": "1c1db764-5d9d-4035-990f-d58ef2210f90", "CreationDate": "2022-09-24T02:59:25.920", "UserId": "377044", "Text": "I've been using terraform for a while now and I have deployed everything into separate clusters. Now due to cost, we'd like to merge the different clusters into one cluster and use kubernetes namespaces.\r\n\r\nMy desired outcome would be that I could call `terraform apply - var=\"kubernetes_namespace=my-namespace\"` and it would create the namespace which could live alongside my other namespaces, however, due to how terraform remote state is managed, any new deployment will overwrite the old and I can't have co-existing namespaces. \r\n\r\nWhen I try to redeploy another namespace I get \r\n`namespace        = \"deploy-pr-image\" -> \"test-second-branch-pr\" # forces replacement`\r\n\r\nI can see why because it's writing everything to a single workspace file. \r\n\r\n```\r\nterraform {\r\n  backend \"s3\" {\r\n    bucket               = \"my-tf-state\"\r\n    key                  = \"terraform-services.tfstate\"\r\n    region               = \"us-west-1\"\r\n    workspace_key_prefix = \"workspaces\"\r\n    #dynamodb_table       = \"terraform-state-lock-dynamo\"\r\n  }\r\n}\r\n```\r\nIs there some way to use the workspace/namespace combination to keep terraform from overwriting my other namespace ? ", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Now due to cost, we'd like to merge the different clusters into one cluster and use kubernetes namespaces. ", "keywords": ["cost", "cluster"]}, {"source": "Text", "text": "When I try to redeploy another namespace I get `namespace = \"deploy-pr-image\" -> \"test-second-branch-pr\" # forces replacement` ", "keywords": ["test"]}]}, {"Id": "278843502", "PostHistoryTypeId": "1", "PostId": "73834460", "RevisionGUID": "1c1db764-5d9d-4035-990f-d58ef2210f90", "CreationDate": "2022-09-24T02:59:25.920", "UserId": "377044", "Text": "How to manage multiple kubernetes namespaces in a terraform project", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "278843503", "PostHistoryTypeId": "3", "PostId": "73834460", "RevisionGUID": "1c1db764-5d9d-4035-990f-d58ef2210f90", "CreationDate": "2022-09-24T02:59:25.920", "UserId": "377044", "Text": "<kubernetes><terraform>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "73840098", "PostTypeId": "2", "ParentId": "73834460", "CreationDate": "2022-09-24T19:38:50.073", "Score": "1", "Body": "<p>Since now you'll be merging all your clusters into a single one, it would make sense to only have a backend where you can manage the state of the cluster rather than having multiple backends per Kubernetes namespaces.</p>\n<p>I suggest you to update your module or root deployment to be flexible enough that it can create X number of Kubernetes namespaces resources rather than a single one using <code>count</code> or <code>for_each</code>.</p>\n", "OwnerUserId": "6182194", "LastEditorUserId": "6182194", "LastEditDate": "2022-09-25T16:36:06.127", "LastActivityDate": "2022-09-25T16:36:06.127", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "278874250", "PostHistoryTypeId": "2", "PostId": "73840098", "RevisionGUID": "327833ba-161b-4e92-bd05-62c9468dd9ab", "CreationDate": "2022-09-24T19:38:50.073", "UserId": "6182194", "Text": "Since now you'll be merging all your clusters into a single one, it would make sense to only have a backend where you can manage the state of the cluster, therefore rather than having multiple backends per Kubernetes namespaces.\r\n\r\nI'd suggest you update your module or root deployment to be flexible enough that it can create X number of Kubernetes namespaces resources rather than a single one using `count` or `for_each`.  ", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Since now you'll be merging all your clusters into a single one, it would make sense to only have a backend where you can manage the state of the cluster, therefore rather than having multiple backends per Kubernetes namespaces. ", "keywords": ["cluster"]}]}, {"Id": "278908062", "PostHistoryTypeId": "5", "PostId": "73840098", "RevisionGUID": "2d6843bd-a676-4f2a-9fc1-757a326703ae", "CreationDate": "2022-09-25T16:36:06.127", "UserId": "6182194", "Comment": "deleted 11 characters in body", "Text": "Since now you'll be merging all your clusters into a single one, it would make sense to only have a backend where you can manage the state of the cluster rather than having multiple backends per Kubernetes namespaces.\r\n\r\nI suggest you to update your module or root deployment to be flexible enough that it can create X number of Kubernetes namespaces resources rather than a single one using `count` or `for_each`.  ", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Since now you'll be merging all your clusters into a single one, it would make sense to only have a backend where you can manage the state of the cluster rather than having multiple backends per Kubernetes namespaces. ", "keywords": ["cluster"]}]}], "filtered-sentences": [{"source": "Body", "text": "Since now you'll be merging all your clusters into a single one, it would make sense to only have a backend where you can manage the state of the cluster rather than having multiple backends per Kubernetes namespaces. ", "keywords": ["cluster"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "Now due to cost, we'd like to merge the different clusters into one cluster and use kubernetes namespaces. ", "keywords": ["cost", "cluster"]}, {"source": "Body", "text": "When I try to redeploy another namespace I get namespace = \"deploy-pr-image\" -> \"test-second-branch-pr\" # forces replacement I can see why because it's writing everything to a single workspace file. ", "keywords": ["test"]}]}