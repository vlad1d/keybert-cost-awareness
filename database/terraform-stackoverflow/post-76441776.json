{"Id": "76441776", "PostTypeId": "1", "CreationDate": "2023-06-09T15:40:58.027", "Score": "0", "ViewCount": "273", "Body": "<p>I've just created a new Google Cloud Trigger using Terraform and it fails because of missing permissions when running the deploy step (it's missing <code>role/cloudfunctions.developer</code>)</p>\n<p>I know I can add the role to the service account using something like:</p>\n<pre><code>resource &quot;google_project_iam_member&quot; &quot;act_as&quot; {\n  project = var.google_project\n  role    = &quot;roles/iam.serviceAccountUser&quot;\n  member  = &quot;serviceAccount:PROJECT_ID_HERE@cloudbuild.gserviceaccount.com&quot;\n}\n\n</code></pre>\n<p>but I think it would be more robust if I could just reference the service_account used by the google_cloudbuild_trigger resource, something like:</p>\n<pre><code>resource &quot;google_project_iam_member&quot; &quot;act_as&quot; {\n  project = var.google_project\n  role    = &quot;roles/iam.serviceAccountUser&quot;\n  member  = &quot;serviceAccount:${google_cloudbuild_trigger.my-trigger.service_account}&quot;\n}\n</code></pre>\n<p>This fails with:</p>\n<blockquote>\n<p>\u2577\n\u2502 Error: invalid value for member (IAM members must have one of the values outlined here: &gt; <a href=\"https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding\" rel=\"nofollow noreferrer\">https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding</a>)\n\u2502\n\u2502   with module.pipedrive.google_project_iam_member.cloudfunctions-developer,\n\u2502   on modules/pipedrive/main.tf line 66, in resource &quot;google_project_iam_member&quot; &gt; &quot;cloudfunctions-developer&quot;:\n\u2502   66:   member  = google_cloudbuild_trigger.build-trigger.service_account</p>\n</blockquote>\n<p>I think it's because the format of the <code>service_account</code> attribute is not what's expected in the member input.</p>\n<p>Any hints? Am I missing something?</p>\n", "OwnerUserId": "441554", "LastActivityDate": "2023-06-09T21:42:11.840", "Title": "Terraform: Assign a role to the service account of a newly created google cloud build trigger", "Tags": "<google-cloud-platform><google-cloud-build><terraform-provider-gcp>", "AnswerCount": "2", "CommentCount": "4", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "134788106", "PostId": "76441776", "Score": "0", "Text": "What is the value of `${google_cloudbuild_trigger.my-trigger.service_account}`?", "CreationDate": "2023-06-09T15:48:27.320", "UserId": "8016720", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "134788396", "PostId": "76441776", "Score": "0", "Text": "Um.. I'm not sure how to print variable values inside a module.", "CreationDate": "2023-06-09T16:09:04.630", "UserId": "441554", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "134789517", "PostId": "76441776", "Score": "0", "Text": "Try `terraform state show`. Example in the docs: https://developer.hashicorp.com/terraform/cli/commands/state/show#example-show-a-module-resource", "CreationDate": "2023-06-09T17:50:53.113", "UserId": "8016720", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "134789943", "PostId": "76441776", "Score": "0", "Text": "```\nrunning: terraform state show 'module.pipedrive.google_cloudbuild_trigger.build-trigger' | grep \"service_account\"\n\nreturns nothing :(", "CreationDate": "2023-06-09T18:33:49.130", "UserId": "441554", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "293953715", "PostHistoryTypeId": "2", "PostId": "76441776", "RevisionGUID": "ba2d26a8-0c6d-4a35-a393-e8d60dfe27ed", "CreationDate": "2023-06-09T15:40:58.027", "UserId": "441554", "Text": "I've just created a new Google Cloud Trigger using Terraform and it fails because of missing permissions when running the deploy step (it's missing `role/cloudfunctions.developer`)\r\n\r\nI know I can add the role to the service account using something like:\r\n\r\n```\r\nresource \"google_project_iam_member\" \"act_as\" {\r\n  project = var.google_project\r\n  role    = \"roles/iam.serviceAccountUser\"\r\n  member  = \"serviceAccount:PROJECT_ID_HERE@cloudbuild.gserviceaccount.com\"\r\n}\r\n\r\n```\r\n\r\nbut I think it would be more robust if I could just reference the service_account used by the google_cloudbuild_trigger resource, something like:\r\n\r\n```\r\nresource \"google_project_iam_member\" \"act_as\" {\r\n  project = var.google_project\r\n  role    = \"roles/iam.serviceAccountUser\"\r\n  member  = \"serviceAccount:${google_cloudbuild_trigger.my-trigger.service_account}\"\r\n}\r\n```\r\n\r\nThis fails with:\r\n> \u2577\r\n> \u2502 Error: invalid value for member (IAM members must have one of the values outlined here: > https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding)\r\n> \u2502 \r\n> \u2502   with module.pipedrive.google_project_iam_member.cloudfunctions-developer,\r\n> \u2502   on modules/pipedrive/main.tf line 66, in resource \"google_project_iam_member\" > \"cloudfunctions-developer\":\r\n> \u2502   66:   member  = google_cloudbuild_trigger.build-trigger.service_account\r\n\r\nI think it's because the format of the `service_account` attribute is not what's expected in the member input.\r\n\r\nAny hints? Am I missing something?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "This fails with: > \u2577 > \u2502 Error: invalid value for member (IAM members must have one of the values outlined here: > https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding) > \u2502 > \u2502 with module.pipedrive.google_project_iam_member.cloudfunctions-developer, > \u2502 on modules/pipedrive/main.tf line 66, in resource \"google_project_iam_member\" > \"cloudfunctions-developer\": > \u2502 66: member = google_cloudbuild_trigger.build-trigger.service_account I think it's because the format of the `service_account` attribute is not what's expected in the member input", "keywords": ["bill", "policy"]}]}, {"Id": "293953717", "PostHistoryTypeId": "1", "PostId": "76441776", "RevisionGUID": "ba2d26a8-0c6d-4a35-a393-e8d60dfe27ed", "CreationDate": "2023-06-09T15:40:58.027", "UserId": "441554", "Text": "Terraform: Assign a role to the service account of a newly created google cloud build trigger", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "293953718", "PostHistoryTypeId": "3", "PostId": "76441776", "RevisionGUID": "ba2d26a8-0c6d-4a35-a393-e8d60dfe27ed", "CreationDate": "2023-06-09T15:40:58.027", "UserId": "441554", "Text": "<google-cloud-platform><google-cloud-build><terraform-provider-gcp>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "76443450", "PostTypeId": "2", "ParentId": "76441776", "CreationDate": "2023-06-09T20:26:20.843", "Score": "0", "Body": "<p>You have to load the service account's details separately because <code>google_project_iam_member</code> needs the SA's email. <code>google_cloudbuild_trigger</code> only holds the service account's ID, as you pointed out.</p>\n<p>Use the <code>google_service_account</code> module to load the service account's details, including its email, and then pass that to <code>google_project_iam_member</code>. See this <a href=\"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/cloudbuild_trigger#example-usage---cloudbuild-trigger-service-account\" rel=\"nofollow noreferrer\">example</a>:</p>\n<pre><code>resource &quot;google_cloudbuild_trigger&quot; &quot;service-account-trigger&quot; {\n  trigger_template {\n    branch_name = &quot;main&quot;\n    repo_name   = &quot;my-repo&quot;\n  }\n\n  service_account = google_service_account.cloudbuild_service_account.id\n  filename        = &quot;cloudbuild.yaml&quot;\n  depends_on = [\n    google_project_iam_member.act_as,\n    google_project_iam_member.logs_writer\n  ]\n}\n\nresource &quot;google_service_account&quot; &quot;cloudbuild_service_account&quot; {\n  account_id = &quot;cloud-sa&quot;\n}\n\nresource &quot;google_project_iam_member&quot; &quot;act_as&quot; {\n  project = data.google_project.project.project_id\n  role    = &quot;roles/iam.serviceAccountUser&quot;\n  member  = &quot;serviceAccount:${google_service_account.cloudbuild_service_account.email}&quot;\n}\n</code></pre>\n", "OwnerUserId": "1623885", "LastActivityDate": "2023-06-09T20:26:20.843", "CommentCount": "3", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "134791085", "PostId": "76443450", "Score": "0", "Text": "Thanks, but if I understand correctly, you're creating a NEW service account (named 'cloud-sa'). I'm not sure if I want to do this.", "CreationDate": "2023-06-09T20:39:31.513", "UserId": "441554", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "134791093", "PostId": "76443450", "Score": "0", "Text": "@runixo you can import existing resources into your terraform state: https://developer.hashicorp.com/terraform/cli/import", "CreationDate": "2023-06-09T20:40:29.747", "UserId": "1623885", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "134791108", "PostId": "76443450", "Score": "0", "Text": "@runixo You can also just use the `google_service_account` data source to reference the existing SA: https://registry.terraform.io/providers/hashicorp/google/latest/docs/data-sources/service_account", "CreationDate": "2023-06-09T20:42:21.087", "UserId": "1623885", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "293963333", "PostHistoryTypeId": "2", "PostId": "76443450", "RevisionGUID": "35b45e3d-44e7-4df2-91e7-973566489738", "CreationDate": "2023-06-09T20:26:20.843", "UserId": "1623885", "Text": "You have to load the service account's details separately because `google_project_iam_member` needs the SA's email. `google_cloudbuild_trigger` only holds the service account's ID, as you pointed out.\r\n\r\nUse the `google_service_account` module to load the service account's details, including its email, and then pass that to `google_project_iam_member`. See this [example](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/cloudbuild_trigger#example-usage---cloudbuild-trigger-service-account):\r\n\r\n```\r\nresource \"google_cloudbuild_trigger\" \"service-account-trigger\" {\r\n  trigger_template {\r\n    branch_name = \"main\"\r\n    repo_name   = \"my-repo\"\r\n  }\r\n\r\n  service_account = google_service_account.cloudbuild_service_account.id\r\n  filename        = \"cloudbuild.yaml\"\r\n  depends_on = [\r\n    google_project_iam_member.act_as,\r\n    google_project_iam_member.logs_writer\r\n  ]\r\n}\r\n\r\nresource \"google_service_account\" \"cloudbuild_service_account\" {\r\n  account_id = \"cloud-sa\"\r\n}\r\n\r\nresource \"google_project_iam_member\" \"act_as\" {\r\n  project = data.google_project.project.project_id\r\n  role    = \"roles/iam.serviceAccountUser\"\r\n  member  = \"serviceAccount:${google_service_account.cloudbuild_service_account.email}\"\r\n}\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "76443805", "PostTypeId": "2", "ParentId": "76441776", "CreationDate": "2023-06-09T21:42:11.840", "Score": "0", "Body": "<p>So, I <em>think</em> I understand what's happening.\nIn the <a href=\"https://cloud.google.com/build/docs/api/reference/rest/v1/projects.triggers#:%7E:text=then%20the%20standard%20Cloud%20Build%20service%20account%20(%5BPROJECT_NUM%5D%40system.gserviceaccount.com)%20will%20be%20used%20instead.%20Format%3A\" rel=\"nofollow noreferrer\">Google Cloud Build Triggers API docs</a>, it's stated that if no service_account is specified then the Google Cloud Build default service account is used:</p>\n<p>The service account used for all user-controlled operations including triggers.patch, triggers.run, builds.create, and builds.cancel. If no service account is set, then the standard Cloud Build service account ([PROJECT_NUM]@system.gserviceaccount.com) will be used instead. Format: projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT_ID_OR_EMAIL}</p>\n<p>I was expecting the API to return the default service_account (but it's not, it's returning 'null').</p>\n<p>So I ended up doing a coalesce between <code>google_cloudbuild_trigger.build-trigger.service_account</code> and the default Cloud Build service account.</p>\n<pre><code>data &quot;google_project&quot; &quot;project&quot; {\n  project_id = var.google_project\n}\n\n\nresource &quot;google_project_iam_member&quot; &quot;cloudfunctions-developer&quot; {\n  project = var.google_project\n  role    = &quot;roles/cloudfunctions.developer&quot;\n  member  = &quot;serviceAccount:${coalesce(google_cloudbuild_trigger.build-trigger.service_account, &quot;${data.google_project.project.number}@cloudbuild.gserviceaccount.com&quot;)}&quot; #TODO FIXME\n}\n</code></pre>\n<p>I hope this helps others, I learned a few things investigating this.\nThanks for your help!</p>\n", "OwnerUserId": "441554", "LastActivityDate": "2023-06-09T21:42:11.840", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "293965354", "PostHistoryTypeId": "2", "PostId": "76443805", "RevisionGUID": "1c6c5049-a460-4d1b-8ad9-e9a9156c9a94", "CreationDate": "2023-06-09T21:42:11.840", "UserId": "441554", "Text": "So, I *think* I understand what's happening. \r\nIn the [Google Cloud Build Triggers API docs][1], it's stated that if no service_account is specified then the Google Cloud Build default service account is used:\r\n\r\nThe service account used for all user-controlled operations including triggers.patch, triggers.run, builds.create, and builds.cancel. If no service account is set, then the standard Cloud Build service account ([PROJECT_NUM]@system.gserviceaccount.com) will be used instead. Format: projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT_ID_OR_EMAIL}\r\n\r\nI was expecting the API to return the default service_account (but it's not, it's returning 'null').\r\n\r\nSo I ended up doing a coalesce between `google_cloudbuild_trigger.build-trigger.service_account` and the default Cloud Build service account.\r\n\r\n```\r\ndata \"google_project\" \"project\" {\r\n  project_id = var.google_project\r\n}\r\n\r\n\r\nresource \"google_project_iam_member\" \"cloudfunctions-developer\" {\r\n  project = var.google_project\r\n  role    = \"roles/cloudfunctions.developer\"\r\n  member  = \"serviceAccount:${coalesce(google_cloudbuild_trigger.build-trigger.service_account, \"${data.google_project.project.number}@cloudbuild.gserviceaccount.com\")}\" #TODO FIXME\r\n}\r\n```\r\n\r\nI hope this helps others, I learned a few things investigating this.\r\nThanks for your help!\r\n\r\n  [1]: https://cloud.google.com/build/docs/api/reference/rest/v1/projects.triggers#:~:text=then%20the%20standard%20Cloud%20Build%20service%20account%20(%5BPROJECT_NUM%5D%40system.gserviceaccount.com)%20will%20be%20used%20instead.%20Format%3A", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I've just created a new Google Cloud Trigger using Terraform and it fails because of missing permissions when running the deploy step (it's missing role/cloudfunctions.developer) I know I can add the role to the service account using something like: but I think it would be more robust if I could just reference the service_account used by the google_cloudbuild_trigger resource, something like: This fails with: \u2577 \u2502 Error: invalid value for member (IAM members must have one of the values outlined here: > https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding) \u2502 \u2502 with module.pipedrive.google_project_iam_member.cloudfunctions-developer, \u2502 on modules/pipedrive/main.tf line 66, in resource \"google_project_iam_member\" > \"cloudfunctions-developer\": \u2502 66: member = google_cloudbuild_trigger.build-trigger.service_account I think it's because the format of the service_account attribute is not what's expected in the member input. ", "keywords": ["bill", "policy"]}]}