{"Id": "49642413", "PostTypeId": "1", "CreationDate": "2018-04-04T03:45:25.217", "Score": "0", "ViewCount": "65", "Body": "<p>I have an application that is constantly creating/destroying virtual machine resources in AWS using Terraform. It works most of the time, but on occasion the Terraform destroy command fails to fully cleanup the AWS instance.</p>\n\n<p>In this case, since I'm already using Terraform with success, I'd like to setup a CRON job that automatically discovers all the running AWS instances, determines if any of them failed to terminate properly, and then cleans up all the bad resources.</p>\n\n<p>Rather than use a different tool I'd like to do this using Terraform. Is it possible to list all running VMs in AWS using Terraform if Terraform does not currently have any of them in the state file?</p>\n\n<p>On a related note, I'd also like to keep this application as Cloud Agnostic as possible, so I don't want to rely on the AWS CLI if I can help it.</p>\n", "OwnerUserId": "1631806", "LastActivityDate": "2018-04-04T22:29:14.310", "Title": "Is there a way to discover or import resources using Terraform", "Tags": "<cloud><terraform>", "AnswerCount": "1", "CommentCount": "1", "ContentLicense": "CC BY-SA 3.0", "comments": [{"Id": "86295118", "PostId": "49642413", "Score": "0", "Text": "Is there any reason you don't want to fix the original problem that Terraform isn't properly destroying some instances but is removing it from the state file? This sounds like a bug of a level that I haven't seen in Terraform for years as if it fails to delete an instance it should stay in the state file and so rerunning destroy should delete the instance (or at least try again).", "CreationDate": "2018-04-04T05:57:33.960", "UserId": "2291321", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "This sounds like a bug of a level that I haven't seen in Terraform for years as if it fails to delete an instance it should stay in the state file and so rerunning destroy should delete the instance (or at least try again).", "keywords": ["instance"]}]}], "history": [{"Id": "170470369", "PostHistoryTypeId": "2", "PostId": "49642413", "RevisionGUID": "0e62b509-4c08-40be-9dd5-6870102f238a", "CreationDate": "2018-04-04T03:45:25.217", "UserId": "1631806", "Text": "I have an application that is constantly creating/destroying virtual machine resources in AWS using Terraform. It works most of the time, but on occasion the Terraform destroy command fails to fully cleanup the AWS instance.\r\n\r\nIn this case, since I'm already using Terraform with success, I'd like to setup a CRON job that automatically discovers all the running AWS instances, determines if any of them failed to terminate properly, and then cleans up all the bad resources.\r\n\r\nRather than use a different tool I'd like to do this using Terraform. Is it possible to list all running VMs in AWS using Terraform if Terraform does not currently have any of them in the state file?\r\n\r\nOn a related note, I'd also like to keep this application as Cloud Agnostic as possible, so I don't want to rely on the AWS CLI if I can help it.", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "It works most of the time, but on occasion the Terraform destroy command fails to fully cleanup the AWS instance. ", "keywords": ["instance"]}]}, {"Id": "170470370", "PostHistoryTypeId": "1", "PostId": "49642413", "RevisionGUID": "0e62b509-4c08-40be-9dd5-6870102f238a", "CreationDate": "2018-04-04T03:45:25.217", "UserId": "1631806", "Text": "Is there a way to discover or import resources using Terraform", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "170470371", "PostHistoryTypeId": "3", "PostId": "49642413", "RevisionGUID": "0e62b509-4c08-40be-9dd5-6870102f238a", "CreationDate": "2018-04-04T03:45:25.217", "UserId": "1631806", "Text": "<cloud><terraform>", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "answers": [{"Id": "49661408", "PostTypeId": "2", "ParentId": "49642413", "CreationDate": "2018-04-04T22:29:14.310", "Score": "0", "Body": "<p>It does sound like you need to investigate the problem a little more from a 'why am I having this problem in the first place'. However, you could utilise a tool like <a href=\"http://terraforming.dtan4.net/\" rel=\"nofollow noreferrer\">terraforming</a> to ad-hoc pull in EC2 instances and then do some determination as to whether you need to terminate.</p>\n\n<p>A vague answer as you probably should investigate the termination problem first.</p>\n", "OwnerUserId": "1218285", "LastActivityDate": "2018-04-04T22:29:14.310", "CommentCount": "1", "ContentLicense": "CC BY-SA 3.0", "comments": [{"Id": "86371177", "PostId": "49661408", "Score": "0", "Text": "I've hit a lot of edge cases in Amazon that have caused unexpected behaviors. One of the problems I have is that there are a lot of developers on this  project and a lot of moving pieces. So writing this cleanup service is somewhat of a hackey method to defend against bugs that I know people will introduce. It's cheaper  and easier to write a cleanup service than to spend engineering time debugging.", "CreationDate": "2018-04-05T19:08:06.053", "UserId": "1631806", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "It's cheaper and easier to write a cleanup service than to spend engineering time debugging.", "keywords": ["cheap"]}]}], "history": [{"Id": "170547675", "PostHistoryTypeId": "2", "PostId": "49661408", "RevisionGUID": "47792213-ed15-465c-8516-bc7f4a6f9a27", "CreationDate": "2018-04-04T22:29:14.310", "UserId": "1218285", "Text": "It does sound like you need to investigate the problem a little more from a 'why am I having this problem in the first place'. However, you could utilise a tool like [terraforming][1] to ad-hoc pull in EC2 instances and then do some determination as to whether you need to terminate.\r\n\r\nA vague answer as you probably should investigate the termination problem first.\r\n\r\n\r\n  [1]: http://terraforming.dtan4.net/", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "It works most of the time, but on occasion the Terraform destroy command fails to fully cleanup the AWS instance. ", "keywords": ["instance"]}]}