{"Id": "68390878", "PostTypeId": "1", "CreationDate": "2021-07-15T09:01:58.190", "Score": "0", "ViewCount": "1458", "Body": "<p>I am trying to create a create a firebase project using terraform. I am new in it and need some guidance in setting up the firebase project. I am facing an issue</p>\n<blockquote>\n<p>Error creating Project: googleapi: Error 403: Your application has authenticated using end user credentials from the Google Cloud SDK or Google Cloud Shell which are not supported by the firebase.googleapis.com. We recommend configuring the billing/quota_project setting in gcloud or using a service account through the auth/impersonate_service_account setting. For more information about service accounts and how to use them in your application, see <a href=\"https://cloud.google.com/docs/authentication/\" rel=\"nofollow noreferrer\">https://cloud.google.com/docs/authentication/</a>.</p>\n</blockquote>\n<p>terraform code</p>\n<pre><code>resource &quot;google_project&quot; &quot;test-project&quot; {\n  provider = google-beta\n\n  project_id = &quot;test-project&quot;\n  name       = &quot;Test Project&quot;\n}\n\nresource &quot;google_firebase_project&quot; &quot;test-project&quot; {\n  provider = google-beta\n  project  = google_project.test-project.project_id\n}\n\nprovider &quot;google&quot; {\n  project = &quot;test-project&quot;\n  region  = var.region\n}\n</code></pre>\n", "OwnerUserId": "455964", "LastEditorUserId": "15168009", "LastEditDate": "2021-07-19T15:44:40.673", "LastActivityDate": "2022-06-02T21:09:47.343", "Title": "Error when creating the firebase project using terraform", "Tags": "<node.js><firebase><google-cloud-platform><terraform><terraform-provider-gcp>", "AnswerCount": "2", "CommentCount": "0", "FavoriteCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "250276988", "PostHistoryTypeId": "2", "PostId": "68390878", "RevisionGUID": "740356ab-ba44-433e-a7d3-09e263226465", "CreationDate": "2021-07-15T09:01:58.190", "UserId": "455964", "Text": "I am trying to create a create a firebase project using terraform. I am new in it and need some guidance in setting up the firebase project. I am facing an issue\r\n\r\n    Error creating Project: googleapi: Error 403: Your application has authenticated using end user credentials from the Google Cloud SDK or Google Cloud Shell which are not supported by the firebase.googleapis.com. We recommend configuring the billing/quota_project setting in gcloud or using a service account through the auth/impersonate_service_account setting. For more information about service accounts and how to use them in your application, see https://cloud.google.com/docs/authentication/.\r\n\r\nterraform code\r\n\r\n    resource \"google_project\" \"test-project\" {\r\n      provider = google-beta\r\n    \r\n      project_id = \"test-project\"\r\n      name       = \"Test Project\"\r\n    }\r\n    \r\n    resource \"google_firebase_project\" \"test-project\" {\r\n      provider = google-beta\r\n      project  = google_project.test-project.project_id\r\n    }\r\n\r\n    provider \"google\" {\r\n      project = \"qcx-push-notification\"\r\n      region  = var.region\r\n    }\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "We recommend configuring the billing/quota_project setting in gcloud or using a service account through the auth/impersonate_service_account setting. ", "keywords": ["bill"]}, {"source": "Text", "text": "terraform code resource \"google_project\" \"test-project\" { provider = google-beta project_id = \"test-project\" name = \"Test Project\" } resource \"google_firebase_project\" \"test-project\" { provider = google-beta project = google_project.test-project.project_id } provider \"google\" { project = \"qcx-push-notification\" region = var.region }", "keywords": ["provider", "test"]}]}, {"Id": "250276989", "PostHistoryTypeId": "1", "PostId": "68390878", "RevisionGUID": "740356ab-ba44-433e-a7d3-09e263226465", "CreationDate": "2021-07-15T09:01:58.190", "UserId": "455964", "Text": "Create firebase project using terraform", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "250276990", "PostHistoryTypeId": "3", "PostId": "68390878", "RevisionGUID": "740356ab-ba44-433e-a7d3-09e263226465", "CreationDate": "2021-07-15T09:01:58.190", "UserId": "455964", "Text": "<node.js><google-cloud-platform><terraform><terraform-provider-gcp>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "250278732", "PostHistoryTypeId": "5", "PostId": "68390878", "RevisionGUID": "b9418724-3fb5-4496-a6e1-676385b6d074", "CreationDate": "2021-07-15T09:30:35.770", "UserId": "455964", "Comment": "deleted 9 characters in body", "Text": "I am trying to create a create a firebase project using terraform. I am new in it and need some guidance in setting up the firebase project. I am facing an issue\r\n\r\n    Error creating Project: googleapi: Error 403: Your application has authenticated using end user credentials from the Google Cloud SDK or Google Cloud Shell which are not supported by the firebase.googleapis.com. We recommend configuring the billing/quota_project setting in gcloud or using a service account through the auth/impersonate_service_account setting. For more information about service accounts and how to use them in your application, see https://cloud.google.com/docs/authentication/.\r\n\r\nterraform code\r\n\r\n    resource \"google_project\" \"test-project\" {\r\n      provider = google-beta\r\n    \r\n      project_id = \"test-project\"\r\n      name       = \"Test Project\"\r\n    }\r\n    \r\n    resource \"google_firebase_project\" \"test-project\" {\r\n      provider = google-beta\r\n      project  = google_project.test-project.project_id\r\n    }\r\n\r\n    provider \"google\" {\r\n      project = \"test-project\"\r\n      region  = var.region\r\n    }\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "We recommend configuring the billing/quota_project setting in gcloud or using a service account through the auth/impersonate_service_account setting. ", "keywords": ["bill"]}, {"source": "Text", "text": "terraform code resource \"google_project\" \"test-project\" { provider = google-beta project_id = \"test-project\" name = \"Test Project\" } resource \"google_firebase_project\" \"test-project\" { provider = google-beta project = google_project.test-project.project_id } provider \"google\" { project = \"test-project\" region = var.region }", "keywords": ["provider", "test"]}]}, {"Id": "250279477", "PostHistoryTypeId": "5", "PostId": "68390878", "RevisionGUID": "9d2b9e23-f277-4711-b189-a147d9636841", "CreationDate": "2021-07-15T09:42:48.867", "UserId": "4420967", "Comment": "deleted 2 characters in body", "Text": "I am trying to create a create a firebase project using terraform. I am new in it and need some guidance in setting up the firebase project. I am facing an issue\r\n\r\n> Error creating Project: googleapi: Error 403: Your application has authenticated using end user credentials from the Google Cloud SDK or Google Cloud Shell which are not supported by the firebase.googleapis.com. We recommend configuring the billing/quota_project setting in gcloud or using a service account through the auth/impersonate_service_account setting. For more information about service accounts and how to use them in your application, see https://cloud.google.com/docs/authentication/.\r\n\r\nterraform code\r\n\r\n    resource \"google_project\" \"test-project\" {\r\n      provider = google-beta\r\n    \r\n      project_id = \"test-project\"\r\n      name       = \"Test Project\"\r\n    }\r\n    \r\n    resource \"google_firebase_project\" \"test-project\" {\r\n      provider = google-beta\r\n      project  = google_project.test-project.project_id\r\n    }\r\n\r\n    provider \"google\" {\r\n      project = \"test-project\"\r\n      region  = var.region\r\n    }\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "We recommend configuring the billing/quota_project setting in gcloud or using a service account through the auth/impersonate_service_account setting. ", "keywords": ["bill"]}, {"source": "Text", "text": "terraform code resource \"google_project\" \"test-project\" { provider = google-beta project_id = \"test-project\" name = \"Test Project\" } resource \"google_firebase_project\" \"test-project\" { provider = google-beta project = google_project.test-project.project_id } provider \"google\" { project = \"test-project\" region = var.region }", "keywords": ["provider", "test"]}]}, {"Id": "250282219", "PostHistoryTypeId": "4", "PostId": "68390878", "RevisionGUID": "1d28884a-fbee-45df-93e2-8220e0e60363", "CreationDate": "2021-07-15T10:26:56.723", "UserId": "455964", "Comment": "edited title", "Text": "Error when creating the firebase project using terraform", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "250518656", "PostHistoryTypeId": "6", "PostId": "68390878", "RevisionGUID": "e2fb6f40-2bb3-4822-8258-96b39979b6d0", "CreationDate": "2021-07-19T15:44:40.673", "UserId": "15168009", "Comment": "Fixed typos, correct products names and better view of settings in a sysconfig file.", "Text": "<node.js><firebase><google-cloud-platform><terraform><terraform-provider-gcp>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "250518657", "PostHistoryTypeId": "24", "PostId": "68390878", "RevisionGUID": "e2fb6f40-2bb3-4822-8258-96b39979b6d0", "CreationDate": "2021-07-19T15:44:40.673", "Comment": "Proposed by 15168009 approved by 1308883, 3749896 edit id of 5199084", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "68406323", "PostTypeId": "2", "ParentId": "68390878", "CreationDate": "2021-07-16T09:01:26.317", "Score": "1", "Body": "<p>Creating the service account in the Terraform admin project, e. g.</p>\n<pre><code>gcloud iam service-accounts create terraform \\\n  --display-name &quot;Terraform admin account&quot;\n\ngcloud iam service-accounts keys create ${TF_CREDS} \\\n  --iam-account terraform@${TF_ADMIN}.iam.gserviceaccount.com\n</code></pre>\n<p>and granting permissions to this service account should solve it. An example of providing permissions from the documentation:</p>\n<pre><code>gcloud projects add-iam-policy-binding ${TF_ADMIN} \\\n  --member serviceAccount:terraform@${TF_ADMIN}.iam.gserviceaccount.com \\\n  --role roles/viewer\n\ngcloud projects add-iam-policy-binding ${TF_ADMIN} \\\n  --member serviceAccount:terraform@${TF_ADMIN}.iam.gserviceaccount.com \\\n  --role roles/storage.admin\n</code></pre>\n<p>You can follow the instructions about <a href=\"https://cloud.google.com/community/tutorials/managing-gcp-projects-with-terraform\" rel=\"nofollow noreferrer\">creating Google Cloud projects in Terraform</a></p>\n<p>Projects you create in GCP are <a href=\"https://firebase.google.com/docs/projects/learn-more#firebase-cloud-relationship\" rel=\"nofollow noreferrer\">the same</a> as you create in Firebase.</p>\n", "OwnerUserId": "15123894", "LastActivityDate": "2021-07-16T09:01:26.317", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "120895292", "PostId": "68406323", "Score": "1", "Text": "Thank you for the response. I already had tried this solution and I am still getting the googleapi: Error 403: The caller does not have permission, forbidden. If you received a 403 error, make sure you have the `roles/resourcemanager.projectCreator` permission. I think the reason is, I am running on free trial account and the service account cannot create the project without specifying the parent which could be an organization and since the trial account cannot create an organization this could be and issue.", "CreationDate": "2021-07-16T09:19:11.150", "UserId": "455964", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "250340915", "PostHistoryTypeId": "2", "PostId": "68406323", "RevisionGUID": "755c6de8-02c3-4301-bb94-cb66fc12986e", "CreationDate": "2021-07-16T09:01:26.317", "UserId": "15123894", "Text": "Creating the service account in the Terraform admin project, e. g. \r\n\r\n    gcloud iam service-accounts create terraform \\\r\n      --display-name \"Terraform admin account\"\r\n    \r\n    gcloud iam service-accounts keys create ${TF_CREDS} \\\r\n      --iam-account terraform@${TF_ADMIN}.iam.gserviceaccount.com\r\n\r\nand granting permissions to this service account should solve it. An example of providing permissions from the documentation: \r\n\r\n    gcloud projects add-iam-policy-binding ${TF_ADMIN} \\\r\n      --member serviceAccount:terraform@${TF_ADMIN}.iam.gserviceaccount.com \\\r\n      --role roles/viewer\r\n    \r\n    gcloud projects add-iam-policy-binding ${TF_ADMIN} \\\r\n      --member serviceAccount:terraform@${TF_ADMIN}.iam.gserviceaccount.com \\\r\n      --role roles/storage.admin\r\n\r\nYou can follow the instructions about [creating Google Cloud projects in Terraform](https://cloud.google.com/community/tutorials/managing-gcp-projects-with-terraform)\r\n\r\nProjects you create in GCP are [the same](https://firebase.google.com/docs/projects/learn-more#firebase-cloud-relationship) as you create in Firebase. \r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "An example of providing permissions from the documentation: gcloud projects add-iam-policy-binding ${TF_ADMIN} \\ --member serviceAccount:terraform@${TF_ADMIN}.iam.gserviceaccount.com \\ --role roles/viewer gcloud projects add-iam-policy-binding ${TF_ADMIN} \\ --member serviceAccount:terraform@${TF_ADMIN}.iam.gserviceaccount.com \\ --role roles/storage.admin You can follow the instructions about [creating Google Cloud projects in Terraform](https://cloud.google.com/community/tutorials/managing-gcp-projects-with-terraform) Projects you create in GCP are [the same](https://firebase.google.com/docs/projects/learn-more#firebase-cloud-relationship) as you create in Firebase.", "keywords": ["storage", "policy"]}]}], "filtered-sentences": []}, {"Id": "72178293", "PostTypeId": "2", "ParentId": "68390878", "CreationDate": "2022-05-09T21:16:24.710", "Score": "0", "Body": "<p>If you don't really need the firebase project but just a firestore database, then you can create a firestore database using the following trick.</p>\n<p><a href=\"https://firebase.google.com/docs/firestore/solutions/automate-database-create#create_a_database_with_terraform\" rel=\"nofollow noreferrer\">https://firebase.google.com/docs/firestore/solutions/automate-database-create#create_a_database_with_terraform</a></p>\n<blockquote>\n<p>To provision a Cloud Firestore database with Terraform, use the google_app_engine_application resource. Set the database_type to CLOUD_FIRESTORE or CLOUD_DATASTORE_COMPATIBILITY.</p>\n<p>For example, the following Terraform configuration file creates a new\nproject and provisions a Cloud Firestore database:</p>\n</blockquote>\n<pre><code>provider &quot;google&quot; {\n  credentials = file(&quot;credentials-file&quot;)\n}\n\nresource &quot;google_project&quot; &quot;my_project&quot; {\n  name = &quot;My Project&quot;\n  project_id = &quot;project-id&quot;\n}\n\nresource &quot;google_app_engine_application&quot; &quot;app&quot; {\n  project     = google_project.my_project.project_id\n  location_id = &quot;location&quot;\n  database_type = &quot;CLOUD_FIRESTORE&quot;\n}\n</code></pre>\n", "OwnerUserId": "681803", "LastEditorUserId": "681803", "LastEditDate": "2022-06-02T21:09:47.343", "LastActivityDate": "2022-06-02T21:09:47.343", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "269816605", "PostHistoryTypeId": "2", "PostId": "72178293", "RevisionGUID": "086dfbb3-1896-4ec4-8308-8e2b6b433746", "CreationDate": "2022-05-09T21:16:24.710", "UserId": "681803", "Text": "I found another solution to create a firebase project with terraform in the firestore documentation:\r\n\r\nhttps://firebase.google.com/docs/firestore/solutions/automate-database-create#create_a_database_with_terraform\r\n\r\n> To provision a Cloud Firestore database with Terraform, use the google_app_engine_application resource. Set the database_type to CLOUD_FIRESTORE or CLOUD_DATASTORE_COMPATIBILITY.\r\n> \r\n> For example, the following Terraform configuration file creates a new\r\n> project and provisions a Cloud Firestore database:\r\n\r\n```\r\nprovider \"google\" {\r\n  credentials = file(\"credentials-file\")\r\n}\r\n\r\nresource \"google_project\" \"my_project\" {\r\n  name = \"My Project\"\r\n  project_id = \"project-id\"\r\n}\r\n\r\nresource \"google_app_engine_application\" \"app\" {\r\n  project     = google_project.my_project.project_id\r\n  location_id = \"location\"\r\n  database_type = \"CLOUD_FIRESTORE\"\r\n}\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Set the database_type to CLOUD_FIRESTORE or CLOUD_DATASTORE_COMPATIBILITY. > > For example, the following Terraform configuration file creates a new > project and provisions a Cloud Firestore database: ``` provider \"google\" { credentials = file(\"credentials-file\") } resource \"google_project\" \"my_project\" { name = \"My Project\" project_id = \"project-id\" } resource \"google_app_engine_application\" \"app\" { project = google_project.my_project.project_id location_id = \"location\" database_type = \"CLOUD_FIRESTORE\" ", "keywords": ["provider"]}]}, {"Id": "271468911", "PostHistoryTypeId": "5", "PostId": "72178293", "RevisionGUID": "4add4273-c59a-4637-bc13-8252c6caf3ba", "CreationDate": "2022-06-02T21:09:47.343", "UserId": "681803", "Comment": "added 44 characters in body", "Text": "If you don't really need the firebase project but just a firestore database, then you can create a firestore database using the following trick.\r\n\r\nhttps://firebase.google.com/docs/firestore/solutions/automate-database-create#create_a_database_with_terraform\r\n\r\n> To provision a Cloud Firestore database with Terraform, use the google_app_engine_application resource. Set the database_type to CLOUD_FIRESTORE or CLOUD_DATASTORE_COMPATIBILITY.\r\n> \r\n> For example, the following Terraform configuration file creates a new\r\n> project and provisions a Cloud Firestore database:\r\n\r\n```\r\nprovider \"google\" {\r\n  credentials = file(\"credentials-file\")\r\n}\r\n\r\nresource \"google_project\" \"my_project\" {\r\n  name = \"My Project\"\r\n  project_id = \"project-id\"\r\n}\r\n\r\nresource \"google_app_engine_application\" \"app\" {\r\n  project     = google_project.my_project.project_id\r\n  location_id = \"location\"\r\n  database_type = \"CLOUD_FIRESTORE\"\r\n}\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Set the database_type to CLOUD_FIRESTORE or CLOUD_DATASTORE_COMPATIBILITY. > > For example, the following Terraform configuration file creates a new > project and provisions a Cloud Firestore database: ``` provider \"google\" { credentials = file(\"credentials-file\") } resource \"google_project\" \"my_project\" { name = \"My Project\" project_id = \"project-id\" } resource \"google_app_engine_application\" \"app\" { project = google_project.my_project.project_id location_id = \"location\" database_type = \"CLOUD_FIRESTORE\" ", "keywords": ["provider"]}]}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "We recommend configuring the billing/quota_project setting in gcloud or using a service account through the auth/impersonate_service_account setting. ", "keywords": ["bill"]}]}