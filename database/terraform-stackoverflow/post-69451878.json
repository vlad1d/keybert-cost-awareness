{"Id": "69451878", "PostTypeId": "1", "AcceptedAnswerId": "69452313", "CreationDate": "2021-10-05T14:00:40.437", "Score": "1", "ViewCount": "519", "Body": "<p>I want to get a map using terraform data which has the following structure:</p>\n<pre><code>{\n  instance-id(e.g. i-xxxx): ValueOfNameTag(e.g. MongoDB)\n}\n</code></pre>\n<p>I can get the instance details individually like below</p>\n<pre><code>data &quot;aws_instance&quot; &quot;test&quot; {\n  instance_id = &quot;i-0ecb3c2fb4436b6fe&quot;\n}\n</code></pre>\n<p>But don't know hot to do it for all and create a map out of it.</p>\n", "OwnerUserId": "10065458", "LastActivityDate": "2021-10-05T14:29:46.400", "Title": "Can I create a map of {instanceid: valueOfNameTag} using terraform data?", "Tags": "<amazon-web-services><amazon-ec2><tags><terraform>", "AnswerCount": "1", "CommentCount": "4", "FavoriteCount": "0", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "122757541", "PostId": "69451878", "Score": "0", "Text": "This exists in the Terraform state if you are managing the resource. Are you not managing the resource?", "CreationDate": "2021-10-05T14:11:01.217", "UserId": "5343387", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "122757575", "PostId": "69451878", "Score": "0", "Text": "@MattSchuchard No, I'm not managing the instances. They are already there. I want to use data source to get the details and then create a map that I can use.", "CreationDate": "2021-10-05T14:12:02.947", "UserId": "10065458", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "122757608", "PostId": "69451878", "Score": "0", "Text": "How are you storing the list of IDs for the instances?", "CreationDate": "2021-10-05T14:13:18.403", "UserId": "5343387", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "122757622", "PostId": "69451878", "Score": "0", "Text": "@MattSchuchard I'm using data \"aws_instances\". This returns list of instance ids.", "CreationDate": "2021-10-05T14:13:45.780", "UserId": "10065458", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "This returns list of instance ids.", "keywords": ["instance"]}]}], "links": [{"Id": "1933819842", "CreationDate": "2021-10-05T17:04:38.420", "PostId": "69451878", "RelatedPostId": "69454592", "LinkTypeId": "1"}], "history": [{"Id": "255167921", "PostHistoryTypeId": "2", "PostId": "69451878", "RevisionGUID": "6b5cb3bd-eb92-4b07-9023-b52786105a8e", "CreationDate": "2021-10-05T14:00:40.437", "UserId": "10065458", "Text": "I want to get a map using terraform data which has the following structure:\r\n\r\n    {\r\n      instance-id(e.g. i-xxxx): ValueOfNameTag(e.g. MongoDB)\r\n    }\r\n\r\nI can get the instance details individually like below\r\n\r\n    data \"aws_instance\" \"test\" {\r\n      instance_id = \"i-0ecb3c2fb4436b6fe\"\r\n    }\r\n\r\nBut don't know hot to do it for all and create a map out of it.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I want to get a map using terraform data which has the following structure: { instance-id(e.g. i-xxxx): ValueOfNameTag(e.g. MongoDB) } ", "keywords": ["instance"]}, {"source": "Text", "text": "I can get the instance details individually like below data \"aws_instance\" \"test\" { instance_id = \"i-0ecb3c2fb4436b6fe\" } ", "keywords": ["instance", "test"]}]}, {"Id": "255167923", "PostHistoryTypeId": "1", "PostId": "69451878", "RevisionGUID": "6b5cb3bd-eb92-4b07-9023-b52786105a8e", "CreationDate": "2021-10-05T14:00:40.437", "UserId": "10065458", "Text": "Can I create a map of {instanceid: valueOfNameTag} using terraform data?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "255167924", "PostHistoryTypeId": "3", "PostId": "69451878", "RevisionGUID": "6b5cb3bd-eb92-4b07-9023-b52786105a8e", "CreationDate": "2021-10-05T14:00:40.437", "UserId": "10065458", "Text": "<amazon-web-services><amazon-ec2><tags><terraform>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "69452313", "PostTypeId": "2", "ParentId": "69451878", "CreationDate": "2021-10-05T14:29:46.400", "Score": "1", "Body": "<p>This is essentially a three step process. The first step (already exists according to comments) is to retrieve the desired list of instance IDs:</p>\n<pre><code>data &quot;aws_instances&quot; &quot;this&quot; {\n  # arguments to select specific subset of instances\n}\n</code></pre>\n<p>The <code>list(string)</code> of instances IDs will be stored in the exported resource attribute <code>ids</code>.</p>\n<p>The second step is to retrieve the tags of each individual instance:</p>\n<pre><code>data &quot;aws_instance&quot; &quot;this&quot; {\n  # iterate over subset of desired instances by ID\n  for_each = toset(data.aws_instances.this.ids)\n\n  instance_id = each.value\n}\n</code></pre>\n<p>The tags for each instance will be stored in the exported resource attribute <code>tags</code>, and therefore can be accessed via the namespace <code>data.aws_instance.this[&quot;&lt;instance id&gt;&quot;].tags</code> as per normal in Terraform HCL2 DSL.</p>\n<p>The third step is to perform a data transformation to construct a <code>map</code> where the key is the instance ID, and the value of a tag is the value. The example given in the question was for the value of the <code>Name</code> tag, so that is what we will use here in the example:</p>\n<pre><code>locals {\n  instance_name = { for id, attributes in data.aws_instance.this : id =&gt; attributes.tags[&quot;Name&quot;] }\n}\n</code></pre>\n<p>and the desired <code>map</code> of instance IDs to their respective <code>Name</code> tag will be stored in <code>local.instance_name</code> as expected. You could alternatively iterate over the <code>data.aws_instances.this.ids</code> <code>list(string)</code> in a <code>for</code> lambda expression and map to the exported attributes from the <code>data.aws_instance.this[each.value].tags[&quot;Name&quot;]</code>, but the above algorithm is slightly cleaner and slightly more efficient.</p>\n", "OwnerUserId": "5343387", "LastActivityDate": "2021-10-05T14:29:46.400", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "122762081", "PostId": "69452313", "Score": "0", "Text": "Thanks, Matt! I have one more issue, you might wanna take a look https://stackoverflow.com/q/69454592/10065458", "CreationDate": "2021-10-05T17:04:38.420", "UserId": "10065458", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "255170462", "PostHistoryTypeId": "2", "PostId": "69452313", "RevisionGUID": "25abdb39-02b4-429e-8b54-6f82ec746b85", "CreationDate": "2021-10-05T14:29:46.400", "UserId": "5343387", "Text": "This is essentially a three step process. The first step (already exists according to comments) is to retrieve the desired list of instance IDs:\r\n\r\n    data \"aws_instances\" \"this\" {\r\n      # arguments to select specific subset of instances\r\n    }\r\n\r\nThe `list(string)` of instances IDs will be stored in the exported resource attribute `ids`.\r\n\r\nThe second step is to retrieve the tags of each individual instance:\r\n\r\n    data \"aws_instance\" \"this\" {\r\n      # iterate over subset of desired instances by ID\r\n      for_each = toset(data.aws_instances.this.ids)\r\n\r\n      instance_id = each.value\r\n    }\r\n\r\nThe tags for each instance will be stored in the exported resource attribute `tags`, and therefore can be accessed via the namespace `data.aws_instance.this[\"<instance id>\"].tags` as per normal in Terraform HCL2 DSL.\r\n\r\nThe third step is to perform a data transformation to construct a `map` where the key is the instance ID, and the value of a tag is the value. The example given in the question was for the value of the `Name` tag, so that is what we will use here in the example:\r\n\r\n    locals {\r\n      instance_name = { for id, attributes in data.aws_instance.this : id => attributes.tags[\"Name\"] }\r\n    }\r\n\r\nand the desired `map` of instance IDs to their respective `Name` tag will be stored in `local.instance_name` as expected. You could alternatively iterate over the `data.aws_instances.this.ids` `list(string)` in a `for` lambda expression and map to the exported attributes from the `data.aws_instance.this[each.value].tags[\"Name\"]`, but the above algorithm is slightly cleaner and slightly more efficient.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "The first step (already exists according to comments) is to retrieve the desired list of instance IDs: data \"aws_instances\" \"this\" { # arguments to select specific subset of instances } ", "keywords": ["instance"]}, {"source": "Text", "text": "The second step is to retrieve the tags of each individual instance: data \"aws_instance\" \"this\" { # iterate over subset of desired instances by ID for_each = toset(data.aws_instances.this.ids) instance_id = each.value } ", "keywords": ["instance"]}, {"source": "Text", "text": "The tags for each instance will be stored in the exported resource attribute `tags`, and therefore can be accessed via the namespace `data.aws_instance.this[\"\"].tags` as per normal in Terraform HCL2 DSL. ", "keywords": ["instance"]}, {"source": "Text", "text": "The third step is to perform a data transformation to construct a `map` where the key is the instance ID, and the value of a tag is the value. ", "keywords": ["instance"]}, {"source": "Text", "text": "The example given in the question was for the value of the `Name` tag, so that is what we will use here in the example: locals { instance_name = { for id, attributes in data.aws_instance.this : id => attributes.tags[\"Name\"] } } and the desired `map` of instance IDs to their respective `Name` tag will be stored in `local.instance_name` as expected. ", "keywords": ["instance"]}, {"source": "Text", "text": "You could alternatively iterate over the `data.aws_instances.this.ids` `list(string)` in a `for` lambda expression and map to the exported attributes from the `data.aws_instance.this[each.value].tags[\"Name\"]`, but the above algorithm is slightly cleaner and slightly more efficient.", "keywords": ["efficient"]}]}], "filtered-sentences": [{"source": "Body", "text": "The first step (already exists according to comments) is to retrieve the desired list of instance IDs: The list(string) of instances IDs will be stored in the exported resource attribute ids. ", "keywords": ["instance"]}, {"source": "Body", "text": "The second step is to retrieve the tags of each individual instance: ", "keywords": ["instance"]}, {"source": "Body", "text": "The tags for each instance will be stored in the exported resource attribute tags, and therefore can be accessed via the namespace data.aws_instance.this[\"<instance id>\"].tags as per normal in Terraform HCL2 DSL. ", "keywords": ["instance"]}, {"source": "Body", "text": "The third step is to perform a data transformation to construct a map where the key is the instance ID, and the value of a tag is the value. ", "keywords": ["instance"]}, {"source": "Body", "text": "The example given in the question was for the value of the Name tag, so that is what we will use here in the example: and the desired map of instance IDs to their respective Name tag will be stored in local.instance_name as expected. ", "keywords": ["instance"]}, {"source": "Body", "text": "You could alternatively iterate over the data.aws_instances.this.ids list(string) in a for lambda expression and map to the exported attributes from the data.aws_instance.this[each.value].tags[\"Name\"], but the above algorithm is slightly cleaner and slightly more efficient.", "keywords": ["efficient"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I want to get a map using terraform data which has the following structure: I can get the instance details individually like below ", "keywords": ["instance"]}]}