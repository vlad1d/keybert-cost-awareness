{"Id": "68446328", "PostTypeId": "1", "CreationDate": "2021-07-19T19:59:45.510", "Score": "1", "ViewCount": "1044", "Body": "<p>I am attempting to create an Isolated App Service Environment (ASE) in Azure using Terraform. I have succeeded once and have an ASE running. Attempts to create a second ASE in the same subscription, but within a separate resource group, fail. The only error message available is &quot;An error has occurred&quot;. Investigation within Azure Monitoring reveals that the create request which was delivered via an ARM template has encountered a 500 error (Internal Server Error) somewhere in the process of creating the ASE. However, no details are available in the log message to indicate where/when/how Azure encountered the 500 error.</p>\n<p>Environment:</p>\n<ul>\n<li>azure cli (2.26.1)</li>\n<li>terraform (0.14.11)</li>\n<li>hashicorp/azurerm provider (2.67.0)</li>\n</ul>\n<h1 id=\"details-3di5\">Details</h1>\n<p>I am creating multiple environments for my project: dev, test, and staging. They are each in separate resource groups within the same Azure subscription. All resources in my terraform are constructed with names unique to the environment/resource group. The intended lifecycle is for infrastructure changes to be deployed to dev, then test, then staging (and eventually a prod environment in a separate subscription). The initial configuration and deployment to dev has succeeded. Attempts to deploy to test, or to deploy a different ASE to dev, fail abjectly with very little feedback.</p>\n<p>The original dev ASE is a v1 ASE. I have attempted to create a second ASE in test using the same terraform code. I have also tried creating a v3 ASE in dev (because the v3 will be cheaper). If the v3 ASE deploys successfully I will cut over to it in dev and will use it as the basis for test and stage instead of the v1 ASE. Regardless whether I try to deploy a v1 ASE to a separate resource group, or whether I try to deploy a v3 ASE to the same resource group as the v1 ASE, I get the same error.</p>\n<p>This is the Terraform for the v1 ASE, including the subnet which will host it:</p>\n<pre><code>resource &quot;azurerm_subnet&quot; &quot;subnet&quot; {\n  name                                           = &quot;${local.prefix}-subnet&quot;\n  resource_group_name                            = var.resource_group_name\n  virtual_network_name                           = var.vnet_name\n  address_prefixes                               = var.cidrs\n  enforce_private_link_endpoint_network_policies = var.enforce_private_link_endpoint_network_policies\n  enforce_private_link_service_network_policies  = var.enforce_private_link_service_network_policies\n\n  dynamic &quot;delegation&quot; {\n    for_each = var.delegations\n\n    content {\n      name = &quot;${local.prefix}-delegation-${delegation.key}&quot;\n      service_delegation {\n        name    = delegation.value.name\n        actions = delegation.value.actions\n      }\n    }\n  }\n\n  // List of Service endpoints to associate with the subnet.\n  service_endpoints = var.service_endpoints\n}\n\nresource &quot;azurerm_network_security_group&quot; &quot;nsg&quot; {\n  name                = &quot;${local.prefix}-nsg&quot;\n  location            = var.resource_group_location\n  resource_group_name = var.resource_group_name\n\n  tags = merge(map(&quot;Name&quot;, &quot;${local.prefix}-nsg&quot;), local.tags)\n}\n\nresource &quot;azurerm_subnet_network_security_group_association&quot; &quot;nsg_assoc&quot; {\n  subnet_id                 = azurerm_subnet.subnet.id\n  network_security_group_id = azurerm_network_security_group.nsg.id\n}\n\nresource &quot;azurerm_network_security_rule&quot; &quot;ase_mgmt&quot; {\n  name                        = &quot;${local.prefix}-ase-mgmt&quot;\n  priority                    = 100 \n  direction                   = &quot;Inbound&quot;\n  access                      = &quot;Allow&quot;\n  protocol                    = &quot;*&quot;\n  source_port_range           = &quot;*&quot;\n  source_address_prefix       = &quot;AppServiceManagement&quot;\n  destination_port_range      = &quot;454-455&quot;\n  destination_address_prefix  = var.subnet_cidr\n  resource_group_name         = var.resource_group_name\n  network_security_group_name = azurerm_network_security_group.nsg.name\n}\n\nresource &quot;azurerm_network_security_rule&quot; &quot;ingress&quot; {\n  for_each                    = {\n    for idx, cidr in var.ingress_cidrs : idx =&gt; cidr\n  }\n\n  name                        = &quot;${local.prefix}-ingress-${each.key}&quot;\n  priority                    = 200 + each.key\n  direction                   = &quot;Inbound&quot;\n  access                      = &quot;Allow&quot;\n  protocol                    = &quot;*&quot;\n  source_port_range           = &quot;*&quot;\n  source_address_prefix       = each.value\n  destination_port_range      = &quot;*&quot;\n  destination_address_prefix  = var.subnet_cidr\n  resource_group_name         = var.resource_group_name\n  network_security_group_name = azurerm_network_security_group.nsg.name\n}\n\nresource &quot;azurerm_app_service_environment&quot; &quot;env&quot; {\n  name                         = &quot;${local.prefix}-ase&quot;\n  subnet_id                    = azurerm_subnet.subnet.id\n  pricing_tier                 = var.pricing_tier\n  front_end_scale_factor       = var.front_scale_factor\n  internal_load_balancing_mode = &quot;Web, Publishing&quot;\n  allowed_user_ip_cidrs        = var.allowed_user_ip_cidrs\n\n  cluster_setting {\n    name  = &quot;DisableTls1.0&quot;\n    value = &quot;1&quot;\n  }\n\n  depends_on = [\n    azurerm_network_security_rule.ase_mgmt\n  ]\n}\n</code></pre>\n<p>The v3 ASE is configured identically, except for <code>azurerm_app_service_environment.env</code>, which is replaced with:</p>\n<pre><code>resource &quot;azurerm_app_service_environment_v3&quot; &quot;env&quot; {\n  name                         = &quot;${local.prefix}-ase-v3&quot;\n  resource_group_name          = var.resource_group_name\n  subnet_id                    = azurerm_subnet.subnet.id\n\n  cluster_setting {\n    name  = &quot;DisableTls1.0&quot;\n    value = &quot;1&quot;\n  }\n\n  depends_on = [\n    azurerm_network_security_rule.ase_mgmt\n  ]\n}\n\n</code></pre>\n<h1 id=\"results-lb87\">Results</h1>\n<ol>\n<li>Terraform generates this ARM request (identifiers have been redacted):</li>\n</ol>\n<pre><code>2021/07/19 09:07:44 [TRACE] dag/walk: vertex &quot;root&quot; is waiting for &quot;meta.count-boundary (EachMode fixup)&quot;\n2021-07-19T09:07:45.121-0700 [DEBUG] plugin.terraform-provider-azurerm_v2.67.0_x5: AzureRM Request: \nPUT /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/xxxxxxxx-dev-rg/providers/Microsoft.Web/hostingEnvironments/xxxxxxxx-dev-ase-v3?api-version=2020-06-01 HTTP/1.1\nHost: management.azure.com\nUser-Agent: Go/go1.16.3 (amd64-darwin) go-autorest/v14.2.1 Azure-SDK-For-Go/v55.4.0 web/2020-06-01 HashiCorp Terraform/0.14.11 (+https://www.terraform.io) Terraform Plugin SDK/2.7.0 terraform-provider-azurerm/2.67.0 pid-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\nContent-Length: 382\nContent-Type: application/json; charset=utf-8\nX-Ms-Correlation-Request-Id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\nAccept-Encoding: gzip\n\n{\n  &quot;kind&quot;:&quot;ASEV3&quot;,\n  &quot;location&quot;:&quot;centralus&quot;,\n  &quot;properties&quot;:\n  {\n    &quot;clusterSettings&quot;:[{\n      &quot;name&quot;:&quot;DisableTls1.0&quot;,\n      &quot;value&quot;:&quot;1&quot;\n    }],\n    &quot;name&quot;:&quot;xxxxxxxx-dev-ase-v3&quot;,\n    &quot;virtualNetwork&quot;:{\n      &quot;id&quot;:&quot;/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/xxxxxxxx-dev-rg/providers/Microsoft.Network/virtualNetworks/xxxxxxxx-dev-vnet/subnets/xxxxxxxx-dev-ase-v3-ase-subnet&quot;,\n      &quot;subnet&quot;:&quot;xxxxxxxx-dev-ase-v3-ase-subnet&quot;\n     }\n  },\n  &quot;tags&quot;:{}\n}\n</code></pre>\n<ol start=\"2\">\n<li>The error eventually reported by Terraform looks like this in the debug output:</li>\n</ol>\n<pre><code>2021/07/19 09:13:53 [DEBUG] azurerm_app_service_environment_v3.env: apply errored, but we're indicating that via the Error pointer rather than returning it: creating App Service Environment: (Hosting Environment Name &quot;xxxxxxxx-dev-ase-v3&quot; / Resource Group &quot;xxxxxxxx-dev-rg&quot;): web.AppServiceEnvironmentsClient#CreateOrUpdate: Failure sending request: StatusCode=0 -- Original Error: Code=&quot;Failed&quot; Message=&quot;The async operation failed.&quot; AdditionalInfo=[{&quot;Message&quot;:&quot;An error has occurred.&quot;}]: creating App Service Environment: (Hosting Environment Name &quot;xxxxxxxx-dev-ase-v3&quot; / Resource Group &quot;xxxxxxxx-dev-rg&quot;): web.AppServiceEnvironmentsClient#CreateOrUpdate: Failure sending request: StatusCode=0 -- Original Error: Code=&quot;Failed&quot; Message=&quot;The async operation failed.&quot; AdditionalInfo=[{&quot;Message&quot;:&quot;An error has occurred.&quot;}]\n</code></pre>\n<ol start=\"3\">\n<li>Reviewing the logs within Azure Monitor, I find a similarly vague error message. The message is summarized as <code>InternalServerError</code>. The JSON detail is included here for reference:</li>\n</ol>\n<pre><code>{\n    &quot;authorization&quot;: {\n        &quot;action&quot;: &quot;Microsoft.Web/hostingEnvironments/write&quot;,\n        &quot;scope&quot;: &quot;/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx/resourceGroups/xxxxxxxx-dev-rg/providers/Microsoft.Web/hostingEnvironments/xxxxxxxx-dev-ase-v3&quot;\n    },\n    &quot;caller&quot;: &quot;duffy.gillman@presencepg.com&quot;,\n    &quot;channels&quot;: &quot;Operation&quot;,\n    &quot;claims&quot;: {\n      //REDACTED\n    },\n    &quot;correlationId&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx&quot;,\n    &quot;description&quot;: &quot;&quot;,\n    &quot;eventDataId&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx&quot;,\n    &quot;eventName&quot;: {\n        &quot;value&quot;: &quot;EndRequest&quot;,\n        &quot;localizedValue&quot;: &quot;End request&quot;\n    },\n    &quot;category&quot;: {\n        &quot;value&quot;: &quot;Administrative&quot;,\n        &quot;localizedValue&quot;: &quot;Administrative&quot;\n    },\n    &quot;eventTimestamp&quot;: &quot;2021-07-19T15:51:45.4835627Z&quot;,\n    &quot;id&quot;: &quot;/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx/resourceGroups/xxxxxxxx-dev-rg/providers/Microsoft.Web/hostingEnvironments/xxxxxxxx-dev-ase-v3/events/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx/ticks/637623067054835627&quot;,\n    &quot;level&quot;: &quot;Error&quot;,\n    &quot;operationId&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx&quot;,\n    &quot;operationName&quot;: {\n        &quot;value&quot;: &quot;Microsoft.Web/hostingEnvironments/write&quot;,\n        &quot;localizedValue&quot;: &quot;Create or Update App Service Environment&quot;\n    },\n    &quot;resourceGroupName&quot;: &quot;xxxxxxxx-dev-rg&quot;,\n    &quot;resourceProviderName&quot;: {\n        &quot;value&quot;: &quot;Microsoft.Web&quot;,\n        &quot;localizedValue&quot;: &quot;Azure Web Sites&quot;\n    },\n    &quot;resourceType&quot;: {\n        &quot;value&quot;: &quot;Microsoft.Web/hostingEnvironments&quot;,\n        &quot;localizedValue&quot;: &quot;Microsoft.Web/hostingEnvironments&quot;\n    },\n    &quot;resourceId&quot;: &quot;/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx/resourceGroups/xxxxxxxx-dev-rg/providers/Microsoft.Web/hostingEnvironments/xxxxxxxx-dev-ase-v3&quot;,\n    &quot;status&quot;: {\n        &quot;value&quot;: &quot;Failed&quot;,\n        &quot;localizedValue&quot;: &quot;Failed&quot;\n    },\n    &quot;subStatus&quot;: {\n        &quot;value&quot;: &quot;InternalServerError&quot;,\n        &quot;localizedValue&quot;: &quot;Internal Server Error (HTTP Status Code: 500)&quot;\n    },\n    &quot;submissionTimestamp&quot;: &quot;2021-07-19T15:52:29.177138Z&quot;,\n    &quot;subscriptionId&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx&quot;,\n    &quot;tenantId&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx&quot;,\n    &quot;properties&quot;: {\n        &quot;statusCode&quot;: &quot;InternalServerError&quot;,\n        &quot;serviceRequestId&quot;: null,\n        &quot;statusMessage&quot;: &quot;{\\&quot;Message\\&quot;:\\&quot;An error has occurred.\\&quot;}&quot;,\n        &quot;eventCategory&quot;: &quot;Administrative&quot;,\n        &quot;entity&quot;: &quot;/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx/resourceGroups/xxxxxxxx-dev-rg/providers/Microsoft.Web/hostingEnvironments/xxxxxxxx-dev-ase-v3&quot;,\n        &quot;message&quot;: &quot;Microsoft.Web/hostingEnvironments/write&quot;,\n        &quot;hierarchy&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx&quot;\n    },\n    &quot;relatedEvents&quot;: []\n}\n</code></pre>\n", "OwnerUserId": "16482970", "LastEditorUserId": "15886810", "LastEditDate": "2021-08-04T06:09:03.970", "LastActivityDate": "2021-08-04T06:09:03.970", "Title": "Azure Isolated App Service Environment fails to create with Terraform with \"An error has occurred.\"", "Tags": "<azure><azure-web-app-service><azure-resource-manager><terraform-provider-azure><ase>", "AnswerCount": "1", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "250530966", "PostHistoryTypeId": "2", "PostId": "68446328", "RevisionGUID": "b218bbaa-398a-4057-8fd0-e2769efa2fa6", "CreationDate": "2021-07-19T19:59:45.510", "UserId": "16482970", "Text": "I am attempting to create an Isolated App Service Environment (ASE) in Azure using Terraform. I have succeeded once and have an ASE running. Attempts to create a second ASE in the same subscription, but within a separate resource group, fail. The only error message available is \"An error has occurred\". Investigation within Azure Monitoring reveals that the create request which was delivered via an ARM template has encountered a 500 error (Internal Server Error) somewhere in the process of creating the ASE. However, no details are available in the log message to indicate where/when/how Azure encountered the 500 error.\r\n\r\nEnvironment:\r\n\r\n - azure cli (2.26.1)\r\n - terraform (0.14.11)\r\n - hashicorp/azurerm provider (2.67.0)\r\n\r\n# Details\r\n\r\nI am creating multiple environments for my project: dev, test, and staging. They are each in separate resource groups within the same Azure subscription. All resources in my terraform are constructed with names unique to the environment/resource group. The intended lifecycle is for infrastructure changes to be deployed to dev, then test, then staging (and eventually a prod environment in a separate subscription). The initial configuration and deployment to dev has succeeded. Attempts to deploy to test, or to deploy a different ASE to dev, fail abjectly with very little feedback.\r\n\r\nThe original dev ASE is a v1 ASE. I have attempted to create a second ASE in test using the same terraform code. I have also tried creating a v3 ASE in dev (because the v3 will be cheaper). If the v3 ASE deploys successfully I will cut over to it in dev and will use it as the basis for test and stage instead of the v1 ASE. Regardless whether I try to deploy a v1 ASE to a separate resource group, or whether I try to deploy a v3 ASE to the same resource group as the v1 ASE, I get the same error.\r\n\r\nThis is the Terraform for the v1 ASE, including the subnet which will host it:\r\n\r\n```\r\nresource \"azurerm_subnet\" \"subnet\" {\r\n  name                                           = \"${local.prefix}-subnet\"\r\n  resource_group_name                            = var.resource_group_name\r\n  virtual_network_name                           = var.vnet_name\r\n  address_prefixes                               = var.cidrs\r\n  enforce_private_link_endpoint_network_policies = var.enforce_private_link_endpoint_network_policies\r\n  enforce_private_link_service_network_policies  = var.enforce_private_link_service_network_policies\r\n\r\n  dynamic \"delegation\" {\r\n    for_each = var.delegations\r\n\r\n    content {\r\n      name = \"${local.prefix}-delegation-${delegation.key}\"\r\n      service_delegation {\r\n        name    = delegation.value.name\r\n        actions = delegation.value.actions\r\n      }\r\n    }\r\n  }\r\n\r\n  // List of Service endpoints to associate with the subnet.\r\n  service_endpoints = var.service_endpoints\r\n}\r\n\r\nresource \"azurerm_network_security_group\" \"nsg\" {\r\n  name                = \"${local.prefix}-nsg\"\r\n  location            = var.resource_group_location\r\n  resource_group_name = var.resource_group_name\r\n\r\n  tags = merge(map(\"Name\", \"${local.prefix}-nsg\"), local.tags)\r\n}\r\n\r\nresource \"azurerm_subnet_network_security_group_association\" \"nsg_assoc\" {\r\n  subnet_id                 = azurerm_subnet.subnet.id\r\n  network_security_group_id = azurerm_network_security_group.nsg.id\r\n}\r\n\r\nresource \"azurerm_network_security_rule\" \"ase_mgmt\" {\r\n  name                        = \"${local.prefix}-ase-mgmt\"\r\n  priority                    = 100 \r\n  direction                   = \"Inbound\"\r\n  access                      = \"Allow\"\r\n  protocol                    = \"*\"\r\n  source_port_range           = \"*\"\r\n  source_address_prefix       = \"AppServiceManagement\"\r\n  destination_port_range      = \"454-455\"\r\n  destination_address_prefix  = var.subnet_cidr\r\n  resource_group_name         = var.resource_group_name\r\n  network_security_group_name = azurerm_network_security_group.nsg.name\r\n}\r\n\r\nresource \"azurerm_network_security_rule\" \"ingress\" {\r\n  for_each                    = {\r\n    for idx, cidr in var.ingress_cidrs : idx => cidr\r\n  }\r\n\r\n  name                        = \"${local.prefix}-ingress-${each.key}\"\r\n  priority                    = 200 + each.key\r\n  direction                   = \"Inbound\"\r\n  access                      = \"Allow\"\r\n  protocol                    = \"*\"\r\n  source_port_range           = \"*\"\r\n  source_address_prefix       = each.value\r\n  destination_port_range      = \"*\"\r\n  destination_address_prefix  = var.subnet_cidr\r\n  resource_group_name         = var.resource_group_name\r\n  network_security_group_name = azurerm_network_security_group.nsg.name\r\n}\r\n\r\nresource \"azurerm_app_service_environment\" \"env\" {\r\n  name                         = \"${local.prefix}-ase\"\r\n  subnet_id                    = azurerm_subnet.subnet.id\r\n  pricing_tier                 = var.pricing_tier\r\n  front_end_scale_factor       = var.front_scale_factor\r\n  internal_load_balancing_mode = \"Web, Publishing\"\r\n  allowed_user_ip_cidrs        = var.allowed_user_ip_cidrs\r\n\r\n  cluster_setting {\r\n    name  = \"DisableTls1.0\"\r\n    value = \"1\"\r\n  }\r\n\r\n  depends_on = [\r\n    azurerm_network_security_rule.ase_mgmt\r\n  ]\r\n}\r\n```\r\n\r\nThe v3 ASE is configured identically, except for `azurerm_app_service_environment.env`, which is replaced with:\r\n\r\n```\r\nresource \"azurerm_app_service_environment_v3\" \"env\" {\r\n  name                         = \"${local.prefix}-ase-v3\"\r\n  resource_group_name          = var.resource_group_name\r\n  subnet_id                    = azurerm_subnet.subnet.id\r\n\r\n  cluster_setting {\r\n    name  = \"DisableTls1.0\"\r\n    value = \"1\"\r\n  }\r\n\r\n  depends_on = [\r\n    azurerm_network_security_rule.ase_mgmt\r\n  ]\r\n}\r\n\r\n```\r\n\r\n# Results\r\n\r\n1. Terraform generates this ARM request (identifiers have been redacted):\r\n```\r\n2021/07/19 09:07:44 [TRACE] dag/walk: vertex \"root\" is waiting for \"meta.count-boundary (EachMode fixup)\"\r\n2021-07-19T09:07:45.121-0700 [DEBUG] plugin.terraform-provider-azurerm_v2.67.0_x5: AzureRM Request: \r\nPUT /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/xxxxxxxx-dev-rg/providers/Microsoft.Web/hostingEnvironments/xxxxxxxx-dev-ase-v3?api-version=2020-06-01 HTTP/1.1\r\nHost: management.azure.com\r\nUser-Agent: Go/go1.16.3 (amd64-darwin) go-autorest/v14.2.1 Azure-SDK-For-Go/v55.4.0 web/2020-06-01 HashiCorp Terraform/0.14.11 (+https://www.terraform.io) Terraform Plugin SDK/2.7.0 terraform-provider-azurerm/2.67.0 pid-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\r\nContent-Length: 382\r\nContent-Type: application/json; charset=utf-8\r\nX-Ms-Correlation-Request-Id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\r\nAccept-Encoding: gzip\r\n\r\n{\r\n  \"kind\":\"ASEV3\",\r\n  \"location\":\"centralus\",\r\n  \"properties\":\r\n  {\r\n    \"clusterSettings\":[{\r\n      \"name\":\"DisableTls1.0\",\r\n      \"value\":\"1\"\r\n    }],\r\n    \"name\":\"xxxxxxxx-dev-ase-v3\",\r\n    \"virtualNetwork\":{\r\n      \"id\":\"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/xxxxxxxx-dev-rg/providers/Microsoft.Network/virtualNetworks/xxxxxxxx-dev-vnet/subnets/xxxxxxxx-dev-ase-v3-ase-subnet\",\r\n      \"subnet\":\"xxxxxxxx-dev-ase-v3-ase-subnet\"\r\n     }\r\n  },\r\n  \"tags\":{}\r\n}\r\n```\r\n\r\n2. The error eventually reported by Terraform looks like this in the debug output:\r\n```\r\n2021/07/19 09:13:53 [DEBUG] azurerm_app_service_environment_v3.env: apply errored, but we're indicating that via the Error pointer rather than returning it: creating App Service Environment: (Hosting Environment Name \"xxxxxxxx-dev-ase-v3\" / Resource Group \"xxxxxxxx-dev-rg\"): web.AppServiceEnvironmentsClient#CreateOrUpdate: Failure sending request: StatusCode=0 -- Original Error: Code=\"Failed\" Message=\"The async operation failed.\" AdditionalInfo=[{\"Message\":\"An error has occurred.\"}]: creating App Service Environment: (Hosting Environment Name \"xxxxxxxx-dev-ase-v3\" / Resource Group \"xxxxxxxx-dev-rg\"): web.AppServiceEnvironmentsClient#CreateOrUpdate: Failure sending request: StatusCode=0 -- Original Error: Code=\"Failed\" Message=\"The async operation failed.\" AdditionalInfo=[{\"Message\":\"An error has occurred.\"}]\r\n```\r\n\r\n3. Reviewing the logs within Azure Monitor, I find a similarly vague error message. The message is summarized as `InternalServerError`. The JSON detail is included here for reference:\r\n```\r\n{\r\n    \"authorization\": {\r\n        \"action\": \"Microsoft.Web/hostingEnvironments/write\",\r\n        \"scope\": \"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx/resourceGroups/xxxxxxxx-dev-rg/providers/Microsoft.Web/hostingEnvironments/xxxxxxxx-dev-ase-v3\"\r\n    },\r\n    \"caller\": \"duffy.gillman@presencepg.com\",\r\n    \"channels\": \"Operation\",\r\n    \"claims\": {\r\n      //REDACTED\r\n    },\r\n    \"correlationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx\",\r\n    \"description\": \"\",\r\n    \"eventDataId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx\",\r\n    \"eventName\": {\r\n        \"value\": \"EndRequest\",\r\n        \"localizedValue\": \"End request\"\r\n    },\r\n    \"category\": {\r\n        \"value\": \"Administrative\",\r\n        \"localizedValue\": \"Administrative\"\r\n    },\r\n    \"eventTimestamp\": \"2021-07-19T15:51:45.4835627Z\",\r\n    \"id\": \"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx/resourceGroups/xxxxxxxx-dev-rg/providers/Microsoft.Web/hostingEnvironments/xxxxxxxx-dev-ase-v3/events/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx/ticks/637623067054835627\",\r\n    \"level\": \"Error\",\r\n    \"operationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx\",\r\n    \"operationName\": {\r\n        \"value\": \"Microsoft.Web/hostingEnvironments/write\",\r\n        \"localizedValue\": \"Create or Update App Service Environment\"\r\n    },\r\n    \"resourceGroupName\": \"xxxxxxxx-dev-rg\",\r\n    \"resourceProviderName\": {\r\n        \"value\": \"Microsoft.Web\",\r\n        \"localizedValue\": \"Azure Web Sites\"\r\n    },\r\n    \"resourceType\": {\r\n        \"value\": \"Microsoft.Web/hostingEnvironments\",\r\n        \"localizedValue\": \"Microsoft.Web/hostingEnvironments\"\r\n    },\r\n    \"resourceId\": \"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx/resourceGroups/xxxxxxxx-dev-rg/providers/Microsoft.Web/hostingEnvironments/xxxxxxxx-dev-ase-v3\",\r\n    \"status\": {\r\n        \"value\": \"Failed\",\r\n        \"localizedValue\": \"Failed\"\r\n    },\r\n    \"subStatus\": {\r\n        \"value\": \"InternalServerError\",\r\n        \"localizedValue\": \"Internal Server Error (HTTP Status Code: 500)\"\r\n    },\r\n    \"submissionTimestamp\": \"2021-07-19T15:52:29.177138Z\",\r\n    \"subscriptionId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx\",\r\n    \"tenantId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx\",\r\n    \"properties\": {\r\n        \"statusCode\": \"InternalServerError\",\r\n        \"serviceRequestId\": null,\r\n        \"statusMessage\": \"{\\\"Message\\\":\\\"An error has occurred.\\\"}\",\r\n        \"eventCategory\": \"Administrative\",\r\n        \"entity\": \"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx/resourceGroups/xxxxxxxx-dev-rg/providers/Microsoft.Web/hostingEnvironments/xxxxxxxx-dev-ase-v3\",\r\n        \"message\": \"Microsoft.Web/hostingEnvironments/write\",\r\n        \"hierarchy\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx\"\r\n    },\r\n    \"relatedEvents\": []\r\n}\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Environment: - azure cli (2.26.1) - terraform (0.14.11) - hashicorp/azurerm provider (2.67.0) # Details ", "keywords": ["provider"]}, {"source": "Text", "text": "I am creating multiple environments for my project: dev, test, and staging. ", "keywords": ["test"]}, {"source": "Text", "text": "The intended lifecycle is for infrastructure changes to be deployed to dev, then test, then staging (and eventually a prod environment in a separate subscription). ", "keywords": ["change", "test"]}, {"source": "Text", "text": "Attempts to deploy to test, or to deploy a different ASE to dev, fail abjectly with very little feedback. ", "keywords": ["test"]}, {"source": "Text", "text": "I have attempted to create a second ASE in test using the same terraform code. ", "keywords": ["test"]}, {"source": "Text", "text": "I have also tried creating a v3 ASE in dev (because the v3 will be cheaper). ", "keywords": ["cheap"]}, {"source": "Text", "text": "If the v3 ASE deploys successfully I will cut over to it in dev and will use it as the basis for test and stage instead of the v1 ASE. ", "keywords": ["test"]}, {"source": "Text", "text": "The v3 ASE is configured identically, except for `azurerm_app_service_environment.env`, which is replaced with: ``` resource \"azurerm_app_service_environment_v3\" \"env\" { name = \"${local.prefix}-ase-v3\" resource_group_name = var.resource_group_name subnet_id = azurerm_subnet.subnet.id cluster_setting { name = \"DisableTls1.0\" value = \"1\" } depends_on = [ azurerm_network_security_rule.ase_mgmt ] } ``` # Results 1. Terraform generates this ARM request (identifiers have been redacted): ``` 2021/07/19 09:07:44 [TRACE] dag/walk: vertex \"root\" is waiting for \"meta.count-boundary (EachMode fixup)\" 2021-07-19T09:07:45.121-0700 [DEBUG] plugin.terraform-provider-azurerm_v2.67.0_x5: AzureRM Request: PUT /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/xxxxxxxx-dev-rg/providers/Microsoft.Web/hostingEnvironments/xxxxxxxx-dev-ase-v3?api-version=2020-06-01 HTTP/1.1 Host: management.azure.com User-Agent: Go/go1.16.3 (amd64-darwin) go-autorest/v14.2.1 Azure-SDK-For-Go/v55.4.0 web/2020-06-01 HashiCorp Terraform/0.14.11 (+https://www.terraform.io) Terraform Plugin SDK/2.7.0 terraform-provider-azurerm/2.67.0 pid-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx Content-Length: 382 Content-Type: application/json; charset=utf-8 X-Ms-Correlation-Request-Id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx Accept-Encoding: gzip { \"kind\":\"ASEV3\", \"location\":\"centralus\", \"properties\": { \"clusterSettings\":[{ \"name\":\"DisableTls1.0\", \"value\":\"1\" }], \"name\":\"xxxxxxxx-dev-ase-v3\", \"virtualNetwork\":{ \"id\":\"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/xxxxxxxx-dev-rg/providers/Microsoft.Network/virtualNetworks/xxxxxxxx-dev-vnet/subnets/xxxxxxxx-dev-ase-v3-ase-subnet\", \"subnet\":\"xxxxxxxx-dev-ase-v3-ase-subnet\" } }, \"tags\":{} } ``` ", "keywords": ["provider"]}]}, {"Id": "250530967", "PostHistoryTypeId": "1", "PostId": "68446328", "RevisionGUID": "b218bbaa-398a-4057-8fd0-e2769efa2fa6", "CreationDate": "2021-07-19T19:59:45.510", "UserId": "16482970", "Text": "Azure Isolated App Service Environment fails to create with Terraform with \"An error has occurred.\"", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "250530968", "PostHistoryTypeId": "3", "PostId": "68446328", "RevisionGUID": "b218bbaa-398a-4057-8fd0-e2769efa2fa6", "CreationDate": "2021-07-19T19:59:45.510", "UserId": "16482970", "Text": "<azure><terraform><azure-rm><ase><azurerm-app-service>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "251394101", "PostHistoryTypeId": "6", "PostId": "68446328", "RevisionGUID": "76d8f9f1-3039-4a93-853b-694421ac9701", "CreationDate": "2021-08-04T06:09:03.970", "UserId": "15886810", "Comment": "Adding appropriate tag", "Text": "<azure><azure-web-app-service><azure-resource-manager><terraform-provider-azure><ase>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "251394102", "PostHistoryTypeId": "24", "PostId": "68446328", "RevisionGUID": "76d8f9f1-3039-4a93-853b-694421ac9701", "CreationDate": "2021-08-04T06:09:03.970", "Comment": "Proposed by 15886810 approved by 4182398, 303696 edit id of 5209923", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "68447518", "PostTypeId": "2", "ParentId": "68446328", "CreationDate": "2021-07-19T22:08:08.293", "Score": "0", "Body": "<p>This to me looks like you have hit some subscription limitations.  If you try create the same ASE via the Azure Portal does it provision for you? It will be good to know  if you get an error trying to do the same thing via UI, if you did hit the same error in the GUI it will give you a better error message.</p>\n", "OwnerUserId": "441914", "LastActivityDate": "2021-07-19T22:08:08.293", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "250535843", "PostHistoryTypeId": "2", "PostId": "68447518", "RevisionGUID": "8b1e73d7-0404-4b23-8197-9e4c94039adf", "CreationDate": "2021-07-19T22:08:08.293", "UserId": "441914", "Text": "This to me looks like you have hit some subscription limitations.  If you try create the same ASE via the Azure Portal does it provision for you? It will be good to know  if you get an error trying to do the same thing via UI, if you did hit the same error in the GUI it will give you a better error message.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "Environment: azure cli (2.26.1) terraform (0.14.11) hashicorp/azurerm provider (2.67.0) ", "keywords": ["provider"]}, {"source": "Body", "text": "Details I am creating multiple environments for my project: dev, test, and staging. ", "keywords": ["test"]}, {"source": "Body", "text": "The intended lifecycle is for infrastructure changes to be deployed to dev, then test, then staging (and eventually a prod environment in a separate subscription). ", "keywords": ["change", "test"]}, {"source": "Body", "text": "Attempts to deploy to test, or to deploy a different ASE to dev, fail abjectly with very little feedback. ", "keywords": ["test"]}, {"source": "Body", "text": "I have attempted to create a second ASE in test using the same terraform code. ", "keywords": ["test"]}, {"source": "Body", "text": "I have also tried creating a v3 ASE in dev (because the v3 will be cheaper). ", "keywords": ["cheap"]}, {"source": "Body", "text": "If the v3 ASE deploys successfully I will cut over to it in dev and will use it as the basis for test and stage instead of the v1 ASE. ", "keywords": ["test"]}]}