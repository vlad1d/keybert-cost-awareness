{"Id": "63401480", "PostTypeId": "1", "AcceptedAnswerId": "63407115", "CreationDate": "2020-08-13T18:50:38.510", "Score": "9", "ViewCount": "11760", "Body": "<p>I need to create a VM instance in <code>gcp</code> with a public IP (instance can randomly pick one for itself) without explicitly defining a one.</p>\n<p>So how can I do this?</p>\n<p>This is the <code>gcloud</code> command that I can use to achieve this (create a vm instance with automatically assigned public ip)</p>\n<pre><code>gcloud compute instances create controller-1 \\\n    --async \\\n    --boot-disk-size 200GB \\\n    --can-ip-forward \\\n    --image-family ubuntu-2004-lts \\\n    --image-project ubuntu-os-cloud \\\n    --machine-type e2-standard-2 \\\n    --private-network-ip 10.240.0.10 \\\n    --scopes compute-rw,storage-ro,service-management,service-control,logging-write,monitoring \\\n    --subnet kubernetes \\\n    --tags kubernetes-the-hard-way,controller\n</code></pre>\n<p>Above command will create a vm with both internal IP <code>10.240.0.10</code> and a Public ip with some randomly picked ip address.</p>\n<p>So I want to achieve the same goal with <code>terraform</code></p>\n<p>This is my <code>terraform</code> code. but how can I do this?</p>\n<pre><code>resource &quot;google_compute_instance&quot; &quot;controllers&quot; {\n  name         = &quot;controller-0&quot;\n  machine_type = &quot;e2-standard-2&quot;\n  zone         = var.zone\n\n  can_ip_forward = true\n\n\n\n  tags = [&quot;kubernetes-the-hard-way&quot;, &quot;controller&quot;]\n  \n\n  boot_disk {\n    initialize_params {\n      image = &quot;ubuntu-2004-focal-v20200720&quot;\n    }\n  }\n\n  network_interface {\n    subnetwork = google_compute_subnetwork.kubernetes.name\n    network_ip = &quot;10.240.0.10&quot;  // private ip but how to assign a public ip (randomly)  \n  }\n\n  service_account {\n    scopes = [&quot;compute-rw&quot;, &quot;storage-ro&quot;, &quot;service-management&quot;, &quot;service-control&quot;, &quot;logging-write&quot;, &quot;monitoring&quot;]\n  }\n}\n</code></pre>\n", "OwnerUserId": "7084115", "LastActivityDate": "2021-05-12T02:59:33.970", "Title": "How to create GCP instance with public IP with terraform", "Tags": "<google-cloud-platform><terraform>", "AnswerCount": "2", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "228724631", "PostHistoryTypeId": "2", "PostId": "63401480", "RevisionGUID": "1aaf4fab-a625-43e1-a16c-9385f409f8ed", "CreationDate": "2020-08-13T18:50:38.510", "UserId": "7084115", "Text": "I need to create a VM instance in `gcp` with a public IP (instance can randomly pick one for itself) without explicitly defining a one.\r\n\r\nSo how can I do this?\r\n\r\nThis is the `gcloud` command that I can use to achieve this (create a vm instance with automatically assigned public ip)\r\n\r\n```\r\ngcloud compute instances create controller-1 \\\r\n    --async \\\r\n    --boot-disk-size 200GB \\\r\n    --can-ip-forward \\\r\n    --image-family ubuntu-2004-lts \\\r\n    --image-project ubuntu-os-cloud \\\r\n    --machine-type e2-standard-2 \\\r\n    --private-network-ip 10.240.0.10 \\\r\n    --scopes compute-rw,storage-ro,service-management,service-control,logging-write,monitoring \\\r\n    --subnet kubernetes \\\r\n    --tags kubernetes-the-hard-way,controller\r\n```\r\n\r\nAbove command will create a vm with both internal IP `10.240.0.10` and a Public ip with some randomly picked ip address.\r\n\r\nSo I want to achieve the same goal with `terraform`\r\n\r\nThis is my `terraform` code. but how can I do this?\r\n\r\n```\r\nresource \"google_compute_instance\" \"controllers\" {\r\n  name         = \"controller-0\"\r\n  machine_type = \"e2-standard-2\"\r\n  zone         = var.zone\r\n\r\n  can_ip_forward = true\r\n\r\n\r\n\r\n  tags = [\"kubernetes-the-hard-way\", \"controller\"]\r\n  \r\n\r\n  boot_disk {\r\n    initialize_params {\r\n      image = \"ubuntu-2004-focal-v20200720\"\r\n    }\r\n  }\r\n\r\n  network_interface {\r\n    subnetwork = google_compute_subnetwork.kubernetes.name\r\n    network_ip = \"10.240.0.10\"  // private ip but how to assign a public ip (randomly)  \r\n  }\r\n\r\n  service_account {\r\n    scopes = [\"compute-rw\", \"storage-ro\", \"service-management\", \"service-control\", \"logging-write\", \"monitoring\"]\r\n  }\r\n}\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I need to create a VM instance in `gcp` with a public IP (instance can randomly pick one for itself) without explicitly defining a one. ", "keywords": ["instance"]}, {"source": "Text", "text": "This is the `gcloud` command that I can use to achieve this (create a vm instance with automatically assigned public ip) ``` gcloud compute instances create controller-1 \\ --async \\ --boot-disk-size 200GB \\ --can-ip-forward \\ --image-family ubuntu-2004-lts \\ --image-project ubuntu-os-cloud \\ --machine-type e2-standard-2 \\ --private-network-ip 10.240.0.10 \\ --scopes compute-rw,storage-ro,service-management,service-control,logging-write,monitoring \\ --subnet kubernetes \\ --tags kubernetes-the-hard-way,controller ``` ", "keywords": ["instance", "storage"]}, {"source": "Text", "text": "This is my `terraform` code. but how can I do this? ``` resource \"google_compute_instance\" \"controllers\" { name = \"controller-0\" machine_type = \"e2-standard-2\" zone = var.zone can_ip_forward = true tags = [\"kubernetes-the-hard-way\", \"controller\"] boot_disk { initialize_params { image = \"ubuntu-2004-focal-v20200720\" } } network_interface { subnetwork = google_compute_subnetwork.kubernetes.name network_ip = \"10.240.0.10\" // private ip but how to assign a public ip (randomly) } service_account { scopes = [\"compute-rw\", \"storage-ro\", \"service-management\", \"service-control\", \"logging-write\", \"monitoring\"] } ", "keywords": ["storage"]}]}, {"Id": "228724632", "PostHistoryTypeId": "1", "PostId": "63401480", "RevisionGUID": "1aaf4fab-a625-43e1-a16c-9385f409f8ed", "CreationDate": "2020-08-13T18:50:38.510", "UserId": "7084115", "Text": "How to create GCP instance with public IP with terraform", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "How to create GCP instance with public IP with terraform", "keywords": ["instance"]}]}, {"Id": "228724633", "PostHistoryTypeId": "3", "PostId": "63401480", "RevisionGUID": "1aaf4fab-a625-43e1-a16c-9385f409f8ed", "CreationDate": "2020-08-13T18:50:38.510", "UserId": "7084115", "Text": "<google-cloud-platform><terraform>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "63406248", "PostTypeId": "2", "ParentId": "63401480", "CreationDate": "2020-08-14T03:49:44.560", "Score": "8", "Body": "<p>Looks like you need to specify &quot;access_config&quot; under &quot;network_interface&quot; to assign external(public) IP to GCE instance according to <a href=\"https://www.terraform.io/docs/providers/google/r/compute_address.html#example-usage-instance-with-ip\" rel=\"noreferrer\">this example</a> from terraform.</p>\n<pre><code>resource &quot;google_compute_address&quot; &quot;static&quot; {\n  name = &quot;ipv4-address&quot;\n}\n\ndata &quot;google_compute_image&quot; &quot;debian_image&quot; {\n  family  = &quot;debian-9&quot;\n  project = &quot;debian-cloud&quot;\n}\n\nresource &quot;google_compute_instance&quot; &quot;instance_with_ip&quot; {\n  name         = &quot;vm-instance&quot;\n  machine_type = &quot;f1-micro&quot;\n  zone         = &quot;us-central1-a&quot;\n\n  boot_disk {\n    initialize_params {\n      image = data.google_compute_image.debian_image.self_link\n    }\n  }\n\n  network_interface {\n    network = &quot;default&quot;\n    access_config {\n      nat_ip = google_compute_address.static.address\n    }\n  }\n}\n</code></pre>\n<p>Google Cloud Platform's Compute Engine Supports two types of <a href=\"https://cloud.google.com/compute/docs/ip-addresses/#externaladdresses\" rel=\"noreferrer\">external IP addresses</a>:</p>\n<p><a href=\"https://cloud.google.com/compute/docs/ip-addresses/#reservedaddress\" rel=\"noreferrer\">Static external IP addresses</a></p>\n<p><a href=\"https://cloud.google.com/compute/docs/ip-addresses/#ephemeraladdress\" rel=\"noreferrer\">Ephemeral external IP addresses</a></p>\n", "OwnerUserId": "12264562", "LastEditorUserId": "2235165", "LastEditDate": "2021-05-12T02:59:33.970", "LastActivityDate": "2021-05-12T02:59:33.970", "CommentCount": "3", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "119287948", "PostId": "63406248", "Score": "0", "Text": "... a screenshot?", "CreationDate": "2021-05-11T14:40:01.120", "UserId": "2235165", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "120666976", "PostId": "63406248", "Score": "0", "Text": "It's worth noting that you do pay for a static IP address, around $7.20 a month last I checked.  The ephemeral option is free.", "CreationDate": "2021-07-06T18:13:03.820", "UserId": "13383986", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "It's worth noting that you do pay for a static IP address, around $7.20 a month last I checked. ", "keywords": ["pay"]}]}, {"Id": "127331312", "PostId": "63406248", "Score": "0", "Text": "How to assign `nat_ip` already reserved IP by the name of that address resource in GCP?", "CreationDate": "2022-04-29T20:15:00.813", "UserId": "1090360", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "228744881", "PostHistoryTypeId": "2", "PostId": "63406248", "RevisionGUID": "f092ce6c-3606-49e7-89eb-a76ccbc09541", "CreationDate": "2020-08-14T03:49:44.560", "UserId": "12264562", "Text": "Looks like you need to specify \"access_config\" under \"network_interface\" to assign external(public) IP to GCE instance according to [this example][1] from terraform.\r\n\r\n[![enter image description here][2]][2]\r\n\r\nGoogle Cloud Platform's Compute Engine Supports two types of [external IP addresses][3]:\r\n\r\n[Static external IP addresses][4]\r\n\r\n[Ephemeral external IP addresses][5]\r\n\r\n\r\n  [1]: https://www.terraform.io/docs/providers/google/r/compute_address.html#example-usage-instance-with-ip\r\n  [2]: https://i.stack.imgur.com/QHdc6.png\r\n  [3]: https://cloud.google.com/compute/docs/ip-addresses/#externaladdresses\r\n  [4]: https://cloud.google.com/compute/docs/ip-addresses/#reservedaddress\r\n  [5]: https://cloud.google.com/compute/docs/ip-addresses/#ephemeraladdress", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Looks like you need to specify \"access_config\" under \"network_interface\" to assign external(public) IP to GCE instance according to [this example][1] from terraform. [![enter image description here][2]][2] Google Cloud Platform's Compute Engine Supports two types of [external IP addresses][3]: [Static external IP addresses][4] [Ephemeral external IP addresses][5] [1]: https://www.terraform.io/docs/providers/google/r/compute_address.html#example-usage-instance-with-ip [2]: https://i.stack.imgur.com/QHdc6.png [3]: https://cloud.google.com/compute/docs/ip-addresses/#externaladdresses [4]: https://cloud.google.com/compute/docs/ip-addresses/#reservedaddress [5]: https://cloud.google.com/compute/docs/ip-addresses/#ephemeraladdress", "keywords": ["instance"]}]}, {"Id": "246422247", "PostHistoryTypeId": "5", "PostId": "63406248", "RevisionGUID": "76c7d7e7-569a-41eb-a4b1-4510f9f9e284", "CreationDate": "2021-05-12T02:59:33.970", "UserId": "2235165", "Comment": "replace screemshot with copyable content", "Text": "Looks like you need to specify \"access_config\" under \"network_interface\" to assign external(public) IP to GCE instance according to [this example][1] from terraform.\r\n\r\n```terraform\r\nresource \"google_compute_address\" \"static\" {\r\n  name = \"ipv4-address\"\r\n}\r\n\r\ndata \"google_compute_image\" \"debian_image\" {\r\n  family  = \"debian-9\"\r\n  project = \"debian-cloud\"\r\n}\r\n\r\nresource \"google_compute_instance\" \"instance_with_ip\" {\r\n  name         = \"vm-instance\"\r\n  machine_type = \"f1-micro\"\r\n  zone         = \"us-central1-a\"\r\n\r\n  boot_disk {\r\n    initialize_params {\r\n      image = data.google_compute_image.debian_image.self_link\r\n    }\r\n  }\r\n\r\n  network_interface {\r\n    network = \"default\"\r\n    access_config {\r\n      nat_ip = google_compute_address.static.address\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nGoogle Cloud Platform's Compute Engine Supports two types of [external IP addresses][3]:\r\n\r\n[Static external IP addresses][4]\r\n\r\n[Ephemeral external IP addresses][5]\r\n\r\n\r\n  [1]: https://www.terraform.io/docs/providers/google/r/compute_address.html#example-usage-instance-with-ip\r\n  [2]: https://i.stack.imgur.com/QHdc6.png\r\n  [3]: https://cloud.google.com/compute/docs/ip-addresses/#externaladdresses\r\n  [4]: https://cloud.google.com/compute/docs/ip-addresses/#reservedaddress\r\n  [5]: https://cloud.google.com/compute/docs/ip-addresses/#ephemeraladdress", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Looks like you need to specify \"access_config\" under \"network_interface\" to assign external(public) IP to GCE instance according to [this example][1] from terraform. ```terraform resource \"google_compute_address\" \"static\" { name = \"ipv4-address\" } data \"google_compute_image\" \"debian_image\" { family = \"debian-9\" project = \"debian-cloud\" } resource \"google_compute_instance\" \"instance_with_ip\" { name = \"vm-instance\" machine_type = \"f1-micro\" zone = \"us-central1-a\" boot_disk { initialize_params { image = data.google_compute_image.debian_image.self_link } } network_interface { network = \"default\" access_config { nat_ip = google_compute_address.static.address } } } ``` Google Cloud Platform's Compute Engine Supports two types of [external IP addresses][3]: [Static external IP addresses][4] [Ephemeral external IP addresses][5] [1]: https://www.terraform.io/docs/providers/google/r/compute_address.html#example-usage-instance-with-ip [2]: https://i.stack.imgur.com/QHdc6.png [3]: https://cloud.google.com/compute/docs/ip-addresses/#externaladdresses [4]: https://cloud.google.com/compute/docs/ip-addresses/#reservedaddress [5]: https://cloud.google.com/compute/docs/ip-addresses/#ephemeraladdress", "keywords": ["instance"]}]}, {"Id": "246422248", "PostHistoryTypeId": "24", "PostId": "63406248", "RevisionGUID": "76c7d7e7-569a-41eb-a4b1-4510f9f9e284", "CreationDate": "2021-05-12T02:59:33.970", "Comment": "Proposed by 2235165 approved by 3681607, 6463558 edit id of 5153531", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": [{"source": "Body", "text": "Looks like you need to specify \"access_config\" under \"network_interface\" to assign external(public) IP to GCE instance according to this example from terraform. ", "keywords": ["instance"]}]}, {"Id": "63407115", "PostTypeId": "2", "ParentId": "63401480", "CreationDate": "2020-08-14T05:32:46.303", "Score": "16", "Body": "<p>An empty access_config block would assign an external ephemeral IP to your instance.</p>\n<pre><code>network_interface {\n    network = &quot;default&quot;\n    access_config {}\n}\n</code></pre>\n", "OwnerUserId": "13886776", "LastActivityDate": "2020-08-14T05:32:46.303", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "228748440", "PostHistoryTypeId": "2", "PostId": "63407115", "RevisionGUID": "f974cc1f-f5af-4d83-bde4-6b4ce8d6cd67", "CreationDate": "2020-08-14T05:32:46.303", "UserId": "13886776", "Text": "An empty access_config block would assign an external ephemeral IP to your instance.\r\n\r\n```\r\nnetwork_interface {\r\n    network = \"default\"\r\n    access_config {}\r\n}\r\n```\r\n\r\n    ", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "An empty access_config block would assign an external ephemeral IP to your instance. ", "keywords": ["instance"]}]}], "filtered-sentences": [{"source": "Body", "text": "An empty access_config block would assign an external ephemeral IP to your instance.", "keywords": ["instance"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Title", "text": "How to create GCP instance with public IP with terraform", "keywords": ["instance"]}, {"source": "Body", "text": "I need to create a VM instance in gcp with a public IP (instance can randomly pick one for itself) without explicitly defining a one. ", "keywords": ["instance"]}, {"source": "Body", "text": "This is the gcloud command that I can use to achieve this (create a vm instance with automatically assigned public ip) Above command will create a vm with both internal IP 10.240.0.10 and a Public ip with some randomly picked ip address. ", "keywords": ["instance"]}]}