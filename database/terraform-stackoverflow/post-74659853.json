{"Id": "74659853", "PostTypeId": "1", "AcceptedAnswerId": "74754637", "CreationDate": "2022-12-02T18:09:01.940", "Score": "-1", "ViewCount": "243", "Body": "<p>I've created a Route 53 DNS using Terraform and assigned a certificate with ACM.. although when trying to verify the code is stuck in a loop <code>aws_acm_certificate_validation.verify: Still creating... [27m31s elapsed]</code></p>\n<h1>main.tf</h1>\n<pre><code># ACM Certificate \nresource &quot;aws_acm_certificate&quot; &quot;ssl&quot; {\n  domain_name       = &quot;modules.cclab.cloud-castles.com&quot;\n  validation_method = &quot;DNS&quot;\n\n  tags = {\n    Environment = &quot;test&quot;\n  }\n\n  lifecycle {\n    create_before_destroy = true\n  }\n}\n\n# Route53 Zone\nresource &quot;aws_route53_zone&quot; &quot;selected&quot; {\n  name = &quot;modules.cclab.cloud-castles.com&quot;\n}\n\ndata &quot;aws_route53_zone&quot; &quot;selected&quot; {\n  private_zone = false\n  vpc_id       = aws_vpc.main.id\n  zone_id      = aws_route53_zone.selected.zone_id\n}\n\n# Route53 Record\nresource &quot;aws_route53_record&quot; &quot;www&quot; {\n  for_each = {\n    for dvo in aws_acm_certificate.ssl.domain_validation_options : dvo.domain_name =&gt; {\n      name   = dvo.resource_record_name\n      record = dvo.resource_record_value\n      type   = dvo.resource_record_type\n    }\n  }\n\n  allow_overwrite = true\n  name            = each.value.name\n  records         = [each.value.record]\n  ttl             = 60\n  type            = each.value.type\n  zone_id         = data.aws_route53_zone.selected.zone_id\n}\n\n# ACM Validation\nresource &quot;aws_acm_certificate_validation&quot; &quot;verify&quot; {\n  certificate_arn         = aws_acm_certificate.ssl.arn\n  validation_record_fqdns = [for record in aws_route53_record.www : record.fqdn]\n}\n\n# ALB Listener\nresource &quot;aws_lb_listener&quot; &quot;alb-listener&quot; {\n  load_balancer_arn = aws_lb.alb.arn\n  port              = &quot;80&quot;\n  protocol          = &quot;HTTP&quot;\n  ssl_policy        = &quot;ELBSecurityPolicy-2016-08&quot;\n  certificate_arn   = aws_acm_certificate_validation.verify.certificate_arn\n\n  default_action {\n    type             = &quot;forward&quot;\n    target_group_arn = aws_lb_target_group.alb-target.arn\n  }\n}\n</code></pre>\n<p>I verified there's a hosted zone using the aws cli</p>\n<p>aws route53 get-hosted-zone --id Z03171471QBEVDH2KPJ6W</p>\n<pre><code>{\n    &quot;HostedZone&quot;: {\n        &quot;Id&quot;: &quot;/hostedzone/Z03171471QBEVDH2KPJ6W&quot;,\n        &quot;Name&quot;: &quot;modules.cclab.cloud-castles.com.&quot;,\n        &quot;CallerReference&quot;: &quot;terraform-20221202175826093600000001&quot;,\n        &quot;Config&quot;: {\n            &quot;Comment&quot;: &quot;Managed by Terraform&quot;,\n            &quot;PrivateZone&quot;: false\n        },\n    },\n    &quot;DelegationSet&quot;: {\n        &quot;NameServers&quot;: [\n            &quot;ns-566.awsdns-06.net&quot;,\n            &quot;ns-1336.awsdns-39.org&quot;,\n            &quot;ns-212.awsdns-26.com&quot;,\n            &quot;ns-1559.awsdns-02.co.uk&quot;\n        ]\n    }\n}\n</code></pre>\n<p>aws route53 list-resource-record-sets --hosted-zone-id Z03171471QBEVDH2KPJ6W</p>\n<pre><code>aws route53 list-resource-record-sets --hosted-zone-id Z03171471QBEVDH2KPJ6W\n{\n    &quot;ResourceRecordSets&quot;: [\n        {\n            &quot;Name&quot;: &quot;modules.cclab.cloud-castles.com.&quot;,\n            &quot;Type&quot;: &quot;NS&quot;,\n            &quot;TTL&quot;: 172800,\n            &quot;ResourceRecords&quot;: [\n                {\n                    &quot;Value&quot;: &quot;ns-566.awsdns-06.net.&quot;\n                },\n                {\n                    &quot;Value&quot;: &quot;ns-1336.awsdns-39.org.&quot;\n                },\n                {\n                    &quot;Value&quot;: &quot;ns-212.awsdns-26.com.&quot;\n                },\n                {\n                    &quot;Value&quot;: &quot;ns-1559.awsdns-02.co.uk.&quot;\n                }\n            ]\n        },\n        {\n            &quot;Name&quot;: &quot;modules.cclab.cloud-castles.com.&quot;,\n</code></pre>\n<p>Following this documentation <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/acm_certificate_validation\" rel=\"nofollow noreferrer\">this documentation</a> with a slight change, It didnt work when I tried to provide only an aws_route53_zone of data type so I added a resource and pointed the data to it.</p>\n<p>I literally tried everything in the extent of my knowledge and in need of help. I stumbled upon other posts on stackoverflow with the same problem but none had a proper anwser.</p>\n", "OwnerUserId": "19346208", "LastEditorUserId": "19346208", "LastEditDate": "2022-12-02T18:26:21.517", "LastActivityDate": "2022-12-10T16:21:46.233", "Title": "Terraform ACM doesn't validate Route 53 DNS", "Tags": "<terraform>", "AnswerCount": "1", "CommentCount": "6", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "131779841", "PostId": "74659853", "Score": "1", "Text": "There's absolutely no reason to have both the `data` and `resource` for the Route53 zone in your Terraform code. Delete the `data` and just use the `resource`. The reason your SSL certificate isn't validating is most likely because you just created a public zone in Route53 without actually doing the part at your Domain Registrar to configure that Route53 zone as the authoritative DNS server for that domain or subdomain. If the domain validation record doesn't show up here: https://dnschecker.org/ then Amazon's ACM service won't be able to find it either.", "CreationDate": "2022-12-02T18:16:06.713", "UserId": "13070", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "The reason your SSL certificate isn't validating is most likely because you just created a public zone in Route53 without actually doing the part at your Domain Registrar to configure that Route53 zone as the authoritative DNS server for that domain or subdomain. ", "keywords": ["domain"]}, {"source": "Text", "text": "If the domain validation record doesn't show up here: https://dnschecker.org/ then Amazon's ACM service won't be able to find it either.", "keywords": ["domain"]}]}, {"Id": "131780202", "PostId": "74659853", "Score": "0", "Text": "I've actually tried to verify our other domain `cclab.cloud-castles.com` which does show on the website when you look it up.. still no avail", "CreationDate": "2022-12-02T18:34:00.083", "UserId": "19346208", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I've actually tried to verify our other domain `cclab.cloud-castles.com` ", "keywords": ["domain"]}]}, {"Id": "131780245", "PostId": "74659853", "Score": "0", "Text": "The DNS record that ACM tells you to create, shows up when you check it at dnscheker.org, but ACM still fails to valid the certificate?", "CreationDate": "2022-12-02T18:36:05.233", "UserId": "13070", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "131780271", "PostId": "74659853", "Score": "0", "Text": "I was under the assumption that Route 53 creates the DNS record and the acm_certificate just creates the certificate.. while validation validates it against the DNS", "CreationDate": "2022-12-02T18:37:43.233", "UserId": "19346208", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "131780578", "PostId": "74659853", "Score": "1", "Text": "ACM validates that you actually own the domain name you are trying to create an SSL certificate for. It doesn't work if you setup a Route53 zone that isn't wired up to your domain registrar. Anyone could create any domain in Route53, but you have to wire it up to your domain registrar so it actually resolves on the Internet before ACM will allow you to create a certificate for that domain.", "CreationDate": "2022-12-02T18:57:22.923", "UserId": "13070", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "ACM validates that you actually own the domain name you are trying to create an SSL certificate for. ", "keywords": ["domain"]}, {"source": "Text", "text": "It doesn't work if you setup a Route53 zone that isn't wired up to your domain registrar. ", "keywords": ["domain"]}, {"source": "Text", "text": "Anyone could create any domain in Route53, but you have to wire it up to your domain registrar so it actually resolves on the Internet before ACM will allow you to create a certificate for that domain.", "keywords": ["domain"]}]}, {"Id": "131780634", "PostId": "74659853", "Score": "0", "Text": "I get your point thanks, I will have to wait with it those are quite expensive and I would like to make sure with my senior :)", "CreationDate": "2022-12-02T18:59:58.473", "UserId": "19346208", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I get your point thanks, I will have to wait with it those are quite expensive and I would like to make sure with my senior :)", "keywords": ["expense"]}]}], "history": [{"Id": "283486412", "PostHistoryTypeId": "2", "PostId": "74659853", "RevisionGUID": "91b07fa5-bb35-442c-a599-b8f8a137fc9e", "CreationDate": "2022-12-02T18:09:01.940", "UserId": "19346208", "Text": "I've created a Route 53 DNS using Terraform and assigned a certificate with ACM.. although when trying to verify the code is stuck in a loop `aws_acm_certificate_validation.verify: Still creating... [27m31s elapsed]`\r\n\r\n# main.tf\r\n```\r\n# ACM Certificate \r\nresource \"aws_acm_certificate\" \"ssl\" {\r\n  domain_name       = \"modules.cclab.cloud-castles.com\"\r\n  validation_method = \"DNS\"\r\n\r\n  tags = {\r\n    Environment = \"test\"\r\n  }\r\n\r\n  lifecycle {\r\n    create_before_destroy = true\r\n  }\r\n}\r\n\r\n# Route53 Zone\r\nresource \"aws_route53_zone\" \"selected\" {\r\n  name = \"modules.cclab.cloud-castles.com\"\r\n}\r\n\r\ndata \"aws_route53_zone\" \"selected\" {\r\n  private_zone = false\r\n  vpc_id       = aws_vpc.main.id\r\n  zone_id      = aws_route53_zone.selected.zone_id\r\n}\r\n\r\n# Route53 Record\r\nresource \"aws_route53_record\" \"www\" {\r\n  for_each = {\r\n    for dvo in aws_acm_certificate.ssl.domain_validation_options : dvo.domain_name => {\r\n      name   = dvo.resource_record_name\r\n      record = dvo.resource_record_value\r\n      type   = dvo.resource_record_type\r\n    }\r\n  }\r\n\r\n  allow_overwrite = true\r\n  name            = each.value.name\r\n  records         = [each.value.record]\r\n  ttl             = 60\r\n  type            = each.value.type\r\n  zone_id         = data.aws_route53_zone.selected.zone_id\r\n}\r\n\r\n# ACM Validation\r\nresource \"aws_acm_certificate_validation\" \"verify\" {\r\n  certificate_arn         = aws_acm_certificate.ssl.arn\r\n  validation_record_fqdns = [for record in aws_route53_record.www : record.fqdn]\r\n}\r\n\r\n# ALB Listener\r\nresource \"aws_lb_listener\" \"alb-listener\" {\r\n  load_balancer_arn = aws_lb.alb.arn\r\n  port              = \"80\"\r\n  protocol          = \"HTTP\"\r\n  ssl_policy        = \"ELBSecurityPolicy-2016-08\"\r\n  certificate_arn   = aws_acm_certificate_validation.verify.certificate_arn\r\n\r\n  default_action {\r\n    type             = \"forward\"\r\n    target_group_arn = aws_lb_target_group.alb-target.arn\r\n  }\r\n}\r\n```\r\n\r\nI've followed [this documentation](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/acm_certificate_validation) with a slight change, It didnt work when I tried to provide only an aws_route53_zone of data type so I added a resource and pointed the data to it.\r\n\r\nI literally tried everything in the extent of my knowledge and in need of help. I stumbled upon other posts on stackoverflow with the same problem but none had a proper anwser.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "although when trying to verify the code is stuck in a loop `aws_acm_certificate_validation.verify: Still creating... [27m31s elapsed]` # main.tf ``` # ACM Certificate resource \"aws_acm_certificate\" \"ssl\" { domain_name = \"modules.cclab.cloud-castles.com\" validation_method = \"DNS\" tags = { Environment = \"test\" } lifecycle { create_before_destroy = true } } # Route53 Zone resource \"aws_route53_zone\" \"selected\" { name = \"modules.cclab.cloud-castles.com\" } data \"aws_route53_zone\" \"selected\" { private_zone = false vpc_id = aws_vpc.main.id zone_id = aws_route53_zone.selected.zone_id } # Route53 Record resource \"aws_route53_record\" \"www\" { for_each = { for dvo in aws_acm_certificate.ssl.domain_validation_options : dvo.domain_name => { name = dvo.resource_record_name record = dvo.resource_record_value type = dvo.resource_record_type } } allow_overwrite = true name = each.value.name records = [each.value.record] ttl = 60 type = each.value.type zone_id = data.aws_route53_zone.selected.zone_id } # ACM Validation resource \"aws_acm_certificate_validation\" \"verify\" { certificate_arn = aws_acm_certificate.ssl.arn validation_record_fqdns = [for record in aws_route53_record.www : record.fqdn] } # ALB Listener resource \"aws_lb_listener\" \"alb-listener\" { load_balancer_arn = aws_lb.alb.arn port = \"80\" protocol = \"HTTP\" ssl_policy = \"ELBSecurityPolicy-2016-08\" certificate_arn = aws_acm_certificate_validation.verify.certificate_arn default_action { type = \"forward\" target_group_arn = aws_lb_target_group.alb-target.arn } } ``` ", "keywords": ["test"]}, {"source": "Text", "text": "I've followed [this documentation](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/acm_certificate_validation) with a slight change, It didnt work when I tried to provide only an aws_route53_zone of data type so I added a resource and pointed the data to it. ", "keywords": ["change"]}]}, {"Id": "283486414", "PostHistoryTypeId": "1", "PostId": "74659853", "RevisionGUID": "91b07fa5-bb35-442c-a599-b8f8a137fc9e", "CreationDate": "2022-12-02T18:09:01.940", "UserId": "19346208", "Text": "Terraform ACM doesn't validate Route 53 DNS", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "283486415", "PostHistoryTypeId": "3", "PostId": "74659853", "RevisionGUID": "91b07fa5-bb35-442c-a599-b8f8a137fc9e", "CreationDate": "2022-12-02T18:09:01.940", "UserId": "19346208", "Text": "<terraform>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "283487372", "PostHistoryTypeId": "5", "PostId": "74659853", "RevisionGUID": "a19fc88c-388d-45a0-ab41-ac6ed2f3a0e4", "CreationDate": "2022-12-02T18:26:21.517", "UserId": "19346208", "Comment": "added 678 characters in body", "Text": "I've created a Route 53 DNS using Terraform and assigned a certificate with ACM.. although when trying to verify the code is stuck in a loop `aws_acm_certificate_validation.verify: Still creating... [27m31s elapsed]`\r\n\r\n# main.tf\r\n```\r\n# ACM Certificate \r\nresource \"aws_acm_certificate\" \"ssl\" {\r\n  domain_name       = \"modules.cclab.cloud-castles.com\"\r\n  validation_method = \"DNS\"\r\n\r\n  tags = {\r\n    Environment = \"test\"\r\n  }\r\n\r\n  lifecycle {\r\n    create_before_destroy = true\r\n  }\r\n}\r\n\r\n# Route53 Zone\r\nresource \"aws_route53_zone\" \"selected\" {\r\n  name = \"modules.cclab.cloud-castles.com\"\r\n}\r\n\r\ndata \"aws_route53_zone\" \"selected\" {\r\n  private_zone = false\r\n  vpc_id       = aws_vpc.main.id\r\n  zone_id      = aws_route53_zone.selected.zone_id\r\n}\r\n\r\n# Route53 Record\r\nresource \"aws_route53_record\" \"www\" {\r\n  for_each = {\r\n    for dvo in aws_acm_certificate.ssl.domain_validation_options : dvo.domain_name => {\r\n      name   = dvo.resource_record_name\r\n      record = dvo.resource_record_value\r\n      type   = dvo.resource_record_type\r\n    }\r\n  }\r\n\r\n  allow_overwrite = true\r\n  name            = each.value.name\r\n  records         = [each.value.record]\r\n  ttl             = 60\r\n  type            = each.value.type\r\n  zone_id         = data.aws_route53_zone.selected.zone_id\r\n}\r\n\r\n# ACM Validation\r\nresource \"aws_acm_certificate_validation\" \"verify\" {\r\n  certificate_arn         = aws_acm_certificate.ssl.arn\r\n  validation_record_fqdns = [for record in aws_route53_record.www : record.fqdn]\r\n}\r\n\r\n# ALB Listener\r\nresource \"aws_lb_listener\" \"alb-listener\" {\r\n  load_balancer_arn = aws_lb.alb.arn\r\n  port              = \"80\"\r\n  protocol          = \"HTTP\"\r\n  ssl_policy        = \"ELBSecurityPolicy-2016-08\"\r\n  certificate_arn   = aws_acm_certificate_validation.verify.certificate_arn\r\n\r\n  default_action {\r\n    type             = \"forward\"\r\n    target_group_arn = aws_lb_target_group.alb-target.arn\r\n  }\r\n}\r\n```\r\n\r\nI verified there's a hosted zone using the aws cli \r\n\r\naws route53 get-hosted-zone --id Z03171471QBEVDH2KPJ6W\r\n```\r\n{\r\n    \"HostedZone\": {\r\n        \"Id\": \"/hostedzone/Z03171471QBEVDH2KPJ6W\",\r\n        \"Name\": \"modules.cclab.cloud-castles.com.\",\r\n        \"CallerReference\": \"terraform-20221202175826093600000001\",\r\n        \"Config\": {\r\n            \"Comment\": \"Managed by Terraform\",\r\n            \"PrivateZone\": false\r\n        },\r\n    },\r\n    \"DelegationSet\": {\r\n        \"NameServers\": [\r\n            \"ns-566.awsdns-06.net\",\r\n            \"ns-1336.awsdns-39.org\",\r\n            \"ns-212.awsdns-26.com\",\r\n            \"ns-1559.awsdns-02.co.uk\"\r\n        ]\r\n    }\r\n}\r\n```\r\n\r\naws route53 list-resource-record-sets --hosted-zone-id Z03171471QBEVDH2KPJ6W\r\n```\r\naws route53 list-resource-record-sets --hosted-zone-id Z03171471QBEVDH2KPJ6W\r\n{\r\n    \"ResourceRecordSets\": [\r\n        {\r\n            \"Name\": \"modules.cclab.cloud-castles.com.\",\r\n            \"Type\": \"NS\",\r\n            \"TTL\": 172800,\r\n            \"ResourceRecords\": [\r\n                {\r\n                    \"Value\": \"ns-566.awsdns-06.net.\"\r\n                },\r\n                {\r\n                    \"Value\": \"ns-1336.awsdns-39.org.\"\r\n                },\r\n                {\r\n                    \"Value\": \"ns-212.awsdns-26.com.\"\r\n                },\r\n                {\r\n                    \"Value\": \"ns-1559.awsdns-02.co.uk.\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"Name\": \"modules.cclab.cloud-castles.com.\",\r\n```\r\nFollowing this documentation [this documentation](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/acm_certificate_validation) with a slight change, It didnt work when I tried to provide only an aws_route53_zone of data type so I added a resource and pointed the data to it.\r\n\r\nI literally tried everything in the extent of my knowledge and in need of help. I stumbled upon other posts on stackoverflow with the same problem but none had a proper anwser.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "although when trying to verify the code is stuck in a loop `aws_acm_certificate_validation.verify: Still creating... [27m31s elapsed]` # main.tf ``` # ACM Certificate resource \"aws_acm_certificate\" \"ssl\" { domain_name = \"modules.cclab.cloud-castles.com\" validation_method = \"DNS\" tags = { Environment = \"test\" } lifecycle { create_before_destroy = true } } # Route53 Zone resource \"aws_route53_zone\" \"selected\" { name = \"modules.cclab.cloud-castles.com\" } data \"aws_route53_zone\" \"selected\" { private_zone = false vpc_id = aws_vpc.main.id zone_id = aws_route53_zone.selected.zone_id } # Route53 Record resource \"aws_route53_record\" \"www\" { for_each = { for dvo in aws_acm_certificate.ssl.domain_validation_options : dvo.domain_name => { name = dvo.resource_record_name record = dvo.resource_record_value type = dvo.resource_record_type } } allow_overwrite = true name = each.value.name records = [each.value.record] ttl = 60 type = each.value.type zone_id = data.aws_route53_zone.selected.zone_id } # ACM Validation resource \"aws_acm_certificate_validation\" \"verify\" { certificate_arn = aws_acm_certificate.ssl.arn validation_record_fqdns = [for record in aws_route53_record.www : record.fqdn] } # ALB Listener resource \"aws_lb_listener\" \"alb-listener\" { load_balancer_arn = aws_lb.alb.arn port = \"80\" protocol = \"HTTP\" ssl_policy = \"ELBSecurityPolicy-2016-08\" certificate_arn = aws_acm_certificate_validation.verify.certificate_arn default_action { type = \"forward\" target_group_arn = aws_lb_target_group.alb-target.arn } } ``` ", "keywords": ["test"]}, {"source": "Text", "text": "} ] }, { \"Name\": \"modules.cclab.cloud-castles.com.\", ``` Following this documentation [this documentation](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/acm_certificate_validation) with a slight change, It didnt work when I tried to provide only an aws_route53_zone of data type so I added a resource and pointed the data to it. ", "keywords": ["change"]}]}], "answers": [{"Id": "74754637", "PostTypeId": "2", "ParentId": "74659853", "CreationDate": "2022-12-10T16:21:46.233", "Score": "0", "Body": "<p>I needed to create an alias for my ALB. only the certificate was issued a record</p>\n<p>the solution was to issue an alias of type 'A' for apex domains (no www header)</p>\n<p>heres a snipet of what worked for me</p>\n<pre><code># Route 53 - Certificate Record\nresource &quot;aws_route53_record&quot; &quot;example&quot; {\n  for_each = {\n    for dvo in aws_acm_certificate.ssl.domain_validation_options : dvo.domain_name =&gt; {\n      name   = dvo.resource_record_name\n      record = dvo.resource_record_value\n      type   = dvo.resource_record_type\n    }\n  }\n\n  allow_overwrite = true\n  name            = each.value.name\n  records         = [each.value.record]\n  ttl             = 60\n  type            = each.value.type\n  zone_id         = data.aws_route53_zone.example.zone_id\n}\n\n# Route 53 - ALB Alias\nresource &quot;aws_route53_record&quot; &quot;alias_route53_record&quot; {\n  zone_id = data.aws_route53_zone.example.zone_id\n  name    = &quot;modules.cclab.cloud-castles.com&quot;\n  type    = &quot;A&quot;\n  alias {\n    name                   = aws_lb.alb.dns_name\n    zone_id                = aws_lb.alb.zone_id\n    evaluate_target_health = true\n  }\n}\n\n</code></pre>\n", "OwnerUserId": "19346208", "LastActivityDate": "2022-12-10T16:21:46.233", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "284023367", "PostHistoryTypeId": "2", "PostId": "74754637", "RevisionGUID": "500cfadf-503f-4aea-9f14-243ac6c71d88", "CreationDate": "2022-12-10T16:21:46.233", "UserId": "19346208", "Text": "I needed to create an alias for my ALB. only the certificate was issued a record \r\n\r\nthe solution was to issue an alias of type 'A' for apex domains (no www header)\r\n\r\nheres a snipet of what worked for me \r\n\r\n\r\n```\r\n# Route 53 - Certificate Record\r\nresource \"aws_route53_record\" \"example\" {\r\n  for_each = {\r\n    for dvo in aws_acm_certificate.ssl.domain_validation_options : dvo.domain_name => {\r\n      name   = dvo.resource_record_name\r\n      record = dvo.resource_record_value\r\n      type   = dvo.resource_record_type\r\n    }\r\n  }\r\n\r\n  allow_overwrite = true\r\n  name            = each.value.name\r\n  records         = [each.value.record]\r\n  ttl             = 60\r\n  type            = each.value.type\r\n  zone_id         = data.aws_route53_zone.example.zone_id\r\n}\r\n\r\n# Route 53 - ALB Alias\r\nresource \"aws_route53_record\" \"alias_route53_record\" {\r\n  zone_id = data.aws_route53_zone.example.zone_id\r\n  name    = \"modules.cclab.cloud-castles.com\"\r\n  type    = \"A\"\r\n  alias {\r\n    name                   = aws_lb.alb.dns_name\r\n    zone_id                = aws_lb.alb.zone_id\r\n    evaluate_target_health = true\r\n  }\r\n}\r\n\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "[27m31s elapsed] main.tf I verified there's a hosted zone using the aws cli aws route53 get-hosted-zone --id Z03171471QBEVDH2KPJ6W aws route53 list-resource-record-sets --hosted-zone-id Z03171471QBEVDH2KPJ6W Following this documentation this documentation with a slight change, It didnt work when I tried to provide only an aws_route53_zone of data type so I added a resource and pointed the data to it. ", "keywords": ["change"]}]}