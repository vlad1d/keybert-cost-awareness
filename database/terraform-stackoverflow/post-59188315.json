{"Id": "59188315", "PostTypeId": "1", "CreationDate": "2019-12-05T04:33:35.183", "Score": "1", "ViewCount": "2040", "Body": "<p>I want to provision my infrastructure with terraform and to have some shared infrastructure. For example, to have 1 shared application gateway and multiple application specific webapps sitting behind it.</p>\n\n<p>Is it possible to provision this with separate terraform projects?</p>\n\n<ol>\n<li>terraform project that would be for a shared infrastructure -  to create an empty/default app gateway. </li>\n<li>other projects that would create a webapp and some extra configuration for that shared app gw - backend_address_pool, probe, backend_http_settings, etc.</li>\n</ol>\n\n<p>Could not find how can you do it in documentation. There is this - <a href=\"https://www.terraform.io/docs/providers/azurerm/r/application_gateway.html\" rel=\"nofollow noreferrer\">application_gateway</a> example where everything is provided in 1 go and then this - <a href=\"https://www.terraform.io/docs/providers/azurerm/r/network_interface_application_gateway_backend_address_pool_association.html\" rel=\"nofollow noreferrer\">network_interface_application_gateway_backend_address_pool_association</a> where you can make a assotiation between app gw and a network interface, but not a webapp.</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>To expand a bit on what I want to achieve - the application gateway will be one application gateway for the whole non-prod environment (hence \"shared\") and it is there to save the cost. Behind it I want to configure multiple applications for multiple environments, for example, \"Accounts.DEV\", \"Accounts.UAT\", \"Calculator.Dev\", etc. Hope this makes my intentions a bit clearer.</p>\n\n<p>For now I am trying to create empty Application gateway in the shared project (with a default pool, front-end config and rules). And then, after each application deployment to run some extra <code>az cli</code> logic (<a href=\"https://learn.microsoft.com/en-us/cli/azure/network/application-gateway?view=azure-cli-latest\" rel=\"nofollow noreferrer\">documentation</a>).</p>\n", "OwnerUserId": "1300049", "LastEditorUserId": "1300049", "LastEditDate": "2019-12-09T23:13:57.747", "LastActivityDate": "2021-03-03T09:25:12.120", "Title": "Is it possible to provision backend address pool separately from application gateway", "Tags": "<azure><terraform><azure-application-gateway>", "AnswerCount": "2", "CommentCount": "0", "FavoriteCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "210581865", "PostHistoryTypeId": "2", "PostId": "59188315", "RevisionGUID": "a0787a76-1198-490e-ab34-0e31cf465655", "CreationDate": "2019-12-05T04:33:35.183", "UserId": "1300049", "Text": "I want to provision my infrastructure with terraform and to have some shared infrastructure.\r\n\r\nFor example, I want to have 1 shared application gateway and multiple application specific webapps sitting behind it.\r\n\r\nIs it possible to provision them in separate terraform projects?\r\n\r\nFirst would be for a shared infrastructure -  to create an empty/default app gateway. Other projects would create a webapp and some extra configuration for that app gw - backend_address_pool, probe, backend_http_settings, etc.\r\n\r\nCould not find how can you do it in documentation. There is this - [application_gateway][1] example where everything is provided in 1 go and then this - [network_interface_application_gateway_backend_address_pool_association][2] where you can make a assotiation between app gw and a network interface, but not a webapp.\r\n\r\n\r\n  [1]: https://www.terraform.io/docs/providers/azurerm/r/application_gateway.html\r\n  [2]: https://www.terraform.io/docs/providers/azurerm/r/network_interface_application_gateway_backend_address_pool_association.html", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "210581866", "PostHistoryTypeId": "1", "PostId": "59188315", "RevisionGUID": "a0787a76-1198-490e-ab34-0e31cf465655", "CreationDate": "2019-12-05T04:33:35.183", "UserId": "1300049", "Text": "Is it possible to provision backend address pool separately from application gateway", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "210581867", "PostHistoryTypeId": "3", "PostId": "59188315", "RevisionGUID": "a0787a76-1198-490e-ab34-0e31cf465655", "CreationDate": "2019-12-05T04:33:35.183", "UserId": "1300049", "Text": "<azure><terraform><azure-application-gateway>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "210582099", "PostHistoryTypeId": "5", "PostId": "59188315", "RevisionGUID": "692330a7-49ec-4ee6-9b92-e3dbb70aa312", "CreationDate": "2019-12-05T04:41:35.877", "UserId": "1300049", "Comment": "added 31 characters in body", "Text": "I want to provision my infrastructure with terraform and to have some shared infrastructure. For example, to have 1 shared application gateway and multiple application specific webapps sitting behind it.\r\n\r\nIs it possible to provision this with separate terraform projects?\r\n\r\n 1. terraform project that would be for a shared infrastructure -  to create an empty/default app gateway. \r\n 2. other projects that would create a webapp and some extra configuration for that shared app gw - backend_address_pool, probe, backend_http_settings, etc.\r\n\r\nCould not find how can you do it in documentation. There is this - [application_gateway][1] example where everything is provided in 1 go and then this - [network_interface_application_gateway_backend_address_pool_association][2] where you can make a assotiation between app gw and a network interface, but not a webapp.\r\n\r\n\r\n  [1]: https://www.terraform.io/docs/providers/azurerm/r/application_gateway.html\r\n  [2]: https://www.terraform.io/docs/providers/azurerm/r/network_interface_application_gateway_backend_address_pool_association.html", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "210883467", "PostHistoryTypeId": "5", "PostId": "59188315", "RevisionGUID": "79dfc039-e9f2-407b-b225-7a80a1cc9373", "CreationDate": "2019-12-09T23:13:57.747", "UserId": "1300049", "Comment": "added 725 characters in body", "Text": "I want to provision my infrastructure with terraform and to have some shared infrastructure. For example, to have 1 shared application gateway and multiple application specific webapps sitting behind it.\r\n\r\nIs it possible to provision this with separate terraform projects?\r\n\r\n 1. terraform project that would be for a shared infrastructure -  to create an empty/default app gateway. \r\n 2. other projects that would create a webapp and some extra configuration for that shared app gw - backend_address_pool, probe, backend_http_settings, etc.\r\n\r\nCould not find how can you do it in documentation. There is this - [application_gateway][1] example where everything is provided in 1 go and then this - [network_interface_application_gateway_backend_address_pool_association][2] where you can make a assotiation between app gw and a network interface, but not a webapp.\r\n\r\n**EDIT**\r\n\r\nTo expand a bit on what I want to achieve - the application gateway will be one application gateway for the whole non-prod environment (hence \"shared\") and it is there to save the cost. Behind it I want to configure multiple applications for multiple environments, for example, \"Accounts.DEV\", \"Accounts.UAT\", \"Calculator.Dev\", etc. Hope this makes my intentions a bit clearer.\r\n\r\nFor now I am trying to create empty Application gateway in the shared project (with a default pool, front-end config and rules). And then, after each application deployment to run some extra `az cli` logic ([documentation][3]).\r\n\r\n\r\n  [1]: https://www.terraform.io/docs/providers/azurerm/r/application_gateway.html\r\n  [2]: https://www.terraform.io/docs/providers/azurerm/r/network_interface_application_gateway_backend_address_pool_association.html\r\n  [3]: https://learn.microsoft.com/en-us/cli/azure/network/application-gateway?view=azure-cli-latest", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "To expand a bit on what I want to achieve - the application gateway will be one application gateway for the whole non-prod environment (hence \"shared\") and it is there to save the cost. ", "keywords": ["cost"]}]}], "answers": [{"Id": "59189602", "PostTypeId": "2", "ParentId": "59188315", "CreationDate": "2019-12-05T06:41:01.320", "Score": "1", "Body": "<p>It is possible to provision the application gateway and web apps separately.</p>\n\n<p>By default, this <a href=\"https://www.terraform.io/docs/providers/azurerm/r/application_gateway.html\" rel=\"nofollow noreferrer\">application_gateway</a> example creates an empty backend pool without any targets with one default HTTP setting, one listener for 80 port, and a basic rule for this backend pool. When you want to associate your backend web apps behind this application gateway, you need to target <a href=\"https://www.terraform.io/docs/providers/azurerm/r/app_service.html#default_site_hostname\" rel=\"nofollow noreferrer\">default_site_hostname</a> of your web app to the backend pool and modify some specific configurations to match your backend web apps.</p>\n\n<p>For example,</p>\n\n<p>In the <a href=\"https://www.terraform.io/docs/providers/azurerm/r/app_service.html\" rel=\"nofollow noreferrer\">azurerm_app_service</a> project, you can add the value of <code>default_site_hostname</code> for an app service at the provision time or use the <a href=\"https://www.terraform.io/docs/providers/azurerm/d/app_service.html\" rel=\"nofollow noreferrer\">data source</a> to access an existing app service.</p>\n\n<pre><code>output \"default_site_hostname\" {\n  value = \"${azurerm_app_service.test.default_site_hostname}\"\n}\n</code></pre>\n\n<p>In the <a href=\"https://www.terraform.io/docs/providers/azurerm/r/application_gateway.html\" rel=\"nofollow noreferrer\">azurerm_application_gateway</a> project, you can add the value of <code>default_site_hostname</code> to the <code>fqdns</code>, then associate the backend pool with them.</p>\n\n<pre><code># since these variables are re-used - a locals block makes this more maintainable\nlocals {\n  backend_address_pool_name      = \"${azurerm_virtual_network.test.name}-beap\"\n  frontend_port_name             = \"${azurerm_virtual_network.test.name}-feport\"\n  frontend_ip_configuration_name = \"${azurerm_virtual_network.test.name}-feip\"\n  http_setting_name              = \"${azurerm_virtual_network.test.name}-be-htst\"\n  listener_name                  = \"${azurerm_virtual_network.test.name}-httplstn\"\n  request_routing_rule_name      = \"${azurerm_virtual_network.test.name}-rqrt\"\n  redirect_configuration_name    = \"${azurerm_virtual_network.test.name}-rdrcfg\"\n  fqdns                          = [\"${azurerm_app_service.test.default_site_hostname}\",\"${data.azurerm_app_service.example.default_site_hostname}\"]\n...\n\n backend_address_pool {\n    name = \"${local.backend_address_pool_name}\"\n    fqdns = \"${local.fqdns}\"\n  } \n</code></pre>\n", "OwnerUserId": "9833314", "LastEditorUserId": "9833314", "LastEditDate": "2019-12-05T06:55:24.760", "LastActivityDate": "2019-12-05T06:55:24.760", "CommentCount": "8", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "104625087", "PostId": "59189602", "Score": "0", "Text": "So your suggestion is to provision webapp first and then app gateway? Thanks, interesting idea!\nMy initial thinking was a bit different (because shared part will have other resources needed fir the webapp, e.g. a vnet, etc) - to provision app gw, then webapp and after that run a couple of ps1 scripts to set up the app gw as needed", "CreationDate": "2019-12-05T21:34:12.943", "UserId": "1300049", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "104630273", "PostId": "59189602", "Score": "0", "Text": "No, I mean you could optionally provision app gateway and web app at the same time. I tried it with using two separate `.tf` files for each project of app gateway and web app.", "CreationDate": "2019-12-06T03:12:15.713", "UserId": "9833314", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "104725132", "PostId": "59189602", "Score": "0", "Text": "Hey Nancy, I do not think that your suggestion will solve my problem. I need to provision app gw separately from the webapp. And just different .tf files wont do it. My plan is to have 1 app gw for non-prod environment and multiple separate apps behind it, so deploying them together is too big of a bang for my taste", "CreationDate": "2019-12-09T23:08:52.113", "UserId": "1300049", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "104726779", "PostId": "59189602", "Score": "0", "Text": "I mean you can either provision app gw separately from the web apps or provision them together. In my example, I think they are not impacting on each other. If you provision app gateway first, you can associate web app fqdns with backend pool later.", "CreationDate": "2019-12-10T01:14:59.480", "UserId": "9833314", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "104728823", "PostId": "59189602", "Score": "0", "Text": "Yep, thats what I am doing now - associating them later, but with az cli. Would prefer to do it with terraform, so all configuration is done in 1 place. Once again, cannot provision them together because they belong to different pipelins. Anyway, thank you very much for your help!", "CreationDate": "2019-12-10T04:02:37.007", "UserId": "1300049", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "104730142", "PostId": "59189602", "Score": "0", "Text": "I think you can do it with terraform. With [Conditional Expressions](https://www.terraform.io/docs/configuration/expressions.html#conditional-expressions), if the web app `fqdns` existence, then associate it with backend pool, else leave `fqdns` empty or null in the `backend_address_pool`. For more Terraform tips & tricks, read [here](https://blog.gruntwork.io/terraform-tips-tricks-loops-if-statements-and-gotchas-f739bbae55f9).", "CreationDate": "2019-12-10T05:27:46.050", "UserId": "9833314", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "104730693", "PostId": "59189602", "Score": "0", "Text": "I think this change will trigger the whole app gw redeployment and therefore delete the previous setup...", "CreationDate": "2019-12-10T05:56:41.660", "UserId": "1300049", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I think this change will trigger the whole app gw redeployment and therefore delete the previous setup...", "keywords": ["change"]}]}, {"Id": "104734764", "PostId": "59189602", "Score": "0", "Text": "I think the `.tfstate` file store the existed infrastructure. If you just edit some configuration, the terraform should just update the respective partition. Anyway, you could have a short test in the non-produce environment.", "CreationDate": "2019-12-10T08:48:15.130", "UserId": "9833314", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Anyway, you could have a short test in the non-produce environment.", "keywords": ["test"]}]}], "history": [{"Id": "210587001", "PostHistoryTypeId": "2", "PostId": "59189602", "RevisionGUID": "7a631019-d57f-4d89-a199-a375d2060d7d", "CreationDate": "2019-12-05T06:41:01.320", "UserId": "9833314", "Text": "It is possible to provision the application gateway and web apps separately.\r\n\r\nBy default, this [application_gateway][1] example creates an empty backend pool without any targets with one default HTTP setting, one listener for 80 port, and a basic rule for this backend pool. When you want to associate your backend web apps behind this application gateway, you just need to target [default_site_hostname][2] of your web app to the backend pool.\r\n\r\nFor example,\r\n\r\nIn the [azurerm_app_service][3] project, you can add the value of `default_site_hostname` for an app service at the provision time or use the [data source][4] to access an existing app service.\r\n\r\n    output \"default_site_hostname\" {\r\n      value = \"${azurerm_app_service.test.default_site_hostname}\"\r\n    }\r\n\r\n  \r\nIn the [azurerm_application_gateway][1] project, you can add the value of `default_site_hostname` to the `fqdns`, then associate the backend pool with them.\r\n\r\n\r\n    # since these variables are re-used - a locals block makes this more maintainable\r\n    locals {\r\n      backend_address_pool_name      = \"${azurerm_virtual_network.test.name}-beap\"\r\n      frontend_port_name             = \"${azurerm_virtual_network.test.name}-feport\"\r\n      frontend_ip_configuration_name = \"${azurerm_virtual_network.test.name}-feip\"\r\n      http_setting_name              = \"${azurerm_virtual_network.test.name}-be-htst\"\r\n      listener_name                  = \"${azurerm_virtual_network.test.name}-httplstn\"\r\n      request_routing_rule_name      = \"${azurerm_virtual_network.test.name}-rqrt\"\r\n      redirect_configuration_name    = \"${azurerm_virtual_network.test.name}-rdrcfg\"\r\n      fqdns                          = [\"${azurerm_app_service.test.default_site_hostname}\",\"${data.azurerm_app_service.example.default_site_hostname}\"]\r\n    ...\r\n    \r\n     backend_address_pool {\r\n        name = \"${local.backend_address_pool_name}\"\r\n        fqdns = \"${local.fqdns}\"\r\n      } \r\n\r\n\r\n  [1]: https://www.terraform.io/docs/providers/azurerm/r/application_gateway.html\r\n  [2]: https://www.terraform.io/docs/providers/azurerm/r/app_service.html#default_site_hostname\r\n  [3]: https://www.terraform.io/docs/providers/azurerm/r/app_service.html\r\n  [4]: https://www.terraform.io/docs/providers/azurerm/d/app_service.html", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "For example, In the [azurerm_app_service][3] project, you can add the value of `default_site_hostname` for an app service at the provision time or use the [data source][4] to access an existing app service. output \"default_site_hostname\" { value = \"${azurerm_app_service.test.default_site_hostname}\" } In the [azurerm_application_gateway][1] project, you can add the value of `default_site_hostname` to the `fqdns`, then associate the backend pool with them. ", "keywords": ["test"]}, {"source": "Text", "text": "# since these variables are re-used - a locals block makes this more maintainable locals { backend_address_pool_name = \"${azurerm_virtual_network.test.name}-beap\" frontend_port_name = \"${azurerm_virtual_network.test.name}-feport\" frontend_ip_configuration_name = \"${azurerm_virtual_network.test.name}-feip\" http_setting_name = \"${azurerm_virtual_network.test.name}-be-htst\" listener_name = \"${azurerm_virtual_network.test.name}-httplstn\" request_routing_rule_name = \"${azurerm_virtual_network.test.name}-rqrt\" redirect_configuration_name = \"${azurerm_virtual_network.test.name}-rdrcfg\" fqdns = [\"${azurerm_app_service.test.default_site_hostname}\",\"${data.azurerm_app_service.example.default_site_hostname}\"] ... backend_address_pool { name = \"${local.backend_address_pool_name}\" fqdns = \"${local.fqdns}\" } [1]: https://www.terraform.io/docs/providers/azurerm/r/application_gateway.html [2]: https://www.terraform.io/docs/providers/azurerm/r/app_service.html#default_site_hostname [3]: https://www.terraform.io/docs/providers/azurerm/r/app_service.html [4]: https://www.terraform.io/docs/providers/azurerm/d/app_service.html", "keywords": ["test"]}]}, {"Id": "210587677", "PostHistoryTypeId": "5", "PostId": "59189602", "RevisionGUID": "0f3a21e1-541d-4042-8984-f68d06af5136", "CreationDate": "2019-12-05T06:55:24.760", "UserId": "9833314", "Comment": "added 66 characters in body", "Text": "It is possible to provision the application gateway and web apps separately.\r\n\r\nBy default, this [application_gateway][1] example creates an empty backend pool without any targets with one default HTTP setting, one listener for 80 port, and a basic rule for this backend pool. When you want to associate your backend web apps behind this application gateway, you need to target [default_site_hostname][2] of your web app to the backend pool and modify some specific configurations to match your backend web apps.\r\n\r\nFor example,\r\n\r\nIn the [azurerm_app_service][3] project, you can add the value of `default_site_hostname` for an app service at the provision time or use the [data source][4] to access an existing app service.\r\n\r\n    output \"default_site_hostname\" {\r\n      value = \"${azurerm_app_service.test.default_site_hostname}\"\r\n    }\r\n\r\n  \r\nIn the [azurerm_application_gateway][1] project, you can add the value of `default_site_hostname` to the `fqdns`, then associate the backend pool with them.\r\n\r\n\r\n    # since these variables are re-used - a locals block makes this more maintainable\r\n    locals {\r\n      backend_address_pool_name      = \"${azurerm_virtual_network.test.name}-beap\"\r\n      frontend_port_name             = \"${azurerm_virtual_network.test.name}-feport\"\r\n      frontend_ip_configuration_name = \"${azurerm_virtual_network.test.name}-feip\"\r\n      http_setting_name              = \"${azurerm_virtual_network.test.name}-be-htst\"\r\n      listener_name                  = \"${azurerm_virtual_network.test.name}-httplstn\"\r\n      request_routing_rule_name      = \"${azurerm_virtual_network.test.name}-rqrt\"\r\n      redirect_configuration_name    = \"${azurerm_virtual_network.test.name}-rdrcfg\"\r\n      fqdns                          = [\"${azurerm_app_service.test.default_site_hostname}\",\"${data.azurerm_app_service.example.default_site_hostname}\"]\r\n    ...\r\n    \r\n     backend_address_pool {\r\n        name = \"${local.backend_address_pool_name}\"\r\n        fqdns = \"${local.fqdns}\"\r\n      } \r\n\r\n\r\n  [1]: https://www.terraform.io/docs/providers/azurerm/r/application_gateway.html\r\n  [2]: https://www.terraform.io/docs/providers/azurerm/r/app_service.html#default_site_hostname\r\n  [3]: https://www.terraform.io/docs/providers/azurerm/r/app_service.html\r\n  [4]: https://www.terraform.io/docs/providers/azurerm/d/app_service.html", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "For example, In the [azurerm_app_service][3] project, you can add the value of `default_site_hostname` for an app service at the provision time or use the [data source][4] to access an existing app service. output \"default_site_hostname\" { value = \"${azurerm_app_service.test.default_site_hostname}\" } In the [azurerm_application_gateway][1] project, you can add the value of `default_site_hostname` to the `fqdns`, then associate the backend pool with them. ", "keywords": ["test"]}, {"source": "Text", "text": "# since these variables are re-used - a locals block makes this more maintainable locals { backend_address_pool_name = \"${azurerm_virtual_network.test.name}-beap\" frontend_port_name = \"${azurerm_virtual_network.test.name}-feport\" frontend_ip_configuration_name = \"${azurerm_virtual_network.test.name}-feip\" http_setting_name = \"${azurerm_virtual_network.test.name}-be-htst\" listener_name = \"${azurerm_virtual_network.test.name}-httplstn\" request_routing_rule_name = \"${azurerm_virtual_network.test.name}-rqrt\" redirect_configuration_name = \"${azurerm_virtual_network.test.name}-rdrcfg\" fqdns = [\"${azurerm_app_service.test.default_site_hostname}\",\"${data.azurerm_app_service.example.default_site_hostname}\"] ... backend_address_pool { name = \"${local.backend_address_pool_name}\" fqdns = \"${local.fqdns}\" } [1]: https://www.terraform.io/docs/providers/azurerm/r/application_gateway.html [2]: https://www.terraform.io/docs/providers/azurerm/r/app_service.html#default_site_hostname [3]: https://www.terraform.io/docs/providers/azurerm/r/app_service.html [4]: https://www.terraform.io/docs/providers/azurerm/d/app_service.html", "keywords": ["test"]}]}], "filtered-sentences": []}, {"Id": "66454162", "PostTypeId": "2", "ParentId": "59188315", "CreationDate": "2021-03-03T09:25:12.120", "Score": "1", "Body": "<p>Currently this is not possible with terraform due the fact that Azure API does not allow creating an App Gateway step by step. If this is an issue for you and would like it to change, please vote for <a href=\"https://feedback.azure.com/forums/217313-networking/suggestions/39634519-allow-creation-of-an-empty-application-gateway\" rel=\"nofollow noreferrer\">this</a> and <a href=\"https://feedback.azure.com/forums/217313-networking/suggestions/39634588-add-rest-apis-and-sdk-to-manage-application-gatewa\" rel=\"nofollow noreferrer\">this</a> feature request.</p>\n<p>Source: <a href=\"https://github.com/terraform-providers/terraform-provider-azurerm/issues/727\" rel=\"nofollow noreferrer\">https://github.com/terraform-providers/terraform-provider-azurerm/issues/727</a></p>\n", "OwnerUserId": "10283011", "LastActivityDate": "2021-03-03T09:25:12.120", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "241912875", "PostHistoryTypeId": "2", "PostId": "66454162", "RevisionGUID": "18ac7b4c-5969-44b3-84e0-4792d80279c8", "CreationDate": "2021-03-03T09:25:12.120", "UserId": "10283011", "Text": "Currently this is not possible with terraform due the fact that Azure API does not allow creating an App Gateway step by step. If this is an issue for you and would like it to change, please vote for [this][1] and [this][2] feature request.\r\n\r\nSource: https://github.com/terraform-providers/terraform-provider-azurerm/issues/727\r\n\r\n  [1]: https://feedback.azure.com/forums/217313-networking/suggestions/39634519-allow-creation-of-an-empty-application-gateway\r\n  [2]: https://feedback.azure.com/forums/217313-networking/suggestions/39634588-add-rest-apis-and-sdk-to-manage-application-gatewa", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "If this is an issue for you and would like it to change, please vote for [this][1] and [this][2] feature request. ", "keywords": ["feature", "change"]}, {"source": "Text", "text": "Source: https://github.com/terraform-providers/terraform-provider-azurerm/issues/727 [1]: https://feedback.azure.com/forums/217313-networking/suggestions/39634519-allow-creation-of-an-empty-application-gateway [2]: https://feedback.azure.com/forums/217313-networking/suggestions/39634588-add-rest-apis-and-sdk-to-manage-application-gatewa", "keywords": ["networking", "provider"]}]}], "filtered-sentences": [{"source": "Body", "text": "If this is an issue for you and would like it to change, please vote for this and this feature request. ", "keywords": ["feature", "change"]}, {"source": "Body", "text": "Source: https://github.com/terraform-providers/terraform-provider-azurerm/issues/727", "keywords": ["provider"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "To expand a bit on what I want to achieve - the application gateway will be one application gateway for the whole non-prod environment (hence \"shared\") and it is there to save the cost. ", "keywords": ["cost"]}]}