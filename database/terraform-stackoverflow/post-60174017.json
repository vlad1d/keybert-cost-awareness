{"Id": "60174017", "PostTypeId": "1", "CreationDate": "2020-02-11T17:05:48.187", "Score": "0", "ViewCount": "2170", "Body": "<p>Sorry if this has been answered.  I have been unable to find someone doing the same thing.  I have a Terraform module that builds an Azure VM.  I have a resource for <code>virtual_machine_extension</code> that runs a Powershell script to do some pre and post build items.  The Powershell script is run from an Azure Blob.  The main output from this script is a text file created.  I am trying to find a way to read that text file and use the contents in Terraform in another resource as a parameter.</p>\n\n<p>I have created a Powershell variable that holds the contents of the file as well but I have the same issue as with the text file.  Not sure how to get the contents out of that variable into a parameter that Terraform can understand.</p>\n\n<p>I am open to whatever way this can be achieved.</p>\n\n<p>Also, I am running TF 12.20.</p>\n\n<p>EDIT: Sorry all.  Let me provide a little more information.  So I Need to get the content on a remote server that is being built with Terraform.  My virtual machine extension runs a powershell script that creates a file locally on the server being built.  I need to take the content from that file and pass it into a null resource.  </p>\n\n<p>So let's say the content of the file on the remote server is \"Testing data\".</p>\n\n<p>I will need to pass that content to a winrm connection.</p>\n\n<pre><code>    resource \"null_resource\" \"chef-client\" {\n      triggers = {\n        build_number = \"${timestamp()}\"\n      }\n      provisioner \"chef\" {\n        connection {\n          type = \"winrm\"\n          user = var.user\n          password = var.password\n          host = var.host\n          cacert = &lt;text content&gt;\n          timeout = \"5m\"\n          port = 5986\n          use_ntlm = false\n          https = true\n          insecure = false\n       }\n     }\n   }\n</code></pre>\n\n<p>Updated the entire connection piece that I am trying to get working.  The server is not part of the domain at this point.  I tried <code>local_file</code> data source but could not auto-auth because it isn't part of the domain.  Been looking at <code>template_file</code> and <code>external</code> data source but not sure if that is the best way if you can somehow pull the result out of powershell for TF to read.</p>\n", "OwnerUserId": "4668193", "LastEditorUserId": "4668193", "LastEditDate": "2020-02-14T14:48:42.813", "LastActivityDate": "2020-02-18T20:50:50.550", "Title": "Read remote file or access Powershell output with Terraform", "Tags": "<powershell><terraform><terraform-provider-azure>", "AnswerCount": "2", "CommentCount": "4", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "106442103", "PostId": "60174017", "Score": "0", "Text": "Do you mean to get the file content as a parameter in terraform locally or remotely?", "CreationDate": "2020-02-12T01:26:02.803", "UserId": "9773937", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "106470002", "PostId": "60174017", "Score": "0", "Text": "Updated the question", "CreationDate": "2020-02-12T18:41:24.740", "UserId": "4668193", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "106516146", "PostId": "60174017", "Score": "0", "Text": "What's the error you got? You also need to provide a complete Terraform file.", "CreationDate": "2020-02-14T03:01:17.717", "UserId": "9773937", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "106532499", "PostId": "60174017", "Score": "0", "Text": "Added some more to the question.  With local file I get an error saying can't find file but I think that is auth related as I am not on the domain.", "CreationDate": "2020-02-14T14:49:52.067", "UserId": "4668193", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "With local file I get an error saying can't find file but I think that is auth related as I am not on the domain.", "keywords": ["domain"]}]}], "history": [{"Id": "214767849", "PostHistoryTypeId": "2", "PostId": "60174017", "RevisionGUID": "ee10863f-10dd-4c43-9ada-63d4dd06e238", "CreationDate": "2020-02-11T17:05:48.187", "UserId": "4668193", "Text": "Sorry if this has been answered.  I have been unable to find someone doing the same thing.  I have a Terraform module that builds an Azure VM.  I have a resource for `virtual_machine_extension` that runs a Powershell script to do some pre and post build items.  The Powershell script is run from an Azure Blob.  The main output from this script is a text file created.  I am trying to find a way to read that text file and use the contents in Terraform in another resource as a parameter.\r\n\r\nI have created a Powershell variable that holds the contents of the file as well but I have the same issue as with the text file.  Not sure how to get the contents out of that variable into a parameter that Terraform can understand.\r\n\r\nI am open to whatever way this can be achieved.\r\n\r\nAlso, I am running TF 12.20.\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "214767850", "PostHistoryTypeId": "1", "PostId": "60174017", "RevisionGUID": "ee10863f-10dd-4c43-9ada-63d4dd06e238", "CreationDate": "2020-02-11T17:05:48.187", "UserId": "4668193", "Text": "Read remote file or access Powershell output with Terraform", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "214767851", "PostHistoryTypeId": "3", "PostId": "60174017", "RevisionGUID": "ee10863f-10dd-4c43-9ada-63d4dd06e238", "CreationDate": "2020-02-11T17:05:48.187", "UserId": "4668193", "Text": "<powershell><terraform><terraform-provider-azure>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "214853382", "PostHistoryTypeId": "5", "PostId": "60174017", "RevisionGUID": "968caf2c-135b-4622-9f1e-3ab85b771669", "CreationDate": "2020-02-12T18:41:03.130", "UserId": "4668193", "Comment": "added 670 characters in body", "Text": "Sorry if this has been answered.  I have been unable to find someone doing the same thing.  I have a Terraform module that builds an Azure VM.  I have a resource for `virtual_machine_extension` that runs a Powershell script to do some pre and post build items.  The Powershell script is run from an Azure Blob.  The main output from this script is a text file created.  I am trying to find a way to read that text file and use the contents in Terraform in another resource as a parameter.\r\n\r\nI have created a Powershell variable that holds the contents of the file as well but I have the same issue as with the text file.  Not sure how to get the contents out of that variable into a parameter that Terraform can understand.\r\n\r\nI am open to whatever way this can be achieved.\r\n\r\nAlso, I am running TF 12.20.\r\n\r\nEDIT: Sorry all.  Let me provide a little more information.  So I Need to get the content on a remote server that is being built with Terraform.  My virtual machine extension runs a powershell script that creates a file locally on the server being built.  I need to take the content from that file and pass it into a null resource.  \r\n\r\nSo let's say the content of the file on the remote server is \"Testing data\".\r\n\r\nI will need to pass that content to a winrm connection.\r\n\r\n    connection {\r\n      type = \"winrm\"\r\n      user = var.user\r\n      password = var.password\r\n      host = var.host\r\n      cacert = <content of file would go here>\r\n\r\nHopefully this helps.\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "So let's say the content of the file on the remote server is \"Testing data\". ", "keywords": ["test"]}]}, {"Id": "214990581", "PostHistoryTypeId": "5", "PostId": "60174017", "RevisionGUID": "77002415-e44d-4378-b72f-a0552ffbae0e", "CreationDate": "2020-02-14T14:48:42.813", "UserId": "4668193", "Comment": "added 741 characters in body", "Text": "Sorry if this has been answered.  I have been unable to find someone doing the same thing.  I have a Terraform module that builds an Azure VM.  I have a resource for `virtual_machine_extension` that runs a Powershell script to do some pre and post build items.  The Powershell script is run from an Azure Blob.  The main output from this script is a text file created.  I am trying to find a way to read that text file and use the contents in Terraform in another resource as a parameter.\r\n\r\nI have created a Powershell variable that holds the contents of the file as well but I have the same issue as with the text file.  Not sure how to get the contents out of that variable into a parameter that Terraform can understand.\r\n\r\nI am open to whatever way this can be achieved.\r\n\r\nAlso, I am running TF 12.20.\r\n\r\nEDIT: Sorry all.  Let me provide a little more information.  So I Need to get the content on a remote server that is being built with Terraform.  My virtual machine extension runs a powershell script that creates a file locally on the server being built.  I need to take the content from that file and pass it into a null resource.  \r\n\r\nSo let's say the content of the file on the remote server is \"Testing data\".\r\n\r\nI will need to pass that content to a winrm connection.\r\n\r\n        resource \"null_resource\" \"chef-client\" {\r\n          triggers = {\r\n            build_number = \"${timestamp()}\"\r\n          }\r\n          provisioner \"chef\" {\r\n            connection {\r\n              type = \"winrm\"\r\n              user = var.user\r\n              password = var.password\r\n              host = var.host\r\n              cacert = <text content>\r\n              timeout = \"5m\"\r\n              port = 5986\r\n              use_ntlm = false\r\n              https = true\r\n              insecure = false\r\n           }\r\n         }\r\n       }\r\n\r\nUpdated the entire connection piece that I am trying to get working.  The server is not part of the domain at this point.  I tried `local_file` data source but could not auto-auth because it isn't part of the domain.  Been looking at `template_file` and `external` data source but not sure if that is the best way if you can somehow pull the result out of powershell for TF to read.\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "So let's say the content of the file on the remote server is \"Testing data\". ", "keywords": ["test"]}, {"source": "Text", "text": "The server is not part of the domain at this point. ", "keywords": ["domain"]}, {"source": "Text", "text": "I tried `local_file` data source but could not auto-auth because it isn't part of the domain. ", "keywords": ["domain"]}]}, {"Id": "214990689", "PostHistoryTypeId": "33", "PostId": "60174017", "RevisionGUID": "25d0f7ac-a266-4c9f-bc9b-88e46fc30fe0", "CreationDate": "2020-02-14T14:50:34.720", "UserId": "4668193", "Comment": "198225", "filtered-sentences": []}, {"Id": "215395435", "PostHistoryTypeId": "34", "PostId": "60174017", "RevisionGUID": "f0820cb6-3efe-4641-9c81-8bb1648270d3", "CreationDate": "2020-02-20T16:20:26.080", "UserId": "4668193", "Comment": "198225", "filtered-sentences": []}], "answers": [{"Id": "60271320", "PostTypeId": "2", "ParentId": "60174017", "CreationDate": "2020-02-17T22:36:23.787", "Score": "0", "Body": "<p>If I'm reading your question correctly, it is within terraform that you wish to read the contents of the file?</p>\n\n<p>Have you looked at the tf file function?\n<a href=\"https://www.terraform.io/docs/configuration/functions/file.html\" rel=\"nofollow noreferrer\">https://www.terraform.io/docs/configuration/functions/file.html</a>\nThis allows you to read the contents of a file into a string within terraform where you can the work with it in whatever way you want.</p>\n\n<p>Something like</p>\n\n<pre><code>locals {\n  my_cert = file (\"\\path\\to\\cert\\certname.crt\")\n}\n    resource \"null_resource\" \"chef-client\" {\n      triggers = {\n        build_number = \"${timestamp()}\"\n      }\n      provisioner \"chef\" {\n        connection {\n          type = \"winrm\"\n          user = var.user\n          password = var.password\n          host = var.host\n          cacert = local.my_cert\n          timeout = \"5m\"\n          port = 5986\n          use_ntlm = false\n          https = true\n          insecure = false\n       }\n     }\n   }\n</code></pre>\n\n<p>Remembering that as it's HCL and windows you need a double backslash to get around the escape charecter.</p>\n", "OwnerUserId": "10701833", "LastEditorUserId": "10701833", "LastEditDate": "2020-02-18T20:50:50.550", "LastActivityDate": "2020-02-18T20:50:50.550", "CommentCount": "12", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "106639859", "PostId": "60271320", "Score": "0", "Text": "also, are there any outputs that I can use to get the contents of the file?", "CreationDate": "2020-02-18T18:04:02.320", "UserId": "4668193", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "106642908", "PostId": "60271320", "Score": "0", "Text": "In the above example, file_value will contain the contents of the file\nyou can use it just like any other local variable eg local.file_value.\nOr file is a terraform function so you can also take that directly into any other resource.", "CreationDate": "2020-02-18T19:58:20.183", "UserId": "10701833", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "106643057", "PostId": "60271320", "Score": "0", "Text": "I've not tested it with unc paths give it a try.   remember you may need to double up on all backslashes. eg  \\\\\\\\servername\\\\sharename\\\\path\\\\hello.bat   But like all good terraform get  the basics to work first using a tempory local file with known good values before you add in another unknown like unc", "CreationDate": "2020-02-18T20:03:55.960", "UserId": "10701833", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I've not tested it with unc paths give it a try. ", "keywords": ["test"]}]}, {"Id": "106643998", "PostId": "60271320", "Score": "0", "Text": "So I have tested copying the public cert directly into an EOF for cacert and it works fine. I have 3 ways from powershell that I can get the value.  I have a powershell variable, $cert, but that is worthless as TF can not read it.  I have a write-output that creates a JSON object \"cert\" \"contents\" but that errors out saying error in JSON.  And I have the file.  I just need someway to get one of those 3 things for TF to be able to read.", "CreationDate": "2020-02-18T20:39:46.247", "UserId": "4668193", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "So I have tested copying the public cert directly into an EOF for cacert and it works fine. ", "keywords": ["test"]}]}, {"Id": "106644306", "PostId": "60271320", "Score": "0", "Text": "Don't try and read it from a PowerShell variable, just use terraform to read the file directly using the method above.  I can see from your original value you have also mentioned trying local file as a data type in terraform that will work and read in a file.  I've updated my answer to show how it could look", "CreationDate": "2020-02-18T20:50:17.370", "UserId": "10701833", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "106669882", "PostId": "60271320", "Score": "0", "Text": "So I tested it and it works when the file is on my local system.  Not on the server being built.  I need to look on the server being built but UNC might be an issue as the server is not part of the domain yet.  Looks like this would work if I can figure out how to auth the UNC path in the locals resource.", "CreationDate": "2020-02-19T14:59:55.280", "UserId": "4668193", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "So I tested it and it works when the file is on my local system. ", "keywords": ["test"]}, {"source": "Text", "text": "I need to look on the server being built but UNC might be an issue as the server is not part of the domain yet. ", "keywords": ["domain"]}]}, {"Id": "106674842", "PostId": "60271320", "Score": "0", "Text": "Thinking about this a little more.  I may try to create a credential in my Powershell script, create a mapped drive and auth to it.  Then use the UNC path and see if this works.", "CreationDate": "2020-02-19T17:13:05.023", "UserId": "4668193", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "106694474", "PostId": "60271320", "Score": "0", "Text": "If it's being created on the remote machine that terraform is building - why not use remote_exec to run scp or ftp or whatever to copy the file back?", "CreationDate": "2020-02-20T09:25:17.853", "UserId": "10701833", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "106708908", "PostId": "60271320", "Score": "0", "Text": "TF is run from many users machines.  I would like to avoid copying anything down if I can.  I am testing a remote-exec creating a share and authing to the share so maybe the locals will be able to connect.  Not working yet but still testing.", "CreationDate": "2020-02-20T16:19:19.147", "UserId": "4668193", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I am testing a remote-exec creating a share and authing to the share so maybe the locals will be able to connect. ", "keywords": ["test"]}, {"source": "Text", "text": "Not working yet but still testing.", "keywords": ["test"]}]}, {"Id": "106708947", "PostId": "60271320", "Score": "0", "Text": "And thank you Marcus.  You have spent a ton of time with me on this so I am giving you the bounty.", "CreationDate": "2020-02-20T16:20:18.613", "UserId": "4668193", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "106719788", "PostId": "60271320", "Score": "0", "Text": "Thank you, I've noot used chef myself but I did notice that they also have a chef provider as well as the provisioner that mentions keys.  Would that help? https://www.terraform.io/docs/providers/chef/index.html", "CreationDate": "2020-02-20T23:22:00.960", "UserId": "10701833", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Thank you, I've noot used chef myself but I did notice that they also have a chef provider as well as the provisioner that mentions keys. ", "keywords": ["provider"]}]}, {"Id": "106739945", "PostId": "60271320", "Score": "0", "Text": "I don't think so since this is all happening pre-Chef.  I am testing my net use now so we will see if it works.", "CreationDate": "2020-02-21T14:59:20.860", "UserId": "4668193", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I am testing my net use now so we will see if it works.", "keywords": ["test"]}]}], "history": [{"Id": "215177570", "PostHistoryTypeId": "2", "PostId": "60271320", "RevisionGUID": "fde9e260-9f5b-4a4d-92ac-e1541ccea1b1", "CreationDate": "2020-02-17T22:36:23.787", "UserId": "10701833", "Text": "If I'm reading your question correctly, it's within terraform that you wish to read the contents of the file?\r\n\r\nHave you looked at the tf file function?\r\nhttps://www.terraform.io/docs/configuration/functions/file.html\r\nThis allows you to read the contents of a file into a string within terraform where you can the work with it in whatever way you want.\r\n\r\nSomething like\r\n```\r\nlocals {\r\n  file_value=file(\"D:\\\\temp\\\\hello.bat\") \r\n}\r\n```\r\nRemembering that as it's HCL and windows you need a double backslash to get around the escape charecter.\r\nThe other way is to read it in using the \"local_file\" data type\r\n```\r\ndata \"local_file\" \"hello\" {\r\n    filename = \"\"D:\\\\temp\\\\hello.bat\"\r\n}\r\n\r\n```\r\nThis is useful as it then stores the contents as a datatype and therefore within the TFSate file so it can be used by other scipts\\modules further down the line\r\nThe contents can be read by\r\n```\r\ndata.local_file.hello.output\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "215177778", "PostHistoryTypeId": "5", "PostId": "60271320", "RevisionGUID": "1ef34167-d417-41fb-936e-8212d8000025", "CreationDate": "2020-02-17T22:41:37.307", "UserId": "10701833", "Comment": "removed data source as it has already been tried", "Text": "If I'm reading your question correctly, it is within terraform that you wish to read the contents of the file?\r\n\r\nHave you looked at the tf file function?\r\nhttps://www.terraform.io/docs/configuration/functions/file.html\r\nThis allows you to read the contents of a file into a string within terraform where you can the work with it in whatever way you want.\r\n\r\nSomething like\r\n```\r\nlocals {\r\n  file_value=file(\"D:\\\\temp\\\\hello.bat\") \r\n}\r\n```\r\nRemembering that as it's HCL and windows you need a double backslash to get around the escape charecter.\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "215251185", "PostHistoryTypeId": "5", "PostId": "60271320", "RevisionGUID": "69c423ee-67d9-4d04-bf1a-a4ec1b2877a5", "CreationDate": "2020-02-18T20:50:50.550", "UserId": "10701833", "Comment": "updated to show better code example", "Text": "If I'm reading your question correctly, it is within terraform that you wish to read the contents of the file?\r\n\r\nHave you looked at the tf file function?\r\nhttps://www.terraform.io/docs/configuration/functions/file.html\r\nThis allows you to read the contents of a file into a string within terraform where you can the work with it in whatever way you want.\r\n\r\nSomething like\r\n```\r\nlocals {\r\n  my_cert = file (\"\\path\\to\\cert\\certname.crt\")\r\n}\r\n    resource \"null_resource\" \"chef-client\" {\r\n      triggers = {\r\n        build_number = \"${timestamp()}\"\r\n      }\r\n      provisioner \"chef\" {\r\n        connection {\r\n          type = \"winrm\"\r\n          user = var.user\r\n          password = var.password\r\n          host = var.host\r\n          cacert = local.my_cert\r\n          timeout = \"5m\"\r\n          port = 5986\r\n          use_ntlm = false\r\n          https = true\r\n          insecure = false\r\n       }\r\n     }\r\n   }\r\n```\r\nRemembering that as it's HCL and windows you need a double backslash to get around the escape charecter.\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "60178817", "PostTypeId": "2", "ParentId": "60174017", "CreationDate": "2020-02-11T23:21:30.913", "Score": "0", "Body": "<p>You are not really giving enough info to assist, becasue you really need to provide more info on what that file looks like and the </p>\n\n<p>You can read content from variables, just as you can from files on a drive. Variable is a drive within the PowerShell environment and you can see all the default drive by doing...</p>\n\n<pre><code>Get-PSDrive\n\n# Results\n&lt;#\nName           Used (GB)     Free (GB) Provider      Root\n----           ---------     --------- --------      ----\nAlias                                  Alias              \n...                                                      \nCert                                   Certificate   \\   \n...                                                      \nEnv                                    Environment       \n...                                                      \nFunction                               Function          \nG                                      FileSystem    G:\\ \nHKCU                                   Registry      HKEY_CURRENT_USER \nHKLM                                   Registry      HKEY_LOCAL_MACHINE \nVariable                               Variable      \nWSMan                                  WSMan\n#&gt;\n</code></pre>\n\n<p>So...</p>\n\n<pre><code>$MyNewVariable = 'Some text here from where ever'   \n\nGet-Content -Path Variable:\\MyNewVariable\n\n# Results\n&lt;#\nSome text here from where ever\n#&gt;\n</code></pre>\n\n<p>Though the above works, this is not always valid. It all depends on how you populate that variable. For example:</p>\n\n<pre><code>Get-Content -Path 'D:\\temp\\hello.bat'\n\n# Results\n&lt;#\n:: sample cmd file\necho 'Hello World!'\n#&gt;\n\n($MyNewVariable = Get-Content -Path 'D:\\temp\\hello.bat')\n\n# Results\n&lt;#\n:: sample cmd file\necho 'Hello World!'\n#&gt;\n\nGet-Content -Path 'Variable:\\MyNewVariable'\n\n# Results\n&lt;#\n:: sample cmd file\n#&gt;\n</code></pre>\n\n<p>Reading a files' content is just a matter of using Get-Content and providing the path to the file. There are lots of options for Get-Content when reading files...</p>\n\n<blockquote>\n  <p><a href=\"https://powershellexplained.com/2017-03-18-Powershell-reading-and-saving-data-to-files/\" rel=\"nofollow noreferrer\">Powershell: The many ways to read and write to files</a></p>\n  \n  <p>Import data with Get-Content -Raw</p>\n  \n  <p>Get-Content is the goto command for reading data. By default, this\n  command will read each line of the file. You end up with an array of\n  strings. This also passes each one down the pipe nicely.</p>\n  \n  <p>The -Raw parameter will bring the entire contents in as a multi-line\n  string. This also performs faster because fewer objects are getting\n  created.</p>\n</blockquote>\n\n<pre><code>Get-Content -Path $Path -Raw\n</code></pre>\n\n<p>...and if that does not give you all you want, such as dealing with large files, then there are the .Net libraries.</p>\n\n<blockquote>\n  <p>Faster reads with System.IO.File</p>\n  \n  <p>That ease of use that the CmdLets provide can come at a small cost in\n  raw performance. It is small enough that you will not notice it for\n  most of the scripting that you do. When that day comes that you need\n  more speed, you will find yourself turning to the native .Net\n  commands. Thankfully they are easy to work with.</p>\n</blockquote>\n\n<pre><code>[System.IO.File]::ReadAllLines( ( Resolve-Path $Path ) )\n</code></pre>\n\n<blockquote>\n  <p>This is just like Get-Content -Path $Path in that you will end up with\n  a collection full of strings. You can also read the data as a\n  multi-line string.</p>\n</blockquote>\n\n<pre><code>[System.IO.File]::ReadAllText( ( Resolve-Path $Path ) )\n</code></pre>\n\n<blockquote>\n  <p>The $Path must be the full path or it will try to save the file to\n  your C:\\Windows\\System32 folder. This is why I use Resolve-Path in\n  this example.</p>\n</blockquote>\n", "OwnerUserId": "9132707", "LastActivityDate": "2020-02-11T23:21:30.913", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "106470018", "PostId": "60178817", "Score": "0", "Text": "That would probably work but how would I get that out of powershell for Terraform to use?", "CreationDate": "2020-02-12T18:42:01.903", "UserId": "4668193", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "214787433", "PostHistoryTypeId": "2", "PostId": "60178817", "RevisionGUID": "4d0e37bf-6e6a-4402-adc0-0b9bc66b0254", "CreationDate": "2020-02-11T23:21:30.913", "UserId": "9132707", "Text": "You are not really giving enough info to assist, becasue you really need to provide more info on what that file looks like and the \r\n\r\nYou can read content from variables, just as you can from files on a drive. Variable is a drive within the PowerShell environment and you can see all the default drive by doing...\r\n\r\n    Get-PSDrive\r\n    \r\n    # Results\r\n    <#\r\n    Name           Used (GB)     Free (GB) Provider      Root\r\n    ----           ---------     --------- --------      ----\r\n    Alias                                  Alias              \r\n    ...                                                      \r\n    Cert                                   Certificate   \\   \r\n    ...                                                      \r\n    Env                                    Environment       \r\n    ...                                                      \r\n    Function                               Function          \r\n    G                                      FileSystem    G:\\ \r\n    HKCU                                   Registry      HKEY_CURRENT_USER \r\n    HKLM                                   Registry      HKEY_LOCAL_MACHINE \r\n    Variable                               Variable      \r\n    WSMan                                  WSMan\r\n    #>\r\n\r\nSo...\r\n\r\n    $MyNewVariable = 'Some text here from where ever'   \r\n    \r\n    Get-Content -Path Variable:\\MyNewVariable\r\n    \r\n    # Results\r\n    <#\r\n    Some text here from where ever\r\n    #>\r\n\r\nThough the above works, this is not always valid. It all depends on how you populate that variable. For example:\r\n\r\n    Get-Content -Path 'D:\\temp\\hello.bat'\r\n    \r\n    # Results\r\n    <#\r\n    :: sample cmd file\r\n    echo 'Hello World!'\r\n    #>\r\n    \r\n    ($MyNewVariable = Get-Content -Path 'D:\\temp\\hello.bat')\r\n    \r\n    # Results\r\n    <#\r\n    :: sample cmd file\r\n    echo 'Hello World!'\r\n    #>\r\n    \r\n    Get-Content -Path 'Variable:\\MyNewVariable'\r\n    \r\n    # Results\r\n    <#\r\n    :: sample cmd file\r\n    #>\r\n\r\nReading a files' content is just a matter of using Get-Content and providing the path to the file. There are lots of options for Get-Content when reading files...\r\n\r\n> [Powershell: The many ways to read and write to files][1]\r\n> \r\n> Import data with Get-Content -Raw\r\n> \r\n> Get-Content is the goto command for reading data. By default, this\r\n> command will read each line of the file. You end up with an array of\r\n> strings. This also passes each one down the pipe nicely.\r\n> \r\n> The -Raw parameter will bring the entire contents in as a multi-line\r\n> string. This also performs faster because fewer objects are getting\r\n> created.\r\n\r\n    Get-Content -Path $Path -Raw\r\n\r\n...and if that does not give you all you want, such as dealing with large files, then there are the .Net libraries.\r\n\r\n> Faster reads with System.IO.File\r\n> \r\n> That ease of use that the CmdLets provide can come at a small cost in\r\n> raw performance. It is small enough that you will not notice it for\r\n> most of the scripting that you do. When that day comes that you need\r\n> more speed, you will find yourself turning to the native .Net\r\n> commands. Thankfully they are easy to work with.\r\n\r\n    [System.IO.File]::ReadAllLines( ( Resolve-Path $Path ) )\r\n\r\n> This is just like Get-Content -Path $Path in that you will end up with\r\n> a collection full of strings. You can also read the data as a\r\n> multi-line string.\r\n\r\n    [System.IO.File]::ReadAllText( ( Resolve-Path $Path ) )\r\n\r\n> The $Path must be the full path or it will try to save the file to\r\n> your C:\\Windows\\System32 folder. This is why I use Resolve-Path in\r\n> this example.\r\n\r\n\r\n  [1]: https://powershellexplained.com/2017-03-18-Powershell-reading-and-saving-data-to-files/", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Variable is a drive within the PowerShell environment and you can see all the default drive by doing... Get-PSDrive # Results <# Name Used (GB) Free (GB) Provider Root ---- --------- --------- -------- ---- Alias Alias ... Cert Certificate \\ ... ", "keywords": ["provider"]}, {"source": "Text", "text": "> Faster reads with System.IO.File > > That ease of use that the CmdLets provide can come at a small cost in > raw performance. ", "keywords": ["cost"]}]}], "filtered-sentences": [{"source": "Body", "text": "That ease of use that the CmdLets provide can come at a small cost in raw performance. ", "keywords": ["cost"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "So let's say the content of the file on the remote server is \"Testing data\". ", "keywords": ["test"]}, {"source": "Body", "text": "The server is not part of the domain at this point. ", "keywords": ["domain"]}, {"source": "Body", "text": "I tried local_file data source but could not auto-auth because it isn't part of the domain. ", "keywords": ["domain"]}]}