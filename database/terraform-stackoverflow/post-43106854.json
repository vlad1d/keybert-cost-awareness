{"Id": "43106854", "PostTypeId": "1", "CreationDate": "2017-03-30T01:19:18.957", "Score": "54", "ViewCount": "60149", "Body": "<p>I have an AWS account where multiple EC2 instances, load balancers, target groups, security groups etc are setup by multiple owners. \nWe use terraform to set this up but sometimes due to corruption, the state becomes inconsistent. Current mechanism to recover is to manually destroy all resources in that account owned by a particular owner.\nIs there an easy way to nuke all resources in an AWS account belonging to a particular owner?</p>\n", "OwnerUserId": "793465", "LastEditorUserId": "141661", "LastEditDate": "2017-03-30T06:25:31.330", "LastActivityDate": "2023-08-10T05:11:03.237", "Title": "Is there a way to nuke all AWS resources in an AWS account?", "Tags": "<amazon-web-services><terraform>", "AnswerCount": "9", "CommentCount": "0", "FavoriteCount": "0", "ContentLicense": "CC BY-SA 3.0", "history": [{"Id": "141877843", "PostHistoryTypeId": "2", "PostId": "43106854", "RevisionGUID": "b0378849-b440-45d0-8468-7e767d370f39", "CreationDate": "2017-03-30T01:19:18.957", "UserId": "793465", "Text": "I have an AWS account where multiple EC2 instances, load balancers, target groups, security groups etc are setup by multiple owners. \r\nWe use terraform to set this up but sometimes due to corruption, the state becomes inconsistent. Current mechanism to recover is to manually destroy all resources in that account owned by a particular owner.\r\nIs there an easy way to nuke all resources in an AWS account belonging to a particular owner?\r\n\r\n", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "141877844", "PostHistoryTypeId": "1", "PostId": "43106854", "RevisionGUID": "b0378849-b440-45d0-8468-7e767d370f39", "CreationDate": "2017-03-30T01:19:18.957", "UserId": "793465", "Text": "Is there a way to nuke all AWS resources in an AWS account?", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "141877845", "PostHistoryTypeId": "3", "PostId": "43106854", "RevisionGUID": "b0378849-b440-45d0-8468-7e767d370f39", "CreationDate": "2017-03-30T01:19:18.957", "UserId": "793465", "Text": "<amazon-web-services><cloud><amazon><terraform>", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "141890348", "PostHistoryTypeId": "6", "PostId": "43106854", "RevisionGUID": "50cf6cf5-2434-4203-a394-393a413a154a", "CreationDate": "2017-03-30T06:25:31.330", "UserId": "141661", "Comment": "edited tags", "Text": "<amazon-web-services><terraform>", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "answers": [{"Id": "43109088", "PostTypeId": "2", "ParentId": "43106854", "CreationDate": "2017-03-30T05:15:41.327", "Score": "2", "Body": "<p>Short answer: no.</p>\n\n<p>Longer answer: actually, that's also no.  There's no built-in capabillity for this.</p>\n\n<p>The case you're describing is not within the bounds of typical AWS usage... destroying everything in an account -- <em>usually</em> -- should not be easy.</p>\n\n<p>Of course, you <em>could</em> script it, fairly trivially, by wrapping calls to aws-cli to custom code to iterate through the resources and generate additional requests to destroy them... but if you do, lock that code away, since such capability is inherently dangerous.</p>\n", "OwnerUserId": "1695906", "LastActivityDate": "2017-03-30T05:15:41.327", "CommentCount": "0", "ContentLicense": "CC BY-SA 3.0", "history": [{"Id": "141886539", "PostHistoryTypeId": "2", "PostId": "43109088", "RevisionGUID": "9f911380-6144-45c4-9e09-7eb34a5d98d6", "CreationDate": "2017-03-30T05:15:41.327", "UserId": "1695906", "Text": "Short answer: no.\r\n\r\nLonger answer: actually, that's also no.  There's no built-in capabillity for this.\r\n\r\nThe case you're describing is not within the bounds of typical AWS usage... destroying everything in an account -- *usually* -- should not be easy.\r\n\r\nOf course, you *could* script it, fairly trivially, by wrapping calls to aws-cli to custom code to iterate through the resources and generate additional requests to destroy them... but if you do, lock that code away, since such capability is inherently dangerous.", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "69625891", "PostTypeId": "2", "ParentId": "43106854", "CreationDate": "2021-10-19T06:12:11.983", "Score": "1", "Body": "<blockquote>\n<p>Is there an easy way to nuke all resources in an AWS account\nbelonging to a particular owner?</p>\n</blockquote>\n<p>Since you are using Terraform, you can use <a href=\"https://www.hashicorp.com/resources/blank-apply-destroying-without-terraform-configuration\" rel=\"nofollow noreferrer\">Blank Apply</a>.<br>\nIt will destroy all the Resources in a state file.<br></p>\n<blockquote>\n<p>We use terraform to set this up but sometimes due to corruption, the\nstate becomes inconsistent.</p>\n</blockquote>\n<p>It's better to use version control system to avoid drifts and inconsistencies in your state file and use remote states in order to make sure everyone is on the same page.</p>\n", "OwnerUserId": "17176406", "LastActivityDate": "2021-10-19T06:12:11.983", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "256124886", "PostHistoryTypeId": "2", "PostId": "69625891", "RevisionGUID": "9abff3f6-2a3b-4da5-8185-5210496b0524", "CreationDate": "2021-10-19T06:12:11.983", "UserId": "17176406", "Text": ">  Is there an easy way to nuke all resources in an AWS account\r\n> belonging to a particular owner?\r\n\r\nSince you are using Terraform, you can use [Blank Apply](https://www.hashicorp.com/resources/blank-apply-destroying-without-terraform-configuration).<br>\r\nIt will destroy all the Resources in a state file.<br>\r\n\r\n> We use terraform to set this up but sometimes due to corruption, the\r\n> state becomes inconsistent.\r\n\r\nIt's better to use version control system to avoid drifts and inconsistencies in your state file and use remote states in order to make sure everyone is on the same page.   \r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "59083983", "PostTypeId": "2", "ParentId": "43106854", "CreationDate": "2019-11-28T07:49:10.920", "Score": "38", "Body": "<p>There is no way to delete all resources in an account <strong>owned by a particular user</strong> but there <strong>is a way to delete all resources in an account</strong>.</p>\n\n<p>You can use <a href=\"https://github.com/rebuy-de/aws-nuke\" rel=\"noreferrer\">aws-nuke</a> which was created somewhat out of the same use case you described.</p>\n\n<ol>\n<li>At first, you need to set an <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/console_account-alias.html\" rel=\"noreferrer\">account alias</a> for your account.</li>\n<li>You must create a <a href=\"https://github.com/rebuy-de/aws-nuke#usage\" rel=\"noreferrer\">config file</a>.</li>\n<li><p>Then you can list down all resources that will be deleted using the following command:</p>\n\n<p>aws-nuke -c config/nuke-config.yml --profile aws-nuke-example</p></li>\n<li><p>Add --no-dry-run option to permanently delete all resources in the same command.</p></li>\n<li><p>There are also multiple filter options available such as <em>target</em>, <em>resource type</em>, <em>exclude</em>, etc. that you can leverage to suit your needs.</p></li>\n</ol>\n", "OwnerUserId": "5816060", "LastActivityDate": "2019-11-28T07:49:10.920", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "108663605", "PostId": "59083983", "Score": "2", "Text": "If you used tags for all resources and tagged by user, this could provide a method to delete resources by a user.", "CreationDate": "2020-04-25T14:24:36.560", "UserId": "1692999", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "129604693", "PostId": "59083983", "Score": "1", "Text": "Unfortunately, removing resources by aws-nuke is not yet supported.", "CreationDate": "2022-08-17T13:36:36.920", "UserId": "4466482", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "210142852", "PostHistoryTypeId": "2", "PostId": "59083983", "RevisionGUID": "51e7a501-eacb-438c-b3cb-94a8918c5139", "CreationDate": "2019-11-28T07:49:10.920", "UserId": "5816060", "Text": "There is no way to delete all resources in an account **owned by a particular user** but there **is a way to delete all resources in an account**.\r\n\r\nYou can use [aws-nuke][1] which was created somewhat out of the same use case you described.\r\n\r\n 1. At first, you need to set an [account alias][2] for your account.\r\n 2. You must create a [config file][3].\r\n 3. Then you can list down all resources that will be deleted using the following command:\r\n \r\n\r\n    aws-nuke -c config/nuke-config.yml --profile aws-nuke-example\r\n\r\n 4. Add --no-dry-run option to permanently delete all resources in the same command.\r\n\r\n 5. There are also multiple filter options available such as *target*, *resource type*, *exclude*, etc. that you can leverage to suit your needs.\r\n\r\n \r\n\r\n\r\n  [1]: https://github.com/rebuy-de/aws-nuke\r\n  [2]: https://docs.aws.amazon.com/IAM/latest/UserGuide/console_account-alias.html\r\n  [3]: https://github.com/rebuy-de/aws-nuke#usage", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "58143289", "PostTypeId": "2", "ParentId": "43106854", "CreationDate": "2019-09-28T04:10:35.967", "Score": "2", "Body": "<p>You can delete all your resources you created, you'll need to automate, see a sample here:</p>\n<h1>Creation</h1>\n<p><a href=\"https://github.com/jouellnyc/AWS/tree/master/create_aws_vpc2\" rel=\"nofollow noreferrer\">https://github.com/jouellnyc/AWS/tree/master/create_aws_vpc2</a></p>\n<h1>Deletion</h1>\n<p><a href=\"https://github.com/jouellnyc/AWS/blob/master/create_aws_vpc2/delete_lb_and_vpc.sh\" rel=\"nofollow noreferrer\">https://github.com/jouellnyc/AWS/blob/master/create_aws_vpc2/delete_lb_and_vpc.sh</a></p>\n<h1>Other</h1>\n<p>I've had some success with cloud nuke (played around for a few min; not in depth):</p>\n<p><a href=\"https://github.com/gruntwork-io/cloud-nuke\" rel=\"nofollow noreferrer\">https://github.com/gruntwork-io/cloud-nuke</a></p>\n", "OwnerUserId": "3462494", "LastEditorUserId": "-1", "LastEditDate": "2020-06-20T09:12:55.060", "LastActivityDate": "2019-09-28T04:10:35.967", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "122700373", "PostId": "58143289", "Score": "1", "Text": "The first two links do not exist anymore.", "CreationDate": "2021-10-02T21:38:50.903", "UserId": "12782206", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "133881869", "PostId": "58143289", "Score": "0", "Text": "Can't edit because queue is full but here are the two dead links:\nhttps://github.com/jouellnyc/AWS/tree/master/blue_green/aws-cli/create_aws_vpc2\nhttps://github.com/jouellnyc/AWS/blob/master/blue_green/aws-cli/del.iam.sh\n\nIdk how useful these are, just thought I'd find the dead links.", "CreationDate": "2023-03-31T23:48:23.830", "UserId": "8493281", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "206215039", "PostHistoryTypeId": "2", "PostId": "58143289", "RevisionGUID": "5186f01f-b24f-4199-a6b5-c823196a0eb5", "CreationDate": "2019-09-28T04:10:35.967", "UserId": "3462494", "Text": "You can delete all your resources you created, you'll need to automate, see a sample here:\r\n\r\n#Creation\r\nhttps://github.com/jouellnyc/AWS/tree/master/create_aws_vpc2\r\n\r\n#Deletion\r\nhttps://github.com/jouellnyc/AWS/blob/master/create_aws_vpc2/delete_lb_and_vpc.sh\r\n\r\n\r\n#Other\r\nI've had some success with cloud nuke (played around for a few min; not in depth):\r\n\r\nhttps://github.com/gruntwork-io/cloud-nuke\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "224859212", "PostHistoryTypeId": "5", "PostId": "58143289", "RevisionGUID": "c9447065-a468-4f0e-8f79-f25d3fc79795", "CreationDate": "2020-06-20T09:12:55.060", "UserId": "-1", "Comment": "Commonmark migration", "Text": "You can delete all your resources you created, you'll need to automate, see a sample here:\n\n# Creation\nhttps://github.com/jouellnyc/AWS/tree/master/create_aws_vpc2\n\n# Deletion\nhttps://github.com/jouellnyc/AWS/blob/master/create_aws_vpc2/delete_lb_and_vpc.sh\n\n\n# Other\nI've had some success with cloud nuke (played around for a few min; not in depth):\n\nhttps://github.com/gruntwork-io/cloud-nuke\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "76743838", "PostTypeId": "2", "ParentId": "43106854", "CreationDate": "2023-07-22T12:43:00.373", "Score": "0", "Body": "<p><a href=\"https://github.com/gruntwork-io/cloud-nuke\" rel=\"nofollow noreferrer\">cloud-nuke</a> works fine for me</p>\n<h2>Example (for Mac)</h2>\n<p>First I checked for the <a href=\"https://p6li1chk.r.us-east-1.awstrack.me/L0/https:%2F%2Fconsole.aws.amazon.com%2Fbilling%2Fhome%3F%23%2Fbills/1/010001897b64272f-d26ee617-83b0-4437-9432-f500e3f0e69a-000000/fZirQwnLdKj18UrATcnVh6j_dDg=331\" rel=\"nofollow noreferrer\">Billing Dashboard</a> to see the line items by region and got each regions</p>\n<p>Then on my <strong>terminal</strong></p>\n<p>Install cloud-nuke</p>\n<pre><code>brew install cloud-nuke ## Install cloud-nuke\n</code></pre>\n<p>Delete all resources on selected regions</p>\n<pre><code>cloud-nuke aws --region ap-south-1 eu-central-1 \n</code></pre>\n<p>or scan all the regions</p>\n<pre><code>cloud-nuke aws\n</code></pre>\n<p>If <strong>ERROR</strong> &quot;<em>could not find any enabled regions binary=cloud-nuke version=your_cn_version</em>&quot;</p>\n<p>Add <code>aws_region = ap-south-1</code> (or whatever region) on your aws credential config file</p>\n<p><code>vi ~/.aws/credentials</code></p>\n<pre><code>[user1]\naws_access_key_id = my_access_key_id\naws_secret_access_key = my_secret_access_key\naws_region = ap-south-1\n</code></pre>\n<p>Do not forget to add the user (&quot;user1&quot; in the example above) to your Admin group if you have created one or use your default aws admin user</p>\n", "OwnerUserId": "1395962", "LastEditorUserId": "1395962", "LastEditDate": "2023-07-22T16:19:45.647", "LastActivityDate": "2023-07-22T16:19:45.647", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "295723184", "PostHistoryTypeId": "2", "PostId": "76743838", "RevisionGUID": "c854b85f-d69e-4597-b835-578342fea3f1", "CreationDate": "2023-07-22T12:43:00.373", "UserId": "1395962", "Text": "[cloud-nuke][1] works fine work me\r\n\r\n**Example (for Mac)**\r\n\r\nFirst I checked for the [Billing Dashboard][2] to see the line items by region and got each regions\r\n\r\nThen on my **terminal** \r\n\r\n    brew install cloud-nuke ## Install cloud-nuke\r\n    \r\n    cloud-nuke aws --region ap-south-1 eu-central-1 ## Delete all resources on selected regions\r\n\r\n\r\nIf ERROR \"*could not find any enabled regions binary=cloud-nuke version=your_cn_version*\" \r\n\r\n\r\nAdd `aws_region = ap-south-1` (or whatever region) on your aws credential config file \r\n\r\n`vi ~/.aws/credentials`\r\n\r\n    [user1]]\r\n    aws_access_key_id = my_access_key_id\r\n    aws_secret_access_key = my_secret_access_key\r\n    aws_region = ap-south-1\r\n\r\nDo not forget to add the user (\"user1\" in the example above) to your Admin group if exists or use your default aws admin user\r\n\r\n\r\n  [1]: https://github.com/gruntwork-io/cloud-nuke\r\n  [2]: https://p6li1chk.r.us-east-1.awstrack.me/L0/https:%2F%2Fconsole.aws.amazon.com%2Fbilling%2Fhome%3F%23%2Fbills/1/010001897b64272f-d26ee617-83b0-4437-9432-f500e3f0e69a-000000/fZirQwnLdKj18UrATcnVh6j_dDg=331", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "295723373", "PostHistoryTypeId": "5", "PostId": "76743838", "RevisionGUID": "fed976b6-d779-42d0-b37a-13310429f167", "CreationDate": "2023-07-22T12:51:04.803", "UserId": "1395962", "Comment": "deleted 1 character in body", "Text": "[cloud-nuke][1] works fine for me\r\n\r\n**Example (for Mac)**\r\n\r\nFirst I checked for the [Billing Dashboard][2] to see the line items by region and got each regions\r\n\r\nThen on my **terminal** \r\n\r\n    brew install cloud-nuke ## Install cloud-nuke\r\n    \r\n    cloud-nuke aws --region ap-south-1 eu-central-1 ## Delete all resources on selected regions\r\n\r\n\r\nIf **ERROR** \"*could not find any enabled regions binary=cloud-nuke version=your_cn_version*\" \r\n\r\n\r\nAdd `aws_region = ap-south-1` (or whatever region) on your aws credential config file \r\n\r\n`vi ~/.aws/credentials`\r\n\r\n    [user1]]\r\n    aws_access_key_id = my_access_key_id\r\n    aws_secret_access_key = my_secret_access_key\r\n    aws_region = ap-south-1\r\n\r\nDo not forget to add the user (\"user1\" in the example above) to your Admin group if exists or use your default aws admin user\r\n\r\n\r\n  [1]: https://github.com/gruntwork-io/cloud-nuke\r\n  [2]: https://p6li1chk.r.us-east-1.awstrack.me/L0/https:%2F%2Fconsole.aws.amazon.com%2Fbilling%2Fhome%3F%23%2Fbills/1/010001897b64272f-d26ee617-83b0-4437-9432-f500e3f0e69a-000000/fZirQwnLdKj18UrATcnVh6j_dDg=331", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "295723631", "PostHistoryTypeId": "5", "PostId": "76743838", "RevisionGUID": "8432a419-8d19-4dc8-acc5-adee5a211c8e", "CreationDate": "2023-07-22T13:01:00.977", "UserId": "1395962", "Comment": "added 71 characters in body", "Text": "[cloud-nuke][1] works fine for me\r\n\r\n## Example (for Mac)\r\n\r\nFirst I checked for the [Billing Dashboard][2] to see the line items by region and got each regions\r\n\r\nThen on my **terminal** \r\n\r\nInstall cloud-nuke\r\n\r\n    brew install cloud-nuke ## Install cloud-nuke\r\n\r\nDelete all resources on selected regions\r\n\r\n    cloud-nuke aws --region ap-south-1 eu-central-1 \r\n\r\nor scan all the regions\r\n    \r\n    cloud-nuke aws\r\n\r\nIf **ERROR** \"*could not find any enabled regions binary=cloud-nuke version=your_cn_version*\" \r\n\r\n\r\nAdd `aws_region = ap-south-1` (or whatever region) on your aws credential config file \r\n\r\n`vi ~/.aws/credentials`\r\n\r\n    [user1]\r\n    aws_access_key_id = my_access_key_id\r\n    aws_secret_access_key = my_secret_access_key\r\n    aws_region = ap-south-1\r\n\r\nDo not forget to add the user (\"user1\" in the example above) to your Admin group if exists or use your default aws admin user\r\n\r\n\r\n  [1]: https://github.com/gruntwork-io/cloud-nuke\r\n  [2]: https://p6li1chk.r.us-east-1.awstrack.me/L0/https:%2F%2Fconsole.aws.amazon.com%2Fbilling%2Fhome%3F%23%2Fbills/1/010001897b64272f-d26ee617-83b0-4437-9432-f500e3f0e69a-000000/fZirQwnLdKj18UrATcnVh6j_dDg=331\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "295728584", "PostHistoryTypeId": "5", "PostId": "76743838", "RevisionGUID": "9443305a-3326-485f-9cbd-e244df5b98f8", "CreationDate": "2023-07-22T16:19:45.647", "UserId": "1395962", "Comment": "added 14 characters in body", "Text": "[cloud-nuke][1] works fine for me\r\n\r\n## Example (for Mac)\r\n\r\nFirst I checked for the [Billing Dashboard][2] to see the line items by region and got each regions\r\n\r\nThen on my **terminal** \r\n\r\nInstall cloud-nuke\r\n\r\n    brew install cloud-nuke ## Install cloud-nuke\r\n\r\nDelete all resources on selected regions\r\n\r\n    cloud-nuke aws --region ap-south-1 eu-central-1 \r\n\r\nor scan all the regions\r\n    \r\n    cloud-nuke aws\r\n\r\nIf **ERROR** \"*could not find any enabled regions binary=cloud-nuke version=your_cn_version*\" \r\n\r\n\r\nAdd `aws_region = ap-south-1` (or whatever region) on your aws credential config file \r\n\r\n`vi ~/.aws/credentials`\r\n\r\n    [user1]\r\n    aws_access_key_id = my_access_key_id\r\n    aws_secret_access_key = my_secret_access_key\r\n    aws_region = ap-south-1\r\n\r\nDo not forget to add the user (\"user1\" in the example above) to your Admin group if you have created one or use your default aws admin user\r\n\r\n\r\n  [1]: https://github.com/gruntwork-io/cloud-nuke\r\n  [2]: https://p6li1chk.r.us-east-1.awstrack.me/L0/https:%2F%2Fconsole.aws.amazon.com%2Fbilling%2Fhome%3F%23%2Fbills/1/010001897b64272f-d26ee617-83b0-4437-9432-f500e3f0e69a-000000/fZirQwnLdKj18UrATcnVh6j_dDg=331\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "58662264", "PostTypeId": "2", "ParentId": "43106854", "CreationDate": "2019-11-01T15:59:35.390", "Score": "0", "Body": "<p>if the issue is a corrupted terraform state, perhaps storing the state in a versioned S3 bucket would help reduce the impact of that.</p>\n", "OwnerUserId": "12308988", "LastActivityDate": "2019-11-01T15:59:35.390", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "208381539", "PostHistoryTypeId": "2", "PostId": "58662264", "RevisionGUID": "e9e526ee-60fc-43f6-9a13-8e0266d32131", "CreationDate": "2019-11-01T15:59:35.390", "UserId": "12308988", "Text": "if the issue is a corrupted terraform state, perhaps storing the state in a versioned S3 bucket would help reduce the impact of that.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "65129444", "PostTypeId": "2", "ParentId": "43106854", "CreationDate": "2020-12-03T15:55:30.120", "Score": "2", "Body": "<p>I dont think there is any state forward way to do it but to check if you have any active resources in your account, do the following:</p>\n<ol>\n<li>Open the Billing and Cost Management console.</li>\n<li>Choose Bills in the navigation pane.</li>\n<li>You can see the charges incurred by different services in the Bill details by service section.</li>\n<li>You can see the charges incurred in different AWS Regions in the Bill details by account section.</li>\n</ol>\n<p><em>For each service, identify the Regions where the services have incurred charges.\nTo terminate the identified active resources under different services, do the following:</em></p>\n<ol>\n<li>Open the AWS Management Console.</li>\n<li>For Find services, enter the service name.</li>\n<li>After opening the service console, terminate all your active resources. Be sure to check each Region where you have allocated resources.</li>\n</ol>\n", "OwnerUserId": "2841472", "LastEditorUserId": "2841472", "LastEditDate": "2020-12-30T10:33:47.527", "LastActivityDate": "2020-12-30T10:33:47.527", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "236185487", "PostHistoryTypeId": "2", "PostId": "65129444", "RevisionGUID": "5b2e01d1-7247-40fc-a003-eaf855ca6b77", "CreationDate": "2020-12-03T15:55:30.120", "UserId": "2841472", "Text": "I dont think there is any state forward way to do it but to check if you have any active resources in your account, do the following:\r\n\r\n1. Open the Billing and Cost Management console.\r\n2. Choose Bills in the navigation pane.\r\n3. You can see the charges incurred by different services in the Bill details by service section.\r\n4. You can see the charges incurred in different AWS Regions in the Bill details by account section.\r\n\r\n \r\nFor each service, identify the Regions where the services have incurred charges.\r\nTo terminate the identified active resources under different services, do the following:\r\n\r\n1. Open the AWS Management Console.\r\n2. For Find services, enter the service name.\r\n3. After opening the service console, terminate all your active resources. Be sure to check each Region where you have allocated resources.\r\n   ", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "1. Open the Billing and Cost Management console. ", "keywords": ["cost"]}]}, {"Id": "237821469", "PostHistoryTypeId": "5", "PostId": "65129444", "RevisionGUID": "03ea2a8f-63a3-4525-94f6-4067b3b53c34", "CreationDate": "2020-12-30T10:33:47.527", "UserId": "2841472", "Comment": "added 2 characters in body", "Text": "I dont think there is any state forward way to do it but to check if you have any active resources in your account, do the following:\r\n\r\n1. Open the Billing and Cost Management console.\r\n2. Choose Bills in the navigation pane.\r\n3. You can see the charges incurred by different services in the Bill details by service section.\r\n4. You can see the charges incurred in different AWS Regions in the Bill details by account section.\r\n\r\n \r\n*For each service, identify the Regions where the services have incurred charges.\r\nTo terminate the identified active resources under different services, do the following:*\r\n\r\n1. Open the AWS Management Console.\r\n2. For Find services, enter the service name.\r\n3. After opening the service console, terminate all your active resources. Be sure to check each Region where you have allocated resources.\r\n   ", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "1. Open the Billing and Cost Management console. ", "keywords": ["cost"]}]}], "filtered-sentences": [{"source": "Body", "text": "I dont think there is any state forward way to do it but to check if you have any active resources in your account, do the following: Open the Billing and Cost Management console. ", "keywords": ["cost"]}]}, {"Id": "64922370", "PostTypeId": "2", "ParentId": "43106854", "CreationDate": "2020-11-20T01:15:14.163", "Score": "2", "Body": "<p>Use Terraformer to import all resources into terraform configuration then do whatever you want:</p>\n<p>terraformer import aws --resources=&quot;*&quot;</p>\n<p><a href=\"https://github.com/GoogleCloudPlatform/terraformer\" rel=\"nofollow noreferrer\">https://github.com/GoogleCloudPlatform/terraformer</a></p>\n<p>Take care of your state file lock f.e. by using dynamodb &amp; enable s3 versioning.</p>\n", "OwnerUserId": "7778447", "LastActivityDate": "2020-11-20T01:15:14.163", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "235284039", "PostHistoryTypeId": "2", "PostId": "64922370", "RevisionGUID": "b885b9f2-36e4-43e1-8ba9-35afc01dbb4d", "CreationDate": "2020-11-20T01:15:14.163", "UserId": "7778447", "Text": "Use Terraformer to import all resources into terraform configuration then do whatever you want:\r\n\r\nterraformer import aws --resources=\"*\"\r\n\r\nhttps://github.com/GoogleCloudPlatform/terraformer\r\n\r\nTake care of your state file lock f.e. by using dynamodb & enable s3 versioning.\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "43158358", "PostTypeId": "2", "ParentId": "43106854", "CreationDate": "2017-04-01T14:57:45.887", "Score": "7", "Body": "<p>Agree with the other answer that there is no easy way delete orphan resources.</p>\n\n<p>But I see the original issue is that the terraform state is corrupted. \nYou can checkout the <a href=\"https://www.terraform.io/docs/import/index.html\" rel=\"noreferrer\" title=\"terraform import\">terraform import</a> feature which lets you generate state file from aws resources. In that way you can connect your config to resources again.</p>\n", "OwnerUserId": "1396659", "LastActivityDate": "2017-04-01T14:57:45.887", "CommentCount": "0", "ContentLicense": "CC BY-SA 3.0", "history": [{"Id": "142088928", "PostHistoryTypeId": "2", "PostId": "43158358", "RevisionGUID": "d54e4840-96bc-4911-815d-f52834972b24", "CreationDate": "2017-04-01T14:57:45.887", "UserId": "1396659", "Text": "Agree with the other answer that there is no easy way delete orphan resources.\r\n\r\nBut I see the original issue is that the terraform state is corrupted. \r\nYou can checkout the [terraform import][1] feature which lets you generate state file from aws resources. In that way you can connect your config to resources again.\r\n\r\n\r\n  [1]: https://www.terraform.io/docs/import/index.html \"terraform import\"", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "You can checkout the [terraform import][1] feature which lets you generate state file from aws resources. ", "keywords": ["feature"]}]}], "filtered-sentences": [{"source": "Body", "text": "You can checkout the terraform import feature which lets you generate state file from aws resources. ", "keywords": ["feature"]}]}], "contains-topic": true, "filtered-sentences": []}