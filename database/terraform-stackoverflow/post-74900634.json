{"Id": "74900634", "PostTypeId": "1", "CreationDate": "2022-12-23T14:17:31.717", "Score": "0", "ViewCount": "189", "Body": "<p>I'm using terraform to ensure a consistent configuration for my github repos using the <a href=\"https://registry.terraform.io/providers/integrations/github/latest/docs\" rel=\"nofollow noreferrer\">Terraform Github Provider</a>. Basically this works fine.</p>\n<p>But now I experience some undesired behavior with my terraform state. I develop from my local workstation and from a Gitpod. Plus I have a Github Actions workflow which applies my terraform config regularly. So I have three points from which I trigger terraform.</p>\n<p>My <code>terraform.tfstate</code> file is not part of my repository due to security concerns (secrets are stored in plan text inside this file).</p>\n<p>Now my question is: how can I handle the terraform state most effectively? I would like to somehow store my terraform state in a remote location which is accessible from all 3 points. But I do not want to set up an S3 bucket or anything similar that would cost some money.</p>\n<p>My first ideas are somehow storing the <code>terraform.tfstate</code> file  file in my google drive and make it available when I apply my terraform config. Preferably have terraform directly write to the file in the google drive. But I don't know how to do this and I don't know if this even is a good idea.</p>\n<p>The other idea is to store the <code>terraform.tfstate</code> file in a private git repository and clone the repo and copy the <code>terraform.tfstate</code> file to the correct location before I apply any config. And afterwards push the <code>terraform.tfstate</code> file back into the private repo. But again I don*t know if this is a good way to go.</p>\n<p>I assume both ideas are not really a good practice? Maybe anyone got a better idea or a hint? Maybe there is some sort of free (0 Dollar) storage in some cloud? I'm thinking AWS, GCP? Or rather Linode or DigitalOcean (because they are smaller and easier to handle). I would prefer a free cloud solutions because I don't need the terraform state 24/7 ... only on demand when I apply a configuration.</p>\n<p>I'd appreciate any help or idea or discussion. Thanks everyone and best regards. Sebastian</p>\n", "OwnerUserId": "11864266", "LastEditorUserId": "11864266", "LastEditDate": "2022-12-23T14:25:25.687", "LastActivityDate": "2022-12-23T14:27:06.667", "Title": "Store terraform state remotely", "Tags": "<terraform><cloud><terraform-state>", "AnswerCount": "1", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "284866307", "PostHistoryTypeId": "2", "PostId": "74900634", "RevisionGUID": "124a5a1b-5b96-4738-a9aa-fb729909559c", "CreationDate": "2022-12-23T14:17:31.717", "UserId": "11864266", "Text": "I'm using terraform to ensure a consistent configuration for my github repos using the [Terraform Github Provider][1]. Basically this works fine.\r\n\r\nBut now I experience some undesired behavior with my terraform state. I develop from my local workstation and from a Gitpod. Plus I have a Github Actions workflow which applies my terraform config regularly. So I have three points from which I trigger terraform.\r\n\r\nMy `terraform.tfstate` file is not part of my repository due to security concerns (secrets are stored in plan text inside this file).\r\n\r\nNow my question is: how can I handle the terraform state most effectively? I would like to somehow store my terraform state in a remote location which is accessible from all 3 points. But I do not want to set up an S3 bucket or anything similar that would cost some money. \r\n\r\nMy first ideas are somehow storing the `terraform.tfstate` file  file in my google drive and make it available when I apply my terraform config. Preferably have terraform directly write to the file in the google drive. But I don't know how to do this and I don't know if this even is a good idea.\r\n\r\nThe other idea is to store the `terraform.tfstate` file in a private git repository and clone the repo and copy the `terraform.tfstate` file to the correct location before I apply any config. And afterwards push the `terraform.tfstate` file back into the private repo. But again I don*t know if this is a good way to go.\r\n\r\nI assume both ideas are not really a good practice? Maybe anyone got a better idea or a hint? Maybe there is some sort of free (0 Dollar) storage in some cloud? I'm thinking AWS, GCP? Or rather Linode or DigitalOcean (because they are smaller and easier to handle).\r\n\r\nI'd appreciate any help or idea or discussion. Thanks everyone and best regards. Sebastian\r\n\r\n\r\n  [1]: https://registry.terraform.io/providers/integrations/github/latest/docs", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I'm using terraform to ensure a consistent configuration for my github repos using the [Terraform Github Provider][1]. ", "keywords": ["provider"]}, {"source": "Text", "text": "But I do not want to set up an S3 bucket or anything similar that would cost some money. ", "keywords": ["cost"]}, {"source": "Text", "text": "Maybe there is some sort of free (0 Dollar) storage in some cloud? ", "keywords": ["storage"]}]}, {"Id": "284866309", "PostHistoryTypeId": "1", "PostId": "74900634", "RevisionGUID": "124a5a1b-5b96-4738-a9aa-fb729909559c", "CreationDate": "2022-12-23T14:17:31.717", "UserId": "11864266", "Text": "Store terraform state remotely", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "284866310", "PostHistoryTypeId": "3", "PostId": "74900634", "RevisionGUID": "124a5a1b-5b96-4738-a9aa-fb729909559c", "CreationDate": "2022-12-23T14:17:31.717", "UserId": "11864266", "Text": "<terraform><cloud><terraform-state>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "284866773", "PostHistoryTypeId": "5", "PostId": "74900634", "RevisionGUID": "77a36e26-e9df-41aa-a991-4614f2b692b2", "CreationDate": "2022-12-23T14:25:25.687", "UserId": "11864266", "Comment": "added 133 characters in body", "Text": "I'm using terraform to ensure a consistent configuration for my github repos using the [Terraform Github Provider][1]. Basically this works fine.\r\n\r\nBut now I experience some undesired behavior with my terraform state. I develop from my local workstation and from a Gitpod. Plus I have a Github Actions workflow which applies my terraform config regularly. So I have three points from which I trigger terraform.\r\n\r\nMy `terraform.tfstate` file is not part of my repository due to security concerns (secrets are stored in plan text inside this file).\r\n\r\nNow my question is: how can I handle the terraform state most effectively? I would like to somehow store my terraform state in a remote location which is accessible from all 3 points. But I do not want to set up an S3 bucket or anything similar that would cost some money. \r\n\r\nMy first ideas are somehow storing the `terraform.tfstate` file  file in my google drive and make it available when I apply my terraform config. Preferably have terraform directly write to the file in the google drive. But I don't know how to do this and I don't know if this even is a good idea.\r\n\r\nThe other idea is to store the `terraform.tfstate` file in a private git repository and clone the repo and copy the `terraform.tfstate` file to the correct location before I apply any config. And afterwards push the `terraform.tfstate` file back into the private repo. But again I don*t know if this is a good way to go.\r\n\r\nI assume both ideas are not really a good practice? Maybe anyone got a better idea or a hint? Maybe there is some sort of free (0 Dollar) storage in some cloud? I'm thinking AWS, GCP? Or rather Linode or DigitalOcean (because they are smaller and easier to handle). I would prefer a free cloud solutions because I don't need the terraform state 24/7 ... only on demand when I apply a configuration.\r\n\r\nI'd appreciate any help or idea or discussion. Thanks everyone and best regards. Sebastian\r\n\r\n\r\n  [1]: https://registry.terraform.io/providers/integrations/github/latest/docs", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I'm using terraform to ensure a consistent configuration for my github repos using the [Terraform Github Provider][1]. ", "keywords": ["provider"]}, {"source": "Text", "text": "But I do not want to set up an S3 bucket or anything similar that would cost some money. ", "keywords": ["cost"]}, {"source": "Text", "text": "Maybe there is some sort of free (0 Dollar) storage in some cloud? ", "keywords": ["storage"]}]}], "answers": [{"Id": "74900736", "PostTypeId": "2", "ParentId": "74900634", "CreationDate": "2022-12-23T14:27:06.667", "Score": "0", "Body": "<blockquote>\n<p>But I do not want to set up an S3 bucket or anything similar that would cost some money.</p>\n</blockquote>\n<p>The amount of data transfer, and the size of the state file, would almost certainly fall within <a href=\"https://aws.amazon.com/s3/pricing/\" rel=\"nofollow noreferrer\">the free-tier of AWS</a>.</p>\n<blockquote>\n<p>AWS customers receive 5GB of Amazon S3 storage in the S3 Standard storage class; 20,000 GET Requests; 2,000 PUT, COPY, POST, or LIST Requests; and 100 GB of Data Transfer Out each month.</p>\n</blockquote>\n", "OwnerUserId": "13070", "LastActivityDate": "2022-12-23T14:27:06.667", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "284866868", "PostHistoryTypeId": "2", "PostId": "74900736", "RevisionGUID": "a02ff8a8-c17d-419d-baef-f971a9e48cf6", "CreationDate": "2022-12-23T14:27:06.667", "UserId": "13070", "Text": "> But I do not want to set up an S3 bucket or anything similar that would cost some money.\r\n\r\nThe amount of data transfer, and the size of the state file, would almost certainly fall within [the free-tier of AWS][1].\r\n\r\n> AWS customers receive 5GB of Amazon S3 storage in the S3 Standard storage class; 20,000 GET Requests; 2,000 PUT, COPY, POST, or LIST Requests; and 100 GB of Data Transfer Out each month.\r\n\r\n\r\n  [1]: https://aws.amazon.com/s3/pricing/", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "> But I do not want to set up an S3 bucket or anything similar that would cost some money. ", "keywords": ["cost"]}, {"source": "Text", "text": "> AWS customers receive 5GB of Amazon S3 storage in the S3 Standard storage class; 20,000 GET Requests; 2,000 PUT, COPY, POST, or LIST Requests; and 100 GB of Data Transfer Out each month. ", "keywords": ["storage"]}]}], "filtered-sentences": [{"source": "Body", "text": "But I do not want to set up an S3 bucket or anything similar that would cost some money. ", "keywords": ["cost"]}, {"source": "Body", "text": "AWS customers receive 5GB of Amazon S3 storage in the S3 Standard storage class; 20,000 GET Requests; 2,000 PUT, COPY, POST, or LIST Requests; and 100 GB of Data Transfer Out each month.", "keywords": ["storage"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I'm using terraform to ensure a consistent configuration for my github repos using the Terraform Github Provider. ", "keywords": ["provider"]}, {"source": "Body", "text": "But I do not want to set up an S3 bucket or anything similar that would cost some money. ", "keywords": ["cost"]}, {"source": "Body", "text": "Maybe there is some sort of free (0 Dollar) storage in some cloud? ", "keywords": ["storage"]}]}