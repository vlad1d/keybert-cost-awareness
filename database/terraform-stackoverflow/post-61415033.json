{"Id": "61415033", "PostTypeId": "1", "AcceptedAnswerId": "61419676", "CreationDate": "2020-04-24T18:24:22.927", "Score": "3", "ViewCount": "454", "Body": "<p>I have a module for service-accounts in GCP being used to populate kubernetes secrets</p>\n\n<p>Here is my module</p>\n\n<pre><code>resource \"google_service_account\" \"service_account\" {\n  count        = var.enabled ? 1 : 0\n  account_id   = var.account_id\n  display_name = var.display_name\n}\n\nresource \"google_project_iam_member\" \"service_account_roles\" {\n  count  = var.enabled ? length(var.roles) : 0\n  role   = \"roles/${element(var.roles, count.index)}\"\n  member = \"serviceAccount:${google_service_account.service_account[0].email}\"\n}\n\nresource \"google_service_account_key\" \"service_account_key\" {\n  count              = var.enabled ? 1 : 0\n  service_account_id = google_service_account.service_account[0].name\n}\n</code></pre>\n\n<p>'output.tf' contains the following</p>\n\n<pre><code>output \"private_decoded_key\" {\n  value = base64decode(\n    element(\n      concat(\n        google_service_account_key.service_account_key.*.private_key,\n        [\"\"],\n      ),\n      0,\n    ),\n  )\n  description = \"The base 64 decoded version of the credentials\"\n}\n</code></pre>\n\n<p>Since there is a conditional that none of these resources are created without the <code>enabled</code> flag, I had to handle it in TF 0.11.14 this way, and the tf0.12 autoupgrade tool didnt do much changes here. </p>\n\n<p>How can I simplify this in Terraform 0.12.24, \nI tried modifying the output to simply</p>\n\n<pre><code>value = base64decode(google_service_account_key.service_account_key[0].private_key)\n</code></pre>\n\n<p>But the problem there is that if the corresponding kubernetes cluster gets deleted during a deletion, and there are errors midway because terraform, I will not be able to cleanup the terraform state of the rest of the resources using \n`terraform destroy'</p>\n\n<p>Attempts to convert the <code>count</code> to <code>for_each</code> as shown below gave me the following errors</p>\n\n<pre><code>resource \"google_service_account\" \"service_account\" {\n  # count        = var.enabled ? 1 : 0\n  for_each     = var.enabled ? 1 : 0\n  account_id   = var.account_id\n  display_name = var.display_name\n}\n\nresource \"google_project_iam_member\" \"service_account_roles\" {\n  # count  = var.enabled ? length(var.roles) : 0\n  for_each = var.enabled ? toset(var.roles) : 0\n  # role   = \"roles/${element(var.roles, count.index)}\"\n  role     = \"roles/${each.value}\" \n  member   = \"serviceAccount:${google_service_account.service_account[0].email}\"\n}\n</code></pre>\n\n<pre><code>for_each = var.enabled ? toset(var.roles) : 0\n\nThe true and false result expressions must have consistent types. The given\nexpressions are set of dynamic and number, respectively.\n</code></pre>\n\n<p>What am I doing wrong above ?</p>\n", "OwnerUserId": "9676485", "LastEditorUserId": "9676485", "LastEditDate": "2020-04-25T07:39:55.003", "LastActivityDate": "2020-04-25T14:40:32.253", "Title": "Inheriting Values from output.tf with conditional resources using TF 0.12+", "Tags": "<google-cloud-platform><terraform><terraform-provider-gcp><terraform0.12+><terraform-provider-kubernetes>", "AnswerCount": "1", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "108648149", "PostId": "61415033", "Score": "0", "Text": "I am not sure if I understand your problem completely. But As per my understanding are you talking about the condition in output. If you are then you may use `depends_on` with the output values.", "CreationDate": "2020-04-24T21:28:25.477", "UserId": "2779323", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "220038597", "PostHistoryTypeId": "2", "PostId": "61415033", "RevisionGUID": "9228fa2e-6956-4773-966a-50a8b2ad674d", "CreationDate": "2020-04-24T18:24:22.927", "UserId": "9676485", "Text": "I have a module for service-accounts in GCP being used to populate kubernetes secrets\r\n\r\nHere is my module\r\n```\r\nresource \"google_service_account\" \"service_account\" {\r\n  count        = var.enabled ? 1 : 0\r\n  account_id   = var.account_id\r\n  display_name = var.display_name\r\n}\r\n\r\nresource \"google_project_iam_member\" \"service_account_roles\" {\r\n  count  = var.enabled ? length(var.roles) : 0\r\n  role   = \"roles/${element(var.roles, count.index)}\"\r\n  member = \"serviceAccount:${google_service_account.service_account[0].email}\"\r\n}\r\n\r\nresource \"google_service_account_key\" \"service_account_key\" {\r\n  count              = var.enabled ? 1 : 0\r\n  service_account_id = google_service_account.service_account[0].name\r\n}\r\n```\r\n\r\n'output.tf' contains the following\r\n```\r\noutput \"private_decoded_key\" {\r\n  value = base64decode(\r\n    element(\r\n      concat(\r\n        google_service_account_key.service_account_key.*.private_key,\r\n        [\"\"],\r\n      ),\r\n      0,\r\n    ),\r\n  )\r\n  description = \"The base 64 decoded version of the credentials\"\r\n}\r\n```\r\n\r\nSince there is a conditional that none of these resources are created without the `enabled` flag, I had to handle it in TF 0.11.14 this way, and the tf0.12 autoupgrade tool didnt do much changes here. \r\n\r\nHow can I simplify this in Terraform 0.12.24, \r\nI tried modifying the output to simply\r\n\r\n```\r\nvalue = base64decode(google_service_account_key.service_account_key[0].private_key)\r\n```\r\n\r\nBut the problem there is that if the corresponding kubernetes cluster gets deleted during a deletion, and there are errors midway because terraform, I will not be able to cleanup the terraform state of the rest of the resources using \r\n`terraform destroy'\r\n\r\nAlso how can I handle such conditional situation using `for_each` instead of `count` ?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Since there is a conditional that none of these resources are created without the `enabled` flag, I had to handle it in TF 0.11.14 this way, and the tf0.12 autoupgrade tool didnt do much changes here. ", "keywords": ["change"]}, {"source": "Text", "text": "But the problem there is that if the corresponding kubernetes cluster gets deleted during a deletion, and there are errors midway because terraform, I will not be able to cleanup the terraform state of the rest of the resources using `terraform destroy' ", "keywords": ["cluster"]}]}, {"Id": "220038598", "PostHistoryTypeId": "1", "PostId": "61415033", "RevisionGUID": "9228fa2e-6956-4773-966a-50a8b2ad674d", "CreationDate": "2020-04-24T18:24:22.927", "UserId": "9676485", "Text": "Inheriting Values from output.tf with conditional resources using TF 0.12+", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "220038599", "PostHistoryTypeId": "3", "PostId": "61415033", "RevisionGUID": "9228fa2e-6956-4773-966a-50a8b2ad674d", "CreationDate": "2020-04-24T18:24:22.927", "UserId": "9676485", "Text": "<google-cloud-platform><terraform><terraform-provider-gcp><terraform0.12+><terraform-provider-kubernetes>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "220078668", "PostHistoryTypeId": "5", "PostId": "61415033", "RevisionGUID": "6c9c562d-ef90-49e3-9a26-aecff046b6de", "CreationDate": "2020-04-25T07:39:55.003", "UserId": "9676485", "Comment": "added 1091 characters in body", "Text": "I have a module for service-accounts in GCP being used to populate kubernetes secrets\r\n\r\nHere is my module\r\n```\r\nresource \"google_service_account\" \"service_account\" {\r\n  count        = var.enabled ? 1 : 0\r\n  account_id   = var.account_id\r\n  display_name = var.display_name\r\n}\r\n\r\nresource \"google_project_iam_member\" \"service_account_roles\" {\r\n  count  = var.enabled ? length(var.roles) : 0\r\n  role   = \"roles/${element(var.roles, count.index)}\"\r\n  member = \"serviceAccount:${google_service_account.service_account[0].email}\"\r\n}\r\n\r\nresource \"google_service_account_key\" \"service_account_key\" {\r\n  count              = var.enabled ? 1 : 0\r\n  service_account_id = google_service_account.service_account[0].name\r\n}\r\n```\r\n\r\n'output.tf' contains the following\r\n```\r\noutput \"private_decoded_key\" {\r\n  value = base64decode(\r\n    element(\r\n      concat(\r\n        google_service_account_key.service_account_key.*.private_key,\r\n        [\"\"],\r\n      ),\r\n      0,\r\n    ),\r\n  )\r\n  description = \"The base 64 decoded version of the credentials\"\r\n}\r\n```\r\n\r\nSince there is a conditional that none of these resources are created without the `enabled` flag, I had to handle it in TF 0.11.14 this way, and the tf0.12 autoupgrade tool didnt do much changes here. \r\n\r\nHow can I simplify this in Terraform 0.12.24, \r\nI tried modifying the output to simply\r\n\r\n```\r\nvalue = base64decode(google_service_account_key.service_account_key[0].private_key)\r\n```\r\n\r\nBut the problem there is that if the corresponding kubernetes cluster gets deleted during a deletion, and there are errors midway because terraform, I will not be able to cleanup the terraform state of the rest of the resources using \r\n`terraform destroy'\r\n\r\nAttempts to convert the `count` to `for_each` as shown below gave me the following errors\r\n\r\n```\r\nresource \"google_service_account\" \"service_account\" {\r\n  # count        = var.enabled ? 1 : 0\r\n  for_each     = var.enabled ? 1 : 0\r\n  account_id   = var.account_id\r\n  display_name = var.display_name\r\n}\r\n\r\nresource \"google_project_iam_member\" \"service_account_roles\" {\r\n  # count  = var.enabled ? length(var.roles) : 0\r\n  for_each = var.enabled ? toset(var.roles) : 0\r\n  # role   = \"roles/${element(var.roles, count.index)}\"\r\n  role     = \"roles/${each.value}\" \r\n  member   = \"serviceAccount:${google_service_account.service_account[0].email}\"\r\n}\r\n```\r\n```\r\nfor_each = var.enabled ? toset(var.roles) : 0\r\n\r\nThe true and false result expressions must have consistent types. The given\r\nexpressions are set of dynamic and number, respectively.\r\n```\r\n\r\nWhat am I doing wrong above ?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Since there is a conditional that none of these resources are created without the `enabled` flag, I had to handle it in TF 0.11.14 this way, and the tf0.12 autoupgrade tool didnt do much changes here. ", "keywords": ["change"]}, {"source": "Text", "text": "But the problem there is that if the corresponding kubernetes cluster gets deleted during a deletion, and there are errors midway because terraform, I will not be able to cleanup the terraform state of the rest of the resources using `terraform destroy' ", "keywords": ["cluster"]}]}], "answers": [{"Id": "61419676", "PostTypeId": "2", "ParentId": "61415033", "CreationDate": "2020-04-25T00:54:33.090", "Score": "3", "Body": "<p>In the terraform version you mentioned (0.12.24) you should be able to use <a href=\"https://www.terraform.io/docs/configuration/functions/try.html\" rel=\"nofollow noreferrer\"><code>try()</code></a> in your <code>outputs.tf</code>:</p>\n\n<pre><code>value = try(base64decode(google_service_account_key.service_account_key[0].private_key), \"\")\n</code></pre>\n\n<p>This would default to <code>\"\"</code> if <code>google_service_account_key.service_account_key[0].private_key</code> is not resolvable for any reason; you can also default to <code>null</code> of course.</p>\n\n<p><strong>Edit/Update</strong>: To answer second (edited) part of the question:</p>\n\n<p>To get rid of the error that both sides need to have the same type, you need to use <code>[]</code> as an empty set instead of <code>0</code> when converting to <code>for_each</code>: </p>\n\n<pre><code>for_each = var.enabled ? toset(var.roles) : []\n</code></pre>\n\n<p>Please pay attention with existing infrastructure as you need to manipulate the state file when converting from <code>count</code> to <code>for_each</code> or terraform will try to destroy and create resources.</p>\n\n<p>(I will cover this in more detail in part 3 of a series of stories I am currently working on about how to write terraform modules. You can find <a href=\"https://medium.com/mineiros/the-ultimate-guide-on-how-to-write-terraform-modules-part-1-81f86d31f024?source=friends_link&amp;sk=1dbb61a844b4eafd50937c82cdc37e67\" rel=\"nofollow noreferrer\">part 1 on medium</a> and part 2 will be released next week.)</p>\n", "OwnerUserId": "2157547", "LastEditorUserId": "2157547", "LastEditDate": "2020-04-25T14:40:32.253", "LastActivityDate": "2020-04-25T14:40:32.253", "CommentCount": "4", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "108655921", "PostId": "61419676", "Score": "0", "Text": "Do you know how to solve the count to for_each problem above ?", "CreationDate": "2020-04-25T07:43:30.057", "UserId": "9676485", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "108664039", "PostId": "61419676", "Score": "0", "Text": "@ShoaibAhmedNasir updated the answer explaining how to fix your problem.", "CreationDate": "2020-04-25T14:41:29.127", "UserId": "2157547", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "108670758", "PostId": "61419676", "Score": "0", "Text": "Can for_each also be used for conditional resources ?  for_each = var.enabled ? 1 : 0, gives me an error \"The given \"for_each\" argument value is unsuitable: the \"for_each\" argumentmust be a map, or set of strings, and you have provided a value of type\nnumber.\"", "CreationDate": "2020-04-25T19:25:07.450", "UserId": "9676485", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "108674867", "PostId": "61419676", "Score": "1", "Text": "@ShoaibAhmedNasir you basically find three types of resources in terraform today (as described in my linked article): single resources, bulk resources with `count`, and bulk resources with `for_each`.. it does not make sense to replace all `count` with `for_each` just for the sake of using `for_each`.. so it makes sense to see how the resource will be extended/used in the future.. for single resources I would keep it with `count` to enable/disable them. if you know this will be used as a bulk resource soon, try to make it a `for_each` unless the keys depend on computed values.", "CreationDate": "2020-04-25T22:58:47.423", "UserId": "2157547", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "220060937", "PostHistoryTypeId": "2", "PostId": "61419676", "RevisionGUID": "835c48cc-f822-4153-8a5c-fe98ff1cf249", "CreationDate": "2020-04-25T00:54:33.090", "UserId": "2157547", "Text": "In the terraform version you mentioned (0.12.24) you should be able to use [`try()`](https://www.terraform.io/docs/configuration/functions/try.html) in your `outputs.tf`:\r\n\r\n```hcl\r\nvalue = try(base64decode(google_service_account_key.service_account_key[0].private_key), \"\")\r\n```\r\n\r\nThis would default to `\"\"` if `google_service_account_key.service_account_key[0].private_key` is not resolvable for any reason; you can also default to `null` of course.\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "220098953", "PostHistoryTypeId": "5", "PostId": "61419676", "RevisionGUID": "b206f9df-05d8-4e5c-a167-dde86d702c0f", "CreationDate": "2020-04-25T14:40:32.253", "UserId": "2157547", "Comment": "added 839 characters in body", "Text": "In the terraform version you mentioned (0.12.24) you should be able to use [`try()`](https://www.terraform.io/docs/configuration/functions/try.html) in your `outputs.tf`:\r\n\r\n```hcl\r\nvalue = try(base64decode(google_service_account_key.service_account_key[0].private_key), \"\")\r\n```\r\n\r\nThis would default to `\"\"` if `google_service_account_key.service_account_key[0].private_key` is not resolvable for any reason; you can also default to `null` of course.\r\n\r\n\r\n**Edit/Update**: To answer second (edited) part of the question:\r\n\r\nTo get rid of the error that both sides need to have the same type, you need to use `[]` as an empty set instead of `0` when converting to `for_each`: \r\n\r\n```\r\nfor_each = var.enabled ? toset(var.roles) : []\r\n```\r\n\r\nPlease pay attention with existing infrastructure as you need to manipulate the state file when converting from `count` to `for_each` or terraform will try to destroy and create resources.\r\n\r\n(I will cover this in more detail in part 3 of a series of stories I am currently working on about how to write terraform modules. You can find [part 1 on medium](https://medium.com/mineiros/the-ultimate-guide-on-how-to-write-terraform-modules-part-1-81f86d31f024?source=friends_link&sk=1dbb61a844b4eafd50937c82cdc37e67) and part 2 will be released next week.)", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Please pay attention with existing infrastructure as you need to manipulate the state file when converting from `count` to `for_each` or terraform will try to destroy and create resources. ", "keywords": ["pay"]}]}], "filtered-sentences": [{"source": "Body", "text": "Please pay attention with existing infrastructure as you need to manipulate the state file when converting from count to for_each or terraform will try to destroy and create resources. ", "keywords": ["pay"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "Since there is a conditional that none of these resources are created without the enabled flag, I had to handle it in TF 0.11.14 this way, and the tf0.12 autoupgrade tool didnt do much changes here. ", "keywords": ["change"]}, {"source": "Body", "text": "But the problem there is that if the corresponding kubernetes cluster gets deleted during a deletion, and there are errors midway because terraform, I will not be able to cleanup the terraform state of the rest of the resources using `terraform destroy' ", "keywords": ["cluster"]}]}