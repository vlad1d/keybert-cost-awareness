{"Id": "62932914", "PostTypeId": "1", "AcceptedAnswerId": "62933377", "CreationDate": "2020-07-16T10:42:00.233", "Score": "1", "ViewCount": "2864", "Body": "<p>Am currently running some Terraform to create resources in Azure.  We have a module we have written to create a resource group with a bunch of variables.  The provider currently does not allow the creation of budgets and cost alerts but the Powershell modules do.  I thought we could then add a Powershell script to carry out the settings.  I seem to be hitting a snag where I cannot quite work out how to address the Powershell script.  I have the following:</p>\n<pre><code>resource &quot;null_resource&quot; &quot;PowerShellScriptRunAlways&quot; {\n    triggers = {\n        always_run = &quot;${timestamp()}&quot;\n    }\n\n    provisioner &quot;local-exec&quot; {\n        command = &quot;.'${path.module}//pwsh//costalert.ps1 -subscriptionID \\&quot;${var.azure_subscription_id}\\&quot; -tenantID \\&quot;${var.azure_tenant_id}\\&quot; -clientID \\&quot;${var.azure_client_id}\\&quot; -clientSecret \\&quot;${var.azure_client_secret}\\&quot; -budgetAmount \\&quot;${var.budgetAmount}\\&quot; -rgName \\&quot;${azurerm_resource_group.this.name}\\&quot; -emailAddresses \\&quot;${var.emailAddresses}\\&quot;'&quot;\n        interpreter = [&quot;pwsh&quot;, &quot;-Command&quot;]\n    }\n}\n</code></pre>\n<p>using pwsh as this is running on a Linux Jenkins agent.  This is part of a module where the ps1 file is under &quot;root module directory/pwsh&quot; but it seems to yield the following:</p>\n<pre><code>Error: Error running command '.'.terraform/modules/rg_test\\pwsh\\costalert.ps1 -subscriptionID &quot;xxxxx&quot; -tenantID &quot;xxxxxxx&quot; -clientID &quot;xxxxxx&quot; -clientSecret &quot;xxxxx&quot; -budgetAmount &quot;1000&quot; -rgName &quot;rg-da_test-sbxeng-001&quot; -emailAddresses &quot;xxxxxx&quot;'': exit status 1. Output: . : The module '.terraform/modules/rg_test' could not be loaded. For more information, run 'Import-Module .terraform/modules/rg_test\n+ .'.terraform/modules/rg_test\\pwsh\\costalert.ps1 -subscriptionID \n</code></pre>\n<p>It seems to be switching the path but cannot seem to make it pick up the script and run it.  Does anyone have any suggestions?</p>\n", "OwnerDisplayName": "user275560", "LastEditorUserId": "2291321", "LastEditDate": "2020-07-16T10:54:06.867", "LastActivityDate": "2020-07-16T11:08:22.483", "Title": "Running Powershell script in Terraform module", "Tags": "<linux><powershell><terraform>", "AnswerCount": "1", "CommentCount": "0", "FavoriteCount": "0", "ContentLicense": "CC BY-SA 4.0", "links": [{"Id": "1762389416", "CreationDate": "2020-07-16T11:21:08.610", "PostId": "62932914", "RelatedPostId": "55679852", "LinkTypeId": "1"}], "history": [{"Id": "226746212", "PostHistoryTypeId": "2", "PostId": "62932914", "RevisionGUID": "17c4e327-81e0-4d07-a6ff-f087727b98d9", "CreationDate": "2020-07-16T10:42:00.233", "UserDisplayName": "user275560", "Text": "Am currently running some terraform to create resources in Azure.  We have a module we have written to create a resource group with a bunch of variables.  The provider currently does not allow the creation of budgets and cost alerts but the powershell modules do.  I thought we could then add a powershell script to carry out the settings.  I seem to be hitting a snag where I cannot quite work out how to addressthe powershell script.  I have the following:\r\n\r\n    resource \"null_resource\" \"PowerShellScriptRunAlways\" {\r\n        triggers = {\r\n            always_run = \"${timestamp()}\"\r\n        }\r\n    \r\n        provisioner \"local-exec\" {\r\n            command = \".'${path.module}//pwsh//costalert.ps1 -subscriptionID \\\"${var.azure_subscription_id}\\\" -tenantID \\\"${var.azure_tenant_id}\\\" -clientID \\\"${var.azure_client_id}\\\" -clientSecret \\\"${var.azure_client_secret}\\\" -budgetAmount \\\"${var.budgetAmount}\\\" -rgName \\\"${azurerm_resource_group.this.name}\\\" -emailAddresses \\\"${var.emailAddresses}\\\"'\"\r\n            interpreter = [\"pwsh\", \"-Command\"]\r\n        }\r\n    }\r\n\r\nusing pwsh as this is running on a linux jenkins slave.  This is part of a module where the ps1 file is under \"root module directory/pwsh\" but it seems to yield the following:\r\n\r\n    Error: Error running command '.'.terraform/modules/rg_test\\pwsh\\costalert.ps1 -subscriptionID \"xxxxx\" -tenantID \"xxxxxxx\" -clientID \"xxxxxx\" -clientSecret \"xxxxx\" -budgetAmount \"1000\" -rgName \"rg-da_test-sbxeng-001\" -emailAddresses \"xxxxxx\"'': exit status 1. Output: . : The module '.terraform/modules/rg_test' could not be loaded. For more information, run 'Import-Module .terraform/modules/rg_test\r\n    + .'.terraform/modules/rg_test\\pwsh\\costalert.ps1 -subscriptionID \r\n\r\nIt seems to be switching the path but cannot seem to make it pick up the script and run it.  Does anyone have any suggestions?\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "The provider currently does not allow the creation of budgets and cost alerts but the powershell modules do. ", "keywords": ["cost", "provider"]}]}, {"Id": "226746213", "PostHistoryTypeId": "1", "PostId": "62932914", "RevisionGUID": "17c4e327-81e0-4d07-a6ff-f087727b98d9", "CreationDate": "2020-07-16T10:42:00.233", "UserDisplayName": "user275560", "Text": "Running powershell script in terraform module", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "226746214", "PostHistoryTypeId": "3", "PostId": "62932914", "RevisionGUID": "17c4e327-81e0-4d07-a6ff-f087727b98d9", "CreationDate": "2020-07-16T10:42:00.233", "UserDisplayName": "user275560", "Text": "<linux><powershell><terraform>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "226747079", "PostHistoryTypeId": "5", "PostId": "62932914", "RevisionGUID": "4355323d-8ded-45d6-85db-1088613b94bc", "CreationDate": "2020-07-16T10:54:06.867", "UserId": "2291321", "Comment": "added 1 character in body; edited title", "Text": "Am currently running some Terraform to create resources in Azure.  We have a module we have written to create a resource group with a bunch of variables.  The provider currently does not allow the creation of budgets and cost alerts but the Powershell modules do.  I thought we could then add a Powershell script to carry out the settings.  I seem to be hitting a snag where I cannot quite work out how to address the Powershell script.  I have the following:\r\n\r\n    resource \"null_resource\" \"PowerShellScriptRunAlways\" {\r\n        triggers = {\r\n            always_run = \"${timestamp()}\"\r\n        }\r\n    \r\n        provisioner \"local-exec\" {\r\n            command = \".'${path.module}//pwsh//costalert.ps1 -subscriptionID \\\"${var.azure_subscription_id}\\\" -tenantID \\\"${var.azure_tenant_id}\\\" -clientID \\\"${var.azure_client_id}\\\" -clientSecret \\\"${var.azure_client_secret}\\\" -budgetAmount \\\"${var.budgetAmount}\\\" -rgName \\\"${azurerm_resource_group.this.name}\\\" -emailAddresses \\\"${var.emailAddresses}\\\"'\"\r\n            interpreter = [\"pwsh\", \"-Command\"]\r\n        }\r\n    }\r\n\r\nusing pwsh as this is running on a Linux Jenkins agent.  This is part of a module where the ps1 file is under \"root module directory/pwsh\" but it seems to yield the following:\r\n\r\n    Error: Error running command '.'.terraform/modules/rg_test\\pwsh\\costalert.ps1 -subscriptionID \"xxxxx\" -tenantID \"xxxxxxx\" -clientID \"xxxxxx\" -clientSecret \"xxxxx\" -budgetAmount \"1000\" -rgName \"rg-da_test-sbxeng-001\" -emailAddresses \"xxxxxx\"'': exit status 1. Output: . : The module '.terraform/modules/rg_test' could not be loaded. For more information, run 'Import-Module .terraform/modules/rg_test\r\n    + .'.terraform/modules/rg_test\\pwsh\\costalert.ps1 -subscriptionID \r\n\r\nIt seems to be switching the path but cannot seem to make it pick up the script and run it.  Does anyone have any suggestions?\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "The provider currently does not allow the creation of budgets and cost alerts but the Powershell modules do. ", "keywords": ["cost", "provider"]}]}, {"Id": "226747080", "PostHistoryTypeId": "4", "PostId": "62932914", "RevisionGUID": "4355323d-8ded-45d6-85db-1088613b94bc", "CreationDate": "2020-07-16T10:54:06.867", "UserId": "2291321", "Comment": "added 1 character in body; edited title", "Text": "Running Powershell script in Terraform module", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "62933377", "PostTypeId": "2", "ParentId": "62932914", "CreationDate": "2020-07-16T11:08:22.483", "Score": "0", "Body": "<p>Isn't this a quoting issue?</p>\n<p>I can successfully execute this <code>pwsh</code> null resource from a terraform module in an Azure DevOps linux agent. Note that only the script path is single quoted, while in your example you've got the whole command single quoted.</p>\n<pre><code>resource &quot;null_resource&quot; &quot;create_sql_user&quot; {\n  provisioner &quot;local-exec&quot; {\n    command     = &quot;.'${path.module}\\\\scripts\\\\create-sql-user.ps1' -password \\&quot;${random_password.sql_password.result}\\&quot; -username \\&quot;${var.sql_username}\\&quot; -sqlSaConnectionString \\&quot;${var.sql_server_connectionstring}\\&quot; -databaseName \\&quot;${azurerm_sql_database.db.name}\\&quot; &quot;\n    interpreter = [&quot;pwsh&quot;, &quot;-Command&quot;]\n  }\n  depends_on = [azurerm_sql_database.db]\n}\n</code></pre>\n", "OwnerUserId": "2966939", "LastActivityDate": "2020-07-16T11:08:22.483", "CommentCount": "4", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "111291209", "PostId": "62933377", "Score": "0", "Text": "hmmm have adjust but still get the same.  is the first \".\" there as a dot source or as an indication of executing from the current directory?", "CreationDate": "2020-07-16T11:14:40.120", "UserDisplayName": "user275560", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "111291415", "PostId": "62933377", "Score": "0", "Text": "I am not really sure. You could also try `working_dir` as specified here, might be a cleaner option than the quoting shenanigans we're both doing. \nhttps://stackoverflow.com/questions/55679852/relative-path-in-local-exec", "CreationDate": "2020-07-16T11:21:08.610", "UserId": "2966939", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "111291939", "PostId": "62933377", "Score": "0", "Text": "ah ok so combination of things.  updated the single quote as you described but also had to replace \"\\\\\" with \"/\" after {path.module}.  Finally had removed the workspace cleanup stanza to help troubleshoot so was not actually pulling new changes.", "CreationDate": "2020-07-16T11:37:22.143", "UserDisplayName": "user275560", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Finally had removed the workspace cleanup stanza to help troubleshoot so was not actually pulling new changes.", "keywords": ["change"]}]}, {"Id": "111292002", "PostId": "62933377", "Score": "0", "Text": "Glad to have lead you to a working solution. :) If you can post the final working `command` string, I'll update the answer with: When running on Linux Jenkins node ... reference the script as such.", "CreationDate": "2020-07-16T11:39:24.410", "UserId": "2966939", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "226748097", "PostHistoryTypeId": "2", "PostId": "62933377", "RevisionGUID": "cbb8061d-c4a8-4da1-8020-72f9320b4980", "CreationDate": "2020-07-16T11:08:22.483", "UserId": "2966939", "Text": "Isn't this a quoting issue?\r\n\r\nI can successfully execute this `pwsh` null resource from a terraform module in an Azure DevOps linux agent. Note that only the script path is single quoted, while in your example you've got the whole command single quoted.\r\n\r\n    resource \"null_resource\" \"create_sql_user\" {\r\n      provisioner \"local-exec\" {\r\n        command     = \".'${path.module}\\\\scripts\\\\create-sql-user.ps1' -password \\\"${random_password.sql_password.result}\\\" -username \\\"${var.sql_username}\\\" -sqlSaConnectionString \\\"${var.sql_server_connectionstring}\\\" -databaseName \\\"${azurerm_sql_database.db.name}\\\" \"\r\n        interpreter = [\"pwsh\", \"-Command\"]\r\n      }\r\n      depends_on = [azurerm_sql_database.db]\r\n    }", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "The provider currently does not allow the creation of budgets and cost alerts but the Powershell modules do. ", "keywords": ["cost", "provider"]}]}