{"Id": "76923167", "PostTypeId": "1", "CreationDate": "2023-08-17T15:53:26.107", "Score": "0", "ViewCount": "24", "Body": "<p>I am trying to create an Azure premium Front Door with a number of origin groups, origins, and routing rules. So I have numerous for_each loops to iterate through all of these components. I then want to declare the variables in variables.tf but actually identify the variable in the tfvars file for each of my environments, so I can have DEV, QA, and PROD separate and identical.</p>\n<p>My main.tf file to configure one of the domains looks like this:</p>\n<pre><code>resource &quot;azurerm_cdn_frontdoor_origin_group&quot; &quot;appadmin_group&quot; {\n  for_each                              = var.fd_appadmin\n  name                                  = each.key\n  cdn_frontdoor_profile_id              = azurerm_cdn_frontdoor_profile.appfd.id\n  session_affinity_enabled              = true\n</code></pre>\n<p>variables.tf:</p>\n<pre><code>variable &quot;fd_appadmin&quot; {\n  type                  = map(object({\n    frontend_name       = list(string),\n    origin_host_name    = list(string)\n  }))\n}\n</code></pre>\n<p>terraform.tfvars:</p>\n<pre><code>fd_appadmin                          = {\n  appadmin                         = {\n    frontend_name                   = &quot;dev-appadmin-web&quot;\n    origin_host_name                = &quot;appadmin-dev-eastus&quot;\n  }\n  appadminv2                       = {\n    frontend_name                   = &quot;admin-portalv2&quot;\n    origin_host_name                = &quot;appadmin2-dev-eastus&quot;\n  }\n}\n</code></pre>\n<p>My belief is that this should give me two origin groups associated with the appfd frontdoor profile: one named appadmin (frontend_name &quot;dev-appadmin-web&quot; and origin_host_name &quot;appadmin-dev-eastus&quot;) and the other named appadminv2 ((frontend_name &quot;admin-portalv2&quot; and origin_host_name &quot;appadmin2-dev-eastus&quot;). Yet when I run it through an ADO pipeline for tfplan (and it works for everything that doesn't involve loops), it highlights the above part from the tfvars file and provides the following error:</p>\n<pre><code>The given value is not suitable for var.fd_appadmin declared at variables.tf element &quot;appadmin&quot;: attribute &quot;frontend_name&quot;, list of string required.\n</code></pre>\n<p>I've tried several other formats but can't seem to get it just right. I could certainly iterate through each of these components manually, but that would be tedious and less efficient.</p>\n", "OwnerUserId": "22388180", "LastActivityDate": "2023-08-17T16:28:46.213", "Title": "How do I properly configure Terraform loops with both variables.tf and terraform.tfvars?", "Tags": "<azure-devops><terraform>", "AnswerCount": "1", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "135608545", "PostId": "76923167", "Score": "0", "Text": "@jayzee that works when I hardcode it into variables.tf as you suggest, but I'm still struggling to transfer it over to tfvars and only have the variable and type=map(map(string)) in variables.tf. It says, \"the given value is not suitable for var.fd_appadmin declaredat variables.tf, element \"default\": element \"qsightadminv2\": string required.\n\nI did previously put my structure in the variables.tf file, with each key having a value of \"string\", but it didn't like that either.", "CreationDate": "2023-08-17T19:49:15.863", "UserId": "22388180", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "296775202", "PostHistoryTypeId": "2", "PostId": "76923167", "RevisionGUID": "ad83ac76-6dcb-4865-92ac-c741caffcf4b", "CreationDate": "2023-08-17T15:53:26.107", "UserId": "22388180", "Text": "I am trying to create an Azure premium Front Door with a number of origin groups, origins, and routing rules. So I have numerous for_each loops to iterate through all of these components. I then want to declare the variables in variables.tf but actually identify the variable in the tfvars file for each of my environments, so I can have DEV, QA, and PROD separate and identical.\r\n\r\nMy main.tf file to configure one of the domains looks like this:\r\n\r\n```\r\nresource \"azurerm_cdn_frontdoor_origin_group\" \"appadmin_group\" {\r\n  for_each                              = var.fd_appadmin\r\n  name                                  = each.key\r\n  cdn_frontdoor_profile_id              = azurerm_cdn_frontdoor_profile.appfd.id\r\n  session_affinity_enabled              = true\r\n```\r\n\r\nvariables.tf:\r\n\r\n```\r\nvariable \"fd_appadmin\" {\r\n  type                  = map(object({\r\n    frontend_name       = list(string),\r\n    origin_host_name    = list(string)\r\n  }))\r\n}\r\n```\r\n\r\nterraform.tfvars:\r\n\r\n```\r\nfd_appadmin                          = {\r\n  appadmin                         = {\r\n    frontend_name                   = \"dev-appadmin-web\"\r\n    origin_host_name                = \"appadmin-dev-eastus\"\r\n  }\r\n  appadminv2                       = {\r\n    frontend_name                   = \"admin-portalv2\"\r\n    origin_host_name                = \"appadmin2-dev-eastus\"\r\n  }\r\n}\r\n```\r\n\r\nMy belief is that this should give me two origin groups associated with the appfd frontdoor profile: one named appadmin (frontend_name \"dev-appadmin-web\" and origin_host_name \"appadmin-dev-eastus\") and the other named appadminv2 ((frontend_name \"admin-portalv2\" and origin_host_name \"appadmin2-dev-eastus\"). Yet when I run it through an ADO pipeline for tfplan (and it works for everything that doesn't involve loops), it highlights the above part from the tfvars file and provides the following error:\r\n\r\n```\r\nThe given value is not suitable for var.fd_appadmin declared at variables.tf element \"appadmin\": attribute \"frontend_name\", list of string required.\r\n```\r\n\r\nI've tried several other formats but can't seem to get it just right. I could certainly iterate through each of these components manually, but that would be tedious and less efficient.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I could certainly iterate through each of these components manually, but that would be tedious and less efficient.", "keywords": ["efficient"]}]}, {"Id": "296775204", "PostHistoryTypeId": "1", "PostId": "76923167", "RevisionGUID": "ad83ac76-6dcb-4865-92ac-c741caffcf4b", "CreationDate": "2023-08-17T15:53:26.107", "UserId": "22388180", "Text": "How do I properly configure Terraform loops with both variables.tf and terraform.tfvars?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "296775205", "PostHistoryTypeId": "3", "PostId": "76923167", "RevisionGUID": "ad83ac76-6dcb-4865-92ac-c741caffcf4b", "CreationDate": "2023-08-17T15:53:26.107", "UserId": "22388180", "Text": "<azure-devops><terraform>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "296775206", "PostHistoryTypeId": "66", "PostId": "76923167", "RevisionGUID": "ad83ac76-6dcb-4865-92ac-c741caffcf4b", "CreationDate": "2023-08-17T15:53:26.107", "UserId": "22388180", "filtered-sentences": []}], "answers": [{"Id": "76923380", "PostTypeId": "2", "ParentId": "76923167", "CreationDate": "2023-08-17T16:23:07.717", "Score": "0", "Body": "<p>Terraform complains because the type you're specifying is wrong, this should be the type:</p>\n<pre><code>variable &quot;fd_appadmin&quot; {\n    type = map(map(string))\n}\n</code></pre>\n<p>You can test it first hardcoding your tfvars as default:</p>\n<pre><code>variable &quot;fd_appadmin&quot; {\n    type    = map(map(string))\n    default = {\n        appadmin = {\n          frontend_name    = &quot;dev-appadmin-web&quot;\n          origin_host_name = &quot;appadmin-dev-eastus&quot;\n        }\n        appadminv2 = {\n          frontend_name    = &quot;admin-portalv2&quot;\n          origin_host_name = &quot;appadmin2-dev-eastus&quot;\n        }\n      }\n}\n</code></pre>\n<p>Here is a sample snippet independent from your code:</p>\n<pre><code>resource &quot;azurerm_storage_container&quot; &quot;storage_container_testarolo&quot; {\n  for_each              = var.containers\n  name                  = each.key\n  storage_account_name  = &quot;xyzmysageaccount&quot;\n  container_access_type = &quot;private&quot;\n  metadata              = each.value\n}\n\nvariable &quot;containers&quot; {\n  type    = map(map(string))\n  default = {\n    contaone = {\n      department = &quot;web&quot;\n      floor = &quot;forst&quot;\n    },\n    contatwo = {\n      department = &quot;system&quot; \n      floor = &quot;second&quot;\n    }\n  }\n}\n</code></pre>\n", "OwnerUserId": "998984", "LastEditorUserId": "998984", "LastEditDate": "2023-08-17T16:28:46.213", "LastActivityDate": "2023-08-17T16:28:46.213", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "296776466", "PostHistoryTypeId": "2", "PostId": "76923380", "RevisionGUID": "33161677-2eaf-4bd5-b56f-3acb45b10066", "CreationDate": "2023-08-17T16:23:07.717", "UserId": "998984", "Text": "Terraform complains because the type you're specifying is wrong, this should be the type:\r\n\r\n    variable \"fd_appadmin\" {\r\n        type = map(map(string))\r\n    }\r\n\r\nYou can test it first hardcoding your tfvars as default:\r\n\r\n    variable \"fd_appadmin\" {\r\n        type    = map(map(string))\r\n        default = {\r\n            appadmin = {\r\n              frontend_name    = \"dev-appadmin-web\"\r\n              origin_host_name = \"appadmin-dev-eastus\"\r\n            }\r\n            appadminv2 = {\r\n              frontend_name    = \"admin-portalv2\"\r\n              origin_host_name = \"appadmin2-dev-eastus\"\r\n            }\r\n          }\r\n    }", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "You can test it first hardcoding your tfvars as default: variable \"fd_appadmin\" { type = map(map(string)) default = { appadmin = { frontend_name = \"dev-appadmin-web\" origin_host_name = \"appadmin-dev-eastus\" } appadminv2 = { frontend_name = \"admin-portalv2\" origin_host_name = \"appadmin2-dev-eastus\" } } }", "keywords": ["test"]}]}, {"Id": "296776736", "PostHistoryTypeId": "5", "PostId": "76923380", "RevisionGUID": "76869cad-fe7a-4809-bb58-691abd5715b8", "CreationDate": "2023-08-17T16:28:46.213", "UserId": "998984", "Comment": "added 650 characters in body", "Text": "Terraform complains because the type you're specifying is wrong, this should be the type:\r\n\r\n    variable \"fd_appadmin\" {\r\n        type = map(map(string))\r\n    }\r\n\r\nYou can test it first hardcoding your tfvars as default:\r\n\r\n    variable \"fd_appadmin\" {\r\n        type    = map(map(string))\r\n        default = {\r\n            appadmin = {\r\n              frontend_name    = \"dev-appadmin-web\"\r\n              origin_host_name = \"appadmin-dev-eastus\"\r\n            }\r\n            appadminv2 = {\r\n              frontend_name    = \"admin-portalv2\"\r\n              origin_host_name = \"appadmin2-dev-eastus\"\r\n            }\r\n          }\r\n    }\r\n\r\n\r\nHere is a sample snippet independent from your code:\r\n\r\n    resource \"azurerm_storage_container\" \"storage_container_testarolo\" {\r\n      for_each              = var.containers\r\n      name                  = each.key\r\n      storage_account_name  = \"xyzmysageaccount\"\r\n      container_access_type = \"private\"\r\n      metadata              = each.value\r\n    }\r\n    \r\n    variable \"containers\" {\r\n      type    = map(map(string))\r\n      default = {\r\n        contaone = {\r\n          department = \"web\"\r\n          floor = \"forst\"\r\n        },\r\n        contatwo = {\r\n          department = \"system\" \r\n          floor = \"second\"\r\n        }\r\n      }\r\n    }", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Terraform complains because the type you're specifying is wrong, this should be the type: variable \"fd_appadmin\" { type = map(map(string)) } You can test it first hardcoding your tfvars as default: variable \"fd_appadmin\" { type = map(map(string)) default = { appadmin = { frontend_name = \"dev-appadmin-web\" origin_host_name = \"appadmin-dev-eastus\" } appadminv2 = { frontend_name = \"admin-portalv2\" origin_host_name = \"appadmin2-dev-eastus\" } } } ", "keywords": ["test"]}]}], "filtered-sentences": [{"source": "Body", "text": "You can test it first hardcoding your tfvars as default: ", "keywords": ["test"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I could certainly iterate through each of these components manually, but that would be tedious and less efficient.", "keywords": ["efficient"]}]}