{"Id": "76931712", "PostTypeId": "1", "CreationDate": "2023-08-18T18:13:01.680", "Score": "0", "ViewCount": "19", "Body": "<p><strong>Background</strong>\nMonorepo in gitlab which creates 1 state file for each region of the cloud provider. We want to create multiple repos out of the monorepo and accordingly create individual smaller state files which should match the state of what is in those individual repos.\nThis also includes separating out the modules into an external repository.</p>\n<p><strong>Issue</strong>\nI created one of the individual repository and modified the state json to match what is in that individual repo. Now was the time to upload the updated state to Gitlab. So based on gitlab documentation and a little bit of research I found this command which will initialize the repo on my local and upload the updated state to gitlab. Here is the command:</p>\n<pre><code>terraform init \\\n    -backend-config=&quot;address=https://gitlab.com/api/v4/projects/xxxxxxxx/terraform/state/indi-repo-dev&quot; \\\n    -backend-config=&quot;lock_address=https://gitlab.com/api/v4/projects/xxxxxxxx/terraform/state/indi-repo-dev/lock&quot; \\\n    -backend-config=&quot;unlock_address=https://gitlab.com/api/v4/projects/xxxxxx/terraform/state/indi-repo-dev/lock&quot; \\\n    -backend-config=&quot;username=proj-token&quot; \\\n    -backend-config=&quot;password=xxxxxxxxxxxxxx \\\n    -backend-config=&quot;lock_method=POST&quot; \\\n    -backend-config=&quot;unlock_method=DELETE&quot; \\\n    -backend-config=&quot;retry_wait_min=5&quot; --reconfigure\n</code></pre>\n<p>But this command constantly fails to read the module which gets downloaded from another gitlab repository. I have tried multiple things but every-time the module repo is downloaded it complains about either module dir does not exist of module path is invalid</p>\n<p>Below is the structure of my project</p>\n<pre><code>dev-tf\n  cloud-region1\n       configs \n  cloud-region2\n       configs\n</code></pre>\n<p>I am running this terraform init command inside cloud-region1 and it creates the <code>.terraform</code> folder where the init command is run. I first tried to use ssh and to the exact module that it will need like this: <code>git@gitlab.com:rootgroup/sub-group/infrastructure-automation/pcloud/pcloud-module.git?ref=main//database/adb</code></p>\n<p>But it downloads the entire module repo inside each module call which makes it difficult for the module call to reach the actual module and throws an error like this</p>\n<pre><code>\u2502 Error: Unreadable module directory\n\u2502 \n\u2502 Unable to evaluate directory symlink: lstat .terraform/modules/oci-module: no such file or directory\n\u2575\n\n\u2577\n\u2502 Error: Failed to read module directory\n\u2502 \n\u2502 Module directory  does not exist or cannot be read.\n</code></pre>\n<p>When I tried to change it to download it once and use it by pointing to the right folder through the source statement like this</p>\n<pre><code>module &quot;oci-module&quot; {\n     source = &quot;git@gitlab.com:rootgroup/sub-group/infrastructure-automation/pcloud/pcloud-module.git&quot;\n}\n</code></pre>\n<p>And calling the respective modules in there respective module calls like this:</p>\n<pre><code>module &quot;budgets&quot; {\n  source   = &quot;./.terraform/modules/pc-module/governance/billing/budget&quot;\n</code></pre>\n<p>It gives me the following error:</p>\n<pre><code>\u2577\n\u2502 Error: Unreadable module directory\n\u2502 \n\u2502 Unable to evaluate directory symlink: lstat .terraform/modules/pc-module: no such file or directory\n\u2575\n\n\u2577\n\u2502 Error: Failed to read module directory\n\u2502 \n\u2502 Module directory  does not exist or cannot be read.\n\u2575\n\n\u2577\n\u2502 Error: Unreadable module directory\n\u2502 \n\u2502 Unable to evaluate directory symlink: lstat .terraform/modules/pc-module: no such file or directory\n\u2575\n\n\u2577\n\u2502 Error: Failed to read module directory\n\u2502 \n\u2502 Module directory  does not exist or cannot be read.\n\u2575\n</code></pre>\n<p>Where as I can see the module being there and the pointing is correct to fetch the module properly it still complains. The public cloud provider is Oracle here</p>\n<p>Please suggest how should I resolve this issue and upload the updated state file into gitlab</p>\n", "OwnerUserId": "18740627", "LastActivityDate": "2023-08-18T18:13:01.680", "Title": "Trying to convert Terraform mono repo into multiple repos and facing issue with importing the state to individual repo", "Tags": "<terraform><gitlab><oracle-cloud-infrastructure>", "AnswerCount": "0", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "296823977", "PostHistoryTypeId": "2", "PostId": "76931712", "RevisionGUID": "db4f5718-58a5-4240-9128-d3d46827b6c1", "CreationDate": "2023-08-18T18:13:01.680", "UserId": "18740627", "Text": "**Background**\r\nMonorepo in gitlab which creates 1 state file for each region of the cloud provider. We want to create multiple repos out of the monorepo and accordingly create individual smaller state files which should match the state of what is in those individual repos.\r\nThis also includes separating out the modules into an external repository.\r\n\r\n**Issue**\r\nI created one of the individual repository and modified the state json to match what is in that individual repo. Now was the time to upload the updated state to Gitlab. So based on gitlab documentation and a little bit of research I found this command which will initialize the repo on my local and upload the updated state to gitlab. Here is the command: \r\n\r\n    terraform init \\\r\n        -backend-config=\"address=https://gitlab.com/api/v4/projects/xxxxxxxx/terraform/state/indi-repo-dev\" \\\r\n        -backend-config=\"lock_address=https://gitlab.com/api/v4/projects/xxxxxxxx/terraform/state/indi-repo-dev/lock\" \\\r\n        -backend-config=\"unlock_address=https://gitlab.com/api/v4/projects/xxxxxx/terraform/state/indi-repo-dev/lock\" \\\r\n        -backend-config=\"username=proj-token\" \\\r\n        -backend-config=\"password=xxxxxxxxxxxxxx \\\r\n        -backend-config=\"lock_method=POST\" \\\r\n        -backend-config=\"unlock_method=DELETE\" \\\r\n        -backend-config=\"retry_wait_min=5\" --reconfigure\r\n\r\n\r\n\r\n\r\nBut this command constantly fails to read the module which gets downloaded from another gitlab repository. I have tried multiple things but every-time the module repo is downloaded it complains about either module dir does not exist of module path is invalid\r\n\r\nBelow is the structure of my project\r\n\r\n    dev-tf\r\n      cloud-region1\r\n           configs \r\n      cloud-region2\r\n           configs\r\n    \r\n\r\nI am running this terraform init command inside cloud-region1 and it creates the `.terraform` folder where the init command is run. I first tried to use ssh and to the exact module that it will need like this: `git@gitlab.com:rootgroup/sub-group/infrastructure-automation/pcloud/pcloud-module.git?ref=main//database/adb`\r\n\r\nBut it downloads the entire module repo inside each module call which makes it difficult for the module call to reach the actual module and throws an error like this\r\n\r\n\r\n    \u2502 Error: Unreadable module directory\r\n    \u2502 \r\n    \u2502 Unable to evaluate directory symlink: lstat .terraform/modules/oci-module: no such file or directory\r\n    \u2575\r\n    \r\n    \u2577\r\n    \u2502 Error: Failed to read module directory\r\n    \u2502 \r\n    \u2502 Module directory  does not exist or cannot be read.\r\n\r\n\r\nWhen I tried to change it to download it once and use it by pointing to the right folder through the source statement like this\r\n\r\n    module \"oci-module\" {\r\n         source = \"git@gitlab.com:rootgroup/sub-group/infrastructure-automation/pcloud/pcloud-module.git\"\r\n    }\r\n\r\nAnd calling the respective modules in there respective module calls like this:\r\n\r\n    module \"budgets\" {\r\n      source   = \"./.terraform/modules/pc-module/governance/billing/budget\"\r\n\r\nIt gives me the following error:\r\n\r\n    \u2577\r\n    \u2502 Error: Unreadable module directory\r\n    \u2502 \r\n    \u2502 Unable to evaluate directory symlink: lstat .terraform/modules/pc-module: no such file or directory\r\n    \u2575\r\n    \r\n    \u2577\r\n    \u2502 Error: Failed to read module directory\r\n    \u2502 \r\n    \u2502 Module directory  does not exist or cannot be read.\r\n    \u2575\r\n    \r\n    \u2577\r\n    \u2502 Error: Unreadable module directory\r\n    \u2502 \r\n    \u2502 Unable to evaluate directory symlink: lstat .terraform/modules/pc-module: no such file or directory\r\n    \u2575\r\n    \r\n    \u2577\r\n    \u2502 Error: Failed to read module directory\r\n    \u2502 \r\n    \u2502 Module directory  does not exist or cannot be read.\r\n    \u2575\r\n\r\nWhere as I can see the module being there and the pointing is correct to fetch the module properly it still complains. The public cloud provider is Oracle here\r\n\r\nPlease suggest how should I resolve this issue and upload the updated state file into gitlab", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "**Background** Monorepo in gitlab which creates 1 state file for each region of the cloud provider. ", "keywords": ["provider"]}, {"source": "Text", "text": "When I tried to change it to download it once and use it by pointing to the right folder through the source statement like this module \"oci-module\" { source = \"git@gitlab.com:rootgroup/sub-group/infrastructure-automation/pcloud/pcloud-module.git\" } ", "keywords": ["change"]}, {"source": "Text", "text": "And calling the respective modules in there respective module calls like this: module \"budgets\" { source = \"./.terraform/modules/pc-module/governance/billing/budget\" ", "keywords": ["bill"]}, {"source": "Text", "text": "The public cloud provider is Oracle here Please suggest how should I resolve this issue and upload the updated state file into gitlab", "keywords": ["provider"]}]}, {"Id": "296823979", "PostHistoryTypeId": "1", "PostId": "76931712", "RevisionGUID": "db4f5718-58a5-4240-9128-d3d46827b6c1", "CreationDate": "2023-08-18T18:13:01.680", "UserId": "18740627", "Text": "Trying to convert Terraform mono repo into multiple repos and facing issue with importing the state to individual repo", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "296823980", "PostHistoryTypeId": "3", "PostId": "76931712", "RevisionGUID": "db4f5718-58a5-4240-9128-d3d46827b6c1", "CreationDate": "2023-08-18T18:13:01.680", "UserId": "18740627", "Text": "<terraform><gitlab><oracle-cloud-infrastructure>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "Background Monorepo in gitlab which creates 1 state file for each region of the cloud provider. ", "keywords": ["provider"]}, {"source": "Body", "text": "When I tried to change it to download it once and use it by pointing to the right folder through the source statement like this ", "keywords": ["change"]}, {"source": "Body", "text": "The public cloud provider is Oracle here Please suggest how should I resolve this issue and upload the updated state file into gitlab", "keywords": ["provider"]}]}