{"Id": "58733729", "PostTypeId": "1", "AcceptedAnswerId": "58733730", "CreationDate": "2019-11-06T15:38:29.367", "Score": "0", "ViewCount": "920", "Body": "<p>Using Terraform v0.12.9, azurerm provider v1.36.1</p>\n\n<p>Scenario:</p>\n\n<ul>\n<li>You have created an image based on a third-party marketplace image.</li>\n<li>You have published this image to a shared image gallery.</li>\n<li>You have been able to do so in an automated fashion using Terraform and Azure Devops pipelines. (ex. CIS hardened images)</li>\n<li><p>For each of these previous steps you have provided plan information data. if not, you would not be able to create a VM from this image, because there is an extra cost associated with using the marketplace image.</p></li>\n<li><p>Now you want other teams be able to use your image from the Shared Image Gallery through Terraform Automation.</p></li>\n</ul>\n\n<p>How to get the plan information from the shared image without hard-coding it?</p>\n\n<p>Well, I thought to just retreive the data using a data source using:</p>\n\n<pre><code>data \"azurerm_shared_image\" \"image\" {\n  name                = var.image_name\n  gallery_name        = var.gallery_name\n  resource_group_name = var.rsg_name\n}\n</code></pre>\n\n<p>and using the necessary blocks inside the virtual_machine resource like so:</p>\n\n<pre><code>  storage_image_reference {\n    id = data.azurerm_shared_image.image.id\n  }\n\n  plan {\n    name      = data.azurerm_shared_image.image.sku\n    publisher = data.azurerm_shared_image.image.publisher\n    product   = data.azurerm_shared_image.image.offer\n  }\n</code></pre>\n\n<p>However, I get an error stating:</p>\n\n<pre><code>Error: Unsupported attribute\nThis object has no argument, nested block, or exported attribute named \"sku\".\n</code></pre>\n\n<p>for each sku, publisher and offer.</p>\n", "OwnerUserId": "5729837", "LastActivityDate": "2019-11-06T15:38:29.367", "Title": "How to use shared_image plan data like publisher, offer and sku in virtual_machine resource in Terraform", "Tags": "<azure><terraform><terraform-provider-azure><terraform0.12+>", "AnswerCount": "1", "CommentCount": "0", "FavoriteCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "208687166", "PostHistoryTypeId": "2", "PostId": "58733729", "RevisionGUID": "69b7939e-7b0b-4306-a188-47348fecd363", "CreationDate": "2019-11-06T15:38:29.367", "UserId": "5729837", "Text": "Using Terraform v0.12.9, azurerm provider v1.36.1\r\n\r\nScenario:\r\n\r\n - You have created an image based on a third-party marketplace image.\r\n - You have published this image to a shared image gallery.\r\n - You have been able to do so in an automated fashion using Terraform and Azure Devops pipelines. (ex. CIS hardened images)\r\n - For each of these previous steps you have provided plan information data. if not, you would not be able to create a VM from this image, because there is an extra cost associated with using the marketplace image.\r\n\r\n - Now you want other teams be able to use your image from the Shared Image Gallery through Terraform Automation.\r\n\r\nHow to get the plan information from the shared image without hard-coding it?\r\n\r\nWell, I thought to just retreive the data using a data source using:\r\n\r\n```\r\ndata \"azurerm_shared_image\" \"image\" {\r\n  name                = var.image_name\r\n  gallery_name        = var.gallery_name\r\n  resource_group_name = var.rsg_name\r\n}\r\n```\r\nand using the necessary blocks inside the virtual_machine resource like so:\r\n```\r\n  storage_image_reference {\r\n    id = data.azurerm_shared_image.image.id\r\n  }\r\n\r\n  plan {\r\n    name      = data.azurerm_shared_image.image.sku\r\n    publisher = data.azurerm_shared_image.image.publisher\r\n    product   = data.azurerm_shared_image.image.offer\r\n  }\r\n```\r\n\r\nHowever, I get an error stating:\r\n```\r\nError: Unsupported attribute\r\nThis object has no argument, nested block, or exported attribute named \"sku\".\r\n```\r\nfor each sku, publisher and offer.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Using Terraform v0.12.9, azurerm provider v1.36.1 Scenario: - You have created an image based on a third-party marketplace image. ", "keywords": ["provider"]}, {"source": "Text", "text": "if not, you would not be able to create a VM from this image, because there is an extra cost associated with using the marketplace image. ", "keywords": ["cost"]}]}, {"Id": "208687167", "PostHistoryTypeId": "1", "PostId": "58733729", "RevisionGUID": "69b7939e-7b0b-4306-a188-47348fecd363", "CreationDate": "2019-11-06T15:38:29.367", "UserId": "5729837", "Text": "How to use shared_image plan data like publisher, offer and sku in virtual_machine resource in Terraform", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "208687168", "PostHistoryTypeId": "3", "PostId": "58733729", "RevisionGUID": "69b7939e-7b0b-4306-a188-47348fecd363", "CreationDate": "2019-11-06T15:38:29.367", "UserId": "5729837", "Text": "<azure><terraform><terraform-provider-azure><terraform0.12+>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "58733730", "PostTypeId": "2", "ParentId": "58733729", "CreationDate": "2019-11-06T15:38:29.367", "Score": "2", "Body": "<p>We can get a better picture of what we are dealing with to add an output for testing purposes, like so:</p>\n<pre><code>output &quot;imagedata&quot; {\n  value = data.azurerm_shared_image.image\n}\n</code></pre>\n<p>We get an important insight:</p>\n<pre><code>imagedata = {\n  &quot;description&quot; = &quot;&quot;\n  &quot;eula&quot; = &quot;&quot;\n  &quot;gallery_name&quot; = [removed]\n  &quot;id&quot; = [removed]\n  &quot;identifier&quot; = [\n    {\n      &quot;offer&quot; = &quot;cis-centos-7-l1&quot;\n      &quot;publisher&quot; = &quot;center-for-internet-security-inc&quot;\n      &quot;sku&quot; = &quot;cis-centos75-l1&quot;\n    },\n  ]\n  &quot;location&quot; = [removed]\n  &quot;name&quot; = [removed]\n  &quot;os_type&quot; = &quot;Linux&quot;\n  &quot;privacy_statement_uri&quot; = &quot;&quot;\n  &quot;release_note_uri&quot; = &quot;&quot;\n  &quot;resource_group_name&quot; = [removed]\n  &quot;tags&quot; = {}\n}\n</code></pre>\n<p>Ah now using <code>data.azurerm_shared_image.image.identifier.sku</code> won't just work here either. As far as Terraform is concerned, the identifier block is <em>only one element</em> in an array.</p>\n<h1>Solution:</h1>\n<p>We retrieve the data still the same way:</p>\n<pre><code>data &quot;azurerm_shared_image&quot; &quot;image&quot; {\n  name                = var.image_name\n  gallery_name        = var.gallery_name\n  resource_group_name = var.rsg_name\n}\n\n</code></pre>\n<p>And we reference it in our virtual_machine resource like so:</p>\n<pre><code>  storage_image_reference {\n    id = data.azurerm_shared_image.image.id\n  }\n\n  plan {\n    name      = data.azurerm_shared_image.image.identifier[0].sku\n    publisher = data.azurerm_shared_image.image.identifier[0].publisher\n    product   = data.azurerm_shared_image.image.identifier[0].offer\n  }\n</code></pre>\n", "OwnerUserId": "5729837", "LastEditorUserId": "-1", "LastEditDate": "2020-06-20T09:12:55.060", "LastActivityDate": "2019-11-06T15:38:29.367", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "208687171", "PostHistoryTypeId": "2", "PostId": "58733730", "RevisionGUID": "44c81855-8e5d-4ea1-b740-8b8cc691f322", "CreationDate": "2019-11-06T15:38:29.367", "UserId": "5729837", "Text": "We can get a better picture of what we are dealing with to add an output for testing purposes, like so:\r\n\r\n```\r\noutput \"imagedata\" {\r\n  value = data.azurerm_shared_image.image\r\n}\r\n```\r\n\r\nWe get an important insight:\r\n\r\n```json\r\nimagedata = {\r\n  \"description\" = \"\"\r\n  \"eula\" = \"\"\r\n  \"gallery_name\" = [removed]\r\n  \"id\" = [removed]\r\n  \"identifier\" = [\r\n    {\r\n      \"offer\" = \"cis-centos-7-l1\"\r\n      \"publisher\" = \"center-for-internet-security-inc\"\r\n      \"sku\" = \"cis-centos75-l1\"\r\n    },\r\n  ]\r\n  \"location\" = [removed]\r\n  \"name\" = [removed]\r\n  \"os_type\" = \"Linux\"\r\n  \"privacy_statement_uri\" = \"\"\r\n  \"release_note_uri\" = \"\"\r\n  \"resource_group_name\" = [removed]\r\n  \"tags\" = {}\r\n}\r\n```\r\n\r\nAh now using `data.azurerm_shared_image.image.identifier.sku` won't just work here either. As far as Terraform is concerned, the identifier block is _only one element_ in an array. \r\n\r\n#Solution:#\r\n\r\nWe retrieve the data still the same way:\r\n```\r\ndata \"azurerm_shared_image\" \"image\" {\r\n  name                = var.image_name\r\n  gallery_name        = var.gallery_name\r\n  resource_group_name = var.rsg_name\r\n}\r\n\r\n```\r\nAnd we reference it in our virtual_machine resource like so:\r\n```\r\n  storage_image_reference {\r\n    id = data.azurerm_shared_image.image.id\r\n  }\r\n\r\n  plan {\r\n    name      = data.azurerm_shared_image.image.identifier[0].sku\r\n    publisher = data.azurerm_shared_image.image.identifier[0].publisher\r\n    product   = data.azurerm_shared_image.image.identifier[0].offer\r\n  }\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "We can get a better picture of what we are dealing with to add an output for testing purposes, like so: ``` output \"imagedata\" { value = data.azurerm_shared_image.image } ``` ", "keywords": ["test"]}]}, {"Id": "224863953", "PostHistoryTypeId": "5", "PostId": "58733730", "RevisionGUID": "7e5a7bbe-276a-41c7-b73e-887177094a11", "CreationDate": "2020-06-20T09:12:55.060", "UserId": "-1", "Comment": "Commonmark migration", "Text": "We can get a better picture of what we are dealing with to add an output for testing purposes, like so:\n\n```\noutput \"imagedata\" {\n  value = data.azurerm_shared_image.image\n}\n```\n\nWe get an important insight:\n\n```json\nimagedata = {\n  \"description\" = \"\"\n  \"eula\" = \"\"\n  \"gallery_name\" = [removed]\n  \"id\" = [removed]\n  \"identifier\" = [\n    {\n      \"offer\" = \"cis-centos-7-l1\"\n      \"publisher\" = \"center-for-internet-security-inc\"\n      \"sku\" = \"cis-centos75-l1\"\n    },\n  ]\n  \"location\" = [removed]\n  \"name\" = [removed]\n  \"os_type\" = \"Linux\"\n  \"privacy_statement_uri\" = \"\"\n  \"release_note_uri\" = \"\"\n  \"resource_group_name\" = [removed]\n  \"tags\" = {}\n}\n```\n\nAh now using `data.azurerm_shared_image.image.identifier.sku` won't just work here either. As far as Terraform is concerned, the identifier block is _only one element_ in an array. \n\n# Solution: #\n\nWe retrieve the data still the same way:\n```\ndata \"azurerm_shared_image\" \"image\" {\n  name                = var.image_name\n  gallery_name        = var.gallery_name\n  resource_group_name = var.rsg_name\n}\n\n```\nAnd we reference it in our virtual_machine resource like so:\n```\n  storage_image_reference {\n    id = data.azurerm_shared_image.image.id\n  }\n\n  plan {\n    name      = data.azurerm_shared_image.image.identifier[0].sku\n    publisher = data.azurerm_shared_image.image.identifier[0].publisher\n    product   = data.azurerm_shared_image.image.identifier[0].offer\n  }\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "We can get a better picture of what we are dealing with to add an output for testing purposes, like so: ``` output \"imagedata\" { value = data.azurerm_shared_image.image } ``` ", "keywords": ["test"]}]}], "filtered-sentences": [{"source": "Body", "text": "We can get a better picture of what we are dealing with to add an output for testing purposes, like so: We get an important insight: Ah now using data.azurerm_shared_image.image.identifier.sku won't just work here either. ", "keywords": ["test"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "Using Terraform v0.12.9, azurerm provider v1.36.1 Scenario: You have created an image based on a third-party marketplace image. ", "keywords": ["provider"]}, {"source": "Body", "text": "if not, you would not be able to create a VM from this image, because there is an extra cost associated with using the marketplace image. ", "keywords": ["cost"]}]}