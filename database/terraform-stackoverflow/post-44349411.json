{"Id": "44349411", "PostTypeId": "1", "AcceptedAnswerId": "44349552", "CreationDate": "2017-06-03T23:24:20.963", "Score": "1", "ViewCount": "1719", "Body": "<p>I'm using Terraform to build an API + corresponding lambda functions.</p>\n\n<p>I have some other infrastructure, which I'd like to think is nicely set up (maybe I'm wrong?):</p>\n\n<ul>\n<li>2 VPCs (let's just call'em <code>test</code> and <code>prod</code>)</li>\n<li>Private &amp; public subnets in each VPC</li>\n<li>RDS DBs launched in the private subnets</li>\n</ul>\n\n<p>All resources are identical on both VPCs; e.g. there's a <code>test-private-subnet</code> and a <code>prod-private-subnet</code> with exactly the same specs, same for DBs, etc.</p>\n\n<p>Now, I'm working on the API and the lambdas that will power said API.</p>\n\n<p>I don't feel like I need a <code>test</code> &amp; <code>prod</code> API gateway and <code>test</code> &amp; <code>prod</code> lambdas: </p>\n\n<ul>\n<li>lambda code will be the same, just acting on different DB</li>\n<li>you can use API <code>stage_variables</code>, with different ips, to achieve a <code>test</code> vs <code>prod</code> environment for the API</li>\n</ul>\n\n<p>But when I try and setup a lambda with the <code>vpc_config</code> block (cause I need it to be associated with the <em>security group</em> that's allowed ingress on the DBs), I get the following error:</p>\n\n<pre><code>Error applying plan:\n\n1 error(s) occurred:\n\n* module.lambdas.aws_lambda_function.api-lambda-users: 1 error(s) occurred:\n\n* aws_lambda_function.api-lambda-users: Error creating Lambda function: InvalidParameterValueException: Security Groups are required to be in the same VPC.\nstatus code: 400, request id: xxxxx-xxxx-xxxx-xxxx-xxxxxxxxxx\n</code></pre>\n\n<p>My lambda config looks like this:</p>\n\n<pre><code>resource \"aws_lambda_function\" \"api-lambda-users\" {\n  provider = \"PROVIDER\"\n  function_name    = \"users\"\n  s3_key           = \"users/${var.lambda-package-name}\"\n  s3_bucket        = \"${var.api-lambdas-bucket}\"\n  role             = \"${aws_iam_role.lambda-role.arn}\"\n  handler          = \"${var.handler-name}\"\n  runtime          = \"${var.lambda-runtime}\"\n\n  vpc_config {\n    security_group_ids = [\n      //\"${data.aws_security_group.prod-lambda.id}\",\n      \"${data.aws_security_group.test-lambda.id}\"\n    ]\n    subnet_ids = [\n      //\"${data.aws_subnet.prod-primary.id}\",\n      \"${data.aws_subnet.test-primary.id}\"\n    ]\n  }\n}\n</code></pre>\n\n<p>Notice I'd ideally like to just specify them, together, in their corresponding lists.</p>\n\n<p>Am I missing something?</p>\n\n<p>Suggestions?</p>\n\n<p>Any help, related or not, is much appreciated.</p>\n", "OwnerUserId": "545494", "LastActivityDate": "2019-01-06T18:38:57.867", "Title": "How can I setup an AWS lambda to access resources in two, separate VPCs?", "Tags": "<amazon-web-services><aws-lambda><amazon-vpc><terraform>", "AnswerCount": "1", "CommentCount": "2", "ContentLicense": "CC BY-SA 3.0", "comments": [{"Id": "75701846", "PostId": "44349411", "Score": "4", "Text": "In general, it's good to have a fully-duplicated environment for Test. That way, you can experiment with changes (eg improved Lambda code) without impacting a Production environment. Given that Lambda and API Gateway cost nothing when they are not being used (except for API Gateway caching, if activated), there's no real reason to avoid creating a full test environment.", "CreationDate": "2017-06-04T00:26:31.683", "UserId": "174777", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "In general, it's good to have a fully-duplicated environment for Test. ", "keywords": ["test"]}, {"source": "Text", "text": "That way, you can experiment with changes (eg improved Lambda code) without impacting a Production environment. ", "keywords": ["change"]}, {"source": "Text", "text": "Given that Lambda and API Gateway cost nothing when they are not being used (except for API Gateway caching, if activated), there's no real reason to avoid creating a full test environment.", "keywords": ["cost", "test"]}]}, {"Id": "75701941", "PostId": "44349411", "Score": "0", "Text": "Thanks. Considered that too, but thought it was overkill. Glad to hear it isn't; probably what I'm gonna end up doing!", "CreationDate": "2017-06-04T00:40:33.780", "UserId": "545494", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "history": [{"Id": "148574215", "PostHistoryTypeId": "2", "PostId": "44349411", "RevisionGUID": "9a608424-06ff-435a-9890-b3ad22dcb95f", "CreationDate": "2017-06-03T23:24:20.963", "UserId": "545494", "Text": "I'm using Terraform to build an API + corresponding lambda functions.\r\n\r\nI have some other infrastructure, which I'd like to think is nicely set up (maybe I'm wrong?):\r\n\r\n- 2 VPCs (let's just call'em `test` and `prod`)\r\n- Private & public subnets in each VPC\r\n- RDS DBs launched in the private subnets\r\n\r\nAll resources are identical on both VPCs; e.g. there's a `test-private-subnet` and a `prod-private-subnet` with exactly the same specs, same for DBs, etc.\r\n\r\nNow, I'm working on the API and the lambdas that will power said API.\r\n\r\nI don't feel like I need a `test` & `prod` API gateway and `test` & `prod` lambdas: \r\n\r\n- lambda code will be the same, just acting on different DB\r\n- you can use API `stage_variables`, with different ips, to achieve a `test` vs `prod` environment for the API\r\n\r\nBut when I try and setup a lambda with the `vpc_config` block (cause I need it to be associated with the _security group_ that's allowed ingress on the DBs), I get the following error:\r\n\r\n\r\n    Error applying plan:\r\n\r\n    1 error(s) occurred:\r\n\r\n    * module.lambdas.aws_lambda_function.api-lambda-users: 1 error(s) occurred:\r\n\r\n    * aws_lambda_function.api-lambda-users: Error creating Lambda function: InvalidParameterValueException: Security Groups are required to be in the same VPC.\r\n status code: 400, request id: xxxxx-xxxx-xxxx-xxxx-xxxxxxxxxx\r\n\r\nMy lambda config looks like this:\r\n\r\n    resource \"aws_lambda_function\" \"api-lambda-users\" {\r\n      provider = \"PROVIDER\"\r\n      function_name    = \"users\"\r\n      s3_key           = \"users/${var.lambda-package-name}\"\r\n      s3_bucket        = \"${var.api-lambdas-bucket}\"\r\n      role             = \"${aws_iam_role.lambda-role.arn}\"\r\n      handler          = \"${var.handler-name}\"\r\n      runtime          = \"${var.lambda-runtime}\"\r\n\r\n      vpc_config {\r\n        security_group_ids = [\r\n          //\"${data.aws_security_group.prod-lambda.id}\",\r\n          \"${data.aws_security_group.test-lambda.id}\"\r\n        ]\r\n        subnet_ids = [\r\n          //\"${data.aws_subnet.prod-primary.id}\",\r\n          \"${data.aws_subnet.test-primary.id}\"\r\n        ]\r\n      }\r\n    }\r\n\r\nNotice I'd ideally like to just specify them, together, in their corresponding lists.\r\n\r\n\r\nAm I missing something?\r\n\r\nSuggestions?\r\n\r\nAny help, related or not, is much appreciated.\r\n\r\n", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "I have some other infrastructure, which I'd like to think is nicely set up (maybe I'm wrong?): - 2 VPCs (let's just call'em `test` and `prod`) - Private & public subnets in each VPC - RDS DBs launched in the private subnets ", "keywords": ["test"]}, {"source": "Text", "text": "All resources are identical on both VPCs; e.g. there's a `test-private-subnet` and a `prod-private-subnet` with exactly the same specs, same for DBs, etc. ", "keywords": ["test"]}, {"source": "Text", "text": "I don't feel like I need a `test` & `prod` API gateway and `test` & `prod` lambdas: - lambda code will be the same, just acting on different DB - you can use API `stage_variables`, with different ips, to achieve a `test` vs `prod` environment for the API But when I try and setup a lambda with the `vpc_config` block (cause I need it to be associated with the _security group_ that's allowed ingress on the DBs), I get the following error: Error applying plan: 1 error(s) occurred: * module.lambdas.aws_lambda_function.api-lambda-users: 1 error(s) occurred: * aws_lambda_function.api-lambda-users: Error creating Lambda function: InvalidParameterValueException: Security Groups are required to be in the same VPC. status code: 400, request id: xxxxx-xxxx-xxxx-xxxx-xxxxxxxxxx My lambda config looks like this: resource \"aws_lambda_function\" \"api-lambda-users\" { provider = \"PROVIDER\" function_name = \"users\" s3_key = \"users/${var.lambda-package-name}\" s3_bucket = \"${var.api-lambdas-bucket}\" role = \"${aws_iam_role.lambda-role.arn}\" handler = \"${var.handler-name}\" runtime = \"${var.lambda-runtime}\" vpc_config { security_group_ids = [ //\"${data.aws_security_group.prod-lambda.id}\", \"${data.aws_security_group.test-lambda.id}\" ] subnet_ids = [ //\"${data.aws_subnet.prod-primary.id}\", \"${data.aws_subnet.test-primary.id}\" ] } } Notice I'd ideally like to just specify them, together, in their corresponding lists", "keywords": ["provider", "test"]}]}, {"Id": "148574216", "PostHistoryTypeId": "1", "PostId": "44349411", "RevisionGUID": "9a608424-06ff-435a-9890-b3ad22dcb95f", "CreationDate": "2017-06-03T23:24:20.963", "UserId": "545494", "Text": "How can I setup an AWS lambda to access resources in two, separate VPCs?", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "148574217", "PostHistoryTypeId": "3", "PostId": "44349411", "RevisionGUID": "9a608424-06ff-435a-9890-b3ad22dcb95f", "CreationDate": "2017-06-03T23:24:20.963", "UserId": "545494", "Text": "<amazon-web-services><aws-lambda><amazon-vpc><terraform>", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "answers": [{"Id": "44349552", "PostTypeId": "2", "ParentId": "44349411", "CreationDate": "2017-06-03T23:49:17.647", "Score": "5", "Body": "<p>Lambda running inside a vpc is subject to the same networking \"rules\" as ec2 instances. So it can't \"exist\" in two VPC's. If the lambda function needs to talk vpc resources in two separate VPC's you could use something like VPC peering or just run two copies of the function in the two different vpc's.  </p>\n\n<blockquote>\n  <p>When you add VPC configuration to a Lambda function, it can only access resources in that VPC. If a Lambda function needs to access both VPC resources and the public Internet, the VPC needs to have a <a href=\"http://docs.aws.amazon.com/lambda/latest/dg/vpc.html\" rel=\"nofollow noreferrer\">Network Address Translation (NAT)</a> instance inside the VPC and a <a href=\"http://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/Welcome.html\" rel=\"nofollow noreferrer\">VPC Peering</a> connection.</p>\n</blockquote>\n", "OwnerUserId": "1794802", "LastEditorUserId": "1549165", "LastEditDate": "2017-06-04T13:44:20.203", "LastActivityDate": "2017-06-04T13:44:20.203", "CommentCount": "3", "ContentLicense": "CC BY-SA 3.0", "comments": [{"Id": "75701959", "PostId": "44349552", "Score": "1", "Text": "Thanks. Probably gonna go with a lambda function / VPC, as [John Rotenstein](https://stackoverflow.com/users/174777/john-rotenstein)'s comment!", "CreationDate": "2017-06-04T00:42:37.670", "UserId": "545494", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "75704409", "PostId": "44349552", "Score": "0", "Text": "The reason to build two VPCs (test and prod) is to isolate the environment, vpc peering is not a good suggestion for this case.", "CreationDate": "2017-06-04T05:40:22.157", "UserId": "498256", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "The reason to build two VPCs (test and prod) is to isolate the environment, vpc peering is not a good suggestion for this case.", "keywords": ["test"]}]}, {"Id": "75712403", "PostId": "44349552", "Score": "0", "Text": "I agree , that's the thing amazon they give you just enough rope", "CreationDate": "2017-06-04T14:39:00.153", "UserId": "1794802", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "history": [{"Id": "148574764", "PostHistoryTypeId": "2", "PostId": "44349552", "RevisionGUID": "2b067d96-def4-43bf-bd87-6dd3788a8a57", "CreationDate": "2017-06-03T23:49:17.647", "UserId": "1794802", "Text": "Lambda running inside a vpc is subject to the same networking \"rules\" as ec2 instances. So it can't \"exist\" in two VPC's. If the lambda function needs to talk vpc resources in two separate VPC's you could use something like VPC peering or just run two copies of the function in the two different vpc's.  \r\n\r\n>When you add VPC configuration to a Lambda function, it can only access resources in that VPC. If a Lambda function needs to access both VPC resources and the public Internet, the VPC needs to have a Network Address Translation (NAT) instance inside the VPC.\r\nhttp://docs.aws.amazon.com/lambda/latest/dg/vpc.html\r\n\r\nVPC Peering http://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/Welcome.html", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "Lambda running inside a vpc is subject to the same networking \"rules\" as ec2 instances. ", "keywords": ["networking"]}, {"source": "Text", "text": "If a Lambda function needs to access both VPC resources and the public Internet, the VPC needs to have a Network Address Translation (NAT) instance inside the VPC. ", "keywords": ["nat", "instance"]}]}, {"Id": "148596106", "PostHistoryTypeId": "5", "PostId": "44349552", "RevisionGUID": "f498fbce-3424-4013-8278-fa684911841c", "CreationDate": "2017-06-04T13:44:20.203", "UserId": "1549165", "Comment": "improve readability by adding links to text", "Text": "Lambda running inside a vpc is subject to the same networking \"rules\" as ec2 instances. So it can't \"exist\" in two VPC's. If the lambda function needs to talk vpc resources in two separate VPC's you could use something like VPC peering or just run two copies of the function in the two different vpc's.  \r\n\r\n>When you add VPC configuration to a Lambda function, it can only access resources in that VPC. If a Lambda function needs to access both VPC resources and the public Internet, the VPC needs to have a [Network Address Translation (NAT)][1] instance inside the VPC and a [VPC Peering][2] connection.\n\n\n  [1]: http://docs.aws.amazon.com/lambda/latest/dg/vpc.html\n  [2]: http://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/Welcome.html", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "Lambda running inside a vpc is subject to the same networking \"rules\" as ec2 instances. ", "keywords": ["networking"]}, {"source": "Text", "text": "If a Lambda function needs to access both VPC resources and the public Internet, the VPC needs to have a [Network Address Translation (NAT)][1] instance inside the VPC and a [VPC Peering][2] connection. [1]: http://docs.aws.amazon.com/lambda/latest/dg/vpc.html [2]: http://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/Welcome.html", "keywords": ["nat", "instance"]}]}, {"Id": "148596107", "PostHistoryTypeId": "24", "PostId": "44349552", "RevisionGUID": "f498fbce-3424-4013-8278-fa684911841c", "CreationDate": "2017-06-04T13:44:20.203", "Comment": "Proposed by 1549165 approved by 5892849, 7571258 edit id of 3127566", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "filtered-sentences": [{"source": "Body", "text": "Lambda running inside a vpc is subject to the same networking \"rules\" as ec2 instances. ", "keywords": ["networking"]}, {"source": "Body", "text": "If a Lambda function needs to access both VPC resources and the public Internet, the VPC needs to have a Network Address Translation (NAT) instance inside the VPC and a VPC Peering connection.", "keywords": ["nat", "instance"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I have some other infrastructure, which I'd like to think is nicely set up (maybe I'm wrong?): 2 VPCs (let's just call'em test and prod) ", "keywords": ["test"]}, {"source": "Body", "text": "All resources are identical on both VPCs; e.g. there's a test-private-subnet and a prod-private-subnet with exactly the same specs, same for DBs, etc. ", "keywords": ["test"]}, {"source": "Body", "text": "I don't feel like I need a test & prod API gateway and test & prod lambdas: lambda code will be the same, just acting on different DB you can use API stage_variables, with different ips, to achieve a test vs prod environment for the API But when I try and setup a lambda with the vpc_config block (cause I need it to be associated with the security group that's allowed ingress on the DBs), I get the following error: My lambda config looks like this: Notice I'd ideally like to just specify them, together, in their corresponding lists. ", "keywords": ["test"]}]}