{"Id": "69405785", "PostTypeId": "1", "AcceptedAnswerId": "69406781", "CreationDate": "2021-10-01T12:19:13.857", "Score": "3", "ViewCount": "2230", "Body": "<p>I'm pretty new to Terraform, my apologies if this question has an obvious answer I'm missing.</p>\n<p>I am trying to create a terraform configuration file for an existing organization. I am able to provision everything I have in the <code>main.tf</code> outlined bellow except for the <code>Shared</code> folder that already exists within this organization.</p>\n<p>Related github issues :</p>\n<ul>\n<li><a href=\"https://github.com/terraform-google-modules/terraform-example-foundation/issues/33\" rel=\"nofollow noreferrer\">The folder operation violates display name uniqueness within the parent.</a></li>\n<li><a href=\"https://github.com/hashicorp/terraform-provider-google/issues/1903\" rel=\"nofollow noreferrer\">Generic error message when folder rename matches existing folder</a></li>\n</ul>\n<p>Here are the steps I followed:</p>\n<ol>\n<li>Manually create a <code>Shared</code> folder within the organization administration UI.</li>\n<li>Manually create a <strong>Terraform admin project</strong> <code>&lt;redacted-project-name&gt;</code> at the root of the <code>Shared</code> folder.</li>\n<li>Manually create a service account named <code>terraform@&lt;redacted-project-name&gt;</code> from the <strong>terraform admin project</strong></li>\n<li>Create, download and securely store a key for the <code>terraform@&lt;redacted-project-name&gt;</code> service account.</li>\n<li>Enable APIs : <code>cloudresourcemanager.googleapis.com</code>, <code>cloudbilling.googleapis.com</code>, <code>iam.googleapis.com</code>, <code>serviceusage.googleapis.com</code> within the <strong>terraform admin project</strong></li>\n<li>Set permissions of the service account to <strong>role/owner</strong>, <strong>roles/resourcemanager.organizationAdmin</strong>, <strong>roles/resourcemanager.folderAdmin</strong> and <strong>roles/resourcemanager.projectCreator</strong>.</li>\n<li>Create the <code>main.tf</code></li>\n</ol>\n<pre><code>terraform {\n  required_providers {\n    google = {\n      source  = &quot;hashicorp/google&quot;\n      version = &quot;3.85.0&quot;\n    }\n  }\n}\nprovider &quot;google&quot; {\n  credentials = file(var.credentials_file)\n  region      = var.region\n  zone        = var.zone\n}\ndata &quot;google_organization&quot; &quot;org&quot; {\n  organization = var.organization.id\n}\nresource &quot;google_folder&quot; &quot;shared&quot; {\n  display_name = &quot;Shared&quot;\n  parent       = data.google_organization.org.name\n}\n\nresource &quot;google_folder&quot; &quot;ddm&quot; {\n  display_name = &quot;Data and Digital Marketing&quot;\n  parent       = data.google_organization.org.name\n}\n\nresource &quot;google_folder&quot; &quot;dtl&quot; {\n  display_name = &quot;DTL&quot;\n  parent       = google_folder.ddm.name\n}\n</code></pre>\n<p>The error I receive :</p>\n<pre><code>Error: Error creating folder 'Shared' in 'organizations/&lt;redacted-org-id&gt;': Error waiting for creating folder: Error code 9, message: Folder reservation failed for parent [organizations/&lt;redacted-org-id&gt;], folder [] due to constraint: The folder operation violates display name uniqueness within the parent.\n</code></pre>\n<p>How do I <strong>include</strong> existing resources within the terraform config file?</p>\n<ul>\n<li>For (organization) folders (such as the example above)</li>\n<li>For the billing account</li>\n<li>For projects, i.e. Am I supposed to declare or import the <strong>terraform admin project</strong> within the <code>main.tf</code>?</li>\n<li>For service accounts, how to handle existing keys and permissions of the account that is running the <code>terraform apply</code></li>\n<li>For existing policies and enabling APIs</li>\n</ul>\n", "OwnerUserId": "4375983", "LastActivityDate": "2021-10-01T13:33:54.530", "Title": "How to reference an existing organization folder, or other resources, in Terraform (For GCP)", "Tags": "<google-cloud-platform><terraform><terraform-provider-gcp>", "AnswerCount": "1", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "122674410", "PostId": "69405785", "Score": "0", "Text": "I used `lifecycle` -> `ignore_changes` in a similar use-case, but not sure if that's the proper solution: https://www.terraform.io/docs/configuration-0-11/resources.html#ignore_changes", "CreationDate": "2021-10-01T12:25:17.797", "UserId": "217723", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "122675603", "PostId": "69405785", "Score": "0", "Text": "Apparently it is possible to reference the existing resources by identifying them, adding them to the relevant template e.g. `main.tf` and performing a `terraform import` on them.\nFor my case with the folder it is `terraform import google_folder.shared folders/<redacted_folder_id>`", "CreationDate": "2021-10-01T13:13:20.563", "UserId": "4375983", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "254914336", "PostHistoryTypeId": "2", "PostId": "69405785", "RevisionGUID": "132cb903-8de7-4da6-b590-e233f597e1cc", "CreationDate": "2021-10-01T12:19:13.857", "UserId": "4375983", "Text": "I'm pretty new to Terraform, my apologies if this question has an obvious answer I'm missing. \r\n\r\nI am trying to create a terraform configuration file for an existing organization. I am able to provision everything I have in the `main.tf` outlined bellow except for the `Shared` folder that already exists within this organization.\r\n\r\nRelated github issues : \r\n- [The folder operation violates display name uniqueness within the parent.][1]\r\n- [Generic error message when folder rename matches existing folder][2]\r\n\r\nHere are the steps I followed:\r\n\r\n1. Manually create a `Shared` folder within the organization administration UI.\r\n2. Manually create a **Terraform admin project** `<redacted-project-name>` at the root of the `Shared` folder.\r\n3. Manually create a service account named `terraform@<redacted-project-name>` from the **terraform admin project** \r\n4. Create, download and securely store a key for the `terraform@<redacted-project-name>` service account.\r\n5. Enable APIs : `cloudresourcemanager.googleapis.com`, `cloudbilling.googleapis.com`, `iam.googleapis.com`, `serviceusage.googleapis.com` within the **terraform admin project**\r\n6. Set permissions of the service account to **role/owner**, **roles/resourcemanager.organizationAdmin**, **roles/resourcemanager.folderAdmin** and **roles/resourcemanager.projectCreator**.\r\n7. Create the `main.tf`\r\n\r\n```\r\nterraform {\r\n  required_providers {\r\n    google = {\r\n      source  = \"hashicorp/google\"\r\n      version = \"3.85.0\"\r\n    }\r\n  }\r\n}\r\nprovider \"google\" {\r\n  credentials = file(var.credentials_file)\r\n  region      = var.region\r\n  zone        = var.zone\r\n}\r\ndata \"google_organization\" \"org\" {\r\n  organization = var.organization.id\r\n}\r\nresource \"google_folder\" \"shared\" {\r\n  display_name = \"Shared\"\r\n  parent       = data.google_organization.org.name\r\n}\r\n\r\nresource \"google_folder\" \"ddm\" {\r\n  display_name = \"Data and Digital Marketing\"\r\n  parent       = data.google_organization.org.name\r\n}\r\n\r\nresource \"google_folder\" \"dtl\" {\r\n  display_name = \"DTL\"\r\n  parent       = google_folder.ddm.name\r\n}\r\n``` \r\n\r\nThe error I receive : \r\n\r\n    Error: Error creating folder 'Shared' in 'organizations/<redacted-org-id>': Error waiting for creating folder: Error code 9, message: Folder reservation failed for parent [organizations/<redacted-org-id>], folder [] due to constraint: The folder operation violates display name uniqueness within the parent.\r\n\r\nHow do I **include** existing resources within the terraform config file?\r\n- For (organization) folders (such as the example above)\r\n- For the billing account\r\n- For projects, i.e. Am I supposed to declare or import the **terraform admin project** within the `main.tf`?\r\n- For service accounts, how to handle existing keys and permissions of the account that is running the `terraform apply`\r\n- For existing policies and enabling APIs\r\n\r\n\r\n  [1]: https://github.com/terraform-google-modules/terraform-example-foundation/issues/33\r\n  [2]: https://github.com/hashicorp/terraform-provider-google/issues/1903", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "7. Create the `main.tf` ``` terraform { required_providers { google = { source = \"hashicorp/google\" version = \"3.85.0\" } } } provider \"google\" { credentials = file(var.credentials_file) region = var.region zone = var.zone } data \"google_organization\" \"org\" { organization = var.organization.id } resource \"google_folder\" \"shared\" { display_name = \"Shared\" parent = data.google_organization.org.name } resource \"google_folder\" \"ddm\" { display_name = \"Data and Digital Marketing\" parent = data.google_organization.org.name } resource \"google_folder\" \"dtl\" { display_name = \"DTL\" parent = google_folder.ddm.name } ``` ", "keywords": ["provider"]}, {"source": "Text", "text": "How do I **include** existing resources within the terraform config file? - For (organization) folders (such as the example above) - For the billing account ", "keywords": ["bill"]}, {"source": "Text", "text": "Am I supposed to declare or import the **terraform admin project** within the `main.tf`? - For service accounts, how to handle existing keys and permissions of the account that is running the `terraform apply` - For existing policies and enabling APIs [1]: https://github.com/terraform-google-modules/terraform-example-foundation/issues/33 [2]: https://github.com/hashicorp/terraform-provider-google/issues/1903", "keywords": ["provider"]}]}, {"Id": "254914338", "PostHistoryTypeId": "1", "PostId": "69405785", "RevisionGUID": "132cb903-8de7-4da6-b590-e233f597e1cc", "CreationDate": "2021-10-01T12:19:13.857", "UserId": "4375983", "Text": "How to reference an existing organization folder, or other resources, in Terraform (For GCP)", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "254914339", "PostHistoryTypeId": "3", "PostId": "69405785", "RevisionGUID": "132cb903-8de7-4da6-b590-e233f597e1cc", "CreationDate": "2021-10-01T12:19:13.857", "UserId": "4375983", "Text": "<google-cloud-platform><terraform><terraform-provider-gcp>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "69406781", "PostTypeId": "2", "ParentId": "69405785", "CreationDate": "2021-10-01T13:33:54.530", "Score": "1", "Body": "<p>In order to include already-existing resources within the terraform template, use the <code>import</code> statement.</p>\n<h1>For Folders</h1>\n<p>In the <a href=\"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_folder\" rel=\"nofollow noreferrer\">Terraform documentation for google_folder</a> :</p>\n<pre><code># Both syntaxes are valid\n$ terraform import google_folder.department1 1234567\n$ terraform import google_folder.department1 folders/1234567\n</code></pre>\n<p>So for the example above,</p>\n<ol>\n<li>Fetch the <strong>folder id</strong> using <code>gcloud alpha resource-manager folders list --organization=&lt;redacted_org_id&gt;</code> providing the organization id.</li>\n<li>Save the folder id somewhere, and if not already done, declare the folder as a resource within the <code>main.tf</code>\n<pre><code>resource &quot;google_folder&quot; &quot;shared&quot; {\ndisplay_name = &quot;Shared&quot;\nparent       = data.google_organization.org.name\n}\n</code></pre>\n</li>\n<li>Run the command : <code>terraform import google_folder.shared folders/&lt;redacted_folder_id&gt;</code>. You should get an output like <code>google_folder.shared: Import prepared!</code></li>\n<li>Make sure your infrastructure is updated via <code>terraform plan</code>.\n<pre><code>No changes. Your infrastructure matches the configuration.\n\nTerraform has compared your real infrastructure against your configuration \nand found no differences, so no changes are needed.\n</code></pre>\n</li>\n</ol>\n", "OwnerUserId": "4375983", "LastActivityDate": "2021-10-01T13:33:54.530", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "126839061", "PostId": "69406781", "Score": "1", "Text": "Be sure you executed \"terraform refresh\" and \"terraform plan\" before the import, otherwise, a lot of errors might occur.", "CreationDate": "2022-04-06T21:20:50.467", "UserId": "11328323", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "254919405", "PostHistoryTypeId": "2", "PostId": "69406781", "RevisionGUID": "a7242561-7170-4d8c-8770-fc4174830ffe", "CreationDate": "2021-10-01T13:33:54.530", "UserId": "4375983", "Text": "In order to include already-existing resources within the terraform template, use the `import` statement.\r\n\r\n# For Folders\r\nIn the [Terraform documentation for google_folder][1] : \r\n\r\n    # Both syntaxes are valid\r\n    $ terraform import google_folder.department1 1234567\r\n    $ terraform import google_folder.department1 folders/1234567\r\n\r\nSo for the example above, \r\n1. Fetch the **folder id** using `gcloud alpha resource-manager folders list --organization=<redacted_org_id>` providing the organization id.\r\n2. Save the folder id somewhere, and if not already done, declare the folder as a resource within the `main.tf`\r\n      ```\r\n      resource \"google_folder\" \"shared\" {\r\n      display_name = \"Shared\"\r\n      parent       = data.google_organization.org.name\r\n      }\r\n      ```\r\n3. Run the command : `terraform import google_folder.shared folders/<redacted_folder_id>`. You should get an output like `google_folder.shared: Import prepared!`\r\n4. Make sure your infrastructure is updated via `terraform plan`. \r\n    ```terraform\r\n    No changes. Your infrastructure matches the configuration.\r\n\r\n    Terraform has compared your real infrastructure against your configuration \r\n    and found no differences, so no changes are needed.\r\n    ```\r\n\r\n\r\n  [1]: https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_folder\r\n\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "No changes. ", "keywords": ["change"]}, {"source": "Text", "text": "Terraform has compared your real infrastructure against your configuration and found no differences, so no changes are needed. ", "keywords": ["change"]}]}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "For the billing account ", "keywords": ["bill"]}]}