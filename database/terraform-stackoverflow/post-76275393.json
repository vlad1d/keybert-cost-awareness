{"Id": "76275393", "PostTypeId": "1", "CreationDate": "2023-05-17T18:57:51.657", "Score": "1", "ViewCount": "162", "Body": "<p>I was creating a Terraform project that should create 3 buckets (1 public,1 private, 1 for server access logs)</p>\n<p>Main.tf</p>\n<pre><code>module &quot;public-s3&quot; {\n  source        = &quot;./modules&quot;\n  name          = &quot;public&quot;\n  acl           = &quot;public-read&quot;\n  target_bucket = module.logging-s3.bucket-name\n\n  depends_on = [module.logging-s3]\n}\n\nmodule &quot;private-s3&quot; {\n  source        = &quot;./modules&quot;\n  name          = &quot;private&quot;\n  acl           = &quot;private&quot;\n  target_bucket = module.logging-s3.bucket-name\n\n  depends_on = [module.logging-s3]\n}\n\nmodule &quot;logging-s3&quot; {\n  source = &quot;./modules/logging&quot;\n  name   = &quot;logging&quot;\n  acl    = &quot;log-delivery-write&quot;\n\n}\n\n\n\n</code></pre>\n<p>./Module/s3.tf</p>\n<pre><code>resource &quot;random_integer&quot; &quot;bucket-int&quot; {\n  min = 1000000\n  max = 5000000\n}\n\n\nresource &quot;aws_s3_bucket&quot; &quot;s3&quot; {\n  bucket = &quot;${var.name}-${random_integer.bucket-int.result}&quot;\n\n  tags = {\n    Name = &quot;${var.name}&quot;\n  }\n}\n\nresource &quot;aws_s3_bucket_ownership_controls&quot; &quot;ownership&quot; {\n  bucket = aws_s3_bucket.s3.id\n  rule {\n    object_ownership = &quot;BucketOwnerPreferred&quot;\n  }\n}\n\n\nresource &quot;aws_s3_bucket_public_access_block&quot; &quot;public&quot; {\n  bucket = aws_s3_bucket.s3.id\n\n  block_public_acls       = var.acl == &quot;public-read&quot; ? false : true\n  block_public_policy     = var.acl == &quot;public-read&quot; ? false : true\n  ignore_public_acls      = var.acl == &quot;public-read&quot; ? false : true\n  restrict_public_buckets = var.acl == &quot;public-read&quot; ? false : true\n}\n\n\nresource &quot;aws_s3_bucket_acl&quot; &quot;bucket-acl&quot; {\n  depends_on = [aws_s3_bucket_ownership_controls.ownership,\n    aws_s3_bucket_public_access_block.public\n  ]\n\n  bucket = aws_s3_bucket.s3.id\n  acl    = var.acl\n}\n\nresource &quot;aws_s3_bucket_logging&quot; &quot;logs-delivery&quot; {\n  bucket        = aws_s3_bucket.s3.id\n  target_bucket = var.target_bucket\n  target_prefix = &quot;log-${var.name}/&quot;\n\n  depends_on = [var.target_bucket]\n\n}\n\noutput &quot;bucket-name&quot; {\n  value = aws_s3_bucket.s3.bucket\n}\n\n\n</code></pre>\n<p>./Module/logging/logging-s3.tf</p>\n<pre><code>\nresource &quot;random_integer&quot; &quot;bucket-int&quot; {\n  min = 1000000\n  max = 5000000\n}\n\n\nresource &quot;aws_s3_bucket&quot; &quot;s3&quot; {\n  bucket = &quot;${var.name}-${random_integer.bucket-int.result}&quot;\n\n  tags = {\n    Name = &quot;${var.name}&quot;\n  }\n}\n\nresource &quot;aws_s3_bucket_ownership_controls&quot; &quot;ownership&quot; {\n  bucket = aws_s3_bucket.s3.id\n  rule {\n    object_ownership = &quot;BucketOwnerPreferred&quot;\n  }\n}\n\n\nresource &quot;aws_s3_bucket_public_access_block&quot; &quot;public&quot; {\n  bucket = aws_s3_bucket.s3.id\n\n  block_public_acls       = var.acl == &quot;public-read&quot; ? false : true\n  block_public_policy     = var.acl == &quot;public-read&quot; ? false : true\n  ignore_public_acls      = var.acl == &quot;public-read&quot; ? false : true\n  restrict_public_buckets = var.acl == &quot;public-read&quot; ? false : true\n}\n\n\nresource &quot;aws_s3_bucket_acl&quot; &quot;bucket-acl&quot; {\n  depends_on = [aws_s3_bucket_ownership_controls.ownership,\n    aws_s3_bucket_public_access_block.public\n  ]\n\n  bucket = aws_s3_bucket.s3.id\n  acl    = var.acl\n}\n\n\noutput &quot;bucket-name&quot; {\n  value = aws_s3_bucket.s3.bucket\n}\n\nresource &quot;aws_s3_bucket_policy&quot; &quot;allow_write_logs&quot; {\n  bucket = aws_s3_bucket.s3.id\n  policy = &lt;&lt;EOF\n    {\n    &quot;Version&quot;: &quot;2012-10-17&quot;,\n    &quot;Id&quot;: &quot;S3-Console-Auto-Gen-Policy-1684330819963&quot;,\n    &quot;Statement&quot;: [\n        {\n            &quot;Sid&quot;: &quot;S3PolicyStmt-DO-NOT-MODIFY-1684330819758&quot;,\n            &quot;Effect&quot;: &quot;Allow&quot;,\n            &quot;Principal&quot;: {\n                &quot;Service&quot;: &quot;logging.s3.amazonaws.com&quot;\n            },\n            &quot;Action&quot;: &quot;s3:PutObject&quot;,\n            &quot;Resource&quot;: &quot;arn:aws:s3:::${aws_s3_bucket.s3.bucket}/*&quot;\n        }\n    ]\n}\n  EOF\n}\n\n</code></pre>\n<p>everything works perfectly fine! logs are coming as intended, however, even though I am not making any additional action, logs are keep coming (under the name of my IAM user) and as well terraform is assuming my role to make more actions even though I am not making any Terraform action, must mention that I am using SSO (so the role from my end is assumed too)</p>\n<p>A good solution is creating life cycle for the files to avoid high costs, however, I want to understand why these logs are keep generating without any action made from my end?</p>\n<p>can I somehow limit the API calls that are logged?</p>\n<p>P.S\nI am pretty new to Terraform so have mercy on me if I made bad code styling or non efficient solutions, this is my first coding project ever</p>\n<ul>\n<li><p>I was trying to close VSCode to make sure session is closed with Bash</p>\n</li>\n<li><p>I was searching on StackOverFlow and other resources for similar issues and couldn't find any evidence or explanation</p>\n</li>\n</ul>\n", "OwnerUserId": "17430546", "LastActivityDate": "2023-05-17T18:57:51.657", "Title": "Terraform S3 Sever access logs keeps generating with no action made", "Tags": "<amazon-web-services><amazon-s3><terraform><infrastructure-as-code>", "AnswerCount": "0", "CommentCount": "10", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "134508772", "PostId": "76275393", "Score": "0", "Text": "What log entries are you seeing? What actions are occurring?", "CreationDate": "2023-05-17T21:19:56.687", "UserId": "1198321", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "134510372", "PostId": "76275393", "Score": "0", "Text": "REST.GET.BUCKET - \"GET /private-2230255?list-type=2&encoding-type=url&max-keys=1000&fetch-owner=true&delimiter=%2F&prefix= HTTP/1.1\" 200 - 306 - 32 30 \"-\" \"S3Console/0.4, aws-internal/3 aws-sdk-java/1.11.1030 Linux/5.4.241-160.348.amzn2int.x86_64 OpenJDK_64-Bit_Server_VM/25.362-b10 java/1.8.0_362 vendor/Oracle_Corporation cfg/retry-mode/standard\" - +2MZpOWXm499v0cB9NsiNgpfpLmNaFRj3hOe3v0vO4pnrbWHW/QmV7AsdpB3EuG243QVZZszbcw= SigV4 ECDHE-RSA-AES128-GCM-SHA256 AuthHeader s3.amazonaws.com TLSv1.2 - -", "CreationDate": "2023-05-18T01:14:57.773", "UserId": "17430546", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "REST.GET.BUCKET - \"GET /private-2230255?list-type=2&encoding-type=url&max-keys=1000&fetch-owner=true&delimiter=%2F&prefix= HTTP/1.1\" 200 - 306 - 32 30 \"-\" \"S3Console/0.4, aws-internal/3 aws-sdk-java/1.11.1030 Linux/5.4.241-160.348.amzn2int.x86_64 OpenJDK_64-Bit_Server_VM/25.362-b10 java/1.8.0_362 vendor/Oracle_Corporation cfg/retry-mode/standard\" - +2MZpOWXm499v0cB9NsiNgpfpLmNaFRj3hOe3v0vO4pnrbWHW/QmV7AsdpB3EuG243QVZZszbcw= SigV4 ECDHE-RSA-AES128-GCM-SHA256 AuthHeader s3.amazonaws.com TLSv1.2 - -", "keywords": ["billing mode"]}]}, {"Id": "134511485", "PostId": "76275393", "Score": "0", "Text": "Do you have the S3 bucket(s) open in the AWS console in your browser?", "CreationDate": "2023-05-18T05:17:12.670", "UserId": "1198321", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "134515031", "PostId": "76275393", "Score": "0", "Text": "The only bucket in the console that is open infront of me was the logging bucket... as well i turned off everything and went outside at the time of this log... however... me checking today... i see just few more... not as intensive as yesterday (which was the day of deployment)", "CreationDate": "2023-05-18T11:28:55.760", "UserId": "17430546", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "134522723", "PostId": "76275393", "Score": "0", "Text": "I would check for any other browser tabs, because that example log you've posted is from the S3 browser console", "CreationDate": "2023-05-18T21:21:34.857", "UserId": "1198321", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "134571132", "PostId": "76275393", "Score": "0", "Text": "seems you were right! since i didn't open the account logs stopped from coming, is there a way I can filter out which logs will come from the access logs?", "CreationDate": "2023-05-23T09:11:00.250", "UserId": "17430546", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "134581947", "PostId": "76275393", "Score": "0", "Text": "Do you mean filter as in stop-from-being-logged or filter as in ignore-some-logs-when-viewing?", "CreationDate": "2023-05-23T23:16:35.743", "UserId": "1198321", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135319505", "PostId": "76275393", "Score": "0", "Text": "stop logging some actions, I saw online that this is not an option, it's all or nothing, unless I missed something", "CreationDate": "2023-07-24T16:48:15.233", "UserId": "17430546", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135322166", "PostId": "76275393", "Score": "0", "Text": "I don't believe you can stop logging some messages. Surely if you're logging access, you want to log all accesses? In any case, this is now moving away from a Terraform question - if you want to, you can ask a separate question about configuring AWS S3 logging.", "CreationDate": "2023-07-24T21:21:40.667", "UserId": "1198321", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135330081", "PostId": "76275393", "Score": "0", "Text": "That's okay that makes sense! thank you for your help!", "CreationDate": "2023-07-25T12:51:44.473", "UserId": "17430546", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "292943642", "PostHistoryTypeId": "2", "PostId": "76275393", "RevisionGUID": "ceee45cd-6f3f-45bf-9b4e-abd9b10f5f66", "CreationDate": "2023-05-17T18:57:51.657", "UserId": "17430546", "Text": "I was creating a Terraform project that should create 3 buckets (1 public,1 private, 1 for server access logs)\r\n\r\nMain.tf\r\n\r\n```\r\nmodule \"public-s3\" {\r\n  source        = \"./modules\"\r\n  name          = \"public\"\r\n  acl           = \"public-read\"\r\n  target_bucket = module.logging-s3.bucket-name\r\n\r\n  depends_on = [module.logging-s3]\r\n}\r\n\r\nmodule \"private-s3\" {\r\n  source        = \"./modules\"\r\n  name          = \"private\"\r\n  acl           = \"private\"\r\n  target_bucket = module.logging-s3.bucket-name\r\n\r\n  depends_on = [module.logging-s3]\r\n}\r\n\r\nmodule \"logging-s3\" {\r\n  source = \"./modules/logging\"\r\n  name   = \"logging\"\r\n  acl    = \"log-delivery-write\"\r\n\r\n}\r\n\r\n\r\n\r\n```\r\n\r\n./Module/s3.tf\r\n\r\n\r\n```\r\nresource \"random_integer\" \"bucket-int\" {\r\n  min = 1000000\r\n  max = 5000000\r\n}\r\n\r\n\r\nresource \"aws_s3_bucket\" \"s3\" {\r\n  bucket = \"${var.name}-${random_integer.bucket-int.result}\"\r\n\r\n  tags = {\r\n    Name = \"${var.name}\"\r\n  }\r\n}\r\n\r\nresource \"aws_s3_bucket_ownership_controls\" \"ownership\" {\r\n  bucket = aws_s3_bucket.s3.id\r\n  rule {\r\n    object_ownership = \"BucketOwnerPreferred\"\r\n  }\r\n}\r\n\r\n\r\nresource \"aws_s3_bucket_public_access_block\" \"public\" {\r\n  bucket = aws_s3_bucket.s3.id\r\n\r\n  block_public_acls       = var.acl == \"public-read\" ? false : true\r\n  block_public_policy     = var.acl == \"public-read\" ? false : true\r\n  ignore_public_acls      = var.acl == \"public-read\" ? false : true\r\n  restrict_public_buckets = var.acl == \"public-read\" ? false : true\r\n}\r\n\r\n\r\nresource \"aws_s3_bucket_acl\" \"bucket-acl\" {\r\n  depends_on = [aws_s3_bucket_ownership_controls.ownership,\r\n    aws_s3_bucket_public_access_block.public\r\n  ]\r\n\r\n  bucket = aws_s3_bucket.s3.id\r\n  acl    = var.acl\r\n}\r\n\r\nresource \"aws_s3_bucket_logging\" \"logs-delivery\" {\r\n  bucket        = aws_s3_bucket.s3.id\r\n  target_bucket = var.target_bucket\r\n  target_prefix = \"log-${var.name}/\"\r\n\r\n  depends_on = [var.target_bucket]\r\n\r\n}\r\n\r\noutput \"bucket-name\" {\r\n  value = aws_s3_bucket.s3.bucket\r\n}\r\n\r\n\r\n```\r\n\r\n./Module/logging/logging-s3.tf\r\n\r\n\r\n```\r\n\r\nresource \"random_integer\" \"bucket-int\" {\r\n  min = 1000000\r\n  max = 5000000\r\n}\r\n\r\n\r\nresource \"aws_s3_bucket\" \"s3\" {\r\n  bucket = \"${var.name}-${random_integer.bucket-int.result}\"\r\n\r\n  tags = {\r\n    Name = \"${var.name}\"\r\n  }\r\n}\r\n\r\nresource \"aws_s3_bucket_ownership_controls\" \"ownership\" {\r\n  bucket = aws_s3_bucket.s3.id\r\n  rule {\r\n    object_ownership = \"BucketOwnerPreferred\"\r\n  }\r\n}\r\n\r\n\r\nresource \"aws_s3_bucket_public_access_block\" \"public\" {\r\n  bucket = aws_s3_bucket.s3.id\r\n\r\n  block_public_acls       = var.acl == \"public-read\" ? false : true\r\n  block_public_policy     = var.acl == \"public-read\" ? false : true\r\n  ignore_public_acls      = var.acl == \"public-read\" ? false : true\r\n  restrict_public_buckets = var.acl == \"public-read\" ? false : true\r\n}\r\n\r\n\r\nresource \"aws_s3_bucket_acl\" \"bucket-acl\" {\r\n  depends_on = [aws_s3_bucket_ownership_controls.ownership,\r\n    aws_s3_bucket_public_access_block.public\r\n  ]\r\n\r\n  bucket = aws_s3_bucket.s3.id\r\n  acl    = var.acl\r\n}\r\n\r\n\r\noutput \"bucket-name\" {\r\n  value = aws_s3_bucket.s3.bucket\r\n}\r\n\r\nresource \"aws_s3_bucket_policy\" \"allow_write_logs\" {\r\n  bucket = aws_s3_bucket.s3.id\r\n  policy = <<EOF\r\n    {\r\n    \"Version\": \"2012-10-17\",\r\n    \"Id\": \"S3-Console-Auto-Gen-Policy-1684330819963\",\r\n    \"Statement\": [\r\n        {\r\n            \"Sid\": \"S3PolicyStmt-DO-NOT-MODIFY-1684330819758\",\r\n            \"Effect\": \"Allow\",\r\n            \"Principal\": {\r\n                \"Service\": \"logging.s3.amazonaws.com\"\r\n            },\r\n            \"Action\": \"s3:PutObject\",\r\n            \"Resource\": \"arn:aws:s3:::${aws_s3_bucket.s3.bucket}/*\"\r\n        }\r\n    ]\r\n}\r\n  EOF\r\n}\r\n\r\n```\r\n\r\neverything works perfectly fine! logs are coming as intended, however, even though I am not making any additional action, logs are keep coming (under the name of my IAM user) and as well terraform is assuming my role to make more actions even though I am not making any Terraform action, must mention that I am using SSO (so the role from my end is assumed too)\r\n\r\nA good solution is creating life cycle for the files to avoid high costs, however, I want to understand why these logs are keep generating without any action made from my end?\r\n\r\ncan I somehow limit the API calls that are logged?\r\n\r\nP.S\r\nI am pretty new to Terraform so have mercy on me if I made bad code styling or non efficient solutions, this is my first coding project ever \r\n\r\n\r\n\r\n\r\n- I was trying to close VSCode to make sure session is closed with Bash\r\n\r\n- I was searching on StackOverFlow and other resources for similar issues and couldn't find any evidence or explanation\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I was creating a Terraform project that should create 3 buckets (1 public,1 private, 1 for server access logs) Main.tf ``` module \"public-s3\" { source = \"./modules\" name = \"public\" acl = \"public-read\" target_bucket = module.logging-s3.bucket-name depends_on = [module.logging-s3] } module \"private-s3\" { source = \"./modules\" name = \"private\" acl = \"private\" target_bucket = module.logging-s3.bucket-name depends_on = [module.logging-s3] } module \"logging-s3\" { source = \"./modules/logging\" name = \"logging\" acl = \"log-delivery-write\" } ``` ./Module/s3.tf ``` resource \"random_integer\" \"bucket-int\" { min = 1000000 max = 5000000 } resource \"aws_s3_bucket\" \"s3\" { bucket = \"${var.name}-${random_integer.bucket-int.result}\" tags = { Name = \"${var.name}\" } } resource \"aws_s3_bucket_ownership_controls\" \"ownership\" { bucket = aws_s3_bucket.s3.id rule { object_ownership = \"BucketOwnerPreferred\" } } resource \"aws_s3_bucket_public_access_block\" \"public\" { bucket = aws_s3_bucket.s3.id block_public_acls = var.acl == \"public-read\" ? false : true block_public_policy = var.acl == \"public-read\" ? false : true ignore_public_acls = var.acl == \"public-read\" ? false : true restrict_public_buckets = var.acl == \"public-read\" ? false : true } resource \"aws_s3_bucket_acl\" \"bucket-acl\" { depends_on = [aws_s3_bucket_ownership_controls.ownership, aws_s3_bucket_public_access_block.public ] bucket = aws_s3_bucket.s3.id acl = var.acl } resource \"aws_s3_bucket_logging\" \"logs-delivery\" { bucket = aws_s3_bucket.s3.id target_bucket = var.target_bucket target_prefix = \"log-${var.name}/\" depends_on = [var.target_bucket] } output \"bucket-name\" { value = aws_s3_bucket.s3.bucket } ``` ./Module/logging/logging-s3.tf ``` resource \"random_integer\" \"bucket-int\" { min = 1000000 max = 5000000 } resource \"aws_s3_bucket\" \"s3\" { bucket = \"${var.name}-${random_integer.bucket-int.result}\" tags = { Name = \"${var.name}\" } } resource \"aws_s3_bucket_ownership_controls\" \"ownership\" { bucket = aws_s3_bucket.s3.id rule { object_ownership = \"BucketOwnerPreferred\" } } resource \"aws_s3_bucket_public_access_block\" \"public\" { bucket = aws_s3_bucket.s3.id block_public_acls = var.acl == \"public-read\" ? false : true block_public_policy = var.acl == \"public-read\" ? false : true ignore_public_acls = var.acl == \"public-read\" ? false : true restrict_public_buckets = var.acl == \"public-read\" ? false : true } resource \"aws_s3_bucket_acl\" \"bucket-acl\" { depends_on = [aws_s3_bucket_ownership_controls.ownership, aws_s3_bucket_public_access_block.public ] bucket = aws_s3_bucket.s3.id acl = var.acl } output \"bucket-name\" { value = aws_s3_bucket.s3.bucket } resource \"aws_s3_bucket_policy\" \"allow_write_logs\" { bucket = aws_s3_bucket.s3.id policy = <<EOF { \"Version\": \"2012-10-17\", \"Id\": \"S3-Console-Auto-Gen-Policy-1684330819963\", \"Statement\": [ { \"Sid\": \"S3PolicyStmt-DO-NOT-MODIFY-1684330819758\", \"Effect\": \"Allow\", \"Principal\": { \"Service\": \"logging.s3.amazonaws.com\" }, \"Action\": \"s3:PutObject\", \"Resource\": \"arn:aws:s3:::${aws_s3_bucket.s3.bucket}/*\" } ] } EOF } `", "keywords": ["policy"]}, {"source": "Text", "text": "P.S I am pretty new to Terraform so have mercy on me if I made bad code styling or non efficient solutions, this is my first coding project ever - I was trying to close VSCode to make sure session is closed with Bash - I was searching on StackOverFlow and other resources for similar issues and couldn't find any evidence or explanation", "keywords": ["efficient"]}]}, {"Id": "292943644", "PostHistoryTypeId": "1", "PostId": "76275393", "RevisionGUID": "ceee45cd-6f3f-45bf-9b4e-abd9b10f5f66", "CreationDate": "2023-05-17T18:57:51.657", "UserId": "17430546", "Text": "Terraform S3 Sever access logs keeps generating with no action made", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "292943645", "PostHistoryTypeId": "3", "PostId": "76275393", "RevisionGUID": "ceee45cd-6f3f-45bf-9b4e-abd9b10f5f66", "CreationDate": "2023-05-17T18:57:51.657", "UserId": "17430546", "Text": "<amazon-web-services><amazon-s3><terraform><infrastructure-as-code>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "292943646", "PostHistoryTypeId": "66", "PostId": "76275393", "RevisionGUID": "ceee45cd-6f3f-45bf-9b4e-abd9b10f5f66", "CreationDate": "2023-05-17T18:57:51.657", "UserId": "17430546", "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "P.S I am pretty new to Terraform so have mercy on me if I made bad code styling or non efficient solutions, this is my first coding project ever I was trying to close VSCode to make sure session is closed with Bash I was searching on StackOverFlow and other resources for similar issues and couldn't find any evidence or explanation", "keywords": ["efficient"]}]}