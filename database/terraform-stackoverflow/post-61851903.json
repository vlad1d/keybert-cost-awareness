{"Id": "61851903", "PostTypeId": "1", "AcceptedAnswerId": "65457768", "CreationDate": "2020-05-17T12:37:43.307", "Score": "23", "ViewCount": "74992", "Body": "<p>My simple terraform file is:</p>\n<pre class=\"lang-terraform prettyprint-override\"><code>provider &quot;aws&quot; {\n  region = &quot;region&quot;\n  access_key = &quot;key&quot; \n  secret_key = &quot;secret_key&quot;\n}\n\nterraform {\n  backend &quot;s3&quot; {\n    # Replace this with your bucket name!\n    bucket         = &quot;great-name-terraform-state-2&quot;\n    key            = &quot;global/s3/terraform.tfstate&quot;\n    region         = &quot;eu-central-1&quot;\n    # Replace this with your DynamoDB table name!\n    dynamodb_table = &quot;great-name-locks-2&quot;\n    encrypt        = true\n  }\n}\n\nresource &quot;aws_s3_bucket&quot; &quot;terraform_state&quot; {\n  bucket = &quot;great-name-terraform-state-2&quot;\n  # Enable versioning so we can see the full revision history of our\n  # state files\n  versioning {\n    enabled = true\n  }\n  server_side_encryption_configuration {\n    rule {\n      apply_server_side_encryption_by_default {\n        sse_algorithm = &quot;AES256&quot;\n      }\n    }\n  }\n}\n\nresource &quot;aws_dynamodb_table&quot; &quot;terraform_locks&quot; {\n  name         = &quot;great-name-locks-2&quot;\n  billing_mode = &quot;PAY_PER_REQUEST&quot;\n  hash_key     = &quot;LockID&quot;\n  attribute {\n    name = &quot;LockID&quot;\n    type = &quot;S&quot;\n    }\n}\n</code></pre>\n<p>All I am trying to do is to replace my backend from local to be store at S3.\nI am doing the following:</p>\n<ol>\n<li><p><code>terraform init</code> ( when the terrafrom{} block is comment )</p>\n</li>\n<li><p><code>terrafrom apply</code> - I can see in my AWS that the bucket was created and the Dynmpo table as well.</p>\n</li>\n<li><p>now I am un commenting the terrafrom block and again <code>terraform init</code> and   i get the following error:</p>\n</li>\n</ol>\n<pre><code>Error loading state:\n    AccessDenied: Access Denied\n        status code: 403, request id: xxx, host id: xxxx\n</code></pre>\n<p>My IAM has <strong>administer access</strong>\nI am using <code>Terraform v0.12.24</code>\nas one can observe, I am directly writing my AWS key and secret in the file</p>\n<p>What am i doing wrong?</p>\n<p>I appreciate any help!</p>\n", "OwnerUserId": "11306005", "LastEditorUserId": "8976", "LastEditDate": "2021-04-21T17:33:35.753", "LastActivityDate": "2023-08-29T07:23:51.540", "Title": "How to solve Error loading state: AccessDenied: Access Denied status code: 403 when trying to use s3 for terraform backend?", "Tags": "<amazon-web-services><terraform><terraform-provider-aws>", "AnswerCount": "13", "CommentCount": "0", "FavoriteCount": "0", "ContentLicense": "CC BY-SA 4.0", "links": [{"Id": "1747901069", "CreationDate": "2020-05-17T20:59:47.307", "PostId": "61851903", "RelatedPostId": "47831151", "LinkTypeId": "1"}, {"Id": "1995659104", "CreationDate": "2022-07-26T19:31:48.363", "PostId": "61851903", "RelatedPostId": "57984714", "LinkTypeId": "1"}], "history": [{"Id": "221864750", "PostHistoryTypeId": "2", "PostId": "61851903", "RevisionGUID": "8b91b26e-d705-4af9-9b47-37a7233a0c5f", "CreationDate": "2020-05-17T12:37:43.307", "UserId": "11306005", "Text": "my simple terraform file is:\r\n```\r\nprovider \"aws\" {\r\n  region = \"region\"\r\n  access_key = \"key\" \r\n  secret_key = \"secret_key\"\r\n}\r\n\r\nterraform {\r\n  backend \"s3\" {\r\n    # Replace this with your bucket name!\r\n    bucket         = \"great-name-terraform-state-2\"\r\n    key            = \"global/s3/terraform.tfstate\"\r\n    region         = \"eu-central-1\"\r\n    # Replace this with your DynamoDB table name!\r\n    dynamodb_table = \"great-name-locks-2\"\r\n    encrypt        = true\r\n  }\r\n}\r\n\r\nresource \"aws_s3_bucket\" \"terraform_state\" {\r\n  bucket = \"great-name-terraform-state-2\"\r\n  # Enable versioning so we can see the full revision history of our\r\n  # state files\r\n  versioning {\r\n    enabled = true\r\n  }\r\n  server_side_encryption_configuration {\r\n    rule {\r\n      apply_server_side_encryption_by_default {\r\n        sse_algorithm = \"AES256\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nresource \"aws_dynamodb_table\" \"terraform_locks\" {\r\n  name         = \"great-name-locks-2\"\r\n  billing_mode = \"PAY_PER_REQUEST\"\r\n  hash_key     = \"LockID\"\r\n  attribute {\r\n    name = \"LockID\"\r\n    type = \"S\"\r\n    }\r\n}\r\n```\r\n\r\nAll I am trying to do is to replace my backend from local to be store at S3.\r\nI am doing the following:\r\n\r\n1. ```terraform init``` ( when the terrafrom{} block is comment )\r\n\r\n2. ```terrafrom apply``` - I can see in my AWS that the bucket was created and the Dynmpo table as well.\r\n\r\n2. now I am un commenting the terrafrom block and again ```terraform init``` and   i get the following error:\r\n```\r\nError loading state:\r\n    AccessDenied: Access Denied\r\n        status code: 403, request id: xxx, host id: xxxx\r\n```\r\nMy IAM has **administer access**\r\nI am using ```Terraform v0.12.24```\r\nas one can observe, I am directly writing my AWS key and secret in the file\r\n\r\nwhat am i doing wrong?\r\nappreciate the help! ", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "my simple terraform file is: ``` provider \"aws\" { region = \"region\" access_key = \"key\" secret_key = \"secret_key\" } terraform { backend \"s3\" { # Replace this with your bucket name! bucket = \"great-name-terraform-state-2\" key = \"global/s3/terraform.tfstate\" region = \"eu-central-1\" # Replace this with your DynamoDB table name! dynamodb_table = \"great-name-locks-2\" encrypt = true } } resource \"aws_s3_bucket\" \"terraform_state\" { bucket = \"great-name-terraform-state-2\" # Enable versioning so we can see the full revision history of our # state files versioning { enabled = true } server_side_encryption_configuration { rule { apply_server_side_encryption_by_default { sse_algorithm = \"AES256\" } } } } resource \"aws_dynamodb_table\" \"terraform_locks\" { name = \"great-name-locks-2\" billing_mode = \"PAY_PER_REQUEST\" hash_key = \"LockID\" attribute { name = \"LockID\" type = \"S\" } } ``` All I am trying to do is to replace my backend from local to be store at S3. I am doing the following: 1. ```terraform init``` ( when the terrafrom{} block is comment ) 2. ```terrafrom apply``` - I can see in my AWS that the bucket was created and the Dynmpo table as well. ", "keywords": ["bill", "provider"]}]}, {"Id": "221864751", "PostHistoryTypeId": "1", "PostId": "61851903", "RevisionGUID": "8b91b26e-d705-4af9-9b47-37a7233a0c5f", "CreationDate": "2020-05-17T12:37:43.307", "UserId": "11306005", "Text": "How to solve Error loading state: AccessDenied: Access Denied status code: 403 when trying to use s3 for terraform backend?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "221864752", "PostHistoryTypeId": "3", "PostId": "61851903", "RevisionGUID": "8b91b26e-d705-4af9-9b47-37a7233a0c5f", "CreationDate": "2020-05-17T12:37:43.307", "UserId": "11306005", "Text": "<terraform><terraform-provider-aws>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "245126071", "PostHistoryTypeId": "6", "PostId": "61851903", "RevisionGUID": "8d261d19-dd69-4dc6-bf61-26e7f54de703", "CreationDate": "2021-04-21T17:33:35.753", "UserId": "11942948", "Comment": "adding more tag to increase reachability ", "Text": "<amazon-web-services><terraform><terraform-provider-aws>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "245126072", "PostHistoryTypeId": "24", "PostId": "61851903", "RevisionGUID": "8d261d19-dd69-4dc6-bf61-26e7f54de703", "CreationDate": "2021-04-21T17:33:35.753", "Comment": "Proposed by 11942948 approved by -1 edit id of 5138876", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "245126073", "PostHistoryTypeId": "5", "PostId": "61851903", "RevisionGUID": "279091e1-4017-47df-abdf-51c6ab247c82", "CreationDate": "2021-04-21T17:33:35.753", "UserId": "8976", "Comment": "code formatting", "Text": "My simple terraform file is:\r\n\r\n```lang-terraform\r\nprovider \"aws\" {\r\n  region = \"region\"\r\n  access_key = \"key\" \r\n  secret_key = \"secret_key\"\r\n}\r\n\r\nterraform {\r\n  backend \"s3\" {\r\n    # Replace this with your bucket name!\r\n    bucket         = \"great-name-terraform-state-2\"\r\n    key            = \"global/s3/terraform.tfstate\"\r\n    region         = \"eu-central-1\"\r\n    # Replace this with your DynamoDB table name!\r\n    dynamodb_table = \"great-name-locks-2\"\r\n    encrypt        = true\r\n  }\r\n}\r\n\r\nresource \"aws_s3_bucket\" \"terraform_state\" {\r\n  bucket = \"great-name-terraform-state-2\"\r\n  # Enable versioning so we can see the full revision history of our\r\n  # state files\r\n  versioning {\r\n    enabled = true\r\n  }\r\n  server_side_encryption_configuration {\r\n    rule {\r\n      apply_server_side_encryption_by_default {\r\n        sse_algorithm = \"AES256\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nresource \"aws_dynamodb_table\" \"terraform_locks\" {\r\n  name         = \"great-name-locks-2\"\r\n  billing_mode = \"PAY_PER_REQUEST\"\r\n  hash_key     = \"LockID\"\r\n  attribute {\r\n    name = \"LockID\"\r\n    type = \"S\"\r\n    }\r\n}\r\n```\r\n\r\nAll I am trying to do is to replace my backend from local to be store at S3.\r\nI am doing the following:\r\n\r\n1. ```terraform init``` ( when the terrafrom{} block is comment )\r\n\r\n2. ```terrafrom apply``` - I can see in my AWS that the bucket was created and the Dynmpo table as well.\r\n\r\n2. now I am un commenting the terrafrom block and again ```terraform init``` and   i get the following error:\r\n```\r\nError loading state:\r\n    AccessDenied: Access Denied\r\n        status code: 403, request id: xxx, host id: xxxx\r\n```\r\nMy IAM has **administer access**\r\nI am using ```Terraform v0.12.24```\r\nas one can observe, I am directly writing my AWS key and secret in the file\r\n\r\nWhat am i doing wrong?\r\n\r\nI appreciate any help! ", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "My simple terraform file is: ```lang-terraform provider \"aws\" { region = \"region\" access_key = \"key\" secret_key = \"secret_key\" } terraform { backend \"s3\" { # Replace this with your bucket name! bucket = \"great-name-terraform-state-2\" key = \"global/s3/terraform.tfstate\" region = \"eu-central-1\" # Replace this with your DynamoDB table name! dynamodb_table = \"great-name-locks-2\" encrypt = true } } resource \"aws_s3_bucket\" \"terraform_state\" { bucket = \"great-name-terraform-state-2\" # Enable versioning so we can see the full revision history of our # state files versioning { enabled = true } server_side_encryption_configuration { rule { apply_server_side_encryption_by_default { sse_algorithm = \"AES256\" } } } } resource \"aws_dynamodb_table\" \"terraform_locks\" { name = \"great-name-locks-2\" billing_mode = \"PAY_PER_REQUEST\" hash_key = \"LockID\" attribute { name = \"LockID\" type = \"S\" } } ``` All I am trying to do is to replace my backend from local to be store at S3. I am doing the following: 1. ```terraform init``` ( when the terrafrom{} block is comment ) 2. ```terrafrom apply``` - I can see in my AWS that the bucket was created and the Dynmpo table as well. ", "keywords": ["bill", "provider"]}]}], "answers": [{"Id": "64762720", "PostTypeId": "2", "ParentId": "61851903", "CreationDate": "2020-11-10T04:04:14.197", "Score": "5", "Body": "<p>I also faced the same issue. Then I manually remove the state file from my local system. You can find the terraform.tfstate file under .terraform/ directory and run init again. in case you had multiple profiles configured in aws cli. not mentioning profile under aws provider configuration will make terraform use default profile.</p>\n", "OwnerUserId": "5128187", "LastActivityDate": "2020-11-10T04:04:14.197", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "234595638", "PostHistoryTypeId": "2", "PostId": "64762720", "RevisionGUID": "6ae6a4b2-d7f0-4062-8642-8777bc1651fe", "CreationDate": "2020-11-10T04:04:14.197", "UserId": "5128187", "Text": "I also faced the same issue. Then I manually remove the state file from my local system. You can find the terraform.tfstate file under .terraform/ directory and run init again. in case you had multiple profiles configured in aws cli. not mentioning profile under aws provider configuration will make terraform use default profile.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "not mentioning profile under aws provider configuration will make terraform use default profile.", "keywords": ["provider"]}]}], "filtered-sentences": [{"source": "Body", "text": "not mentioning profile under aws provider configuration will make terraform use default profile.", "keywords": ["provider"]}]}, {"Id": "73511821", "PostTypeId": "2", "ParentId": "61851903", "CreationDate": "2022-08-27T14:25:46.220", "Score": "1", "Body": "<p>i had the same issue my IAM role didnt have the correct premissions to do List on the bucket to check use:</p>\n<pre><code>aws s3 ls\n</code></pre>\n<p>and see if you have access. If not add the proper IAM role</p>\n", "OwnerUserId": "6004444", "LastActivityDate": "2022-08-27T14:25:46.220", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "277091488", "PostHistoryTypeId": "2", "PostId": "73511821", "RevisionGUID": "6e2a47c6-c7a1-42a1-902c-0adaa386e86b", "CreationDate": "2022-08-27T14:25:46.220", "UserId": "6004444", "Text": "i had the same issue my IAM role didnt have the correct premissions to do List on the bucket to check use:\r\n```\r\naws s3 ls\r\n```\r\nand see if you have access. If not add the proper IAM role\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "61858720", "PostTypeId": "2", "ParentId": "61851903", "CreationDate": "2020-05-17T20:59:47.307", "Score": "0", "Body": "<p>It's not possible to create the S3 bucket that you are planning to use as remote state storage within the same terraform project. You will have to create another terraform project where you provision your state buckets (+ lock tables) or just create the bucket manually.</p>\n\n<p>For a more detailed answer please read <a href=\"https://stackoverflow.com/a/47833894/8641285\">this</a></p>\n", "OwnerUserId": "8641285", "LastActivityDate": "2020-05-17T20:59:47.307", "CommentCount": "6", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "109418677", "PostId": "61858720", "Score": "0", "Text": "created another project to use the previous bucket and the dynamo table, made myself the folder system as it is in the key  when made ```terraform init``` got ```Successfully configured the backend \"s3\"! Terraform will automatically\nuse this backend unless the backend configuration changes.\nError refreshing state: AccessDenied: Access Denied\n        status code: 403, request id: xxx, host id: xxx```", "CreationDate": "2020-05-18T06:08:29.787", "UserId": "11306005", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Terraform will automatically use this backend unless the backend configuration changes. ", "keywords": ["change"]}]}, {"Id": "109422420", "PostId": "61858720", "Score": "0", "Text": "In the most cases it is easier to just create it by hand, especially when you don't have to do it often. What I meant by \"create another TF project\" is: Image you are working in a DevOps Team and you have to create new dynamic terraform projects on the fly to provide to your team. Then, instead of creating the state bucket manually, you could write a simple terraform file which has a local state and provisions an s3 bucket and a dynamo db table. Afterwards you take these two components and reference them by name in your `terraform { backend \"s3\" {} }` block.", "CreationDate": "2020-05-18T08:28:19.490", "UserId": "8641285", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "109422436", "PostId": "61858720", "Score": "0", "Text": "I would be interested to see what output you get when you create the bucket by hand.", "CreationDate": "2020-05-18T08:28:53.990", "UserId": "8641285", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "109660304", "PostId": "61858720", "Score": "0", "Text": "sorry for the late replay, nothing works, I try to make the bucket and table from a different project - didnt work . as well tried to create manually always the same Error", "CreationDate": "2020-05-25T12:24:15.890", "UserId": "11306005", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "109675664", "PostId": "61858720", "Score": "0", "Text": "You can try to debug the terraform init command with: `TF_LOG=DEBUG terraform init`.\nMaybe its worth having a look at your ~/.aws/credentials file (or your environment variables `echo $AWS_ACCESS_KEY_ID` ,`echo $AWS_SECRET_ACCESS_KEY ` and `echo $AWS_SESSION_TOKEN `) if there are some different credentials which may override your set credentials.", "CreationDate": "2020-05-25T21:03:33.183", "UserId": "8641285", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "109675750", "PostId": "61858720", "Score": "0", "Text": "The best bet would be to look at the `TF_LOG=DEBUG`. Maybe also have a look at [this github issue](https://github.com/hashicorp/terraform/issues/18801) for more information.", "CreationDate": "2020-05-25T21:06:48.003", "UserId": "8641285", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "221892754", "PostHistoryTypeId": "2", "PostId": "61858720", "RevisionGUID": "b27d2b4c-d72c-4035-9313-fc8713de7536", "CreationDate": "2020-05-17T20:59:47.307", "UserId": "8641285", "Text": "It's not possible to create the S3 bucket that you are planning to use as remote state storage within the same terraform project. You will have to create another terraform project where you provision your state buckets (+ lock tables) or just create the bucket manually.\r\n\r\nFor a more detailed answer please read [this][1]\r\n\r\n\r\n  [1]: https://stackoverflow.com/a/47833894/8641285", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "It's not possible to create the S3 bucket that you are planning to use as remote state storage within the same terraform project. ", "keywords": ["storage"]}]}], "filtered-sentences": [{"source": "Body", "text": "It's not possible to create the S3 bucket that you are planning to use as remote state storage within the same terraform project. ", "keywords": ["storage"]}]}, {"Id": "76998118", "PostTypeId": "2", "ParentId": "61851903", "CreationDate": "2023-08-29T07:17:42.133", "Score": "0", "Body": "<p>There might be a wrong aws_access_key_id or aws_secret_access_key in the .aws/config file. When I erased two lines from the file it worked!</p>\n", "OwnerUserId": "18590276", "LastActivityDate": "2023-08-29T07:17:42.133", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "297226899", "PostHistoryTypeId": "2", "PostId": "76998118", "RevisionGUID": "372314b2-9d57-430e-a349-69d56d6d2b50", "CreationDate": "2023-08-29T07:17:42.133", "UserId": "18590276", "Text": "There might be a wrong aws_access_key_id or aws_secret_access_key in the .aws/config file. When I erased two lines from the file it worked!", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "76586810", "PostTypeId": "2", "ParentId": "61851903", "CreationDate": "2023-06-30T07:19:29.433", "Score": "0", "Body": "<p>mostly we do as like comment out the s3 and dynamodb table configuration or else check the buckets and dynamodb table values sometimes those values were miss matched that time also we are facing issues.</p>\n", "OwnerUserId": "16404437", "LastActivityDate": "2023-06-30T07:19:29.433", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "294802885", "PostHistoryTypeId": "2", "PostId": "76586810", "RevisionGUID": "d7f8af3e-1341-4537-b746-e9d5c714868a", "CreationDate": "2023-06-30T07:19:29.433", "UserId": "16404437", "Text": "mostly we do as like comment out the s3 and dynamodb table configuration or else check the buckets and dynamodb table values sometimes those values were miss matched that time also we are facing issues.\r\n\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "70100845", "PostTypeId": "2", "ParentId": "61851903", "CreationDate": "2021-11-24T17:55:57.360", "Score": "0", "Body": "<p>I was getting the same issue after running <code>terraform apply</code>; <code>terraform init</code> worked fine. None of the suggestions here worked but switching my shell from zsh to bash solved it.</p>\n", "OwnerUserId": "17500879", "LastActivityDate": "2021-11-24T17:55:57.360", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "258689963", "PostHistoryTypeId": "2", "PostId": "70100845", "RevisionGUID": "8e383b4a-a1ad-40c8-a246-5fe86a773d59", "CreationDate": "2021-11-24T17:55:57.360", "UserId": "17500879", "Text": "I was getting the same issue after running `terraform apply`; `terraform init` worked fine. None of the suggestions here worked but switching my shell from zsh to bash solved it. ", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "71157612", "PostTypeId": "2", "ParentId": "61851903", "CreationDate": "2022-02-17T11:49:43.097", "Score": "10", "Body": "<p>I knew that my credentials were fine by running <code>terraform init</code> on other projects that shared the same S3 bucket for their Terraform backend.</p>\n<p>What worked for me:</p>\n<pre class=\"lang-bash prettyprint-override\"><code>rm -rf .terraform/\n</code></pre>\n<p><strong>Edit</strong></p>\n<p>Make sure to run <code>terraform init</code> again after deleting your local <code>.terraform</code> directory to ensure you installed the required packages.</p>\n", "OwnerUserId": "4304123", "LastEditorUserId": "4304123", "LastEditDate": "2022-07-15T11:36:46.543", "LastActivityDate": "2022-07-15T11:36:46.543", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "128920325", "PostId": "71157612", "Score": "1", "Text": "After running this, you should also `terraform init` again.", "CreationDate": "2022-07-15T10:32:05.133", "UserId": "11553370", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "264325200", "PostHistoryTypeId": "2", "PostId": "71157612", "RevisionGUID": "79252f38-eb43-4f17-b0a8-ff6fc6356272", "CreationDate": "2022-02-17T11:49:43.097", "UserId": "4304123", "Text": "I knew that my credentials were fine by running `terraform init` on other projects that shared the same S3 bucket for their Terraform backend.\r\n\r\nWhat worked for me:\r\n\r\n```shell\r\nrm -rf .terraform/\r\n```\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "274264052", "PostHistoryTypeId": "5", "PostId": "71157612", "RevisionGUID": "eea6b962-9eab-43e2-9009-4e22e3840557", "CreationDate": "2022-07-15T11:36:46.543", "UserId": "4304123", "Comment": "added 151 characters in body", "Text": "I knew that my credentials were fine by running `terraform init` on other projects that shared the same S3 bucket for their Terraform backend.\r\n\r\nWhat worked for me:\r\n\r\n```shell\r\nrm -rf .terraform/\r\n```\r\n\r\n**Edit**\r\n\r\nMake sure to run `terraform init` again after deleting your local `.terraform` directory to ensure you installed the required packages.\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "73128834", "PostTypeId": "2", "ParentId": "61851903", "CreationDate": "2022-07-26T19:31:48.363", "Score": "0", "Body": "<p>What works for me was the answer for the topic: &quot;Error refreshing state: state data in S3 does not have the expected content&quot; from @Exequiel Barriero (Case 2).</p>\n<p>Link: <a href=\"https://stackoverflow.com/a/58943904/8479354\">Answer from @Exequiel Barriero</a></p>\n<p>But also a different reason why you will get this error and is not related to the backend is if you try to create a lambda function with a layer and you pass a wrong ARN, in my case one extra character in the ARN caused me this headache, so please review your ARN carefully.</p>\n", "OwnerUserId": "8479354", "LastEditorUserId": "8479354", "LastEditDate": "2022-07-27T00:27:50.580", "LastActivityDate": "2022-07-27T00:27:50.580", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "275011778", "PostHistoryTypeId": "2", "PostId": "73128834", "RevisionGUID": "5340244a-e4eb-4a45-a7b5-c209dca5128b", "CreationDate": "2022-07-26T19:31:48.363", "UserId": "8479354", "Text": "What works for me was the answer for the topic: \"Error refreshing state: state data in S3 does not have the expected content\" from @Exequiel Barriero (Case 2).\r\n\r\nlink: https://stackoverflow.com/a/58943904/8479354", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "275023587", "PostHistoryTypeId": "5", "PostId": "73128834", "RevisionGUID": "29270bd6-8b0e-43bb-9d5f-7dc4c80cdebe", "CreationDate": "2022-07-27T00:27:50.580", "UserId": "8479354", "Comment": "added 327 characters in body", "Text": "What works for me was the answer for the topic: \"Error refreshing state: state data in S3 does not have the expected content\" from @Exequiel Barriero (Case 2).\r\n\r\nLink: [Answer from @Exequiel Barriero][1]\r\n\r\nBut also a different reason why you will get this error and is not related to the backend is if you try to create a lambda function with a layer and you pass a wrong ARN, in my case one extra character in the ARN caused me this headache, so please review your ARN carefully. \r\n\r\n\r\n  [1]: https://stackoverflow.com/a/58943904/8479354", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "73433319", "PostTypeId": "2", "ParentId": "61851903", "CreationDate": "2022-08-21T09:53:00.670", "Score": "2", "Body": "<p>As <strong>Mintu</strong> said, we need to include the credentials in the backend configuration.\nOne other way to do that (not to include creds) is:</p>\n<pre><code>  backend &quot;s3&quot; {\n    bucket = &quot;great-name-terraform-state-2&quot;\n    key    = &quot;global/s3/terraform.tfstate&quot;\n    region = &quot;eu-central-1&quot;\n    profile = &quot;AWS_PROFILE&quot;\n  }\n}\n</code></pre>\n<p>Not that, the AWS profile needs to be configured in the machine:</p>\n<pre><code>aws configure\n</code></pre>\n<p>or</p>\n<pre><code>nano .aws/credentials\n</code></pre>\n<p>One thing here to watch out, when you need to apply terraform from inside an EC2 instance, you may have an IAM Role assigned to the instance, and that may produce conflict in the permissions.</p>\n", "OwnerUserId": "11630835", "LastEditorUserId": "11630835", "LastEditDate": "2022-08-21T10:03:46.293", "LastActivityDate": "2022-08-21T10:03:46.293", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "276666761", "PostHistoryTypeId": "2", "PostId": "73433319", "RevisionGUID": "c4488ef0-5fff-464e-806c-f13553f12e75", "CreationDate": "2022-08-21T09:53:00.670", "UserId": "11630835", "Text": "As @mintu said, we need to include the credentials in the backend configuration.\r\nOne other way to do that (not to include creds) is:\r\n\r\n      backend \"s3\" {\r\n        bucket = \"great-name-terraform-state-2\"\r\n        key    = \"global/s3/terraform.tfstate\"\r\n        region = \"eu-central-1\"\r\n        profile = \"AWS_PROFILE\"\r\n      }\r\n    }\r\n\r\nNot that, the AWS profile needs to be configured in the machine:\r\n\r\n    aws configure\r\nor\r\n\r\n    nano .aws/credentials\r\n\r\n\r\nOne thing here to watch out, when you need to apply terraform from inside an EC2 instance, you may have an IAM Role assigned to the instance, and that may produce conflict in the permissions.\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "One thing here to watch out, when you need to apply terraform from inside an EC2 instance, you may have an IAM Role assigned to the instance, and that may produce conflict in the permissions.", "keywords": ["instance"]}]}, {"Id": "276667109", "PostHistoryTypeId": "5", "PostId": "73433319", "RevisionGUID": "a7b9276b-864c-470b-96fc-63c3ac724777", "CreationDate": "2022-08-21T10:03:46.293", "UserId": "11630835", "Comment": "added 3 characters in body", "Text": "As **Mintu** said, we need to include the credentials in the backend configuration.\r\nOne other way to do that (not to include creds) is:\r\n\r\n      backend \"s3\" {\r\n        bucket = \"great-name-terraform-state-2\"\r\n        key    = \"global/s3/terraform.tfstate\"\r\n        region = \"eu-central-1\"\r\n        profile = \"AWS_PROFILE\"\r\n      }\r\n    }\r\n\r\nNot that, the AWS profile needs to be configured in the machine:\r\n\r\n    aws configure\r\nor\r\n\r\n    nano .aws/credentials\r\n\r\n\r\nOne thing here to watch out, when you need to apply terraform from inside an EC2 instance, you may have an IAM Role assigned to the instance, and that may produce conflict in the permissions.\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "One thing here to watch out, when you need to apply terraform from inside an EC2 instance, you may have an IAM Role assigned to the instance, and that may produce conflict in the permissions.", "keywords": ["instance"]}]}], "filtered-sentences": [{"source": "Body", "text": "One other way to do that (not to include creds) is: Not that, the AWS profile needs to be configured in the machine: or One thing here to watch out, when you need to apply terraform from inside an EC2 instance, you may have an IAM Role assigned to the instance, and that may produce conflict in the permissions.", "keywords": ["instance"]}]}, {"Id": "67189906", "PostTypeId": "2", "ParentId": "61851903", "CreationDate": "2021-04-21T05:45:25.780", "Score": "4", "Body": "<p>For better security, you may use <em><strong>shared_credentials_file</strong></em> and <em><strong>profile</strong></em> like so;</p>\n<pre><code>provider &quot;aws&quot; {\n  region = &quot;region&quot;\n  shared_credentials_file = &quot;$HOME/.aws/credentials # default\n  profile = &quot;default&quot; # you may change to desired profile\n}\n\nterraform {\n  backend &quot;s3&quot; {\n    profile = &quot;default&quot; # change to desired profile\n    # Replace this with your bucket name!\n    bucket         = &quot;great-name-terraform-state-2&quot;\n    key            = &quot;global/s3/terraform.tfstate&quot;\n    region         = &quot;eu-central-1&quot;\n    # Replace this with your DynamoDB table name!\n    dynamodb_table = &quot;great-name-locks-2&quot;\n    encrypt        = true\n  }\n}\n</code></pre>\n<ul>\n<li>about <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html\" rel=\"nofollow noreferrer\">aws named profiles</a></li>\n<li>about <a href=\"https://www.terraform.io/docs/language/settings/backends/s3.html\" rel=\"nofollow noreferrer\">securing terraform backend secret configs</a></li>\n</ul>\n", "OwnerUserId": "11813914", "LastEditorUserId": "11813914", "LastEditDate": "2021-05-08T19:35:34.183", "LastActivityDate": "2021-05-08T19:35:34.183", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "245079946", "PostHistoryTypeId": "2", "PostId": "67189906", "RevisionGUID": "f293c9fb-2e5c-449f-898c-200df9b37c5f", "CreationDate": "2021-04-21T05:45:25.780", "UserId": "11813914", "Text": "For better security, you may use ***shared_credentials_file*** and ***profile*** like so;\r\n\r\n    provider \"aws\" {\r\n      region = \"region\"\r\n      shared_credentials_file = \"$HOME/.aws/credentials # default\r\n      profile = \"default\" # you may change to desired profile\r\n    }\r\n    \r\n    terraform {\r\n      backend \"s3\" {\r\n        profile = \"default\" # change to desired profile\r\n        # Replace this with your bucket name!\r\n        bucket         = \"great-name-terraform-state-2\"\r\n        key            = \"global/s3/terraform.tfstate\"\r\n        region         = \"eu-central-1\"\r\n        # Replace this with your DynamoDB table name!\r\n        dynamodb_table = \"great-name-locks-2\"\r\n        encrypt        = true\r\n      }\r\n    }\r\n\r\n- about [aws named profiles][1]\r\n- about [securing terraform backend secret configs][2]\r\n\r\n\r\n  [1]: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html\r\n  [2]: https://www.terraform.io/docs/language/settings/backends/s3.html", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "For better security, you may use ***shared_credentials_file*** and ***profile*** like so; provider \"aws\" { region = \"region\" shared_credentials_file = \"$HOME/.aws/credentials # default profile = \"default\" # you may change to desired profile } terraform { backend \"s3\" { profile = \"default\" # change to desired profile # Replace this with your bucket name! bucket = \"great-name-terraform-state-2\" key = \"global/s3/terraform.tfstate\" region = \"eu-central-1\" # Replace this with your DynamoDB table name! dynamodb_table = \"great-name-locks-2\" encrypt = true } } - about [aws named profiles][1] - about [securing terraform backend secret configs][2] [1]: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html [2]: https://www.terraform.io/docs/language/settings/backends/s3.html", "keywords": ["provider", "change"]}]}, {"Id": "246230556", "PostHistoryTypeId": "5", "PostId": "67189906", "RevisionGUID": "de7128d2-57ed-4a34-aa17-9954c965c379", "CreationDate": "2021-05-08T19:34:28.777", "UserId": "11813914", "Comment": "deleted 24 characters in body", "Text": "For better security, you may use ***shared_credentials_file*** and ***profile*** like so;\r\n\r\n    provider \"aws\" {\r\n      region = \"region\"\r\n      shared_credentials_file = \"$HOME/.aws/credentials # default\r\n      profile = \"default\" # you may change to desired profile\r\n    }\r\n    \r\n    terraform {\r\n      backend \"s3\" {\r\n        profile = \"default\" # change to desired profile\r\n        # Replace this with your bucket name\r\n        bucket         = \"great-name-terraform-state-2\"\r\n        key            = \"s3terraform.tfstate\"\r\n        region         = \"eu-east-2\"\r\n        # Replace this with your DynamoDB table name\r\n        dynamodb_table = \"db-lock\"\r\n        encrypt        = true\r\n      }\r\n    }\r\n\r\n- about [aws named profiles][1]\r\n- about [securing terraform backend secret configs][2]\r\n\r\n\r\n  [1]: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html\r\n  [2]: https://www.terraform.io/docs/language/settings/backends/s3.html", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "For better security, you may use ***shared_credentials_file*** and ***profile*** like so; provider \"aws\" { region = \"region\" shared_credentials_file = \"$HOME/.aws/credentials # default profile = \"default\" # you may change to desired profile } terraform { backend \"s3\" { profile = \"default\" # change to desired profile # Replace this with your bucket name bucket = \"great-name-terraform-state-2\" key = \"s3terraform.tfstate\" region = \"eu-east-2\" # Replace this with your DynamoDB table name dynamodb_table = \"db-lock\" encrypt = true } } - about [aws named profiles][1] - about [securing terraform backend secret configs][2] [1]: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html [2]: https://www", "keywords": ["provider", "change"]}]}, {"Id": "246230577", "PostHistoryTypeId": "8", "PostId": "67189906", "RevisionGUID": "9618f8e1-dba6-465b-be68-a17bc6e2da00", "CreationDate": "2021-05-08T19:35:34.183", "UserId": "11813914", "Comment": "Rollback to [f293c9fb-2e5c-449f-898c-200df9b37c5f]", "Text": "For better security, you may use ***shared_credentials_file*** and ***profile*** like so;\r\n\r\n    provider \"aws\" {\r\n      region = \"region\"\r\n      shared_credentials_file = \"$HOME/.aws/credentials # default\r\n      profile = \"default\" # you may change to desired profile\r\n    }\r\n    \r\n    terraform {\r\n      backend \"s3\" {\r\n        profile = \"default\" # change to desired profile\r\n        # Replace this with your bucket name!\r\n        bucket         = \"great-name-terraform-state-2\"\r\n        key            = \"global/s3/terraform.tfstate\"\r\n        region         = \"eu-central-1\"\r\n        # Replace this with your DynamoDB table name!\r\n        dynamodb_table = \"great-name-locks-2\"\r\n        encrypt        = true\r\n      }\r\n    }\r\n\r\n- about [aws named profiles][1]\r\n- about [securing terraform backend secret configs][2]\r\n\r\n\r\n  [1]: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html\r\n  [2]: https://www.terraform.io/docs/language/settings/backends/s3.html", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "For better security, you may use ***shared_credentials_file*** and ***profile*** like so; provider \"aws\" { region = \"region\" shared_credentials_file = \"$HOME/.aws/credentials # default profile = \"default\" # you may change to desired profile } terraform { backend \"s3\" { profile = \"default\" # change to desired profile # Replace this with your bucket name! bucket = \"great-name-terraform-state-2\" key = \"global/s3/terraform.tfstate\" region = \"eu-central-1\" # Replace this with your DynamoDB table name! dynamodb_table = \"great-name-locks-2\" encrypt = true } } - about [aws named profiles][1] - about [securing terraform backend secret configs][2] [1]: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html [2]: https://www.terraform.io/docs/language/settings/backends/s3.html", "keywords": ["provider", "change"]}]}], "filtered-sentences": []}, {"Id": "70988875", "PostTypeId": "2", "ParentId": "61851903", "CreationDate": "2022-02-04T15:27:16.633", "Score": "0", "Body": "<p>This happened to me and the problem was that I was trying to create a bucket with a name that already exists!</p>\n", "OwnerUserId": "13859383", "LastActivityDate": "2022-02-04T15:27:16.633", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "263427274", "PostHistoryTypeId": "2", "PostId": "70988875", "RevisionGUID": "9e07fe16-6267-4e5c-ae8f-7661c9c47c8c", "CreationDate": "2022-02-04T15:27:16.633", "UserId": "13859383", "Text": "This happened to me and the problem was that I was trying to create a bucket with a name that already exists!", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "63410768", "PostTypeId": "2", "ParentId": "61851903", "CreationDate": "2020-08-14T10:08:17.180", "Score": "3", "Body": "<p>I googled arround but nothing help. Hope this will solve your problem. My case: I was migrating the state from local to AWS S3 bucket.</p>\n<ol>\n<li>Comment out terraform scope</li>\n</ol>\n<pre class=\"lang-yaml prettyprint-override\"><code>provider &quot;aws&quot; {\n  region = &quot;region&quot;\n  access_key = &quot;key&quot; \n  secret_key = &quot;secret_key&quot;\n}\n\n#terraform {\n#  backend &quot;s3&quot; {\n#    # Replace this with your bucket name!\n#    bucket         = &quot;great-name-terraform-state-2&quot;\n#    key            = &quot;global/s3/terraform.tfstate&quot;\n#    region         = &quot;eu-central-1&quot;\n#    # Replace this with your DynamoDB table name!\n#    dynamodb_table = &quot;great-name-locks-2&quot;\n#    encrypt        = true\n#  }\n#}\n\nresource &quot;aws_s3_bucket&quot; &quot;terraform_state&quot; {\n  bucket = &quot;great-name-terraform-state-2&quot;\n  # Enable versioning so we can see the full revision history of our\n  # state files\n  versioning {\n    enabled = true\n  }\n  server_side_encryption_configuration {\n    rule {\n      apply_server_side_encryption_by_default {\n        sse_algorithm = &quot;AES256&quot;\n      }\n    }\n  }\n}\n\nresource &quot;aws_dynamodb_table&quot; &quot;terraform_locks&quot; {\n  name         = &quot;great-name-locks-2&quot;\n  billing_mode = &quot;PAY_PER_REQUEST&quot;\n  hash_key     = &quot;LockID&quot;\n  attribute {\n    name = &quot;LockID&quot;\n    type = &quot;S&quot;\n    }\n}\n</code></pre>\n<ol start=\"2\">\n<li>Run</li>\n</ol>\n<pre class=\"lang-sh prettyprint-override\"><code>terraform init\nterraform plan -out test.tfplan\nterraform apply &quot;test.tfplan&quot;\n</code></pre>\n<p>to create resources (S3 bucket and DynamoDb)</p>\n<ol start=\"3\">\n<li>Then uncomment terraform scope, run</li>\n</ol>\n<pre><code>AWS_PROFILE=REPLACE_IT_WITH_YOUR  TF_LOG=DEBUG   terraform init\n</code></pre>\n<p>If you get errors, just search for <code>X-Amz-Bucket-Region:</code></p>\n<pre><code>-----------------------------------------------------\n2020/08/14 15:54:38 [DEBUG] [aws-sdk-go] DEBUG: Response s3/ListObjects Details:\n---[ RESPONSE ]--------------------------------------\nHTTP/1.1 403 Forbidden\nConnection: close\nTransfer-Encoding: chunked\nContent-Type: application/xml\nDate: Fri, 14 Aug 2020 08:54:37 GMT\nServer: AmazonS3\nX-Amz-Bucket-Region: eu-central-1\nX-Amz-Id-2: REMOVED\nX-Amz-Request-Id: REMOVED\n</code></pre>\n<p>Copy the value of <code>X-Amz-Bucket-Region</code>, my case is <code>eu-central-1</code>.</p>\n<ol start=\"4\">\n<li>Change your <code>region</code> in terraform backend configuration to the corresponding value.</li>\n</ol>\n<pre class=\"lang-yaml prettyprint-override\"><code>terraform {\n  backend &quot;s3&quot; {\n    # Replace this with your bucket name!\n    bucket         = &quot;great-name-terraform-state-2&quot;\n    key            = &quot;global/s3/terraform.tfstate&quot;\n    region         = &quot;eu-central-1&quot;\n    # Replace this with your DynamoDB table name!\n    dynamodb_table = &quot;great-name-locks-2&quot;\n    encrypt        = true\n  }\n}\n</code></pre>\n", "OwnerUserId": "8009647", "LastEditorUserId": "8009647", "LastEditDate": "2021-10-15T16:55:44.977", "LastActivityDate": "2021-10-15T16:55:44.977", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "120396732", "PostId": "63410768", "Score": "0", "Text": "Setting env var AWS_PROFILE explicitly did the trick! ", "CreationDate": "2021-06-24T16:44:11.460", "UserId": "1859442", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "228763504", "PostHistoryTypeId": "2", "PostId": "63410768", "RevisionGUID": "0d19eba8-05e5-4a81-8073-189b3127c130", "CreationDate": "2020-08-14T10:08:17.180", "UserId": "8009647", "Text": "I googled arround but nothing help. Hope this will solve your problem. My case: I was migrating the state from local to AWS S3 bucket.\r\n1. Comment out terraform scope\r\n```yaml\r\nprovider \"aws\" {\r\n  region = \"region\"\r\n  access_key = \"key\" \r\n  secret_key = \"secret_key\"\r\n}\r\n\r\n#terraform {\r\n#  backend \"s3\" {\r\n#    # Replace this with your bucket name!\r\n#    bucket         = \"great-name-terraform-state-2\"\r\n#    key            = \"global/s3/terraform.tfstate\"\r\n#    region         = \"eu-central-1\"\r\n#    # Replace this with your DynamoDB table name!\r\n#    dynamodb_table = \"great-name-locks-2\"\r\n#    encrypt        = true\r\n#  }\r\n#}\r\n\r\nresource \"aws_s3_bucket\" \"terraform_state\" {\r\n  bucket = \"great-name-terraform-state-2\"\r\n  # Enable versioning so we can see the full revision history of our\r\n  # state files\r\n  versioning {\r\n    enabled = true\r\n  }\r\n  server_side_encryption_configuration {\r\n    rule {\r\n      apply_server_side_encryption_by_default {\r\n        sse_algorithm = \"AES256\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nresource \"aws_dynamodb_table\" \"terraform_locks\" {\r\n  name         = \"great-name-locks-2\"\r\n  billing_mode = \"PAY_PER_REQUEST\"\r\n  hash_key     = \"LockID\"\r\n  attribute {\r\n    name = \"LockID\"\r\n    type = \"S\"\r\n    }\r\n}\r\n```\r\n2. Run \r\n```bash\r\nterraform init\r\nterraform plan -out test.tfplan\r\ntera apply \"stg.tfplan\"\r\n```\r\nto create resources (S3 bucket and DynamoDb)\r\n\r\n3. Then uncomment terraform scope, run \r\n```\r\nAWS_PROFILE=REPLACE_IT_WITH_YOUR  TF_LOG=DEBUG   terraform init\r\n```\r\nIf you get errors, just search for `X-Amz-Bucket-Region:`\r\n\r\n```\r\n-----------------------------------------------------\r\n2020/08/14 15:54:38 [DEBUG] [aws-sdk-go] DEBUG: Response s3/ListObjects Details:\r\n---[ RESPONSE ]--------------------------------------\r\nHTTP/1.1 403 Forbidden\r\nConnection: close\r\nTransfer-Encoding: chunked\r\nContent-Type: application/xml\r\nDate: Fri, 14 Aug 2020 08:54:37 GMT\r\nServer: AmazonS3\r\nX-Amz-Bucket-Region: eu-central-1\r\nX-Amz-Id-2: REMOVED\r\nX-Amz-Request-Id: REMOVED\r\n```\r\nCopy the value of `X-Amz-Bucket-Region`, my case is `eu-central-1`.\r\n\r\n4. Change your `region` in terraform backend configuration to the corresponding value.\r\n```yaml\r\nterraform {\r\n  backend \"s3\" {\r\n    # Replace this with your bucket name!\r\n    bucket         = \"great-name-terraform-state-2\"\r\n    key            = \"global/s3/terraform.tfstate\"\r\n    region         = \"eu-central-1\"\r\n    # Replace this with your DynamoDB table name!\r\n    dynamodb_table = \"great-name-locks-2\"\r\n    encrypt        = true\r\n  }\r\n}\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "1. Comment out terraform scope ```yaml provider \"aws\" { region = \"region\" access_key = \"key\" secret_key = \"secret_key\" } #terraform { # backend \"s3\" { # # Replace this with your bucket name! # bucket = \"great-name-terraform-state-2\" # key = \"global/s3/terraform.tfstate\" # region = \"eu-central-1\" # # Replace this with your DynamoDB table name! # dynamodb_table = \"great-name-locks-2\" # encrypt = true # } #} resource \"aws_s3_bucket\" \"terraform_state\" { bucket = \"great-name-terraform-state-2\" # Enable versioning so we can see the full revision history of our # state files versioning { enabled = true } server_side_encryption_configuration { rule { apply_server_side_encryption_by_default { sse_algorithm = \"AES256\" } } } } resource \"aws_dynamodb_table\" \"terraform_locks\" { name = \"great-name-locks-2\" billing_mode = \"PAY_PER_REQUEST\" hash_key = \"LockID\" attribute { name = \"LockID\" type = \"S\" } } ``` ", "keywords": ["bill", "provider"]}, {"source": "Text", "text": "2. Run ```bash terraform init terraform plan -out test.tfplan tera apply \"stg.tfplan\" ``` to create resources (S3 bucket and DynamoDb) 3. Then uncomment terraform scope, run ``` AWS_PROFILE=REPLACE_IT_WITH_YOUR TF_LOG=DEBUG terraform init ``` If you get errors, just search for `X-Amz-Bucket-Region:` ``` ----------------------------------------------------- 2020/08/14 15:54:38 [DEBUG] [aws-sdk-go] DEBUG: Response s3/ListObjects Details: ---[ RESPONSE ]-------------------------------------- HTTP/1.1 403 Forbidden Connection: close Transfer-Encoding: chunked Content-Type: application/xml Date: Fri, 14 Aug 2020 08:54:37 GMT Server: AmazonS3 X-Amz-Bucket-Region: eu-central-1 X-Amz-Id-2: REMOVED X-Amz-Request-Id: REMOVED ``` Copy the value of `X-Amz-Bucket-Region`, my case is `eu-central-1`. 4. Change your `region` in terraform backend configuration to the corresponding value. ```yaml terraform { backend \"s3\" { # Replace this with your bucket name! bucket = \"great-name-terraform-state-2\" key = \"global/s3/terraform.tfstate\" region = \"eu-central-1\" # Replace this with your DynamoDB table name! dynamodb_table = \"great-name-locks-2\" encrypt = true } } ```", "keywords": ["change", "test"]}]}, {"Id": "228879716", "PostHistoryTypeId": "5", "PostId": "63410768", "RevisionGUID": "1084a9fd-ec46-4f9b-a9a3-14fbec96134e", "CreationDate": "2020-08-16T11:02:50.120", "UserId": "8009647", "Comment": "added 1 character in body", "Text": "I googled arround but nothing help. Hope this will solve your problem. My case: I was migrating the state from local to AWS S3 bucket.\r\n1. Comment out terraform scope\r\n```yaml\r\nprovider \"aws\" {\r\n  region = \"region\"\r\n  access_key = \"key\" \r\n  secret_key = \"secret_key\"\r\n}\r\n\r\n#terraform {\r\n#  backend \"s3\" {\r\n#    # Replace this with your bucket name!\r\n#    bucket         = \"great-name-terraform-state-2\"\r\n#    key            = \"global/s3/terraform.tfstate\"\r\n#    region         = \"eu-central-1\"\r\n#    # Replace this with your DynamoDB table name!\r\n#    dynamodb_table = \"great-name-locks-2\"\r\n#    encrypt        = true\r\n#  }\r\n#}\r\n\r\nresource \"aws_s3_bucket\" \"terraform_state\" {\r\n  bucket = \"great-name-terraform-state-2\"\r\n  # Enable versioning so we can see the full revision history of our\r\n  # state files\r\n  versioning {\r\n    enabled = true\r\n  }\r\n  server_side_encryption_configuration {\r\n    rule {\r\n      apply_server_side_encryption_by_default {\r\n        sse_algorithm = \"AES256\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nresource \"aws_dynamodb_table\" \"terraform_locks\" {\r\n  name         = \"great-name-locks-2\"\r\n  billing_mode = \"PAY_PER_REQUEST\"\r\n  hash_key     = \"LockID\"\r\n  attribute {\r\n    name = \"LockID\"\r\n    type = \"S\"\r\n    }\r\n}\r\n```\r\n2. Run \r\n```bash\r\nterraform init\r\nterraform plan -out test.tfplan\r\ntera apply \"test.tfplan\"\r\n```\r\nto create resources (S3 bucket and DynamoDb)\r\n\r\n3. Then uncomment terraform scope, run \r\n```\r\nAWS_PROFILE=REPLACE_IT_WITH_YOUR  TF_LOG=DEBUG   terraform init\r\n```\r\nIf you get errors, just search for `X-Amz-Bucket-Region:`\r\n\r\n```\r\n-----------------------------------------------------\r\n2020/08/14 15:54:38 [DEBUG] [aws-sdk-go] DEBUG: Response s3/ListObjects Details:\r\n---[ RESPONSE ]--------------------------------------\r\nHTTP/1.1 403 Forbidden\r\nConnection: close\r\nTransfer-Encoding: chunked\r\nContent-Type: application/xml\r\nDate: Fri, 14 Aug 2020 08:54:37 GMT\r\nServer: AmazonS3\r\nX-Amz-Bucket-Region: eu-central-1\r\nX-Amz-Id-2: REMOVED\r\nX-Amz-Request-Id: REMOVED\r\n```\r\nCopy the value of `X-Amz-Bucket-Region`, my case is `eu-central-1`.\r\n\r\n4. Change your `region` in terraform backend configuration to the corresponding value.\r\n```yaml\r\nterraform {\r\n  backend \"s3\" {\r\n    # Replace this with your bucket name!\r\n    bucket         = \"great-name-terraform-state-2\"\r\n    key            = \"global/s3/terraform.tfstate\"\r\n    region         = \"eu-central-1\"\r\n    # Replace this with your DynamoDB table name!\r\n    dynamodb_table = \"great-name-locks-2\"\r\n    encrypt        = true\r\n  }\r\n}\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "1. Comment out terraform scope ```yaml provider \"aws\" { region = \"region\" access_key = \"key\" secret_key = \"secret_key\" } #terraform { # backend \"s3\" { # # Replace this with your bucket name! # bucket = \"great-name-terraform-state-2\" # key = \"global/s3/terraform.tfstate\" # region = \"eu-central-1\" # # Replace this with your DynamoDB table name! # dynamodb_table = \"great-name-locks-2\" # encrypt = true # } #} resource \"aws_s3_bucket\" \"terraform_state\" { bucket = \"great-name-terraform-state-2\" # Enable versioning so we can see the full revision history of our # state files versioning { enabled = true } server_side_encryption_configuration { rule { apply_server_side_encryption_by_default { sse_algorithm = \"AES256\" } } } } resource \"aws_dynamodb_table\" \"terraform_locks\" { name = \"great-name-locks-2\" billing_mode = \"PAY_PER_REQUEST\" hash_key = \"LockID\" attribute { name = \"LockID\" type = \"S\" } } ``` ", "keywords": ["bill", "provider"]}, {"source": "Text", "text": "2. Run ```bash terraform init terraform plan -out test.tfplan tera apply \"test.tfplan\" ``` to create resources (S3 bucket and DynamoDb) 3. Then uncomment terraform scope, run ``` AWS_PROFILE=REPLACE_IT_WITH_YOUR TF_LOG=DEBUG terraform init ``` If you get errors, just search for `X-Amz-Bucket-Region:` ``` ----------------------------------------------------- 2020/08/14 15:54:38 [DEBUG] [aws-sdk-go] DEBUG: Response s3/ListObjects Details: ---[ RESPONSE ]-------------------------------------- HTTP/1.1 403 Forbidden Connection: close Transfer-Encoding: chunked Content-Type: application/xml Date: Fri, 14 Aug 2020 08:54:37 GMT Server: AmazonS3 X-Amz-Bucket-Region: eu-central-1 X-Amz-Id-2: REMOVED X-Amz-Request-Id: REMOVED ``` Copy the value of `X-Amz-Bucket-Region`, my case is `eu-central-1`. 4. Change your `region` in terraform backend configuration to the corresponding value. ```yaml terraform { backend \"s3\" { # Replace this with your bucket name! bucket = \"great-name-terraform-state-2\" key = \"global/s3/terraform.tfstate\" region = \"eu-central-1\" # Replace this with your DynamoDB table name! dynamodb_table = \"great-name-locks-2\" encrypt = true } } ```", "keywords": ["change", "test"]}]}, {"Id": "255914512", "PostHistoryTypeId": "5", "PostId": "63410768", "RevisionGUID": "94f27062-9edc-4552-bd1d-7f41dfdd3578", "CreationDate": "2021-10-15T16:55:44.977", "UserId": "8009647", "Comment": "added 5 characters in body", "Text": "I googled arround but nothing help. Hope this will solve your problem. My case: I was migrating the state from local to AWS S3 bucket.\r\n1. Comment out terraform scope\r\n```yaml\r\nprovider \"aws\" {\r\n  region = \"region\"\r\n  access_key = \"key\" \r\n  secret_key = \"secret_key\"\r\n}\r\n\r\n#terraform {\r\n#  backend \"s3\" {\r\n#    # Replace this with your bucket name!\r\n#    bucket         = \"great-name-terraform-state-2\"\r\n#    key            = \"global/s3/terraform.tfstate\"\r\n#    region         = \"eu-central-1\"\r\n#    # Replace this with your DynamoDB table name!\r\n#    dynamodb_table = \"great-name-locks-2\"\r\n#    encrypt        = true\r\n#  }\r\n#}\r\n\r\nresource \"aws_s3_bucket\" \"terraform_state\" {\r\n  bucket = \"great-name-terraform-state-2\"\r\n  # Enable versioning so we can see the full revision history of our\r\n  # state files\r\n  versioning {\r\n    enabled = true\r\n  }\r\n  server_side_encryption_configuration {\r\n    rule {\r\n      apply_server_side_encryption_by_default {\r\n        sse_algorithm = \"AES256\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nresource \"aws_dynamodb_table\" \"terraform_locks\" {\r\n  name         = \"great-name-locks-2\"\r\n  billing_mode = \"PAY_PER_REQUEST\"\r\n  hash_key     = \"LockID\"\r\n  attribute {\r\n    name = \"LockID\"\r\n    type = \"S\"\r\n    }\r\n}\r\n```\r\n2. Run \r\n```bash\r\nterraform init\r\nterraform plan -out test.tfplan\r\nterraform apply \"test.tfplan\"\r\n```\r\nto create resources (S3 bucket and DynamoDb)\r\n\r\n3. Then uncomment terraform scope, run \r\n```\r\nAWS_PROFILE=REPLACE_IT_WITH_YOUR  TF_LOG=DEBUG   terraform init\r\n```\r\nIf you get errors, just search for `X-Amz-Bucket-Region:`\r\n\r\n```\r\n-----------------------------------------------------\r\n2020/08/14 15:54:38 [DEBUG] [aws-sdk-go] DEBUG: Response s3/ListObjects Details:\r\n---[ RESPONSE ]--------------------------------------\r\nHTTP/1.1 403 Forbidden\r\nConnection: close\r\nTransfer-Encoding: chunked\r\nContent-Type: application/xml\r\nDate: Fri, 14 Aug 2020 08:54:37 GMT\r\nServer: AmazonS3\r\nX-Amz-Bucket-Region: eu-central-1\r\nX-Amz-Id-2: REMOVED\r\nX-Amz-Request-Id: REMOVED\r\n```\r\nCopy the value of `X-Amz-Bucket-Region`, my case is `eu-central-1`.\r\n\r\n4. Change your `region` in terraform backend configuration to the corresponding value.\r\n```yaml\r\nterraform {\r\n  backend \"s3\" {\r\n    # Replace this with your bucket name!\r\n    bucket         = \"great-name-terraform-state-2\"\r\n    key            = \"global/s3/terraform.tfstate\"\r\n    region         = \"eu-central-1\"\r\n    # Replace this with your DynamoDB table name!\r\n    dynamodb_table = \"great-name-locks-2\"\r\n    encrypt        = true\r\n  }\r\n}\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "1. Comment out terraform scope ```yaml provider \"aws\" { region = \"region\" access_key = \"key\" secret_key = \"secret_key\" } #terraform { # backend \"s3\" { # # Replace this with your bucket name! # bucket = \"great-name-terraform-state-2\" # key = \"global/s3/terraform.tfstate\" # region = \"eu-central-1\" # # Replace this with your DynamoDB table name! # dynamodb_table = \"great-name-locks-2\" # encrypt = true # } #} resource \"aws_s3_bucket\" \"terraform_state\" { bucket = \"great-name-terraform-state-2\" # Enable versioning so we can see the full revision history of our # state files versioning { enabled = true } server_side_encryption_configuration { rule { apply_server_side_encryption_by_default { sse_algorithm = \"AES256\" } } } } resource \"aws_dynamodb_table\" \"terraform_locks\" { name = \"great-name-locks-2\" billing_mode = \"PAY_PER_REQUEST\" hash_key = \"LockID\" attribute { name = \"LockID\" type = \"S\" } } ``` ", "keywords": ["bill", "provider"]}, {"source": "Text", "text": "2. Run ```bash terraform init terraform plan -out test.tfplan terraform apply \"test.tfplan\" ``` to create resources (S3 bucket and DynamoDb) 3. Then uncomment terraform scope, run ``` AWS_PROFILE=REPLACE_IT_WITH_YOUR TF_LOG=DEBUG terraform init ``` If you get errors, just search for `X-Amz-Bucket-Region:` ``` ----------------------------------------------------- 2020/08/14 15:54:38 [DEBUG] [aws-sdk-go] DEBUG: Response s3/ListObjects Details: ---[ RESPONSE ]-------------------------------------- HTTP/1.1 403 Forbidden Connection: close Transfer-Encoding: chunked Content-Type: application/xml Date: Fri, 14 Aug 2020 08:54:37 GMT Server: AmazonS3 X-Amz-Bucket-Region: eu-central-1 X-Amz-Id-2: REMOVED X-Amz-Request-Id: REMOVED ``` Copy the value of `X-Amz-Bucket-Region`, my case is `eu-central-1`. ", "keywords": ["test"]}, {"source": "Text", "text": "4. Change your `region` in terraform backend configuration to the corresponding value. ```yaml terraform { backend \"s3\" { # Replace this with your bucket name! bucket = \"great-name-terraform-state-2\" key = \"global/s3/terraform.tfstate\" region = \"eu-central-1\" # Replace this with your DynamoDB table name! dynamodb_table = \"great-name-locks-2\" encrypt = true } } ```", "keywords": ["change"]}]}], "filtered-sentences": [{"source": "Body", "text": "Change your region in terraform backend configuration to the corresponding value.", "keywords": ["change"]}]}, {"Id": "65457768", "PostTypeId": "2", "ParentId": "61851903", "CreationDate": "2020-12-26T15:13:25.767", "Score": "24", "Body": "<p>I encountered this before.\nFollowing are the steps that will help you overcome that error-</p>\n<ol>\n<li>Delete the .terraform directory</li>\n<li>Place the access_key and secret_key under the backend block. like below given code</li>\n<li>Run terraform init</li>\n</ol>\n<pre><code>  backend &quot;s3&quot; {\n    bucket = &quot;great-name-terraform-state-2&quot;\n    key    = &quot;global/s3/terraform.tfstate&quot;\n    region = &quot;eu-central-1&quot;\n    access_key = &quot;&lt;access-key&gt;&quot;\n    secret_key = &quot;&lt;secret-key&gt;&quot;\n  }\n}\n</code></pre>\n<p>The error should be gone.</p>\n", "OwnerUserId": "7778115", "LastActivityDate": "2020-12-26T15:13:25.767", "CommentCount": "4", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "117375123", "PostId": "65457768", "Score": "6", "Text": "You can also set the AWS profile name instead of the access and secret keys.", "CreationDate": "2021-02-26T20:33:03.463", "UserId": "1752221", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "118635081", "PostId": "65457768", "Score": "16", "Text": "Best practices would not advise for you to store sensitive material like your access and secret keys in your Terraform files. This is especially true if you also use a code repository like Github. As @Juancho points out, all you need to do is include a line in the backend like this: `profile = your_profile_name_from_the_aws_credentials_file` Also, deleting your `.terraform` directory is entirely unnecessary.", "CreationDate": "2021-04-15T22:34:58.497", "UserId": "9319317", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "118664593", "PostId": "65457768", "Score": "0", "Text": "Aditionallly you can use shared_credentials_file to point to a different credentials file on other location than ~/.aws/credentials if needed.", "CreationDate": "2021-04-16T23:16:10.747", "UserId": "1752221", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "122129007", "PostId": "65457768", "Score": "0", "Text": "I confirm that the only thing needed is to add the `profile` property. Don't delete the .terraform dir and ideally don't put the `access_key` or `secret_key` in there, use the profile instead.", "CreationDate": "2021-09-08T10:01:03.607", "UserId": "1625651", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "237617501", "PostHistoryTypeId": "2", "PostId": "65457768", "RevisionGUID": "16c70a67-71f3-4366-887d-b6580470f466", "CreationDate": "2020-12-26T15:13:25.767", "UserId": "7778115", "Text": "I encountered this before.\r\nFollowing are the steps that will help you overcome that error-\r\n\r\n1. Delete the .terraform directory\r\n2. Place the access_key and secret_key under the backend block. like below given code\r\n3. Run terraform init\r\n\r\n```terraform {\r\n  backend \"s3\" {\r\n    bucket = \"great-name-terraform-state-2\"\r\n    key    = \"global/s3/terraform.tfstate\"\r\n    region = \"eu-central-1\"\r\n    access_key = \"<access-key>\"\r\n    secret_key = \"<secret-key>\"\r\n  }\r\n}\r\n```\r\n\r\nThe error should be gone.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": []}