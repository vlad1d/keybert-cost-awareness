{"Id": "76214339", "PostTypeId": "1", "AcceptedAnswerId": "76214598", "CreationDate": "2023-05-10T01:24:35.653", "Score": "0", "ViewCount": "91", "Body": "<p>Aim: To create an Azure resource group using variables and enforce naming constraints.</p>\n<p>Terraform Azure resource group module definition is as below.</p>\n<p>cat <strong>locals.tf</strong></p>\n<pre><code>locals {\n  tags = {\n    &quot;Environment&quot; = var.environment_name\n    &quot;Department&quot;  = var.department\n    &quot;Managed By&quot;  = &quot;Terraform Open Source&quot;\n  }\n}\n</code></pre>\n<p>cat <strong>main.tf</strong></p>\n<pre><code>resource &quot;azurerm_resource_group&quot; &quot;resource_group&quot; {\n  name     = regex(&quot;^[-\\\\w\\\\._\\\\(\\\\)]+$&quot;,substr(&quot;rg-${local.environment_name}-${local.application_name}-${var.location}&quot;, 90))\n  location = var.location\n  tags = local. Tags\n}output &quot;resource_group_id&quot; {\n  value       = azurerm_resource_group.resource_group.id\n  description = &quot;Resource Group id&quot;\n}\n</code></pre>\n<p>cat outputs.tf</p>\n<pre><code>output &quot;resource_group_name&quot; {\n  value       = azurerm_resource_group.resource_group.name\n  description = &quot;The name of the resource group&quot;\n}\n\noutput &quot;resource_group_location&quot; {\n  value       = azurerm_resource_group.resource_group.location\n  description = &quot;The location of the resource group&quot;\n}\n</code></pre>\n<p>cat <strong>providers.tf</strong></p>\n<pre><code>terraform {\n  required_version = &quot;&gt;= 1.4.0&quot;\n  required_providers {\n    azurerm = {\n      source  = &quot;hashicorp/azurerm&quot;\n      version = &quot;&gt;= 3.55.0&quot;\n    }\n  }\n}\nprovider &quot;azurerm&quot; {\n  features {}\n}\n</code></pre>\n<p>cat <strong>variables.tf</strong></p>\n<pre><code>variable &quot;name&quot; {\n  type        = string\n  description = &quot;Name of the resource group&quot;\n}\n\nvariable &quot;location&quot; {\n  type        = string\n  description = &quot;Location of the resource group&quot;\n}\n\nvariable &quot;environment_name&quot; {\n  type        = string\n  description = &lt;&lt;EOT\n    (Optional)  The name of the environment where the resources will be deployed.\n\n    Options:\n      - dev\n      - uat\n      - test\n      - prod\n\n    Default: dev\n  EOT\n\n  default = &quot;dev&quot;\n\n  validation {\n    condition     = can(regex(&quot;dev|uat|test|prod&quot;), var.environment)\n    error_message = &quot;Err: environment name is not valid.&quot;\n  }\n}\nvariable &quot;department&quot; {\n  type        = string\n  description = &quot;Name of the department&quot;\n}\nvariable &quot;cost_centre&quot; {\n  type        = string\n  description = &quot;Cost Centre for the Resource or Resource Group&quot;\n\n}\nvariable &quot;application_name&quot; {\n  type = string\n  description = &quot;Name of the application&quot;\n  \n}\n</code></pre>\n<p>Now, I have created an example like the one below.</p>\n<p>cat <strong>main.tf</strong></p>\n<pre><code>module &quot;rg&quot; {\n  source           = &quot;./..&quot;\n  location         = &quot;australiaeast&quot;\n  environment_name = &quot;Dev&quot;\n  department       = &quot;Data Services&quot;\n  cost_centre      = &quot;ABC101&quot;\n  application_name = &quot;demo&quot;\n}        \n</code></pre>\n<p>cat <strong>provider.tf</strong></p>\n<pre><code>terraform {\n  required_version = &quot;&gt;= 1.4.0&quot;\n  required_providers {\n    azurerm = {\n      source  = &quot;hashicorp/azurerm&quot;\n      version = &quot;&gt;= 3.55.0&quot;\n    }\n  }\n}\nprovider &quot;azurerm&quot; {\n  features {}\n}\n</code></pre>\n<p>Unfortunately, when I run <strong>terraform plan</strong>, I get an error like the one below.</p>\n<p><strong>Error</strong>:</p>\n<pre><code>\u2502 Error: Missing required argument\n\u2502 \n\u2502   on main.tf line 1, in module &quot;rg&quot;:\n\u2502    1: module &quot;rg&quot; {\n\u2502 \n\u2502 The argument &quot;name&quot; is required, but no definition was found.\n\u2575\n</code></pre>\n", "OwnerUserId": "5133523", "LastEditorUserId": "248823", "LastEditDate": "2023-05-10T02:55:52.073", "LastActivityDate": "2023-05-10T02:55:52.073", "Title": "terraform reports name argument not defined for resource_group", "Tags": "<azure><terraform><terraform-provider-azure>", "AnswerCount": "1", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "292574509", "PostHistoryTypeId": "2", "PostId": "76214339", "RevisionGUID": "20a41f5d-c4ee-41fb-a39b-d39aed3d4db4", "CreationDate": "2023-05-10T01:24:35.653", "UserId": "5133523", "Text": "Terraform Azure resource group module definition is as below\r\n\r\ncat **locals.tf**\r\n```\r\nlocals {\r\n  tags = {\r\n    \"Environment\" = var.environment_name\r\n    \"Department\"  = var.department\r\n    \"Managed By\"  = \"Terraform Open Source\"\r\n  }\r\n}\r\n```\r\n\r\ncat **main.tf**\r\n```\r\nresource \"azurerm_resource_group\" \"resource_group\" {\r\n  name     = regex(\"^[-\\\\w\\\\._\\\\(\\\\)]+$\",substr(\"rg-${local.environment_name}-${local.application_name}-${var.location}\", 90))\r\n  location = var.location\r\n  tags = local. Tags\r\n}output \"resource_group_id\" {\r\n  value       = azurerm_resource_group.resource_group.id\r\n  description = \"Resource Group id\"\r\n}\r\n```\r\ncat outputs.tf\r\n```\r\noutput \"resource_group_name\" {\r\n  value       = azurerm_resource_group.resource_group.name\r\n  description = \"The name of the resource group\"\r\n}\r\n\r\noutput \"resource_group_location\" {\r\n  value       = azurerm_resource_group.resource_group.location\r\n  description = \"The location of the resource group\"\r\n}\r\n```\r\ncat **providers.tf**\r\n```\r\nterraform {\r\n  required_version = \">= 1.4.0\"\r\n  required_providers {\r\n    azurerm = {\r\n      source  = \"hashicorp/azurerm\"\r\n      version = \">= 3.55.0\"\r\n    }\r\n  }\r\n}\r\nprovider \"azurerm\" {\r\n  features {}\r\n}\r\n```\r\ncat **variables.tf**\r\n```\r\nvariable \"name\" {\r\n  type        = string\r\n  description = \"Name of the resource group\"\r\n}\r\n\r\nvariable \"location\" {\r\n  type        = string\r\n  description = \"Location of the resource group\"\r\n}\r\n\r\nvariable \"environment_name\" {\r\n  type        = string\r\n  description = <<EOT\r\n    (Optional)  The name of the environment where the resources will be deployed.\r\n\r\n    Options:\r\n      - dev\r\n      - uat\r\n      - test\r\n      - prod\r\n\r\n    Default: dev\r\n  EOT\r\n\r\n  default = \"dev\"\r\n\r\n  validation {\r\n    condition     = can(regex(\"dev|uat|test|prod\"), var.environment)\r\n    error_message = \"Err: environment name is not valid.\"\r\n  }\r\n}\r\nvariable \"department\" {\r\n  type        = string\r\n  description = \"Name of the department\"\r\n}\r\nvariable \"cost_centre\" {\r\n  type        = string\r\n  description = \"Cost Centre for the Resource or Resource Group\"\r\n\r\n}\r\nvariable \"application_name\" {\r\n  type = string\r\n  description = \"Name of the application\"\r\n  \r\n}\r\n```\r\n\r\nNow, I have created an example like the one below.\r\n\r\ncat **main.tf**\r\n\r\n```\r\nmodule \"rg\" {\r\n  source           = \"./..\"\r\n  location         = \"australiaeast\"\r\n  environment_name = \"Dev\"\r\n  department       = \"Data Services\"\r\n  cost_centre      = \"ABC101\"\r\n  application_name = \"demo\"\r\n}        \r\n```\r\n\r\ncat **provider.tf**\r\n```\r\nterraform {\r\n  required_version = \">= 1.4.0\"\r\n  required_providers {\r\n    azurerm = {\r\n      source  = \"hashicorp/azurerm\"\r\n      version = \">= 3.55.0\"\r\n    }\r\n  }\r\n}\r\nprovider \"azurerm\" {\r\n  features {}\r\n}\r\n```\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Terraform Azure resource group module definition is as below cat **locals.tf** ``` locals { tags = { \"Environment\" = var.environment_name \"Department\" = var.department \"Managed By\" = \"Terraform Open Source\" } } ``` cat **main.tf** ``` resource \"azurerm_resource_group\" \"resource_group\" { name = regex(\"^[-\\\\w\\\\._\\\\(\\\\)]+$\",substr(\"rg-${local.environment_name}-${local.application_name}-${var.location}\", 90)) location = var.location tags = local. Tags }output \"resource_group_id\" { value = azurerm_resource_group.resource_group.id description = \"Resource Group id\" } ``` cat outputs.tf ``` output \"resource_group_name\" { value = azurerm_resource_group.resource_group.name description = \"The name of the resource group\" } output \"resource_group_location\" { value = azurerm_resource_group.resource_group.location description = \"The location of the resource group\" } ``` cat **providers.tf** ``` terraform { required_version = \">= 1.4.0\" required_providers { azurerm = { source = \"hashicorp/azurerm\" version = \">= 3.55.0\" } } } provider \"azurerm\" { features {} } ``` cat **variables.tf** ``` variable \"name\" { type = string description = \"Name of the resource group\" } variable \"location\" { type = string description = \"Location of the resource group\" } variable \"environment_name\" { type = string description = <<EOT (Optional) The name of the environment where the resources will be deployed. ", "keywords": ["provider"]}, {"source": "Text", "text": "Options: - dev - uat - test - prod Default: dev EOT default = \"dev\" validation { condition = can(regex(\"dev|uat|test|prod\"), var.environment) error_message = \"Err: environment name is not valid.\" } } variable \"department\" { type = string description = \"Name of the department\" } variable \"cost_centre\" { type = string description = \"Cost Centre for the Resource or Resource Group\" } variable \"application_name\" { type = string description = \"Name of the application\" } ``` Now, I have created an example like the one below. cat **main.tf** ``` module \"rg\" { source = \"./..\" location = \"australiaeast\" environment_name = \"Dev\" department = \"Data Services\" cost_centre = \"ABC101\" application_name = \"demo\" ", "keywords": ["cost", "test"]}, {"source": "Text", "text": "} ``` cat **provider.tf** ``` terraform { required_version = \">= 1.4.0\" required_providers { azurerm = { source = \"hashicorp/azurerm\" version = \">= 3.55.0\" ", "keywords": ["provider"]}, {"source": "Text", "text": "} } provider \"azurerm\" { features {} } ```", "keywords": ["provider"]}]}, {"Id": "292574511", "PostHistoryTypeId": "1", "PostId": "76214339", "RevisionGUID": "20a41f5d-c4ee-41fb-a39b-d39aed3d4db4", "CreationDate": "2023-05-10T01:24:35.653", "UserId": "5133523", "Text": "terraform reports name argument not defined for resource_group", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "292574512", "PostHistoryTypeId": "3", "PostId": "76214339", "RevisionGUID": "20a41f5d-c4ee-41fb-a39b-d39aed3d4db4", "CreationDate": "2023-05-10T01:24:35.653", "UserId": "5133523", "Text": "<terraform><terraform-provider-azure>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "292574768", "PostHistoryTypeId": "5", "PostId": "76214339", "RevisionGUID": "9b694851-c939-47e4-9c39-b280f154ac4f", "CreationDate": "2023-05-10T01:38:24.440", "UserId": "5133523", "Comment": "Added what I want to achieve. Added Error that I am getting.", "Text": "Aim: To create an Azure resource group using variables and enforce naming constraints.\r\n\r\nTerraform Azure resource group module definition is as below.\r\n\r\ncat **locals.tf**\r\n```\r\nlocals {\r\n  tags = {\r\n    \"Environment\" = var.environment_name\r\n    \"Department\"  = var.department\r\n    \"Managed By\"  = \"Terraform Open Source\"\r\n  }\r\n}\r\n```\r\n\r\ncat **main.tf**\r\n```\r\nresource \"azurerm_resource_group\" \"resource_group\" {\r\n  name     = regex(\"^[-\\\\w\\\\._\\\\(\\\\)]+$\",substr(\"rg-${local.environment_name}-${local.application_name}-${var.location}\", 90))\r\n  location = var.location\r\n  tags = local. Tags\r\n}output \"resource_group_id\" {\r\n  value       = azurerm_resource_group.resource_group.id\r\n  description = \"Resource Group id\"\r\n}\r\n```\r\ncat outputs.tf\r\n```\r\noutput \"resource_group_name\" {\r\n  value       = azurerm_resource_group.resource_group.name\r\n  description = \"The name of the resource group\"\r\n}\r\n\r\noutput \"resource_group_location\" {\r\n  value       = azurerm_resource_group.resource_group.location\r\n  description = \"The location of the resource group\"\r\n}\r\n```\r\ncat **providers.tf**\r\n```\r\nterraform {\r\n  required_version = \">= 1.4.0\"\r\n  required_providers {\r\n    azurerm = {\r\n      source  = \"hashicorp/azurerm\"\r\n      version = \">= 3.55.0\"\r\n    }\r\n  }\r\n}\r\nprovider \"azurerm\" {\r\n  features {}\r\n}\r\n```\r\ncat **variables.tf**\r\n```\r\nvariable \"name\" {\r\n  type        = string\r\n  description = \"Name of the resource group\"\r\n}\r\n\r\nvariable \"location\" {\r\n  type        = string\r\n  description = \"Location of the resource group\"\r\n}\r\n\r\nvariable \"environment_name\" {\r\n  type        = string\r\n  description = <<EOT\r\n    (Optional)  The name of the environment where the resources will be deployed.\r\n\r\n    Options:\r\n      - dev\r\n      - uat\r\n      - test\r\n      - prod\r\n\r\n    Default: dev\r\n  EOT\r\n\r\n  default = \"dev\"\r\n\r\n  validation {\r\n    condition     = can(regex(\"dev|uat|test|prod\"), var.environment)\r\n    error_message = \"Err: environment name is not valid.\"\r\n  }\r\n}\r\nvariable \"department\" {\r\n  type        = string\r\n  description = \"Name of the department\"\r\n}\r\nvariable \"cost_centre\" {\r\n  type        = string\r\n  description = \"Cost Centre for the Resource or Resource Group\"\r\n\r\n}\r\nvariable \"application_name\" {\r\n  type = string\r\n  description = \"Name of the application\"\r\n  \r\n}\r\n```\r\n\r\nNow, I have created an example like the one below.\r\n\r\ncat **main.tf**\r\n\r\n```\r\nmodule \"rg\" {\r\n  source           = \"./..\"\r\n  location         = \"australiaeast\"\r\n  environment_name = \"Dev\"\r\n  department       = \"Data Services\"\r\n  cost_centre      = \"ABC101\"\r\n  application_name = \"demo\"\r\n}        \r\n```\r\n\r\ncat **provider.tf**\r\n```\r\nterraform {\r\n  required_version = \">= 1.4.0\"\r\n  required_providers {\r\n    azurerm = {\r\n      source  = \"hashicorp/azurerm\"\r\n      version = \">= 3.55.0\"\r\n    }\r\n  }\r\n}\r\nprovider \"azurerm\" {\r\n  features {}\r\n}\r\n```\r\nUnfortunately, when I run **terraform plan**, I get an error like the one below.\r\n\r\n**Error**:\r\n```\r\n\u2502 Error: Missing required argument\r\n\u2502 \r\n\u2502   on main.tf line 1, in module \"rg\":\r\n\u2502    1: module \"rg\" {\r\n\u2502 \r\n\u2502 The argument \"name\" is required, but no definition was found.\r\n\u2575\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Terraform Azure resource group module definition is as below. cat **locals.tf** ``` locals { tags = { \"Environment\" = var.environment_name \"Department\" = var.department \"Managed By\" = \"Terraform Open Source\" } } ``` cat **main.tf** ``` resource \"azurerm_resource_group\" \"resource_group\" { name = regex(\"^[-\\\\w\\\\._\\\\(\\\\)]+$\",substr(\"rg-${local.environment_name}-${local.application_name}-${var.location}\", 90)) location = var.location tags = local. Tags }output \"resource_group_id\" { value = azurerm_resource_group.resource_group.id description = \"Resource Group id\" } ``` cat outputs.tf ``` output \"resource_group_name\" { value = azurerm_resource_group.resource_group.name description = \"The name of the resource group\" } output \"resource_group_location\" { value = azurerm_resource_group.resource_group.location description = \"The location of the resource group\" } ``` cat **providers.tf** ``` terraform { required_version = \">= 1.4.0\" required_providers { azurerm = { source = \"hashicorp/azurerm\" version = \">= 3.55.0\" } } } provider \"azurerm\" { features {} } ``` cat **variables.tf** ``` variable \"name\" { type = string description = \"Name of the resource group\" } variable \"location\" { type = string description = \"Location of the resource group\" } variable \"environment_name\" { type = string description = <<EOT (Optional) The name of the environment where the resources will be deployed. ", "keywords": ["provider"]}, {"source": "Text", "text": "Options: - dev - uat - test - prod Default: dev EOT default = \"dev\" validation { condition = can(regex(\"dev|uat|test|prod\"), var.environment) error_message = \"Err: environment name is not valid.\" } } variable \"department\" { type = string description = \"Name of the department\" } variable \"cost_centre\" { type = string description = \"Cost Centre for the Resource or Resource Group\" } variable \"application_name\" { type = string description = \"Name of the application\" } ``` Now, I have created an example like the one below. cat **main.tf** ``` module \"rg\" { source = \"./..\" location = \"australiaeast\" environment_name = \"Dev\" department = \"Data Services\" cost_centre = \"ABC101\" application_name = \"demo\" } ``` cat **provider.tf** ``` terraform { required_version = \">= 1.4.0\" required_providers { azurerm = { source = \"hashicorp/azurerm\" version = \">= 3.55.0\" ", "keywords": ["cost", "provider", "test"]}, {"source": "Text", "text": "} } } provider \"azurerm\" { features {} } ``` Unfortunately, when I run **terraform plan**, I get an error like the one below", "keywords": ["provider"]}]}, {"Id": "292576032", "PostHistoryTypeId": "6", "PostId": "76214339", "RevisionGUID": "aefd640a-b869-436b-a971-f474db8391cd", "CreationDate": "2023-05-10T02:55:52.073", "UserId": "248823", "Comment": "edited tags", "Text": "<azure><terraform><terraform-provider-azure>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "76214598", "PostTypeId": "2", "ParentId": "76214339", "CreationDate": "2023-05-10T02:55:43.527", "Score": "1", "Body": "<p>If you look at your code, it clearly defines <code>name</code> variable <strong>without a default</strong> value:</p>\n<pre><code>variable &quot;name&quot; {\n  type        = string\n  description = &quot;Name of the resource group&quot;\n}\n</code></pre>\n<p>Since there is no default value given, you have to <strong>explicitly provide</strong> <code>name</code> when you instantiate your <code>rg</code> module. If you don't want to do this, you have to define a default <code>name</code>, e.g.:</p>\n<pre><code>variable &quot;name&quot; {\n  type        = string\n  default     = &quot;some-default-rg-name&quot;\n  description = &quot;Name of the resource group&quot;\n}\n</code></pre>\n", "OwnerUserId": "248823", "LastActivityDate": "2023-05-10T02:55:43.527", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "134404648", "PostId": "76214598", "Score": "1", "Text": "Thank you, Marcin! My bad, my mistake. Thank you for your prompt guidance.", "CreationDate": "2023-05-10T06:23:28.997", "UserId": "5133523", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "292576029", "PostHistoryTypeId": "2", "PostId": "76214598", "RevisionGUID": "299c76b3-50a1-4298-b250-5c92385b02de", "CreationDate": "2023-05-10T02:55:43.527", "UserId": "248823", "Text": "If you look at your code, it clearly defines `name` variable **without a default** value:\r\n\r\n```\r\nvariable \"name\" {\r\n  type        = string\r\n  description = \"Name of the resource group\"\r\n}\r\n```\r\n\r\nSince there is no default value given, you have to **explicitly provide** `name` when you instantiate your `rg` module. If you don't want to do this, you have to define a default `name`, e.g.:\r\n\r\n\r\n```\r\nvariable \"name\" {\r\n  type        = string\r\n  default     = \"some-default-rg-name\"\r\n  description = \"Name of the resource group\"\r\n}\r\n```\r\n\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "Terraform Azure resource group module definition is as below. cat locals.tf cat main.tf cat outputs.tf cat providers.tf cat variables.tf Now, I have created an example like the one below. cat main.tf cat provider.tf Unfortunately, when I run terraform plan, I get an error like the one below. ", "keywords": ["provider"]}]}