{"Id": "56042077", "PostTypeId": "1", "CreationDate": "2019-05-08T13:34:58.010", "Score": "-1", "ViewCount": "600", "Body": "<p>I need to raise exception if my dynamically created list is not empty, followed by this <a href=\"https://github.com/hashicorp/terraform/issues/15469\" rel=\"nofollow noreferrer\">https://github.com/hashicorp/terraform/issues/15469</a> I've created code below, it should fail with error if list is not empty, as you see list constructed from null_resource list, and it always throws assertion:</p>\n\n<pre><code>resource \"null_resource\" \"empty_string\" {\n  count = \"10\"\n  triggers = {\n    value  = \"\"\n  }\n}\n\nlocals {\n  compacted_list_length = \"${length(compact(null_resource.empty_string.*.triggers.value))}\"\n}\n\nresource \"null_resource\" \"is_array_empty\" {\n  count = \"${local.compacted_list_length}\"\n  \"Lsit is not empty\" = true\n}\n\n\noutput \"compacted_list_length\" {\n  value = \"${local.compacted_list_length}\"\n}\n</code></pre>\n\n<p>If you'll comment following, output will show 0</p>\n\n<pre><code>resource \"null_resource\" \"is_array_empty\" {\n      count = \"${local.compacted_list_length}\"\n      \"Lsit is not empty\" = true\n}\n</code></pre>\n\n<p>No assertion if we'll set locals to:</p>\n\n<pre><code>locals {\n  compacted_list_length = 0\n}\n</code></pre>\n\n<p>Even this code will work fine:</p>\n\n<pre><code>locals {\n  empty_list = [\"\", \"\", \"\"]\n  compacted_list_length = \"${length(compact(local.empty_list))}\"\n}\n\nresource \"null_resource\" \"is_array_empty\" {\n  count = \"${local.compacted_list_length}\"\n  \"Lsit is not empty\" = true\n}\n\noutput \"compacted_list_length\" {\n  value = \"${local.compacted_list_length}\"\n}\n</code></pre>\n\n<p>Where is my mistake?</p>\n", "OwnerUserId": "306025", "LastEditorUserId": "306025", "LastEditDate": "2019-05-08T14:02:28.660", "LastActivityDate": "2019-05-10T02:47:39.940", "Title": "Terraform v0.11.xx \"null_resource\" not always works as assertion", "Tags": "<terraform>", "AnswerCount": "1", "CommentCount": "3", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "98726254", "PostId": "56042077", "Score": "0", "Text": "I do not see how `null_resource` fits here. It seems like it should be replaced with something else, but it is unclear what the goal is here.", "CreationDate": "2019-05-08T13:40:12.307", "UserId": "5343387", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "98727134", "PostId": "56042077", "Score": "0", "Text": "@MattSchuchard https://github.com/hashicorp/terraform/issues/15469", "CreationDate": "2019-05-08T14:02:41.260", "UserId": "306025", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "98727579", "PostId": "56042077", "Score": "0", "Text": "That issue recommends to use a `local-exec` provisioner instead, which makes more sense to me also.", "CreationDate": "2019-05-08T14:13:22.840", "UserId": "5343387", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "197331105", "PostHistoryTypeId": "2", "PostId": "56042077", "RevisionGUID": "463541a3-bf48-472c-b0d5-9817b2483a47", "CreationDate": "2019-05-08T13:34:58.010", "UserId": "306025", "Text": "Here is example of code, it should fail with error if list is not empty, as you see list constructed from null_resource list, and it always throws assertion:\r\n\r\n    resource \"null_resource\" \"empty_string\" {\r\n      count = \"10\"\r\n      triggers = {\r\n        value  = \"\"\r\n      }\r\n    }\r\n    \r\n    locals {\r\n      compacted_list_length = \"${length(compact(null_resource.empty_string.*.triggers.value))}\"\r\n    }\r\n    \r\n    resource \"null_resource\" \"is_array_empty\" {\r\n      count = \"${local.compacted_list_length}\"\r\n      \"Lsit is not empty\" = true\r\n    }\r\n    \r\n    \r\n    output \"compacted_list_length\" {\r\n      value = \"${local.compacted_list_length}\"\r\n    }\r\n\r\nIf you'll comment following, output will show 0\r\n \r\n\r\n    resource \"null_resource\" \"is_array_empty\" {\r\n          count = \"${local.compacted_list_length}\"\r\n          \"Lsit is not empty\" = true\r\n    }\r\n\r\nNo assertion if we'll set locals to:\r\n\r\n    locals {\r\n      compacted_list_length = 0\r\n    }\r\n\r\nEven this code will work fine:\r\n\r\n\r\n    locals {\r\n      empty_list = [\"\", \"\", \"\"]\r\n      compacted_list_length = \"${length(compact(local.empty_list))}\"\r\n    }\r\n    \r\n    resource \"null_resource\" \"is_array_empty\" {\r\n      count = \"${local.compacted_list_length}\"\r\n      \"Lsit is not empty\" = true\r\n    }\r\n    \r\n    output \"compacted_list_length\" {\r\n      value = \"${local.compacted_list_length}\"\r\n    }\r\n\r\n\r\nWhere is my mistake?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "197331106", "PostHistoryTypeId": "1", "PostId": "56042077", "RevisionGUID": "463541a3-bf48-472c-b0d5-9817b2483a47", "CreationDate": "2019-05-08T13:34:58.010", "UserId": "306025", "Text": "Terraform v0.11.xx \"null_resource\" not always works as assertion", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "197331107", "PostHistoryTypeId": "3", "PostId": "56042077", "RevisionGUID": "463541a3-bf48-472c-b0d5-9817b2483a47", "CreationDate": "2019-05-08T13:34:58.010", "UserId": "306025", "Text": "<terraform>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "197333365", "PostHistoryTypeId": "5", "PostId": "56042077", "RevisionGUID": "fc017868-4214-4e1b-b1ad-4b19a3c94067", "CreationDate": "2019-05-08T14:02:28.660", "UserId": "306025", "Comment": "added 140 characters in body", "Text": "I need to raise exception if my dynamically created list is not empty, followed by this https://github.com/hashicorp/terraform/issues/15469 I've created code below, it should fail with error if list is not empty, as you see list constructed from null_resource list, and it always throws assertion:\r\n\r\n    resource \"null_resource\" \"empty_string\" {\r\n      count = \"10\"\r\n      triggers = {\r\n        value  = \"\"\r\n      }\r\n    }\r\n    \r\n    locals {\r\n      compacted_list_length = \"${length(compact(null_resource.empty_string.*.triggers.value))}\"\r\n    }\r\n    \r\n    resource \"null_resource\" \"is_array_empty\" {\r\n      count = \"${local.compacted_list_length}\"\r\n      \"Lsit is not empty\" = true\r\n    }\r\n    \r\n    \r\n    output \"compacted_list_length\" {\r\n      value = \"${local.compacted_list_length}\"\r\n    }\r\n\r\nIf you'll comment following, output will show 0\r\n \r\n\r\n    resource \"null_resource\" \"is_array_empty\" {\r\n          count = \"${local.compacted_list_length}\"\r\n          \"Lsit is not empty\" = true\r\n    }\r\n\r\nNo assertion if we'll set locals to:\r\n\r\n    locals {\r\n      compacted_list_length = 0\r\n    }\r\n\r\nEven this code will work fine:\r\n\r\n\r\n    locals {\r\n      empty_list = [\"\", \"\", \"\"]\r\n      compacted_list_length = \"${length(compact(local.empty_list))}\"\r\n    }\r\n    \r\n    resource \"null_resource\" \"is_array_empty\" {\r\n      count = \"${local.compacted_list_length}\"\r\n      \"Lsit is not empty\" = true\r\n    }\r\n    \r\n    output \"compacted_list_length\" {\r\n      value = \"${local.compacted_list_length}\"\r\n    }\r\n\r\n\r\nWhere is my mistake?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "56070040", "PostTypeId": "2", "ParentId": "56042077", "CreationDate": "2019-05-10T02:47:39.940", "Score": "0", "Body": "<p>This assertion workaround does not work for dynamic values since it works during the validate phase. In this phase Terraform does not calculate dynamic values.</p>\n\n<p>This assertion workaround is good to validate variable values like suggested in both examples in the <a href=\"https://github.com/hashicorp/terraform/issues/15469#issuecomment-343499242\" rel=\"nofollow noreferrer\">documentation</a>. Pay attention that in both cases the count value is based on variable values only. These are available during the validate phase as opposed to dynamic values which are not.</p>\n\n<pre><code>resource \"null_resource\" \"is_environment_name_valid\" {\n  count = \"${contains(var.environment_list, var.env) == true ? 0 : 1}\"\n  \"ERROR: The env value can only be: dev, qa or prod\" = true\n}\n</code></pre>\n\n<pre><code>resource \"null_resource\" \"is_array_length_correct\" {\n  count = \"${length(var.array1) == length(var.array2) ? 0 : 1}\"\n  \"array1 and array2 must be the same length\" = true\n}\n</code></pre>\n", "OwnerUserId": "2245293", "LastActivityDate": "2019-05-10T02:47:39.940", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "197445205", "PostHistoryTypeId": "2", "PostId": "56070040", "RevisionGUID": "6334029a-d396-4b41-af15-61841dc35fe3", "CreationDate": "2019-05-10T02:47:39.940", "UserId": "2245293", "Text": "This assertion workaround does not work for dynamic values since it works during the validate phase. In this phase Terraform does not calculate dynamic values.\r\n\r\nThis assertion workaround is good to validate variable values like suggested in both examples in the [documentation][1]. Pay attention that in both cases the count value is based on variable values only. These are available during the validate phase as opposed to dynamic values which are not.\r\n```\r\nresource \"null_resource\" \"is_environment_name_valid\" {\r\n  count = \"${contains(var.environment_list, var.env) == true ? 0 : 1}\"\r\n  \"ERROR: The env value can only be: dev, qa or prod\" = true\r\n}\r\n```\r\n```\r\nresource \"null_resource\" \"is_array_length_correct\" {\r\n  count = \"${length(var.array1) == length(var.array2) ? 0 : 1}\"\r\n  \"array1 and array2 must be the same length\" = true\r\n}\r\n```\r\n\r\n  [1]: https://github.com/hashicorp/terraform/issues/15469#issuecomment-343499242", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Pay attention that in both cases the count value is based on variable values only. ", "keywords": ["pay"]}]}], "filtered-sentences": [{"source": "Body", "text": "Pay attention that in both cases the count value is based on variable values only. ", "keywords": ["pay"]}]}], "contains-topic": false, "filtered-sentences": []}