{"Id": "67500096", "PostTypeId": "1", "CreationDate": "2021-05-12T08:39:50.460", "Score": "2", "ViewCount": "1552", "Body": "<p>I am creating the EC2 instance and multiple EBS volumes with different sizes. Below Terraform script is given for creating the same.</p>\n<pre><code>resource &quot;aws_ebs_volume&quot; &quot;ebs_volume&quot; {\n  for_each = {\n    0 = var.influxdb_data_volume_size\n    1 = var.influxdb_wal_volume_size\n    2 = var.telegraf_volume_size\n    3 = var.grafana_volume_size\n    4 = var.data_volume_size\n  }\n  availability_zone = var.availability_zone\n  size              = each.value\n  type              = &quot;gp2&quot;\n  tags = {\n    name = &quot;${var.tag}-ebs-volume&quot;\n    billing = var.tag\n  }\n}\n\n# section for the EBS volume attachment\n\nresource &quot;aws_volume_attachment&quot; &quot;volume_attachement&quot; {\n  count       = var.ebs_volume_count\n  volume_id   = aws_ebs_volume.ebs_volume[count.index].id\n  device_name = &quot;${element(var.ec2_device_names, count.index)}&quot;\n  instance_id = aws_instance.ec2_production.id\n}\n\n# section for the aws_key_pair \nresource &quot;aws_key_pair&quot; &quot;key_pair&quot; {\n  key_name   = &quot;${var.tag}-key-pair&quot;\n  public_key = var.key_pair\n  tags = {\n    name = &quot;${var.tag}-key-pair&quot;\n    billing = var.tag\n  }\n\n}\nresource &quot;aws_instance&quot; &quot;ec2_production&quot; {\n  # count         = &quot;${var.ec2_instance_count}&quot;\n  ami           = var.ami\n  availability_zone = var.availability_zone\n  instance_type =  var.ec2_instance_type\n  subnet_id = aws_subnet.subnet.id\n  associate_public_ip_address = true\n  vpc_security_group_ids = [aws_security_group.security_group_access_internet.id]\n  # disable_api_termination = true\n  key_name = &quot;${var.tag}-key-pair&quot;\n  ebs_block_device {\n    device_name = &quot;/dev/sda1&quot;\n    volume_type = &quot;gp2&quot;\n    volume_size = var.root_volume_size\n  }\n  tags = {\n    name = &quot;${var.tag}-ec2&quot;\n    billing = var.tag\n  }\n}\n</code></pre>\n<p>The volume defined in <code>aws_instance</code> resource is the root volume having size of 40GB and I am creating multiple volumes of different sizes in <code>aws_ebs_volume</code> resource.</p>\n<p>Now I am trying to change the size of the root volume from 40GB to 60GB by updating the <code>variable.tf</code> file.</p>\n<p>When I am using the command <code>terraform plan</code> it's creating 6 resources and destroying 6 resources which include the EBS volumes and EC2 instance.</p>\n<p>Now, I want to increase the size of any volume which is root or any other which recreating or destroying anything.</p>\n<p>Below I am giving output of <code>terraform plan</code>:</p>\n<pre><code>-/+ resource &quot;aws_instance&quot; &quot;ec2_production&quot; {\n      ~ arn                                  = &quot;arn:aws:ec2:us-west-1:666268854852:instance/i-0ac516fab494df462&quot; -&gt; (known after apply)\n      ~ cpu_core_count                       = 1 -&gt; (known after apply)\n      ~ cpu_threads_per_core                 = 1 -&gt; (known after apply)\n      - disable_api_termination              = false -&gt; null\n      - ebs_optimized                        = false -&gt; null\n      - hibernation                          = false -&gt; null\n      + host_id                              = (known after apply)\n      ~ id                                   = &quot;i-0ac516fab494df462&quot; -&gt; (known after apply)\n      ~ instance_initiated_shutdown_behavior = &quot;stop&quot; -&gt; (known after apply)\n      ~ instance_state                       = &quot;running&quot; -&gt; (known after apply)\n      ~ ipv6_address_count                   = 0 -&gt; (known after apply)\n      ~ ipv6_addresses                       = [] -&gt; (known after apply)\n      - monitoring                           = false -&gt; null\n      + outpost_arn                          = (known after apply)\n      + password_data                        = (known after apply)\n      + placement_group                      = (known after apply)\n      ~ primary_network_interface_id         = &quot;eni-0fd71c3a3e41237be&quot; -&gt; (known after apply)\n      ~ private_dns                          = &quot;ip-10-0-16-27.us-west-1.compute.internal&quot; -&gt; (known after apply)\n      ~ private_ip                           = &quot;10.0.16.27&quot; -&gt; (known after apply)\n      + public_dns                           = (known after apply)\n      ~ public_ip                            = &quot;13.56.209.171&quot; -&gt; (known after apply)\n      ~ secondary_private_ips                = [] -&gt; (known after apply)\n      ~ security_groups                      = [] -&gt; (known after apply)\n        tags                                 = {\n            &quot;billing&quot; = &quot;att&quot;\n            &quot;name&quot;    = &quot;ec2&quot;\n        }\n      ~ tenancy                              = &quot;default&quot; -&gt; (known after apply)\n        # (10 unchanged attributes hidden)\n\n      - credit_specification {\n          - cpu_credits = &quot;standard&quot; -&gt; null\n        }\n\n      - ebs_block_device { # forces replacement\n          - delete_on_termination = false -&gt; null\n          - device_name           = &quot;/dev/sdf&quot; -&gt; null\n          - encrypted             = false -&gt; null\n          - iops                  = 300 -&gt; null\n          - tags                  = {\n              - &quot;billing&quot; = &quot;att&quot;\n              - &quot;name&quot;    = &quot;volume&quot;\n            } -&gt; null\n          - throughput            = 0 -&gt; null\n          - volume_id             = &quot;vol-08569e15ccd8f1aad&quot; -&gt; null\n          - volume_size           = 100 -&gt; null\n          - volume_type           = &quot;gp2&quot; -&gt; null\n        }\n      - ebs_block_device { # forces replacement\n          - delete_on_termination = false -&gt; null\n          - device_name           = &quot;/dev/sdg&quot; -&gt; null\n          - encrypted             = false -&gt; null\n          - iops                  = 150 -&gt; null\n          - tags                  = {\n              - &quot;billing&quot; = &quot;att&quot;\n              - &quot;name&quot;    = &quot;volume&quot;\n            } -&gt; null\n          - throughput            = 0 -&gt; null\n          - volume_id             = &quot;vol-0e8c7cd7830fa2e02&quot; -&gt; null\n          - volume_size           = 50 -&gt; null\n          - volume_type           = &quot;gp2&quot; -&gt; null\n        }\n      - ebs_block_device { # forces replacement\n          - delete_on_termination = false -&gt; null\n          - device_name           = &quot;/dev/sdh&quot; -&gt; null\n          - encrypted             = false -&gt; null\n          - iops                  = 100 -&gt; null\n          - tags                  = {\n              - &quot;billing&quot; = &quot;att&quot;\n              - &quot;name&quot;    = &quot;volume&quot;\n            } -&gt; null\n          - throughput            = 0 -&gt; null\n          - volume_id             = &quot;vol-0f989100daa275774&quot; -&gt; null\n          - volume_size           = 20 -&gt; null\n          - volume_type           = &quot;gp2&quot; -&gt; null\n        }\n      - ebs_block_device { # forces replacement\n          - delete_on_termination = false -&gt; null\n          - device_name           = &quot;/dev/sdi&quot; -&gt; null\n          - encrypted             = false -&gt; null\n          - iops                  = 100 -&gt; null\n          - tags                  = {\n              - &quot;billing&quot; = &quot;att&quot;\n              - &quot;name&quot;    = &quot;volume&quot;\n            } -&gt; null\n          - throughput            = 0 -&gt; null\n          - volume_id             = &quot;vol-03cd5be3fea05aa45&quot; -&gt; null\n          - volume_size           = 20 -&gt; null\n          - volume_type           = &quot;gp2&quot; -&gt; null\n        }\n      - ebs_block_device { # forces replacement\n          - delete_on_termination = false -&gt; null\n          - device_name           = &quot;/dev/sdj&quot; -&gt; null\n          - encrypted             = false -&gt; null\n          - iops                  = 150 -&gt; null\n          - tags                  = {\n              - &quot;billing&quot; = &quot;att&quot;\n              - &quot;name&quot;    = &quot;volume&quot;\n            } -&gt; null\n          - throughput            = 0 -&gt; null\n          - volume_id             = &quot;vol-023e380eebbf2c91f&quot; -&gt; null\n          - volume_size           = 50 -&gt; null\n          - volume_type           = &quot;gp2&quot; -&gt; null\n        }\n      + ebs_block_device { # forces replacement\n          + delete_on_termination = true\n          + device_name           = &quot;/dev/sda1&quot;\n          + encrypted             = (known after apply)\n          + iops                  = (known after apply)\n          + kms_key_id            = (known after apply)\n          + snapshot_id           = (known after apply)\n          + throughput            = (known after apply)\n          + volume_id             = (known after apply)\n          + volume_size           = 60\n          + volume_type           = &quot;gp2&quot;\n        }\n\n      ~ enclave_options {\n          ~ enabled = false -&gt; (known after apply)\n        }\n\n      + ephemeral_block_device {\n          + device_name  = (known after apply)\n          + no_device    = (known after apply)\n          + virtual_name = (known after apply)\n        }\n\n      ~ metadata_options {\n          ~ http_endpoint               = &quot;enabled&quot; -&gt; (known after apply)\n          ~ http_put_response_hop_limit = 1 -&gt; (known after apply)\n          ~ http_tokens                 = &quot;optional&quot; -&gt; (known after apply)\n        }\n\n      + network_interface {\n          + delete_on_termination = (known after apply)\n          + device_index          = (known after apply)\n          + network_interface_id  = (known after apply)\n        }\n\n      ~ root_block_device {\n          ~ delete_on_termination = true -&gt; (known after apply)\n          ~ device_name           = &quot;/dev/sda1&quot; -&gt; (known after apply)\n          ~ encrypted             = false -&gt; (known after apply)\n          ~ iops                  = 120 -&gt; (known after apply)\n          + kms_key_id            = (known after apply)\n          ~ tags                  = {} -&gt; (known after apply)\n          ~ throughput            = 0 -&gt; (known after apply)\n          ~ volume_id             = &quot;vol-054112f2f104ff54e&quot; -&gt; (known after apply)\n          ~ volume_size           = 40 -&gt; (known after apply)\n          ~ volume_type           = &quot;gp2&quot; -&gt; (known after apply)\n        }\n    }\n\n  # aws_volume_attachment.volume_attachement[0] must be replaced\n-/+ resource &quot;aws_volume_attachment&quot; &quot;volume_attachement&quot; {\n      ~ id          = &quot;vai-1464807002&quot; -&gt; (known after apply)\n      ~ instance_id = &quot;i-0ac516fab494df462&quot; -&gt; (known after apply) # forces replacement\n        # (2 unchanged attributes hidden)\n    }\n\n  # aws_volume_attachment.volume_attachement[1] must be replaced\n-/+ resource &quot;aws_volume_attachment&quot; &quot;volume_attachement&quot; {\n      ~ id          = &quot;vai-3274211254&quot; -&gt; (known after apply)\n      ~ instance_id = &quot;i-0ac516fab494df462&quot; -&gt; (known after apply) # forces replacement\n        # (2 unchanged attributes hidden)\n    }\n\n  # aws_volume_attachment.volume_attachement[2] must be replaced\n-/+ resource &quot;aws_volume_attachment&quot; &quot;volume_attachement&quot; {\n      ~ id          = &quot;vai-1831356480&quot; -&gt; (known after apply)\n      ~ instance_id = &quot;i-0ac516fab494df462&quot; -&gt; (known after apply) # forces replacement\n        # (2 unchanged attributes hidden)\n    }\n\n  # aws_volume_attachment.volume_attachement[3] must be replaced\n-/+ resource &quot;aws_volume_attachment&quot; &quot;volume_attachement&quot; {\n      ~ id          = &quot;vai-374757704&quot; -&gt; (known after apply)\n      ~ instance_id = &quot;i-0ac516fab494df462&quot; -&gt; (known after apply) # forces replacement\n        # (2 unchanged attributes hidden)\n    }\n\n  # aws_volume_attachment.volume_attachement[4] must be replaced\n-/+ resource &quot;aws_volume_attachment&quot; &quot;volume_attachement&quot; {\n      ~ id          = &quot;vai-3725815030&quot; -&gt; (known after apply)\n      ~ instance_id = &quot;i-0ac516fab494df462&quot; -&gt; (known after apply) # forces replacement\n        # (2 unchanged attributes hidden)\n    }\n\nPlan: 6 to add, 0 to change, 6 to destroy.\n</code></pre>\n<p>Is there any way to achieve to update the volume size without destroying anything?</p>\n", "OwnerUserId": "8389618", "LastEditorUserId": "5277820", "LastEditDate": "2023-02-02T12:19:03.583", "LastActivityDate": "2023-02-02T12:19:03.583", "Title": "How to update the size of EBS volume without replacing the older volume and rebooting the EC2 instance?", "Tags": "<amazon-web-services><amazon-ec2><terraform><terraform-provider-aws><amazon-ebs>", "AnswerCount": "0", "CommentCount": "6", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "119308744", "PostId": "67500096", "Score": "0", "Text": "Did you try doing this in stages? First only root volume, then the other ones? Does it also requires changing everything?", "CreationDate": "2021-05-12T09:13:15.337", "UserId": "248823", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Does it also requires changing everything?", "keywords": ["change"]}]}, {"Id": "119312370", "PostId": "67500096", "Score": "0", "Text": "That's not how you define root volumes in the `aws_instance` resource. Instead you're attaching a separate EBS volume as `/dev/sda1`. You then have a separate issue with combining `aws_ebs_volume_attachment` with `ebs_block_device` block in the `aws_instance` resource which is confusing Terraform and causing a diff.\n\nYou may find https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices and https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/volume_attachment useful.", "CreationDate": "2021-05-12T11:28:23.327", "UserId": "2291321", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "You may find https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices and https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/volume_attachment useful.", "keywords": ["instance"]}]}, {"Id": "119319499", "PostId": "67500096", "Score": "0", "Text": "@Marcin No this process is happening in one stage first it will destroy the old volumes and ec2 and then it will create everything from scratch with the new configuration.", "CreationDate": "2021-05-12T15:28:50.967", "UserId": "8389618", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "119319521", "PostId": "67500096", "Score": "0", "Text": "@ydaetskcoR I defined the root volume earlier like this way but it was difficult to manage with other EBS volumes.", "CreationDate": "2021-05-12T15:29:36.007", "UserId": "8389618", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "119319569", "PostId": "67500096", "Score": "0", "Text": "@ydaetskcoR now is there is no way I can increase the size of EBS volume using the same configuration I have declared?", "CreationDate": "2021-05-12T15:30:57.513", "UserId": "8389618", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "119320192", "PostId": "67500096", "Score": "1", "Text": "As per the note on https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/volume_attachment you shouldn't be defining both `aws_volume_attachment` resources and also using the `ebs_block_device` block in the `aws_instance` resource.", "CreationDate": "2021-05-12T15:53:19.797", "UserId": "2291321", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "246436274", "PostHistoryTypeId": "2", "PostId": "67500096", "RevisionGUID": "3a9ede58-5456-4cbf-85d5-5e00b66fceb0", "CreationDate": "2021-05-12T08:39:50.460", "UserId": "8389618", "Text": "I am creating the EC2 instance and multiple EBS volumes with different sizes. Below terraform script is given for creating the same.\r\n\r\n\r\n    resource \"aws_ebs_volume\" \"ebs_volume\" {\r\n      for_each = {\r\n        0 = var.influxdb_data_volume_size\r\n        1 = var.influxdb_wal_volume_size\r\n        2 = var.telegraf_volume_size\r\n        3 = var.grafana_volume_size\r\n        4 = var.data_volume_size\r\n      }\r\n      availability_zone = var.availability_zone\r\n      size              = each.value\r\n      type              = \"gp2\"\r\n      tags = {\r\n        name = \"${var.tag}-ebs-volume\"\r\n        billing = var.tag\r\n      }\r\n    }\r\n    \r\n    # section for the EBS volume attachment\r\n    \r\n    resource \"aws_volume_attachment\" \"volume_attachement\" {\r\n      count       = var.ebs_volume_count\r\n      volume_id   = aws_ebs_volume.ebs_volume[count.index].id\r\n      device_name = \"${element(var.ec2_device_names, count.index)}\"\r\n      instance_id = aws_instance.ec2_production.id\r\n    }\r\n    \r\n    # section for the aws_key_pair \r\n    resource \"aws_key_pair\" \"key_pair\" {\r\n      key_name   = \"${var.tag}-key-pair\"\r\n      public_key = var.key_pair\r\n      tags = {\r\n        name = \"${var.tag}-key-pair\"\r\n        billing = var.tag\r\n      }\r\n    \r\n    }\r\n    resource \"aws_instance\" \"ec2_production\" {\r\n      # count         = \"${var.ec2_instance_count}\"\r\n      ami           = var.ami\r\n      availability_zone = var.availability_zone\r\n      instance_type =  var.ec2_instance_type\r\n      subnet_id = aws_subnet.subnet.id\r\n      associate_public_ip_address = true\r\n      vpc_security_group_ids = [aws_security_group.security_group_access_internet.id]\r\n      # disable_api_termination = true\r\n      key_name = \"${var.tag}-key-pair\"\r\n      ebs_block_device {\r\n        device_name = \"/dev/sda1\"\r\n        volume_type = \"gp2\"\r\n        volume_size = var.root_volume_size\r\n      }\r\n      tags = {\r\n        name = \"${var.tag}-ec2\"\r\n        billing = var.tag\r\n      }\r\n    }\r\n\r\n\r\nThe volume defined in **aws_instance** resource is the root volume having size of 40GB and I am creating multiple volumes of different sizes in **aws_ebs_volume** resource.\r\n\r\nNow I am trying to change the size of the root volume from 40GB to 60GB by updating the variable.tf file.\r\n\r\nWhen I am using the command **terraform plan** it's creating 6 resources and destroying 6 resources which include the EBS volumes and EC2 instance.\r\n\r\nNow, I want to increase the size of any volume which is root or any other which recreating or destroying anything.\r\n\r\nBelow I am giving output of **terraform plan**\r\n\r\n\r\n    -/+ resource \"aws_instance\" \"ec2_production\" {\r\n          ~ arn                                  = \"arn:aws:ec2:us-west-1:666268854852:instance/i-0ac516fab494df462\" -> (known after apply)\r\n          ~ cpu_core_count                       = 1 -> (known after apply)\r\n          ~ cpu_threads_per_core                 = 1 -> (known after apply)\r\n          - disable_api_termination              = false -> null\r\n          - ebs_optimized                        = false -> null\r\n          - hibernation                          = false -> null\r\n          + host_id                              = (known after apply)\r\n          ~ id                                   = \"i-0ac516fab494df462\" -> (known after apply)\r\n          ~ instance_initiated_shutdown_behavior = \"stop\" -> (known after apply)\r\n          ~ instance_state                       = \"running\" -> (known after apply)\r\n          ~ ipv6_address_count                   = 0 -> (known after apply)\r\n          ~ ipv6_addresses                       = [] -> (known after apply)\r\n          - monitoring                           = false -> null\r\n          + outpost_arn                          = (known after apply)\r\n          + password_data                        = (known after apply)\r\n          + placement_group                      = (known after apply)\r\n          ~ primary_network_interface_id         = \"eni-0fd71c3a3e41237be\" -> (known after apply)\r\n          ~ private_dns                          = \"ip-10-0-16-27.us-west-1.compute.internal\" -> (known after apply)\r\n          ~ private_ip                           = \"10.0.16.27\" -> (known after apply)\r\n          + public_dns                           = (known after apply)\r\n          ~ public_ip                            = \"13.56.209.171\" -> (known after apply)\r\n          ~ secondary_private_ips                = [] -> (known after apply)\r\n          ~ security_groups                      = [] -> (known after apply)\r\n            tags                                 = {\r\n                \"billing\" = \"att\"\r\n                \"name\"    = \"ec2\"\r\n            }\r\n          ~ tenancy                              = \"default\" -> (known after apply)\r\n            # (10 unchanged attributes hidden)\r\n    \r\n          - credit_specification {\r\n              - cpu_credits = \"standard\" -> null\r\n            }\r\n    \r\n          - ebs_block_device { # forces replacement\r\n              - delete_on_termination = false -> null\r\n              - device_name           = \"/dev/sdf\" -> null\r\n              - encrypted             = false -> null\r\n              - iops                  = 300 -> null\r\n              - tags                  = {\r\n                  - \"billing\" = \"att\"\r\n                  - \"name\"    = \"volume\"\r\n                } -> null\r\n              - throughput            = 0 -> null\r\n              - volume_id             = \"vol-08569e15ccd8f1aad\" -> null\r\n              - volume_size           = 100 -> null\r\n              - volume_type           = \"gp2\" -> null\r\n            }\r\n          - ebs_block_device { # forces replacement\r\n              - delete_on_termination = false -> null\r\n              - device_name           = \"/dev/sdg\" -> null\r\n              - encrypted             = false -> null\r\n              - iops                  = 150 -> null\r\n              - tags                  = {\r\n                  - \"billing\" = \"att\"\r\n                  - \"name\"    = \"volume\"\r\n                } -> null\r\n              - throughput            = 0 -> null\r\n              - volume_id             = \"vol-0e8c7cd7830fa2e02\" -> null\r\n              - volume_size           = 50 -> null\r\n              - volume_type           = \"gp2\" -> null\r\n            }\r\n          - ebs_block_device { # forces replacement\r\n              - delete_on_termination = false -> null\r\n              - device_name           = \"/dev/sdh\" -> null\r\n              - encrypted             = false -> null\r\n              - iops                  = 100 -> null\r\n              - tags                  = {\r\n                  - \"billing\" = \"att\"\r\n                  - \"name\"    = \"volume\"\r\n                } -> null\r\n              - throughput            = 0 -> null\r\n              - volume_id             = \"vol-0f989100daa275774\" -> null\r\n              - volume_size           = 20 -> null\r\n              - volume_type           = \"gp2\" -> null\r\n            }\r\n          - ebs_block_device { # forces replacement\r\n              - delete_on_termination = false -> null\r\n              - device_name           = \"/dev/sdi\" -> null\r\n              - encrypted             = false -> null\r\n              - iops                  = 100 -> null\r\n              - tags                  = {\r\n                  - \"billing\" = \"att\"\r\n                  - \"name\"    = \"volume\"\r\n                } -> null\r\n              - throughput            = 0 -> null\r\n              - volume_id             = \"vol-03cd5be3fea05aa45\" -> null\r\n              - volume_size           = 20 -> null\r\n              - volume_type           = \"gp2\" -> null\r\n            }\r\n          - ebs_block_device { # forces replacement\r\n              - delete_on_termination = false -> null\r\n              - device_name           = \"/dev/sdj\" -> null\r\n              - encrypted             = false -> null\r\n              - iops                  = 150 -> null\r\n              - tags                  = {\r\n                  - \"billing\" = \"att\"\r\n                  - \"name\"    = \"volume\"\r\n                } -> null\r\n              - throughput            = 0 -> null\r\n              - volume_id             = \"vol-023e380eebbf2c91f\" -> null\r\n              - volume_size           = 50 -> null\r\n              - volume_type           = \"gp2\" -> null\r\n            }\r\n          + ebs_block_device { # forces replacement\r\n              + delete_on_termination = true\r\n              + device_name           = \"/dev/sda1\"\r\n              + encrypted             = (known after apply)\r\n              + iops                  = (known after apply)\r\n              + kms_key_id            = (known after apply)\r\n              + snapshot_id           = (known after apply)\r\n              + throughput            = (known after apply)\r\n              + volume_id             = (known after apply)\r\n              + volume_size           = 60\r\n              + volume_type           = \"gp2\"\r\n            }\r\n    \r\n          ~ enclave_options {\r\n              ~ enabled = false -> (known after apply)\r\n            }\r\n    \r\n          + ephemeral_block_device {\r\n              + device_name  = (known after apply)\r\n              + no_device    = (known after apply)\r\n              + virtual_name = (known after apply)\r\n            }\r\n    \r\n          ~ metadata_options {\r\n              ~ http_endpoint               = \"enabled\" -> (known after apply)\r\n              ~ http_put_response_hop_limit = 1 -> (known after apply)\r\n              ~ http_tokens                 = \"optional\" -> (known after apply)\r\n            }\r\n    \r\n          + network_interface {\r\n              + delete_on_termination = (known after apply)\r\n              + device_index          = (known after apply)\r\n              + network_interface_id  = (known after apply)\r\n            }\r\n    \r\n          ~ root_block_device {\r\n              ~ delete_on_termination = true -> (known after apply)\r\n              ~ device_name           = \"/dev/sda1\" -> (known after apply)\r\n              ~ encrypted             = false -> (known after apply)\r\n              ~ iops                  = 120 -> (known after apply)\r\n              + kms_key_id            = (known after apply)\r\n              ~ tags                  = {} -> (known after apply)\r\n              ~ throughput            = 0 -> (known after apply)\r\n              ~ volume_id             = \"vol-054112f2f104ff54e\" -> (known after apply)\r\n              ~ volume_size           = 40 -> (known after apply)\r\n              ~ volume_type           = \"gp2\" -> (known after apply)\r\n            }\r\n        }\r\n    \r\n      # aws_volume_attachment.volume_attachement[0] must be replaced\r\n    -/+ resource \"aws_volume_attachment\" \"volume_attachement\" {\r\n          ~ id          = \"vai-1464807002\" -> (known after apply)\r\n          ~ instance_id = \"i-0ac516fab494df462\" -> (known after apply) # forces replacement\r\n            # (2 unchanged attributes hidden)\r\n        }\r\n    \r\n      # aws_volume_attachment.volume_attachement[1] must be replaced\r\n    -/+ resource \"aws_volume_attachment\" \"volume_attachement\" {\r\n          ~ id          = \"vai-3274211254\" -> (known after apply)\r\n          ~ instance_id = \"i-0ac516fab494df462\" -> (known after apply) # forces replacement\r\n            # (2 unchanged attributes hidden)\r\n        }\r\n    \r\n      # aws_volume_attachment.volume_attachement[2] must be replaced\r\n    -/+ resource \"aws_volume_attachment\" \"volume_attachement\" {\r\n          ~ id          = \"vai-1831356480\" -> (known after apply)\r\n          ~ instance_id = \"i-0ac516fab494df462\" -> (known after apply) # forces replacement\r\n            # (2 unchanged attributes hidden)\r\n        }\r\n    \r\n      # aws_volume_attachment.volume_attachement[3] must be replaced\r\n    -/+ resource \"aws_volume_attachment\" \"volume_attachement\" {\r\n          ~ id          = \"vai-374757704\" -> (known after apply)\r\n          ~ instance_id = \"i-0ac516fab494df462\" -> (known after apply) # forces replacement\r\n            # (2 unchanged attributes hidden)\r\n        }\r\n    \r\n      # aws_volume_attachment.volume_attachement[4] must be replaced\r\n    -/+ resource \"aws_volume_attachment\" \"volume_attachement\" {\r\n          ~ id          = \"vai-3725815030\" -> (known after apply)\r\n          ~ instance_id = \"i-0ac516fab494df462\" -> (known after apply) # forces replacement\r\n            # (2 unchanged attributes hidden)\r\n        }\r\n    \r\n    Plan: 6 to add, 0 to change, 6 to destroy.\r\n\r\n\r\nis there any way to achieve to update the volume size without destroying anything?\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I am creating the EC2 instance and multiple EBS volumes with different sizes. ", "keywords": ["instance"]}, {"source": "Text", "text": "Below terraform script is given for creating the same. resource \"aws_ebs_volume\" \"ebs_volume\" { for_each = { 0 = var.influxdb_data_volume_size 1 = var.influxdb_wal_volume_size 2 = var.telegraf_volume_size 3 = var.grafana_volume_size 4 = var.data_volume_size } availability_zone = var.availability_zone size = each.value type = \"gp2\" tags = { name = \"${var.tag}-ebs-volume\" billing = var.tag } } # section for the EBS volume attachment resource \"aws_volume_attachment\" \"volume_attachement\" { count = var.ebs_volume_count volume_id = aws_ebs_volume.ebs_volume[count.index].id device_name = \"${element(var.ec2_device_names, count.index)}\" instance_id = aws_instance.ec2_production.id } # section for the aws_key_pair resource \"aws_key_pair\" \"key_pair\" { key_name = \"${var.tag}-key-pair\" public_key = var.key_pair tags = { name = \"${var.tag}-key-pair\" billing = var.tag } } resource \"aws_instance\" \"ec2_production\" { # count = \"${var.ec2_instance_count}\" ami = var.ami availability_zone = var.availability_zone instance_type = var.ec2_instance_type subnet_id = aws_subnet.subnet.id associate_public_ip_address = true vpc_security_group_ids = [aws_security_group.security_group_access_internet.id] # disable_api_termination = true key_name = \"${var.tag}-key-pair\" ebs_block_device { device_name = \"/dev/sda1\" volume_type = \"gp2\" volume_size = var.root_volume_size } tags = { name = \"${var.tag}-ec2\" billing = var.tag } } The volume defined in **aws_instance** resource is the root volume having size of 40GB and I am creating multiple volumes of different sizes in **aws_ebs_volume** resource. ", "keywords": ["bill"]}, {"source": "Text", "text": "Now I am trying to change the size of the root volume from 40GB to 60GB by updating the variable.tf file. ", "keywords": ["change"]}, {"source": "Text", "text": "When I am using the command **terraform plan** it's creating 6 resources and destroying 6 resources which include the EBS volumes and EC2 instance. ", "keywords": ["instance"]}, {"source": "Text", "text": "Below I am giving output of **terraform plan** -/+ resource \"aws_instance\" \"ec2_production\" { ~ arn = \"arn:aws:ec2:us-west-1:666268854852:instance/i-0ac516fab494df462\" -> (known after apply) ~ cpu_core_count = 1 -> (known after apply) ~ cpu_threads_per_core = 1 -> (known after apply) - disable_api_termination = false -> null - ebs_optimized = false -> null - hibernation = false -> null + host_id = (known after apply) ~ id = \"i-0ac516fab494df462\" -> (known after apply) ~ instance_initiated_shutdown_behavior = \"stop\" -> (known after apply) ~ instance_state = \"running\" -> (known after apply) ~ ipv6_address_count = 0 -> (known after apply) ~ ipv6_addresses = [] -> (known after apply) - monitoring = false -> null + outpost_arn = (known after apply) + password_data = (known after apply) + placement_group = (known after apply) ~ primary_network_interface_id = \"eni-0fd71c3a3e41237be\" -> (known after apply) ~ private_dns = \"ip-10-0-16-27.us-west-1.compute.internal\" -> (known after apply) ~ private_ip = \"10.0.16.27\" -> (known after apply) + public_dns = (known after apply) ~ public_ip = \"13.56.209.171\" -> (known after apply) ~ secondary_private_ips = [] -> (known after apply) ~ security_groups = [] -> (known after apply) tags = { \"billing\" = \"att\" \"name\" = \"ec2\" } ~ tenancy = \"default\" -> (known after apply) # (10 unchanged attributes hidden) - credit_specification { - cpu_credits = \"standard\" -> null } - ebs_block_device { # forces replacement - delete_on_termination = false -> null - device_name = \"/dev/sdf\" -> null - encrypted = false -> null - iops = 300 -> null - tags = { - \"billing\" = \"att\" - \"name\" = \"volume\" } -> null - throughput = 0 -> null - volume_id = \"vol-08569e15ccd8f1aad\" -> null - volume_size = 100 -> null - volume_type = \"gp2\" -> null } - ebs_block_device { # forces replacement - delete_on_termination = false -> null - device_name = \"/dev/sdg\" -> null - encrypted = false -> null - iops = 150 -> null - tags = { - \"billing\" = \"att\" - \"name\" = \"volume\" } -> null - throughput = 0 -> null - volume_id = \"vol-0e8c7cd7830fa2e02\" -> null - volume_size = 50 -> null - volume_type = \"gp2\" -> null } - ebs_block_device { # forces replacement - delete_on_termination = false -> null - device_name = \"/dev/sdh\" -> null - encrypted = false -> null - iops = 100 -> null - tags = { - \"billing\" = \"att\" - \"name\" = \"volume\" } -> null - throughput = 0 -> null - volume_id = \"vol-0f989100daa275774\" -> null - volume_size = 20 -> null - volume_type = \"gp2\" -> null } - ebs_block_device { # forces replacement - delete_on_termination = false -> null - device_name = \"/dev/sdi\" -> null - encrypted = false -> null - iops = 100 -> null - tags = { - \"billing\" = \"att\" - \"name\" = \"volume\" } -> null - throughput = 0 -> null - volume_id = \"vol-03cd5be3fea05aa45\" -> null - volume_size = 20 -> null - volume_type = \"gp2\" -> null } - ebs_block_device { # forces replacement - delete_on_termination = false -> null - device_name = \"/dev/sdj\" -> null - encrypted = false -> null - iops = 150 -> null - tags = { - \"billing\" = \"att\" - \"name\" = \"volume\" } -> null - throughput = 0 -> null - volume_id = \"vol-023e380eebbf2c91f\" -> null - volume_size = 50 -> null - volume_type = \"gp2\" -> null } + ebs_block_device { # forces replacement + delete_on_termination = true + device_name = \"/dev/sda1\" + encrypted = (known after apply) + iops = (known after apply) + kms_key_id = (known after apply) + snapshot_id = (known after apply) + throughput = (known after apply) + volume_id = (known after apply) + volume_size = 60 + volume_type = \"gp2\" } ~ enclave_options { ~ enabled = false -> (known after apply) } + ephemeral_block_device { + device_name = (known after apply) + no_device = (known after apply) + virtual_name = (known after apply) } ~ metadata_options { ~ http_endpoint = \"enabled\" -> (known after apply) ~ http_put_response_hop_limit = 1 -> (known after apply) ~ http_tokens = \"optional\" -> (known after apply) } + network_interface { + delete_on_termination = (known after apply) + device_index = (known after apply) + network_interface_id = (known after apply) } ~ root_block_device { ~ delete_on_termination = true -> (known after apply) ~ device_name = \"/dev/sda1\" -> (known after apply) ~ encrypted = false -> (known after apply) ~ iops = 120 -> (known after apply) + kms_key_id = (known after apply) ~ tags = {} -> (known after apply) ~ throughput = 0 -> (known after apply) ~ volume_id = \"vol-054112f2f104ff54e\" -> (known after apply) ~ volume_size = 40 -> (known after apply) ~ volume_type = \"gp2\" -> (known after apply) } } # aws_volume_attachment.volume_attachement[0] must be replaced -/+ resource \"aws_volume_attachment\" \"volume_attachement\" { ~ id = \"vai-1464807002\" -> (known after apply) ~ instance_id = \"i-0ac516fab494df462\" -> (known after apply) # forces replacement # (2 unchanged attributes hidden) } # aws_volume_attachment.volume_attachement[1] must be replaced -/+ resource \"aws_volume_attachment\" \"volume_attachement\" { ~ id = \"vai-3274211254\" -> (known after apply) ~ instance_id = \"i-0ac516fab494df462\" -> (known after apply) # forces replacement # (2 unchanged attributes hidden) } # aws_volume_attachment.volume_attachement[2] must be replaced -/+ resource \"aws_volume_attachment\" \"volume_attachement\" { ~ id = \"vai-1831356480\" -> (known after apply) ~ instance_id = \"i-0ac516fab494df462\" -> (known after apply) # forces replacement # (2 unchanged attributes hidden) } # aws_volume_attachment.volume_attachement[3] must be replaced -/+ resource \"aws_volume_attachment\" \"volume_attachement\" { ~ id = \"vai-374757704\" -> (known after apply) ~ instance_id = \"i-0ac516fab494df462\" -> (known after apply) # forces replacement # (2 unchanged attributes hidden) } # aws_volume_attachment.volume_attachement[4] must be replaced -/+ resource \"aws_volume_attachment\" \"volume_attachement\" { ~ id = \"vai-3725815030\" -> (known after apply) ~ instance_id = \"i-0ac516fab494df462\" -> (known after apply) # forces replacement # (2 unchanged attributes hidden) } Plan: 6 to add, 0 to change, 6 to destroy. ", "keywords": ["bill", "instance", "change"]}]}, {"Id": "246436275", "PostHistoryTypeId": "1", "PostId": "67500096", "RevisionGUID": "3a9ede58-5456-4cbf-85d5-5e00b66fceb0", "CreationDate": "2021-05-12T08:39:50.460", "UserId": "8389618", "Text": "update the size of EBS volume without replacing the older volume and rebooting the EC2 instance", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "update the size of EBS volume without replacing the older volume and rebooting the EC2 instance", "keywords": ["instance"]}]}, {"Id": "246436276", "PostHistoryTypeId": "3", "PostId": "67500096", "RevisionGUID": "3a9ede58-5456-4cbf-85d5-5e00b66fceb0", "CreationDate": "2021-05-12T08:39:50.460", "UserId": "8389618", "Text": "<amazon-web-services><amazon-ec2><terraform><terraform-provider-aws><amazon-ebs>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "287315869", "PostHistoryTypeId": "5", "PostId": "67500096", "RevisionGUID": "6923f114-c837-4bb2-ba4e-af5612f1428c", "CreationDate": "2023-02-02T12:19:03.583", "UserId": "5277820", "Comment": "formatting improved", "Text": "I am creating the EC2 instance and multiple EBS volumes with different sizes. Below Terraform script is given for creating the same.\r\n\r\n    resource \"aws_ebs_volume\" \"ebs_volume\" {\r\n      for_each = {\r\n        0 = var.influxdb_data_volume_size\r\n        1 = var.influxdb_wal_volume_size\r\n        2 = var.telegraf_volume_size\r\n        3 = var.grafana_volume_size\r\n        4 = var.data_volume_size\r\n      }\r\n      availability_zone = var.availability_zone\r\n      size              = each.value\r\n      type              = \"gp2\"\r\n      tags = {\r\n        name = \"${var.tag}-ebs-volume\"\r\n        billing = var.tag\r\n      }\r\n    }\r\n    \r\n    # section for the EBS volume attachment\r\n    \r\n    resource \"aws_volume_attachment\" \"volume_attachement\" {\r\n      count       = var.ebs_volume_count\r\n      volume_id   = aws_ebs_volume.ebs_volume[count.index].id\r\n      device_name = \"${element(var.ec2_device_names, count.index)}\"\r\n      instance_id = aws_instance.ec2_production.id\r\n    }\r\n    \r\n    # section for the aws_key_pair \r\n    resource \"aws_key_pair\" \"key_pair\" {\r\n      key_name   = \"${var.tag}-key-pair\"\r\n      public_key = var.key_pair\r\n      tags = {\r\n        name = \"${var.tag}-key-pair\"\r\n        billing = var.tag\r\n      }\r\n    \r\n    }\r\n    resource \"aws_instance\" \"ec2_production\" {\r\n      # count         = \"${var.ec2_instance_count}\"\r\n      ami           = var.ami\r\n      availability_zone = var.availability_zone\r\n      instance_type =  var.ec2_instance_type\r\n      subnet_id = aws_subnet.subnet.id\r\n      associate_public_ip_address = true\r\n      vpc_security_group_ids = [aws_security_group.security_group_access_internet.id]\r\n      # disable_api_termination = true\r\n      key_name = \"${var.tag}-key-pair\"\r\n      ebs_block_device {\r\n        device_name = \"/dev/sda1\"\r\n        volume_type = \"gp2\"\r\n        volume_size = var.root_volume_size\r\n      }\r\n      tags = {\r\n        name = \"${var.tag}-ec2\"\r\n        billing = var.tag\r\n      }\r\n    }\r\n\r\nThe volume defined in `aws_instance` resource is the root volume having size of 40GB and I am creating multiple volumes of different sizes in `aws_ebs_volume` resource.\r\n\r\nNow I am trying to change the size of the root volume from 40GB to 60GB by updating the `variable.tf` file.\r\n\r\nWhen I am using the command `terraform plan` it's creating 6 resources and destroying 6 resources which include the EBS volumes and EC2 instance.\r\n\r\nNow, I want to increase the size of any volume which is root or any other which recreating or destroying anything.\r\n\r\nBelow I am giving output of `terraform plan`:\r\n\r\n    -/+ resource \"aws_instance\" \"ec2_production\" {\r\n          ~ arn                                  = \"arn:aws:ec2:us-west-1:666268854852:instance/i-0ac516fab494df462\" -> (known after apply)\r\n          ~ cpu_core_count                       = 1 -> (known after apply)\r\n          ~ cpu_threads_per_core                 = 1 -> (known after apply)\r\n          - disable_api_termination              = false -> null\r\n          - ebs_optimized                        = false -> null\r\n          - hibernation                          = false -> null\r\n          + host_id                              = (known after apply)\r\n          ~ id                                   = \"i-0ac516fab494df462\" -> (known after apply)\r\n          ~ instance_initiated_shutdown_behavior = \"stop\" -> (known after apply)\r\n          ~ instance_state                       = \"running\" -> (known after apply)\r\n          ~ ipv6_address_count                   = 0 -> (known after apply)\r\n          ~ ipv6_addresses                       = [] -> (known after apply)\r\n          - monitoring                           = false -> null\r\n          + outpost_arn                          = (known after apply)\r\n          + password_data                        = (known after apply)\r\n          + placement_group                      = (known after apply)\r\n          ~ primary_network_interface_id         = \"eni-0fd71c3a3e41237be\" -> (known after apply)\r\n          ~ private_dns                          = \"ip-10-0-16-27.us-west-1.compute.internal\" -> (known after apply)\r\n          ~ private_ip                           = \"10.0.16.27\" -> (known after apply)\r\n          + public_dns                           = (known after apply)\r\n          ~ public_ip                            = \"13.56.209.171\" -> (known after apply)\r\n          ~ secondary_private_ips                = [] -> (known after apply)\r\n          ~ security_groups                      = [] -> (known after apply)\r\n            tags                                 = {\r\n                \"billing\" = \"att\"\r\n                \"name\"    = \"ec2\"\r\n            }\r\n          ~ tenancy                              = \"default\" -> (known after apply)\r\n            # (10 unchanged attributes hidden)\r\n    \r\n          - credit_specification {\r\n              - cpu_credits = \"standard\" -> null\r\n            }\r\n    \r\n          - ebs_block_device { # forces replacement\r\n              - delete_on_termination = false -> null\r\n              - device_name           = \"/dev/sdf\" -> null\r\n              - encrypted             = false -> null\r\n              - iops                  = 300 -> null\r\n              - tags                  = {\r\n                  - \"billing\" = \"att\"\r\n                  - \"name\"    = \"volume\"\r\n                } -> null\r\n              - throughput            = 0 -> null\r\n              - volume_id             = \"vol-08569e15ccd8f1aad\" -> null\r\n              - volume_size           = 100 -> null\r\n              - volume_type           = \"gp2\" -> null\r\n            }\r\n          - ebs_block_device { # forces replacement\r\n              - delete_on_termination = false -> null\r\n              - device_name           = \"/dev/sdg\" -> null\r\n              - encrypted             = false -> null\r\n              - iops                  = 150 -> null\r\n              - tags                  = {\r\n                  - \"billing\" = \"att\"\r\n                  - \"name\"    = \"volume\"\r\n                } -> null\r\n              - throughput            = 0 -> null\r\n              - volume_id             = \"vol-0e8c7cd7830fa2e02\" -> null\r\n              - volume_size           = 50 -> null\r\n              - volume_type           = \"gp2\" -> null\r\n            }\r\n          - ebs_block_device { # forces replacement\r\n              - delete_on_termination = false -> null\r\n              - device_name           = \"/dev/sdh\" -> null\r\n              - encrypted             = false -> null\r\n              - iops                  = 100 -> null\r\n              - tags                  = {\r\n                  - \"billing\" = \"att\"\r\n                  - \"name\"    = \"volume\"\r\n                } -> null\r\n              - throughput            = 0 -> null\r\n              - volume_id             = \"vol-0f989100daa275774\" -> null\r\n              - volume_size           = 20 -> null\r\n              - volume_type           = \"gp2\" -> null\r\n            }\r\n          - ebs_block_device { # forces replacement\r\n              - delete_on_termination = false -> null\r\n              - device_name           = \"/dev/sdi\" -> null\r\n              - encrypted             = false -> null\r\n              - iops                  = 100 -> null\r\n              - tags                  = {\r\n                  - \"billing\" = \"att\"\r\n                  - \"name\"    = \"volume\"\r\n                } -> null\r\n              - throughput            = 0 -> null\r\n              - volume_id             = \"vol-03cd5be3fea05aa45\" -> null\r\n              - volume_size           = 20 -> null\r\n              - volume_type           = \"gp2\" -> null\r\n            }\r\n          - ebs_block_device { # forces replacement\r\n              - delete_on_termination = false -> null\r\n              - device_name           = \"/dev/sdj\" -> null\r\n              - encrypted             = false -> null\r\n              - iops                  = 150 -> null\r\n              - tags                  = {\r\n                  - \"billing\" = \"att\"\r\n                  - \"name\"    = \"volume\"\r\n                } -> null\r\n              - throughput            = 0 -> null\r\n              - volume_id             = \"vol-023e380eebbf2c91f\" -> null\r\n              - volume_size           = 50 -> null\r\n              - volume_type           = \"gp2\" -> null\r\n            }\r\n          + ebs_block_device { # forces replacement\r\n              + delete_on_termination = true\r\n              + device_name           = \"/dev/sda1\"\r\n              + encrypted             = (known after apply)\r\n              + iops                  = (known after apply)\r\n              + kms_key_id            = (known after apply)\r\n              + snapshot_id           = (known after apply)\r\n              + throughput            = (known after apply)\r\n              + volume_id             = (known after apply)\r\n              + volume_size           = 60\r\n              + volume_type           = \"gp2\"\r\n            }\r\n    \r\n          ~ enclave_options {\r\n              ~ enabled = false -> (known after apply)\r\n            }\r\n    \r\n          + ephemeral_block_device {\r\n              + device_name  = (known after apply)\r\n              + no_device    = (known after apply)\r\n              + virtual_name = (known after apply)\r\n            }\r\n    \r\n          ~ metadata_options {\r\n              ~ http_endpoint               = \"enabled\" -> (known after apply)\r\n              ~ http_put_response_hop_limit = 1 -> (known after apply)\r\n              ~ http_tokens                 = \"optional\" -> (known after apply)\r\n            }\r\n    \r\n          + network_interface {\r\n              + delete_on_termination = (known after apply)\r\n              + device_index          = (known after apply)\r\n              + network_interface_id  = (known after apply)\r\n            }\r\n    \r\n          ~ root_block_device {\r\n              ~ delete_on_termination = true -> (known after apply)\r\n              ~ device_name           = \"/dev/sda1\" -> (known after apply)\r\n              ~ encrypted             = false -> (known after apply)\r\n              ~ iops                  = 120 -> (known after apply)\r\n              + kms_key_id            = (known after apply)\r\n              ~ tags                  = {} -> (known after apply)\r\n              ~ throughput            = 0 -> (known after apply)\r\n              ~ volume_id             = \"vol-054112f2f104ff54e\" -> (known after apply)\r\n              ~ volume_size           = 40 -> (known after apply)\r\n              ~ volume_type           = \"gp2\" -> (known after apply)\r\n            }\r\n        }\r\n    \r\n      # aws_volume_attachment.volume_attachement[0] must be replaced\r\n    -/+ resource \"aws_volume_attachment\" \"volume_attachement\" {\r\n          ~ id          = \"vai-1464807002\" -> (known after apply)\r\n          ~ instance_id = \"i-0ac516fab494df462\" -> (known after apply) # forces replacement\r\n            # (2 unchanged attributes hidden)\r\n        }\r\n    \r\n      # aws_volume_attachment.volume_attachement[1] must be replaced\r\n    -/+ resource \"aws_volume_attachment\" \"volume_attachement\" {\r\n          ~ id          = \"vai-3274211254\" -> (known after apply)\r\n          ~ instance_id = \"i-0ac516fab494df462\" -> (known after apply) # forces replacement\r\n            # (2 unchanged attributes hidden)\r\n        }\r\n    \r\n      # aws_volume_attachment.volume_attachement[2] must be replaced\r\n    -/+ resource \"aws_volume_attachment\" \"volume_attachement\" {\r\n          ~ id          = \"vai-1831356480\" -> (known after apply)\r\n          ~ instance_id = \"i-0ac516fab494df462\" -> (known after apply) # forces replacement\r\n            # (2 unchanged attributes hidden)\r\n        }\r\n    \r\n      # aws_volume_attachment.volume_attachement[3] must be replaced\r\n    -/+ resource \"aws_volume_attachment\" \"volume_attachement\" {\r\n          ~ id          = \"vai-374757704\" -> (known after apply)\r\n          ~ instance_id = \"i-0ac516fab494df462\" -> (known after apply) # forces replacement\r\n            # (2 unchanged attributes hidden)\r\n        }\r\n    \r\n      # aws_volume_attachment.volume_attachement[4] must be replaced\r\n    -/+ resource \"aws_volume_attachment\" \"volume_attachement\" {\r\n          ~ id          = \"vai-3725815030\" -> (known after apply)\r\n          ~ instance_id = \"i-0ac516fab494df462\" -> (known after apply) # forces replacement\r\n            # (2 unchanged attributes hidden)\r\n        }\r\n    \r\n    Plan: 6 to add, 0 to change, 6 to destroy.\r\n\r\nIs there any way to achieve to update the volume size without destroying anything?\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I am creating the EC2 instance and multiple EBS volumes with different sizes. ", "keywords": ["instance"]}, {"source": "Text", "text": "Below Terraform script is given for creating the same. resource \"aws_ebs_volume\" \"ebs_volume\" { for_each = { 0 = var.influxdb_data_volume_size 1 = var.influxdb_wal_volume_size 2 = var.telegraf_volume_size 3 = var.grafana_volume_size 4 = var.data_volume_size } availability_zone = var.availability_zone size = each.value type = \"gp2\" tags = { name = \"${var.tag}-ebs-volume\" billing = var.tag } } # section for the EBS volume attachment resource \"aws_volume_attachment\" \"volume_attachement\" { count = var.ebs_volume_count volume_id = aws_ebs_volume.ebs_volume[count.index].id device_name = \"${element(var.ec2_device_names, count.index)}\" instance_id = aws_instance.ec2_production.id } # section for the aws_key_pair resource \"aws_key_pair\" \"key_pair\" { key_name = \"${var.tag}-key-pair\" public_key = var.key_pair tags = { name = \"${var.tag}-key-pair\" billing = var.tag } } resource \"aws_instance\" \"ec2_production\" { # count = \"${var.ec2_instance_count}\" ami = var.ami availability_zone = var.availability_zone instance_type = var.ec2_instance_type subnet_id = aws_subnet.subnet.id associate_public_ip_address = true vpc_security_group_ids = [aws_security_group.security_group_access_internet.id] # disable_api_termination = true key_name = \"${var.tag}-key-pair\" ebs_block_device { device_name = \"/dev/sda1\" volume_type = \"gp2\" volume_size = var.root_volume_size } tags = { name = \"${var.tag}-ec2\" billing = var.tag } } ", "keywords": ["bill"]}, {"source": "Text", "text": "Now I am trying to change the size of the root volume from 40GB to 60GB by updating the `variable.tf` file. ", "keywords": ["change"]}, {"source": "Text", "text": "When I am using the command `terraform plan` it's creating 6 resources and destroying 6 resources which include the EBS volumes and EC2 instance. ", "keywords": ["instance"]}, {"source": "Text", "text": "Below I am giving output of `terraform plan`: -/+ resource \"aws_instance\" \"ec2_production\" { ~ arn = \"arn:aws:ec2:us-west-1:666268854852:instance/i-0ac516fab494df462\" -> (known after apply) ~ cpu_core_count = 1 -> (known after apply) ~ cpu_threads_per_core = 1 -> (known after apply) - disable_api_termination = false -> null - ebs_optimized = false -> null - hibernation = false -> null + host_id = (known after apply) ~ id = \"i-0ac516fab494df462\" -> (known after apply) ~ instance_initiated_shutdown_behavior = \"stop\" -> (known after apply) ~ instance_state = \"running\" -> (known after apply) ~ ipv6_address_count = 0 -> (known after apply) ~ ipv6_addresses = [] -> (known after apply) - monitoring = false -> null + outpost_arn = (known after apply) + password_data = (known after apply) + placement_group = (known after apply) ~ primary_network_interface_id = \"eni-0fd71c3a3e41237be\" -> (known after apply) ~ private_dns = \"ip-10-0-16-27.us-west-1.compute.internal\" -> (known after apply) ~ private_ip = \"10.0.16.27\" -> (known after apply) + public_dns = (known after apply) ~ public_ip = \"13.56.209.171\" -> (known after apply) ~ secondary_private_ips = [] -> (known after apply) ~ security_groups = [] -> (known after apply) tags = { \"billing\" = \"att\" \"name\" = \"ec2\" } ~ tenancy = \"default\" -> (known after apply) # (10 unchanged attributes hidden) - credit_specification { - cpu_credits = \"standard\" -> null } - ebs_block_device { # forces replacement - delete_on_termination = false -> null - device_name = \"/dev/sdf\" -> null - encrypted = false -> null - iops = 300 -> null - tags = { - \"billing\" = \"att\" - \"name\" = \"volume\" } -> null - throughput = 0 -> null - volume_id = \"vol-08569e15ccd8f1aad\" -> null - volume_size = 100 -> null - volume_type = \"gp2\" -> null } - ebs_block_device { # forces replacement - delete_on_termination = false -> null - device_name = \"/dev/sdg\" -> null - encrypted = false -> null - iops = 150 -> null - tags = { - \"billing\" = \"att\" - \"name\" = \"volume\" } -> null - throughput = 0 -> null - volume_id = \"vol-0e8c7cd7830fa2e02\" -> null - volume_size = 50 -> null - volume_type = \"gp2\" -> null } - ebs_block_device { # forces replacement - delete_on_termination = false -> null - device_name = \"/dev/sdh\" -> null - encrypted = false -> null - iops = 100 -> null - tags = { - \"billing\" = \"att\" - \"name\" = \"volume\" } -> null - throughput = 0 -> null - volume_id = \"vol-0f989100daa275774\" -> null - volume_size = 20 -> null - volume_type = \"gp2\" -> null } - ebs_block_device { # forces replacement - delete_on_termination = false -> null - device_name = \"/dev/sdi\" -> null - encrypted = false -> null - iops = 100 -> null - tags = { - \"billing\" = \"att\" - \"name\" = \"volume\" } -> null - throughput = 0 -> null - volume_id = \"vol-03cd5be3fea05aa45\" -> null - volume_size = 20 -> null - volume_type = \"gp2\" -> null } - ebs_block_device { # forces replacement - delete_on_termination = false -> null - device_name = \"/dev/sdj\" -> null - encrypted = false -> null - iops = 150 -> null - tags = { - \"billing\" = \"att\" - \"name\" = \"volume\" } -> null - throughput = 0 -> null - volume_id = \"vol-023e380eebbf2c91f\" -> null - volume_size = 50 -> null - volume_type = \"gp2\" -> null } + ebs_block_device { # forces replacement + delete_on_termination = true + device_name = \"/dev/sda1\" + encrypted = (known after apply) + iops = (known after apply) + kms_key_id = (known after apply) + snapshot_id = (known after apply) + throughput = (known after apply) + volume_id = (known after apply) + volume_size = 60 + volume_type = \"gp2\" } ~ enclave_options { ~ enabled = false -> (known after apply) } + ephemeral_block_device { + device_name = (known after apply) + no_device = (known after apply) + virtual_name = (known after apply) } ~ metadata_options { ~ http_endpoint = \"enabled\" -> (known after apply) ~ http_put_response_hop_limit = 1 -> (known after apply) ~ http_tokens = \"optional\" -> (known after apply) } + network_interface { + delete_on_termination = (known after apply) + device_index = (known after apply) + network_interface_id = (known after apply) } ~ root_block_device { ~ delete_on_termination = true -> (known after apply) ~ device_name = \"/dev/sda1\" -> (known after apply) ~ encrypted = false -> (known after apply) ~ iops = 120 -> (known after apply) + kms_key_id = (known after apply) ~ tags = {} -> (known after apply) ~ throughput = 0 -> (known after apply) ~ volume_id = \"vol-054112f2f104ff54e\" -> (known after apply) ~ volume_size = 40 -> (known after apply) ~ volume_type = \"gp2\" -> (known after apply) } } # aws_volume_attachment.volume_attachement[0] must be replaced -/+ resource \"aws_volume_attachment\" \"volume_attachement\" { ~ id = \"vai-1464807002\" -> (known after apply) ~ instance_id = \"i-0ac516fab494df462\" -> (known after apply) # forces replacement # (2 unchanged attributes hidden) } # aws_volume_attachment.volume_attachement[1] must be replaced -/+ resource \"aws_volume_attachment\" \"volume_attachement\" { ~ id = \"vai-3274211254\" -> (known after apply) ~ instance_id = \"i-0ac516fab494df462\" -> (known after apply) # forces replacement # (2 unchanged attributes hidden) } # aws_volume_attachment.volume_attachement[2] must be replaced -/+ resource \"aws_volume_attachment\" \"volume_attachement\" { ~ id = \"vai-1831356480\" -> (known after apply) ~ instance_id = \"i-0ac516fab494df462\" -> (known after apply) # forces replacement # (2 unchanged attributes hidden) } # aws_volume_attachment.volume_attachement[3] must be replaced -/+ resource \"aws_volume_attachment\" \"volume_attachement\" { ~ id = \"vai-374757704\" -> (known after apply) ~ instance_id = \"i-0ac516fab494df462\" -> (known after apply) # forces replacement # (2 unchanged attributes hidden) } # aws_volume_attachment.volume_attachement[4] must be replaced -/+ resource \"aws_volume_attachment\" \"volume_attachement\" { ~ id = \"vai-3725815030\" -> (known after apply) ~ instance_id = \"i-0ac516fab494df462\" -> (known after apply) # forces replacement # (2 unchanged attributes hidden) } Plan: 6 to add, 0 to change, 6 to destroy. ", "keywords": ["bill", "instance", "change"]}]}, {"Id": "287315891", "PostHistoryTypeId": "4", "PostId": "67500096", "RevisionGUID": "6923f114-c837-4bb2-ba4e-af5612f1428c", "CreationDate": "2023-02-02T12:19:03.583", "UserId": "5277820", "Comment": "formatting improved", "Text": "How to update the size of EBS volume without replacing the older volume and rebooting the EC2 instance?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "How to update the size of EBS volume without replacing the older volume and rebooting the EC2 instance?", "keywords": ["instance"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Title", "text": "How to update the size of EBS volume without replacing the older volume and rebooting the EC2 instance?", "keywords": ["instance"]}, {"source": "Body", "text": "I am creating the EC2 instance and multiple EBS volumes with different sizes. ", "keywords": ["instance"]}, {"source": "Body", "text": "Now I am trying to change the size of the root volume from 40GB to 60GB by updating the variable.tf file. ", "keywords": ["change"]}, {"source": "Body", "text": "When I am using the command terraform plan it's creating 6 resources and destroying 6 resources which include the EBS volumes and EC2 instance. ", "keywords": ["instance"]}]}