{"Id": "54888945", "PostTypeId": "1", "CreationDate": "2019-02-26T15:28:41.187", "Score": "-1", "ViewCount": "2054", "Body": "<p>I've been working through this for what feels like an eternity now.. so the host project already exists.. and has all the VPN's and networking set up. I am looking to create a new project, through Terraform and allowing it to use the host projects shared VPC.</p>\n\n<p>Every time I run up against a problem and end up resolving it, I just run up against another one.</p>\n\n<p>Right now I'm seeing:</p>\n\n<pre><code>google_compute_shared_vpc_service_project.project: googleapi: Error 404: The resource 'projects/intacct-staging-db3b7e7a' was not found, notFound\n* google_compute_instance.dokku: 1 error(s) occurred:\n</code></pre>\n\n<p>As well as: </p>\n\n<pre><code> google_compute_instance.dokku: Error loading zone 'europe-west2-a': googleapi: Error 404: Failed to find project intacct-staging, notFound\n</code></pre>\n\n<p>I was originally convinced it was ordering, which is why I was playing around with <code>depends_on</code> configurations, to try and sort out the order. That hasn't seemed to resolve it. </p>\n\n<p>Reading it simply, <code>google_compute_shared_vpc_service_project</code> doesn't exist as far as <code>google_compute_shared_vpc_service_project</code> is concerned. Even though I've added the following to <code>google_compute_shared_vpc_service_project</code>:</p>\n\n<pre><code>depends_on = [\"google_project.project\",\n    \"google_compute_shared_vpc_host_project.host_project\",\n  ]\n</code></pre>\n\n<p>Perhaps, because the host project already exists I should use <code>data</code> to refer to it instead of <code>resource</code>? </p>\n\n<p>My full TF File is here:</p>\n\n<pre><code>provider \"google\" {\n region = \"${var.gcp_region}\"\n credentials = \"${file(\"./creds/serviceaccount.json\")}\"\n}\nresource \"random_id\" \"id\" {\n byte_length = 4\n prefix      = \"${var.project_name}-\"\n}\nresource \"google_project\" \"project\" {\n name            = \"${var.project_name}\"\n project_id      = \"${random_id.id.hex}\"\n billing_account = \"${var.billing_account}\"\n org_id          = \"${var.org_id}\"\n}\nresource \"google_project_services\" \"project\" {\n  project = \"${google_project.project.project_id}\"\n  services = [\n    \"compute.googleapis.com\"\n  ]\n  depends_on = [ \"google_project.project\" ]\n}\n# resource \"google_service_account\" \"service-account\" {\n#   account_id   = \"intacct-staging-service\"\n#   display_name = \"Service Account for the intacct staging app\"\n# }\nresource \"google_compute_shared_vpc_host_project\" \"host_project\" {\n  project    = \"${var.vpc_parent}\"\n}\nresource \"google_compute_shared_vpc_service_project\" \"project\" {\n  host_project    = \"${google_compute_shared_vpc_host_project.host_project.project}\"\n  service_project = \"${google_project.project.project_id}\"\n\n  depends_on = [\"google_project.project\",\n    \"google_compute_shared_vpc_host_project.host_project\",\n  ]\n}\n\nresource \"google_compute_address\" \"dokku\" {\n  name = \"fr-intacct-staging-ip\"\n  address_type = \"EXTERNAL\"\n  project = \"${google_project.project.project_id}\"\n  depends_on = [ \"google_project_services.project\" ]\n}\nresource \"google_compute_instance\" \"dokku\" {\n  project                   = \"${google_project.project.name}\"\n  name                      = \"dokku-host\"\n  machine_type              = \"${var.comp_type}\"\n  zone                      = \"${var.gcp_zone}\"\n  allow_stopping_for_update = \"true\"\n\n  tags = [\"intacct\"]\n\n  # Install Dokku\n  metadata_startup_script   = &lt;&lt;SCRIPT\nsed -i 's/PermitRootLogin no/PermitRootLogin yes/' /etc/ssh/sshd_config &amp;&amp; service sshd restart\nSCRIPT\n\n  boot_disk {\n    initialize_params {\n      image = \"${var.compute_image}\"\n    }\n  }\n  network_interface {\n    subnetwork         = \"${var.subnetwork}\"\n    subnetwork_project = \"${var.vpc_parent}\"\n    access_config      = {\n      nat_ip = \"${google_compute_address.dokku.address}\"\n    }\n  }\n  metadata {\n    sshKeys = \"root:${file(\"./id_rsa.pub\")}\"\n  }\n}\n</code></pre>\n\n<p>EDIT:</p>\n\n<p>As discussed below I was able to resolve the latter project not found error by changing the reference to <code>project_id</code> instead of <code>name</code> as name does not include the random hex.</p>\n\n<p>I'm now also seeing another error, referring to the static IP. The network interface is configured to use the subnetwork from the Host VPC...</p>\n\n<pre><code>network_interface {\n    subnetwork         = \"${var.subnetwork}\"\n    subnetwork_project = \"${var.vpc_parent}\"\n    access_config      = {\n      nat_ip = \"${google_compute_address.dokku.address}\"\n   }\n}\n</code></pre>\n\n<p>The IP is setup here:</p>\n\n<pre><code>resource \"google_compute_address\" \"dokku\" {\n  name = \"fr-intacct-staging-ip\"\n  address_type = \"EXTERNAL\"\n  project = \"${google_project.project.project_id}\"\n}\n</code></pre>\n\n<p>The IP should really be in the host project, which I've tried.. and when I do I get an error saying that cross-project is not allowed with this resource.</p>\n\n<p>When I change to the above, it also errors saying that the new project is now capable of handling API Calls. Which I suppose would make sense as I only allowed compute API calls per the <code>google_project_services</code> resource. </p>\n\n<p>I'll try allowing network API calls and see if that works, but I'm thinking the external IP needs to be in the host project's shared VPC?</p>\n", "OwnerUserId": "7551395", "LastEditorUserId": "7551395", "LastEditDate": "2019-02-26T16:49:33.953", "LastActivityDate": "2020-05-01T14:55:07.687", "Title": "Terraform: Creating GCP Project using Shared VPC", "Tags": "<google-cloud-platform><cloud><terraform>", "AnswerCount": "1", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "96547355", "PostId": "54888945", "Score": "0", "Text": "The second error was easily resolvable by changing `project                   = \"${google_project.project.name}\"` to `project                   = \"${google_project.project.project_id}\"` however I still seem to be coming across the problem regarding the project not existing. And now an issue suggesting it the compute_instance can't see the subnetwork from the host VPC. Added new error to original post.", "CreationDate": "2019-02-26T15:39:58.993", "UserId": "7551395", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "The second error was easily resolvable by changing `project = \"${google_project.project.name}\"` to `project = \"${google_project.project.project_id}\"` ", "keywords": ["change"]}]}, {"Id": "108898588", "PostId": "54888945", "Score": "0", "Text": "This isn't a question, it's a grab bag of issues with no clear request of what you want or need help with. It is unclear what you are are asking, so it will be very difficult for someone to provide an acceptable answer. Please read this guide and clean up your question. https://stackoverflow.com/help/how-to-ask", "CreationDate": "2020-05-02T17:09:49.597", "UserId": "154527", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "192467040", "PostHistoryTypeId": "2", "PostId": "54888945", "RevisionGUID": "a0b24a2c-94a4-4e98-a264-396ce9630c2d", "CreationDate": "2019-02-26T15:28:41.187", "UserId": "7551395", "Text": "I've been working through this for what feels like an eternity now.. so the host project already exists.. and has all the VPN's and networking set up. I am looking to create a new project, through Terraform and allowing it to use the host projects shared VPC.\r\n\r\nEvery time I run up against a problem and end up resolving it, I just run up against another one.\r\n\r\nRight now I'm seeing:\r\n\r\n    google_compute_shared_vpc_service_project.project: googleapi: Error 404: The resource 'projects/intacct-staging-db3b7e7a' was not found, notFound\r\n    * google_compute_instance.dokku: 1 error(s) occurred:\r\n\r\nAs well as: \r\n\r\n     google_compute_instance.dokku: Error loading zone 'europe-west2-a': googleapi: Error 404: Failed to find project intacct-staging, notFound\r\n\r\nI was originally convinced it was ordering, which is why I was playing around with `depends_on` configurations, to try and sort out the order. That hasn't seemed to resolve it. \r\n\r\nReading it simply, `google_compute_shared_vpc_service_project` doesn't exist as far as `google_compute_shared_vpc_service_project` is concerned. Even though I've added the following to `google_compute_shared_vpc_service_project`:\r\n\r\n    depends_on = [\"google_project.project\",\r\n        \"google_compute_shared_vpc_host_project.host_project\",\r\n      ]\r\n\r\nPerhaps, because the host project already exists I should use `data` to refer to it instead of `resource`? \r\n\r\nMy full TF File is here:\r\n\r\n    provider \"google\" {\r\n     region = \"${var.gcp_region}\"\r\n     credentials = \"${file(\"./creds/serviceaccount.json\")}\"\r\n    }\r\n    resource \"random_id\" \"id\" {\r\n     byte_length = 4\r\n     prefix      = \"${var.project_name}-\"\r\n    }\r\n    resource \"google_project\" \"project\" {\r\n     name            = \"${var.project_name}\"\r\n     project_id      = \"${random_id.id.hex}\"\r\n     billing_account = \"${var.billing_account}\"\r\n     org_id          = \"${var.org_id}\"\r\n    }\r\n    resource \"google_project_services\" \"project\" {\r\n      project = \"${google_project.project.project_id}\"\r\n      services = [\r\n        \"compute.googleapis.com\"\r\n      ]\r\n      depends_on = [ \"google_project.project\" ]\r\n    }\r\n    # resource \"google_service_account\" \"service-account\" {\r\n    #   account_id   = \"intacct-staging-service\"\r\n    #   display_name = \"Service Account for the intacct staging app\"\r\n    # }\r\n    resource \"google_compute_shared_vpc_host_project\" \"host_project\" {\r\n      project    = \"${var.vpc_parent}\"\r\n    }\r\n    resource \"google_compute_shared_vpc_service_project\" \"project\" {\r\n      host_project    = \"${google_compute_shared_vpc_host_project.host_project.project}\"\r\n      service_project = \"${google_project.project.project_id}\"\r\n    \r\n      depends_on = [\"google_project.project\",\r\n        \"google_compute_shared_vpc_host_project.host_project\",\r\n      ]\r\n    }\r\n    \r\n    resource \"google_compute_address\" \"dokku\" {\r\n      name = \"fr-intacct-staging-ip\"\r\n      address_type = \"EXTERNAL\"\r\n      project = \"${google_project.project.project_id}\"\r\n      depends_on = [ \"google_project_services.project\" ]\r\n    }\r\n    resource \"google_compute_instance\" \"dokku\" {\r\n      project                   = \"${google_project.project.name}\"\r\n      name                      = \"dokku-host\"\r\n      machine_type              = \"${var.comp_type}\"\r\n      zone                      = \"${var.gcp_zone}\"\r\n      allow_stopping_for_update = \"true\"\r\n    \r\n      tags = [\"intacct\"]\r\n    \r\n      # Install Dokku\r\n      metadata_startup_script   = <<SCRIPT\r\n    sed -i 's/PermitRootLogin no/PermitRootLogin yes/' /etc/ssh/sshd_config && service sshd restart\r\n    SCRIPT\r\n    \r\n      boot_disk {\r\n        initialize_params {\r\n          image = \"${var.compute_image}\"\r\n        }\r\n      }\r\n      network_interface {\r\n        subnetwork         = \"${var.subnetwork}\"\r\n        subnetwork_project = \"${var.vpc_parent}\"\r\n        access_config      = {\r\n          nat_ip = \"${google_compute_address.dokku.address}\"\r\n        }\r\n      }\r\n      metadata {\r\n        sshKeys = \"root:${file(\"./id_rsa.pub\")}\"\r\n      }\r\n    }\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I've been working through this for what feels like an eternity now.. so the host project already exists.. and has all the VPN's and networking set up. ", "keywords": ["networking", "vpn"]}, {"source": "Text", "text": "My full TF File is here: provider \"google\" { region = \"${var.gcp_region}\" credentials = \"${file(\"./creds/serviceaccount.json\")}\" } resource \"random_id\" \"id\" { byte_length = 4 prefix = \"${var.project_name}-\" } resource \"google_project\" \"project\" { name = \"${var.project_name}\" project_id = \"${random_id.id.hex}\" billing_account = \"${var.billing_account}\" org_id = \"${var.org_id}\" } resource \"google_project_services\" \"project\" { project = \"${google_project.project.project_id}\" services = [ \"compute.googleapis.com\" ] depends_on = [ \"google_project.project\" ] } # resource \"google_service_account\" \"service-account\" { # account_id = \"intacct-staging-service\" # display_name = \"Service Account for the intacct staging app\" # } resource \"google_compute_shared_vpc_host_project\" \"host_project\" { project = \"${var.vpc_parent}\" } resource \"google_compute_shared_vpc_service_project\" \"project\" { host_project = \"${google_compute_shared_vpc_host_project.host_project.project}\" service_project = \"${google_project.project.project_id}\" depends_on = [\"google_project.project\", \"google_compute_shared_vpc_host_project.host_project\", ] } resource \"google_compute_address\" \"dokku\" { name = \"fr-intacct-staging-ip\" address_type = \"EXTERNAL\" project = \"${google_project.project.project_id}\" depends_on = [ \"google_project_services.project\" ] } resource \"google_compute_instance\" \"dokku\" { project = \"${google_project.project.name}\" name = \"dokku-host\" machine_type = \"${var.comp_type}\" zone = \"${var.gcp_zone}\" allow_stopping_for_update = \"true\" tags = [\"intacct\"] # Install Dokku metadata_startup_script = <<SCRIPT sed -i 's/PermitRootLogin no/PermitRootLogin yes/' /etc/ssh/sshd_config && service sshd restart SCRIPT boot_disk { initialize_params { image = \"${var.compute_image}\" } } network_interface { subnetwork = \"${var.subnetwork}\" subnetwork_project = \"${var.vpc_parent}\" access_config = { nat_ip = \"${google_compute_address.dokku.address}\" } } metadata { sshKeys = \"root:${file(\"./id_rsa.pub\")}\" } }", "keywords": ["bill", "provider"]}]}, {"Id": "192467041", "PostHistoryTypeId": "1", "PostId": "54888945", "RevisionGUID": "a0b24a2c-94a4-4e98-a264-396ce9630c2d", "CreationDate": "2019-02-26T15:28:41.187", "UserId": "7551395", "Text": "Terraform: Creating GCP Project using Shared VPC", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "192467042", "PostHistoryTypeId": "3", "PostId": "54888945", "RevisionGUID": "a0b24a2c-94a4-4e98-a264-396ce9630c2d", "CreationDate": "2019-02-26T15:28:41.187", "UserId": "7551395", "Text": "<google-cloud-platform><cloud><terraform>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "192470038", "PostHistoryTypeId": "5", "PostId": "54888945", "RevisionGUID": "9881c47d-abae-4ab8-9974-e6767bfba67c", "CreationDate": "2019-02-26T16:08:54.630", "UserId": "7551395", "Comment": "added 187 characters in body", "Text": "I've been working through this for what feels like an eternity now.. so the host project already exists.. and has all the VPN's and networking set up. I am looking to create a new project, through Terraform and allowing it to use the host projects shared VPC.\r\n\r\nEvery time I run up against a problem and end up resolving it, I just run up against another one.\r\n\r\nRight now I'm seeing:\r\n\r\n    google_compute_shared_vpc_service_project.project: googleapi: Error 404: The resource 'projects/intacct-staging-db3b7e7a' was not found, notFound\r\n    * google_compute_instance.dokku: 1 error(s) occurred:\r\n\r\nAs well as: \r\n\r\n     google_compute_instance.dokku: Error loading zone 'europe-west2-a': googleapi: Error 404: Failed to find project intacct-staging, notFound\r\n\r\nI was originally convinced it was ordering, which is why I was playing around with `depends_on` configurations, to try and sort out the order. That hasn't seemed to resolve it. \r\n\r\nReading it simply, `google_compute_shared_vpc_service_project` doesn't exist as far as `google_compute_shared_vpc_service_project` is concerned. Even though I've added the following to `google_compute_shared_vpc_service_project`:\r\n\r\n    depends_on = [\"google_project.project\",\r\n        \"google_compute_shared_vpc_host_project.host_project\",\r\n      ]\r\n\r\nPerhaps, because the host project already exists I should use `data` to refer to it instead of `resource`? \r\n\r\nMy full TF File is here:\r\n\r\n    provider \"google\" {\r\n     region = \"${var.gcp_region}\"\r\n     credentials = \"${file(\"./creds/serviceaccount.json\")}\"\r\n    }\r\n    resource \"random_id\" \"id\" {\r\n     byte_length = 4\r\n     prefix      = \"${var.project_name}-\"\r\n    }\r\n    resource \"google_project\" \"project\" {\r\n     name            = \"${var.project_name}\"\r\n     project_id      = \"${random_id.id.hex}\"\r\n     billing_account = \"${var.billing_account}\"\r\n     org_id          = \"${var.org_id}\"\r\n    }\r\n    resource \"google_project_services\" \"project\" {\r\n      project = \"${google_project.project.project_id}\"\r\n      services = [\r\n        \"compute.googleapis.com\"\r\n      ]\r\n      depends_on = [ \"google_project.project\" ]\r\n    }\r\n    # resource \"google_service_account\" \"service-account\" {\r\n    #   account_id   = \"intacct-staging-service\"\r\n    #   display_name = \"Service Account for the intacct staging app\"\r\n    # }\r\n    resource \"google_compute_shared_vpc_host_project\" \"host_project\" {\r\n      project    = \"${var.vpc_parent}\"\r\n    }\r\n    resource \"google_compute_shared_vpc_service_project\" \"project\" {\r\n      host_project    = \"${google_compute_shared_vpc_host_project.host_project.project}\"\r\n      service_project = \"${google_project.project.project_id}\"\r\n    \r\n      depends_on = [\"google_project.project\",\r\n        \"google_compute_shared_vpc_host_project.host_project\",\r\n      ]\r\n    }\r\n    \r\n    resource \"google_compute_address\" \"dokku\" {\r\n      name = \"fr-intacct-staging-ip\"\r\n      address_type = \"EXTERNAL\"\r\n      project = \"${google_project.project.project_id}\"\r\n      depends_on = [ \"google_project_services.project\" ]\r\n    }\r\n    resource \"google_compute_instance\" \"dokku\" {\r\n      project                   = \"${google_project.project.name}\"\r\n      name                      = \"dokku-host\"\r\n      machine_type              = \"${var.comp_type}\"\r\n      zone                      = \"${var.gcp_zone}\"\r\n      allow_stopping_for_update = \"true\"\r\n    \r\n      tags = [\"intacct\"]\r\n    \r\n      # Install Dokku\r\n      metadata_startup_script   = <<SCRIPT\r\n    sed -i 's/PermitRootLogin no/PermitRootLogin yes/' /etc/ssh/sshd_config && service sshd restart\r\n    SCRIPT\r\n    \r\n      boot_disk {\r\n        initialize_params {\r\n          image = \"${var.compute_image}\"\r\n        }\r\n      }\r\n      network_interface {\r\n        subnetwork         = \"${var.subnetwork}\"\r\n        subnetwork_project = \"${var.vpc_parent}\"\r\n        access_config      = {\r\n          nat_ip = \"${google_compute_address.dokku.address}\"\r\n        }\r\n      }\r\n      metadata {\r\n        sshKeys = \"root:${file(\"./id_rsa.pub\")}\"\r\n      }\r\n    }\r\n\r\nEDIT:\r\n\r\nAs discussed below I was able to resolve the latter project not found error by changing the reference to `project_id` instead of `name` as name does not include the random hex.\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I've been working through this for what feels like an eternity now.. so the host project already exists.. and has all the VPN's and networking set up. ", "keywords": ["networking", "vpn"]}, {"source": "Text", "text": "My full TF File is here: provider \"google\" { region = \"${var.gcp_region}\" credentials = \"${file(\"./creds/serviceaccount.json\")}\" } resource \"random_id\" \"id\" { byte_length = 4 prefix = \"${var.project_name}-\" } resource \"google_project\" \"project\" { name = \"${var.project_name}\" project_id = \"${random_id.id.hex}\" billing_account = \"${var.billing_account}\" org_id = \"${var.org_id}\" } resource \"google_project_services\" \"project\" { project = \"${google_project.project.project_id}\" services = [ \"compute.googleapis.com\" ] depends_on = [ \"google_project.project\" ] } # resource \"google_service_account\" \"service-account\" { # account_id = \"intacct-staging-service\" # display_name = \"Service Account for the intacct staging app\" # } resource \"google_compute_shared_vpc_host_project\" \"host_project\" { project = \"${var.vpc_parent}\" } resource \"google_compute_shared_vpc_service_project\" \"project\" { host_project = \"${google_compute_shared_vpc_host_project.host_project.project}\" service_project = \"${google_project.project.project_id}\" depends_on = [\"google_project.project\", \"google_compute_shared_vpc_host_project.host_project\", ] } resource \"google_compute_address\" \"dokku\" { name = \"fr-intacct-staging-ip\" address_type = \"EXTERNAL\" project = \"${google_project.project.project_id}\" depends_on = [ \"google_project_services.project\" ] } resource \"google_compute_instance\" \"dokku\" { project = \"${google_project.project.name}\" name = \"dokku-host\" machine_type = \"${var.comp_type}\" zone = \"${var.gcp_zone}\" allow_stopping_for_update = \"true\" tags = [\"intacct\"] # Install Dokku metadata_startup_script = <<SCRIPT sed -i 's/PermitRootLogin no/PermitRootLogin yes/' /etc/ssh/sshd_config && service sshd restart SCRIPT boot_disk { initialize_params { image = \"${var.compute_image}\" } } network_interface { subnetwork = \"${var.subnetwork}\" subnetwork_project = \"${var.vpc_parent}\" access_config = { nat_ip = \"${google_compute_address.dokku.address}\" } } metadata { sshKeys = \"root:${file(\"./id_rsa.pub\")}\" } } EDIT: As discussed below I was able to resolve the latter project not found error by changing the reference to `project_id` instead of `name` as name does not include the random hex", "keywords": ["bill", "provider", "change"]}]}, {"Id": "192472979", "PostHistoryTypeId": "5", "PostId": "54888945", "RevisionGUID": "1b6069e0-eb0c-45d5-a9e9-ddce6d645591", "CreationDate": "2019-02-26T16:49:33.953", "UserId": "7551395", "Comment": "added 1115 characters in body", "Text": "I've been working through this for what feels like an eternity now.. so the host project already exists.. and has all the VPN's and networking set up. I am looking to create a new project, through Terraform and allowing it to use the host projects shared VPC.\r\n\r\nEvery time I run up against a problem and end up resolving it, I just run up against another one.\r\n\r\nRight now I'm seeing:\r\n\r\n    google_compute_shared_vpc_service_project.project: googleapi: Error 404: The resource 'projects/intacct-staging-db3b7e7a' was not found, notFound\r\n    * google_compute_instance.dokku: 1 error(s) occurred:\r\n\r\nAs well as: \r\n\r\n     google_compute_instance.dokku: Error loading zone 'europe-west2-a': googleapi: Error 404: Failed to find project intacct-staging, notFound\r\n\r\nI was originally convinced it was ordering, which is why I was playing around with `depends_on` configurations, to try and sort out the order. That hasn't seemed to resolve it. \r\n\r\nReading it simply, `google_compute_shared_vpc_service_project` doesn't exist as far as `google_compute_shared_vpc_service_project` is concerned. Even though I've added the following to `google_compute_shared_vpc_service_project`:\r\n\r\n    depends_on = [\"google_project.project\",\r\n        \"google_compute_shared_vpc_host_project.host_project\",\r\n      ]\r\n\r\nPerhaps, because the host project already exists I should use `data` to refer to it instead of `resource`? \r\n\r\nMy full TF File is here:\r\n\r\n    provider \"google\" {\r\n     region = \"${var.gcp_region}\"\r\n     credentials = \"${file(\"./creds/serviceaccount.json\")}\"\r\n    }\r\n    resource \"random_id\" \"id\" {\r\n     byte_length = 4\r\n     prefix      = \"${var.project_name}-\"\r\n    }\r\n    resource \"google_project\" \"project\" {\r\n     name            = \"${var.project_name}\"\r\n     project_id      = \"${random_id.id.hex}\"\r\n     billing_account = \"${var.billing_account}\"\r\n     org_id          = \"${var.org_id}\"\r\n    }\r\n    resource \"google_project_services\" \"project\" {\r\n      project = \"${google_project.project.project_id}\"\r\n      services = [\r\n        \"compute.googleapis.com\"\r\n      ]\r\n      depends_on = [ \"google_project.project\" ]\r\n    }\r\n    # resource \"google_service_account\" \"service-account\" {\r\n    #   account_id   = \"intacct-staging-service\"\r\n    #   display_name = \"Service Account for the intacct staging app\"\r\n    # }\r\n    resource \"google_compute_shared_vpc_host_project\" \"host_project\" {\r\n      project    = \"${var.vpc_parent}\"\r\n    }\r\n    resource \"google_compute_shared_vpc_service_project\" \"project\" {\r\n      host_project    = \"${google_compute_shared_vpc_host_project.host_project.project}\"\r\n      service_project = \"${google_project.project.project_id}\"\r\n    \r\n      depends_on = [\"google_project.project\",\r\n        \"google_compute_shared_vpc_host_project.host_project\",\r\n      ]\r\n    }\r\n    \r\n    resource \"google_compute_address\" \"dokku\" {\r\n      name = \"fr-intacct-staging-ip\"\r\n      address_type = \"EXTERNAL\"\r\n      project = \"${google_project.project.project_id}\"\r\n      depends_on = [ \"google_project_services.project\" ]\r\n    }\r\n    resource \"google_compute_instance\" \"dokku\" {\r\n      project                   = \"${google_project.project.name}\"\r\n      name                      = \"dokku-host\"\r\n      machine_type              = \"${var.comp_type}\"\r\n      zone                      = \"${var.gcp_zone}\"\r\n      allow_stopping_for_update = \"true\"\r\n    \r\n      tags = [\"intacct\"]\r\n    \r\n      # Install Dokku\r\n      metadata_startup_script   = <<SCRIPT\r\n    sed -i 's/PermitRootLogin no/PermitRootLogin yes/' /etc/ssh/sshd_config && service sshd restart\r\n    SCRIPT\r\n    \r\n      boot_disk {\r\n        initialize_params {\r\n          image = \"${var.compute_image}\"\r\n        }\r\n      }\r\n      network_interface {\r\n        subnetwork         = \"${var.subnetwork}\"\r\n        subnetwork_project = \"${var.vpc_parent}\"\r\n        access_config      = {\r\n          nat_ip = \"${google_compute_address.dokku.address}\"\r\n        }\r\n      }\r\n      metadata {\r\n        sshKeys = \"root:${file(\"./id_rsa.pub\")}\"\r\n      }\r\n    }\r\n\r\nEDIT:\r\n\r\nAs discussed below I was able to resolve the latter project not found error by changing the reference to `project_id` instead of `name` as name does not include the random hex.\r\n\r\nI'm now also seeing another error, referring to the static IP. The network interface is configured to use the subnetwork from the Host VPC...\r\n\r\n    network_interface {\r\n        subnetwork         = \"${var.subnetwork}\"\r\n        subnetwork_project = \"${var.vpc_parent}\"\r\n        access_config      = {\r\n          nat_ip = \"${google_compute_address.dokku.address}\"\r\n       }\r\n    }\r\n\r\nThe IP is setup here:\r\n\r\n    resource \"google_compute_address\" \"dokku\" {\r\n      name = \"fr-intacct-staging-ip\"\r\n      address_type = \"EXTERNAL\"\r\n      project = \"${google_project.project.project_id}\"\r\n    }\r\n\r\nThe IP should really be in the host project, which I've tried.. and when I do I get an error saying that cross-project is not allowed with this resource.\r\n\r\nWhen I change to the above, it also errors saying that the new project is now capable of handling API Calls. Which I suppose would make sense as I only allowed compute API calls per the `google_project_services` resource. \r\n\r\nI'll try allowing network API calls and see if that works, but I'm thinking the external IP needs to be in the host project's shared VPC?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I've been working through this for what feels like an eternity now.. so the host project already exists.. and has all the VPN's and networking set up. ", "keywords": ["networking", "vpn"]}, {"source": "Text", "text": "My full TF File is here: provider \"google\" { region = \"${var.gcp_region}\" credentials = \"${file(\"./creds/serviceaccount.json\")}\" } resource \"random_id\" \"id\" { byte_length = 4 prefix = \"${var.project_name}-\" } resource \"google_project\" \"project\" { name = \"${var.project_name}\" project_id = \"${random_id.id.hex}\" billing_account = \"${var.billing_account}\" org_id = \"${var.org_id}\" } resource \"google_project_services\" \"project\" { project = \"${google_project.project.project_id}\" services = [ \"compute.googleapis.com\" ] depends_on = [ \"google_project.project\" ] } # resource \"google_service_account\" \"service-account\" { # account_id = \"intacct-staging-service\" # display_name = \"Service Account for the intacct staging app\" # } resource \"google_compute_shared_vpc_host_project\" \"host_project\" { project = \"${var.vpc_parent}\" } resource \"google_compute_shared_vpc_service_project\" \"project\" { host_project = \"${google_compute_shared_vpc_host_project.host_project.project}\" service_project = \"${google_project.project.project_id}\" depends_on = [\"google_project.project\", \"google_compute_shared_vpc_host_project.host_project\", ] } resource \"google_compute_address\" \"dokku\" { name = \"fr-intacct-staging-ip\" address_type = \"EXTERNAL\" project = \"${google_project.project.project_id}\" depends_on = [ \"google_project_services.project\" ] } resource \"google_compute_instance\" \"dokku\" { project = \"${google_project.project.name}\" name = \"dokku-host\" machine_type = \"${var.comp_type}\" zone = \"${var.gcp_zone}\" allow_stopping_for_update = \"true\" tags = [\"intacct\"] # Install Dokku metadata_startup_script = <<SCRIPT sed -i 's/PermitRootLogin no/PermitRootLogin yes/' /etc/ssh/sshd_config && service sshd restart SCRIPT boot_disk { initialize_params { image = \"${var.compute_image}\" } } network_interface { subnetwork = \"${var.subnetwork}\" subnetwork_project = \"${var.vpc_parent}\" access_config = { nat_ip = \"${google_compute_address.dokku.address}\" } } metadata { sshKeys = \"root:${file(\"./id_rsa.pub\")}\" } } EDIT: As discussed below ", "keywords": ["bill", "provider"]}, {"source": "Text", "text": "I was able to resolve the latter project not found error by changing the reference to `project_id` instead of `name` as name does not include the random hex. ", "keywords": ["change"]}, {"source": "Text", "text": "When I change to the above, it also errors saying that the new project is now capable of handling API Calls. ", "keywords": ["change"]}]}], "answers": [{"Id": "61544884", "PostTypeId": "2", "ParentId": "54888945", "CreationDate": "2020-05-01T14:55:07.687", "Score": "5", "Body": "<p>For anyone encountering the same problem, in my case the project not found error was solved just by enabling the Compute Engine API.</p>\n", "OwnerUserId": "3003017", "LastActivityDate": "2020-05-01T14:55:07.687", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "220580280", "PostHistoryTypeId": "2", "PostId": "61544884", "RevisionGUID": "81af45c2-3476-4d6f-902b-19711d755fd2", "CreationDate": "2020-05-01T14:55:07.687", "UserId": "3003017", "Text": "For anyone encountering the same problem, in my case the project not found error was solved just by enabling the Compute Engine API.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I've been working through this for what feels like an eternity now.. so the host project already exists.. and has all the VPN's and networking set up. ", "keywords": ["networking", "vpn"]}, {"source": "Body", "text": "I was able to resolve the latter project not found error by changing the reference to project_id instead of name as name does not include the random hex. ", "keywords": ["change"]}, {"source": "Body", "text": "When I change to the above, it also errors saying that the new project is now capable of handling API Calls. ", "keywords": ["change"]}]}