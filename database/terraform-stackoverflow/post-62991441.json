{"Id": "62991441", "PostTypeId": "1", "AcceptedAnswerId": "63009338", "CreationDate": "2020-07-20T08:28:40.423", "Score": "0", "ViewCount": "1446", "Body": "<p>What is the equivalent of this Azure Cli example (<a href=\"https://learn.microsoft.com/en-us/azure/azure-functions/functions-bindings-event-grid-trigger?tabs=java#version-2x-and-higher-runtime-1\" rel=\"nofollow noreferrer\">from Azure doc</a>) using Terraform Azure provider 2.19.0</p>\n<pre class=\"lang-sh prettyprint-override\"><code>az eventgrid resource event-subscription create -g myResourceGroup \\\n--provider-namespace Microsoft.Storage --resource-type storageAccounts \\\n--resource-name myblobstorage12345 --name myFuncSub  \\\n--included-event-types Microsoft.Storage.BlobCreated \\\n--subject-begins-with /blobServices/default/containers/images/blobs/ \\\n--endpoint https://mystoragetriggeredfunction.azurewebsites.net/runtime/webhooks/eventgrid?functionName=imageresizefunc&amp;code=&lt;key&gt;\n\n</code></pre>\n<p>Note:\nFollowing this <a href=\"https://github.com/terraform-providers/terraform-provider-azurerm/issues/3305#issuecomment-502095672\" rel=\"nofollow noreferrer\">Terraform Github Issue</a>, <code>resource_group_name</code> and <code>topic_name</code> are deprecated.</p>\n", "OwnerUserId": "248304", "LastEditorUserId": "248304", "LastEditDate": "2020-07-21T09:40:42.513", "LastActivityDate": "2020-07-22T01:09:33.897", "Title": "Creating an Azure event-subscription filtering by Microsoft.Storage.BlobCreated event using Terraform", "Tags": "<azure><terraform><azure-storage><azure-blob-storage><terraform-provider-azure>", "AnswerCount": "2", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "226999775", "PostHistoryTypeId": "2", "PostId": "62991441", "RevisionGUID": "b4a17970-fc01-40c2-b53f-48298ec9b063", "CreationDate": "2020-07-20T08:28:40.423", "UserId": "248304", "Text": "What is the equivalent of this Azure Cli example (from Azure doc) using Terraform Azure provider 2.19.0\r\n\r\n```bash\r\naz eventgrid resource event-subscription create -g myResourceGroup \\\r\n--provider-namespace Microsoft.Storage --resource-type storageAccounts \\\r\n--resource-name myblobstorage12345 --name myFuncSub  \\\r\n--included-event-types Microsoft.Storage.BlobCreated \\\r\n--subject-begins-with /blobServices/default/containers/images/blobs/ \\\r\n--endpoint https://mystoragetriggeredfunction.azurewebsites.net/runtime/webhooks/eventgrid?functionName=imageresizefunc&code=<key>\r\n\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "What is the equivalent of this Azure Cli example (from Azure doc) using Terraform Azure provider 2.19.0 ```bash az eventgrid resource event-subscription create -g myResourceGroup \\ --provider-namespace Microsoft.Storage --resource-type storageAccounts \\ --resource-name myblobstorage12345 --name myFuncSub \\ --included-event-types Microsoft.Storage.BlobCreated \\ --subject-begins-with /blobServices/default/containers/images/blobs/ \\ --endpoint https://mystoragetriggeredfunction.azurewebsites.net/runtime/webhooks/eventgrid?functionName=imageresizefunc&code= ```", "keywords": ["storage", "provider"]}]}, {"Id": "226999776", "PostHistoryTypeId": "1", "PostId": "62991441", "RevisionGUID": "b4a17970-fc01-40c2-b53f-48298ec9b063", "CreationDate": "2020-07-20T08:28:40.423", "UserId": "248304", "Text": "Azure event-subscription to a Microsoft.Storage.BlobCreated event using Terraform", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Azure event-subscription to a Microsoft.Storage.BlobCreated event using Terraform", "keywords": ["storage"]}]}, {"Id": "226999777", "PostHistoryTypeId": "3", "PostId": "62991441", "RevisionGUID": "b4a17970-fc01-40c2-b53f-48298ec9b063", "CreationDate": "2020-07-20T08:28:40.423", "UserId": "248304", "Text": "<azure><terraform><azure-storage><azure-blob-storage><terraform-provider-azure>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "227001719", "PostHistoryTypeId": "5", "PostId": "62991441", "RevisionGUID": "01b9568c-e371-4d74-89a6-a318b466c930", "CreationDate": "2020-07-20T08:55:20.740", "UserId": "248304", "Comment": "Notes about deprecation", "Text": "What is the equivalent of this Azure Cli example (from Azure doc) using Terraform Azure provider 2.19.0\r\n\r\n```bash\r\naz eventgrid resource event-subscription create -g myResourceGroup \\\r\n--provider-namespace Microsoft.Storage --resource-type storageAccounts \\\r\n--resource-name myblobstorage12345 --name myFuncSub  \\\r\n--included-event-types Microsoft.Storage.BlobCreated \\\r\n--subject-begins-with /blobServices/default/containers/images/blobs/ \\\r\n--endpoint https://mystoragetriggeredfunction.azurewebsites.net/runtime/webhooks/eventgrid?functionName=imageresizefunc&code=<key>\r\n\r\n```\r\n\r\n\r\nNote:\r\nFollowing this [Github Issue](https://github.com/terraform-providers/terraform-provider-azurerm/issues/3305#issuecomment-502095672), `resource_group_name` and `topic_name` are deprecated.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "What is the equivalent of this Azure Cli example (from Azure doc) using Terraform Azure provider 2.19.0 ```bash az eventgrid resource event-subscription create -g myResourceGroup \\ --provider-namespace Microsoft.Storage --resource-type storageAccounts \\ --resource-name myblobstorage12345 --name myFuncSub \\ --included-event-types Microsoft.Storage.BlobCreated \\ --subject-begins-with /blobServices/default/containers/images/blobs/ \\ --endpoint https://mystoragetriggeredfunction.azurewebsites.net/runtime/webhooks/eventgrid?functionName=imageresizefunc&code= ``` Note: Following this [Github Issue](https://github.com/terraform-providers/terraform-provider-azurerm/issues/3305#issuecomment-502095672), `resource_group_name` and `topic_name` are deprecated", "keywords": ["storage", "provider"]}]}, {"Id": "227080945", "PostHistoryTypeId": "5", "PostId": "62991441", "RevisionGUID": "6702406c-754b-4b39-9d98-48bc3d09aa86", "CreationDate": "2020-07-21T08:55:49.327", "UserId": "248304", "Comment": "Link to the documentation", "Text": "What is the equivalent of this Azure Cli example ([from Azure doc](https://learn.microsoft.com/en-us/azure/azure-functions/functions-bindings-event-grid-trigger?tabs=java#version-2x-and-higher-runtime-1)) using Terraform Azure provider 2.19.0\r\n\r\n```bash\r\naz eventgrid resource event-subscription create -g myResourceGroup \\\r\n--provider-namespace Microsoft.Storage --resource-type storageAccounts \\\r\n--resource-name myblobstorage12345 --name myFuncSub  \\\r\n--included-event-types Microsoft.Storage.BlobCreated \\\r\n--subject-begins-with /blobServices/default/containers/images/blobs/ \\\r\n--endpoint https://mystoragetriggeredfunction.azurewebsites.net/runtime/webhooks/eventgrid?functionName=imageresizefunc&code=<key>\r\n\r\n```\r\n\r\n\r\nNote:\r\nFollowing this [Terraform Github Issue](https://github.com/terraform-providers/terraform-provider-azurerm/issues/3305#issuecomment-502095672), `resource_group_name` and `topic_name` are deprecated.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "What is the equivalent of this Azure Cli example ([from Azure doc](https://learn.microsoft.com/en-us/azure/azure-functions/functions-bindings-event-grid-trigger?tabs=java#version-2x-and-higher-runtime-1)) using Terraform Azure provider 2.19.0 ```bash az eventgrid resource event-subscription create -g myResourceGroup \\ --provider-namespace Microsoft.Storage --resource-type storageAccounts \\ --resource-name myblobstorage12345 --name myFuncSub \\ --included-event-types Microsoft.Storage.BlobCreated \\ --subject-begins-with /blobServices/default/containers/images/blobs/ \\ --endpoint https://mystoragetriggeredfunction.azurewebsites.net/runtime/webhooks/eventgrid?functionName=imageresizefunc&code= ``` Note: Following this [Terraform Github Issue](https://github.com/terraform-providers/terraform-provider-azurerm/issues/3305#issuecomment-502095672), `resource_group_name` and `topic_name` are deprecated", "keywords": ["storage", "provider"]}]}, {"Id": "227083957", "PostHistoryTypeId": "4", "PostId": "62991441", "RevisionGUID": "a3161e63-ae8d-4a0d-8b3d-ea906b310341", "CreationDate": "2020-07-21T09:40:42.513", "UserId": "248304", "Comment": "More clear tittle", "Text": "Creating an Azure event-subscription filtering by Microsoft.Storage.BlobCreated event using Terraform", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Creating an Azure event-subscription filtering by Microsoft.Storage.BlobCreated event using Terraform", "keywords": ["storage"]}]}], "answers": [{"Id": "63011116", "PostTypeId": "2", "ParentId": "62991441", "CreationDate": "2020-07-21T09:06:20.300", "Score": "2", "Body": "<p>So it looks like Terraform is using the scope parameter to inference part of the parameters.</p>\n<p>So this is the equivalent in Terraform:</p>\n<pre><code>resource &quot;azurerm_eventgrid_event_subscription&quot; &quot;my_func_sub&quot; {\n  name  = &quot;myFuncSub&quot;\n  scope = azurerm_storage_account.images.id\n\n  included_event_types = [\n    &quot;Microsoft.Storage.BlobCreated&quot;\n  ]\n\n  subject_filter {\n    subject_begins_with = &quot;/blobServices/default/containers/${azurerm_storage_container.images.name}/blobs/&quot;\n  }\n\n  webhook_endpoint {\n    url = &quot;https://mystoragetriggeredfunction.azurewebsites.net/runtime/webhooks/eventgrid?functionName=imageresizefunc&amp;code=&lt;key&gt;&quot;\n  }\n\n}\n</code></pre>\n<p>Ofcourse, you need to replace <code>azurerm_storage_container.images</code> and the webhook url with rigth values in your case.</p>\n<p>It is important pay attention to <code>scope</code>. It should be the id of the resource that will publish events. In our case, it is a storage container.</p>\n", "OwnerUserId": "248304", "LastActivityDate": "2020-07-21T09:06:20.300", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "227081667", "PostHistoryTypeId": "2", "PostId": "63011116", "RevisionGUID": "fa52cd35-2b8f-404b-8544-475117833a62", "CreationDate": "2020-07-21T09:06:20.300", "UserId": "248304", "Text": "So it looks like Terraform is using the scope parameter to inference part of the parameters.\r\n\r\nSo this is the equivalent in Terraform:\r\n```\r\nresource \"azurerm_eventgrid_event_subscription\" \"my_func_sub\" {\r\n  name  = \"myFuncSub\"\r\n  scope = azurerm_storage_account.images.id\r\n\r\n  included_event_types = [\r\n    \"Microsoft.Storage.BlobCreated\"\r\n  ]\r\n\r\n  subject_filter {\r\n    subject_begins_with = \"/blobServices/default/containers/${azurerm_storage_container.images.name}/blobs/\"\r\n  }\r\n\r\n  webhook_endpoint {\r\n    url = \"https://mystoragetriggeredfunction.azurewebsites.net/runtime/webhooks/eventgrid?functionName=imageresizefunc&code=<key>\"\r\n  }\r\n\r\n}\r\n```\r\n\r\nOfcourse, you need to replace `azurerm_storage_container.images` and the webhook url with rigth values in your case.\r\n\r\nIt is important pay attention to `scope`. It should be the id of the resource that will publish events. In our case, it is a storage container.\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "So this is the equivalent in Terraform: ``` resource \"azurerm_eventgrid_event_subscription\" \"my_func_sub\" { name = \"myFuncSub\" scope = azurerm_storage_account.images.id included_event_types = [ \"Microsoft.Storage.BlobCreated\" ] subject_filter { subject_begins_with = \"/blobServices/default/containers/${azurerm_storage_container.images.name}/blobs/\" } webhook_endpoint { url = \"https://mystoragetriggeredfunction.azurewebsites.net/runtime/webhooks/eventgrid?functionName=imageresizefunc&code=\" } } ``` ", "keywords": ["storage"]}, {"source": "Text", "text": "It is important pay attention to `scope`", "keywords": ["pay"]}, {"source": "Text", "text": "In our case, it is a storage container.", "keywords": ["storage"]}]}], "filtered-sentences": [{"source": "Body", "text": "It is important pay attention to scope. ", "keywords": ["pay"]}, {"source": "Body", "text": "In our case, it is a storage container.", "keywords": ["storage"]}]}, {"Id": "63009338", "PostTypeId": "2", "ParentId": "62991441", "CreationDate": "2020-07-21T07:18:15.153", "Score": "0", "Body": "<p>I'm afraid you use the wrong Azure CLI command, there is only CLI command for Event Grid like <a href=\"https://learn.microsoft.com/en-us/cli/azure/eventgrid/event-subscription?view=azure-cli-latest#az-eventgrid-event-subscription-create\" rel=\"nofollow noreferrer\"><code>az eventgrid event-subscription create</code></a>, and it does not have the parameter for the resource group. So you also do not need to care about it in the Terraform code.</p>\n<p>Update:</p>\n<p>With more attention to the parameter <code>scope</code>:</p>\n<blockquote>\n<p>Specifies the scope at which the EventGrid Event Subscription should\nbe created.</p>\n</blockquote>\n<p>You can also understand it from parameter <code>--source-resource-id</code> the Azure CLI command :</p>\n<blockquote>\n<p>--source-resource-id</p>\n<p>Fully qualified identifier of the Azure resource to which the event\nsubscription needs to be created.</p>\n</blockquote>\n<p>Terraform does not describe it clearly. So we need to understand it from the CLI or Azure REST API, that's the actual thing finally used when you create resources in Azure.</p>\n<p>And Terraform also does not support all the things that Azure supports. I'm also confused with Terraform sometimes. When this time, I recommend you using the CLI command directly or run the CLI command inside the Terraform code.</p>\n", "OwnerUserId": "9773937", "LastEditorUserId": "9773937", "LastEditDate": "2020-07-22T01:09:33.897", "LastActivityDate": "2020-07-22T01:09:33.897", "CommentCount": "8", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "111427304", "PostId": "63009338", "Score": "0", "Text": "Then, looks like the documentation is wrong. I added the link to the example in the Azure documentation. BTW, I figured out how to do it.", "CreationDate": "2020-07-21T09:07:28.870", "UserId": "248304", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "111427464", "PostId": "63009338", "Score": "0", "Text": "@angelcervera I don't think it's something about the resource group. It's just the scope where you want to create the event grid. It does not answer your question or you ask the wrong question!", "CreationDate": "2020-07-21T09:12:53.593", "UserId": "9773937", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "111427983", "PostId": "63009338", "Score": "0", "Text": "Sorry, I don't get it. I asked for the equivalent in terraform. That will generate the same event subscription, like the cli command. It is not necessary to create the event grid because, like using the CLI, it will creatred automatically as a Event Grid System Topic. Maybe I missed something.", "CreationDate": "2020-07-21T09:29:05.993", "UserId": "248304", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "111428130", "PostId": "63009338", "Score": "0", "Text": "@angelcervera I see you follow the Github issue about `resource_group_name` and `topic_name`, so that is what you care about. I just answer that you do not care about them and only need to pay attention to other parameters.", "CreationDate": "2020-07-21T09:33:44.953", "UserId": "9773937", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I just answer that you do not care about them and only need to pay attention to other parameters.", "keywords": ["pay"]}]}, {"Id": "111428225", "PostId": "63009338", "Score": "0", "Text": "Ok, so maybe my mistake. I added that note because in previous versions of terraform, using these two parameters was the way. In fact, there are old responses in stackoverflow using these two parameters. I'm sorry about the confusion.", "CreationDate": "2020-07-21T09:37:04.327", "UserId": "248304", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "111428295", "PostId": "63009338", "Score": "0", "Text": "I updated the tittle. Feel free to edit it again to be more clear about the target.", "CreationDate": "2020-07-21T09:39:31.427", "UserId": "248304", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "111428353", "PostId": "63009338", "Score": "0", "Text": "@angelcervera So maybe you can accept my answer or make it more clear and I will delete the answer.", "CreationDate": "2020-07-21T09:41:19.307", "UserId": "9773937", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "111428387", "PostId": "63009338", "Score": "0", "Text": "Let us [continue this discussion in chat](https://chat.stackoverflow.com/rooms/218268/discussion-between-angelcervera-and-charles-xu).", "CreationDate": "2020-07-21T09:42:22.207", "UserId": "248304", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "227074446", "PostHistoryTypeId": "2", "PostId": "63009338", "RevisionGUID": "c9951906-f071-41b5-b872-3fbcaacaa2b9", "CreationDate": "2020-07-21T07:18:15.153", "UserId": "9773937", "Text": "I'm afraid you use the wrong Azure CLI command, there is only CLI command for Event Grid like [`az eventgrid event-subscription create`][1], and it does not have the parameter for the resource group. So you also do not need to care about it in the Terraform code.\r\n\r\n\r\n  [1]: https://learn.microsoft.com/en-us/cli/azure/eventgrid/event-subscription?view=azure-cli-latest#az-eventgrid-event-subscription-create", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "227084547", "PostHistoryTypeId": "5", "PostId": "63009338", "RevisionGUID": "8db37e6b-abe8-41c3-87dd-82c255f9210d", "CreationDate": "2020-07-21T09:48:44.767", "UserId": "9773937", "Comment": "added 379 characters in body", "Text": "I'm afraid you use the wrong Azure CLI command, there is only CLI command for Event Grid like [`az eventgrid event-subscription create`][1], and it does not have the parameter for the resource group. So you also do not need to care about it in the Terraform code.\r\n\r\nUpdate:\r\n\r\nWith more attention to the parameter `scope`:\r\n\r\n> Specifies the scope at which the EventGrid Event Subscription should\r\n> be created.\r\n\r\nYou can also understand it from parameter `--source-resource-id` the Azure CLI command :\r\n\r\n> --source-resource-id\r\n> \r\n> Fully qualified identifier of the Azure resource to which the event\r\n> subscription needs to be created.\r\n\r\n\r\n  [1]: https://learn.microsoft.com/en-us/cli/azure/eventgrid/event-subscription?view=azure-cli-latest#az-eventgrid-event-subscription-create", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "227139663", "PostHistoryTypeId": "5", "PostId": "63009338", "RevisionGUID": "94d7cbbe-76b5-48db-b1e4-5ea81d8e4b9c", "CreationDate": "2020-07-22T01:09:33.897", "UserId": "9773937", "Comment": "added 408 characters in body", "Text": "I'm afraid you use the wrong Azure CLI command, there is only CLI command for Event Grid like [`az eventgrid event-subscription create`][1], and it does not have the parameter for the resource group. So you also do not need to care about it in the Terraform code.\r\n\r\nUpdate:\r\n\r\nWith more attention to the parameter `scope`:\r\n\r\n> Specifies the scope at which the EventGrid Event Subscription should\r\n> be created.\r\n\r\nYou can also understand it from parameter `--source-resource-id` the Azure CLI command :\r\n\r\n> --source-resource-id\r\n> \r\n> Fully qualified identifier of the Azure resource to which the event\r\n> subscription needs to be created.\r\n\r\nTerraform does not describe it clearly. So we need to understand it from the CLI or Azure REST API, that's the actual thing finally used when you create resources in Azure.\r\n\r\nAnd Terraform also does not support all the things that Azure supports. I'm also confused with Terraform sometimes. When this time, I recommend you using the CLI command directly or run the CLI command inside the Terraform code.\r\n\r\n\r\n  [1]: https://learn.microsoft.com/en-us/cli/azure/eventgrid/event-subscription?view=azure-cli-latest#az-eventgrid-event-subscription-create", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Title", "text": "Creating an Azure event-subscription filtering by Microsoft.Storage.BlobCreated event using Terraform", "keywords": ["storage"]}, {"source": "Body", "text": "What is the equivalent of this Azure Cli example (from Azure doc) using Terraform Azure provider 2.19.0 Note: Following this Terraform Github Issue, resource_group_name and topic_name are deprecated.", "keywords": ["provider"]}]}