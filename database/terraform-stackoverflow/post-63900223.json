{"Id": "63900223", "PostTypeId": "1", "AcceptedAnswerId": "63901510", "CreationDate": "2020-09-15T10:45:09.240", "Score": "0", "ViewCount": "750", "Body": "<p>I have created my aws infrastructure using terraform . the infrastructure includes creating elastic beanstalk apps , application load balancer , s3 , dynamodb , vpc-subnets and vpc-endpoints.</p>\n<p>the aws infrastructure runs locally using the terraform commands as shown below:</p>\n<pre><code>terraform init\nterraform plan -var-file=&quot;terraform.tfvars&quot;\nterraform apply -auto-approve -var-file=&quot;terraform.tfvars&quot;\n</code></pre>\n<p>The terraform.tfvars contains the variables like region , instance type , access key etc .</p>\n<p>I want to automate the build and deploy process of this terraform infrastructure using the aws codepipeline .\nHow can I achieve this task ? What steps to follow ? Where to save the terraform.tfvars file ? What roles to specify in the specific codebuild role . What about the manual process of auto-approve ?</p>\n<p><strong>MY APPROACH</strong> :The entire process of codecommit/github , codebuild , codedeploy ie (codepipeline) is carried out through aws console , I started with github as source , it is working (the github repo includes my terraform code for building aws infrastructure) then for codebuild , I need to specify the env variables and the buildspec.yml file , this is the problem , Iocally I had a terraform.tfvars to do the job but here I need to do it in the buildspec.yml file .</p>\n<p><strong>QUESTIONS</strong> :I am unaware how to specify my terraform.tfvars credentials in the buildspec.yml file and what env variables to specify? I also know we need to specify roles in the codebuild project but how to effectively specify them ? How to also Store the Terraform state in s3 ?</p>\n", "OwnerUserId": "13586954", "LastEditorUserId": "13586954", "LastEditDate": "2020-09-16T06:32:47.217", "LastActivityDate": "2020-09-16T06:32:47.217", "Title": "terraform infrastructure runs locally , building and deploying it on aws codepipeline gives error", "Tags": "<amazon-web-services><terraform><aws-codepipeline>", "AnswerCount": "1", "CommentCount": "3", "FavoriteCount": "0", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "112996628", "PostId": "63900223", "Score": "2", "Text": "What error do you get? How have you configured your pipeline?", "CreationDate": "2020-09-15T11:10:25.943", "UserId": "2291321", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "113020297", "PostId": "63900223", "Score": "0", "Text": "I have specified my approach ? I am stuck when I need to specify buildspec.yml file and env variables for configuring the codebuild project , also I am unaware how to specify roles for codebuild ?", "CreationDate": "2020-09-16T06:35:25.517", "UserId": "13586954", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "113021398", "PostId": "63900223", "Score": "0", "Text": "I was following below mentioned tutorial but as it involves creating aws security services whereas I need to create elastic beanstalk applications and many other things , got stuck while following there steps.\n\nhttps://aws.amazon.com/blogs/security/how-use-ci-cd-deploy-configure-aws-security-services-terraform/", "CreationDate": "2020-09-16T07:22:21.343", "UserId": "13586954", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "links": [{"Id": "1776269455", "CreationDate": "2020-09-16T11:22:42.297", "PostId": "63900223", "RelatedPostId": "51273227", "LinkTypeId": "1"}], "history": [{"Id": "230856618", "PostHistoryTypeId": "2", "PostId": "63900223", "RevisionGUID": "828d61ad-10ec-4da8-a208-7368821b4ee7", "CreationDate": "2020-09-15T10:45:09.240", "UserId": "13586954", "Text": "I have created my aws infrastructure using terraform . the infrastructure includes creating elastic beanstalk apps , application load balancer , s3 , dynamodb , vpc-subnets and vpc-endpoints.\r\n\r\nthe aws infrastructure runs locally using the terraform commands as shown below:\r\n\r\n\r\n    terraform init\r\n    terraform plan -var-file=\"terraform.tfvars\"\r\n    terraform apply -auto-approve -var-file=\"terraform.tfvars\"\r\n\r\n\r\n\r\nThe terraform.tfvars contains the variables like region , instance type , access key etc .\r\n\r\nI want to automate the build and deploy process of this terraform infrastructure using the aws codepipeline .\r\nHow can I achieve this task ? What steps to follow ? Where to save the terraform.tfvars file ? What roles to specify in the specific codebuild role . What about the manual process of auto-approve ? \r\n\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "The terraform.tfvars contains the variables like region , instance type , access key etc . ", "keywords": ["instance"]}]}, {"Id": "230856619", "PostHistoryTypeId": "1", "PostId": "63900223", "RevisionGUID": "828d61ad-10ec-4da8-a208-7368821b4ee7", "CreationDate": "2020-09-15T10:45:09.240", "UserId": "13586954", "Text": "building an aws codepipeline for your terraform infrastructure", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "230856620", "PostHistoryTypeId": "3", "PostId": "63900223", "RevisionGUID": "828d61ad-10ec-4da8-a208-7368821b4ee7", "CreationDate": "2020-09-15T10:45:09.240", "UserId": "13586954", "Text": "<amazon-web-services><terraform><aws-codepipeline>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "230858032", "PostHistoryTypeId": "4", "PostId": "63900223", "RevisionGUID": "9088b12f-7499-4b91-923b-1857d434a8bd", "CreationDate": "2020-09-15T11:08:27.297", "UserId": "13586954", "Comment": "edited title", "Text": "terraform infrastructure runs locally , building and deploying it on aws codepipeline gives error", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "230915742", "PostHistoryTypeId": "5", "PostId": "63900223", "RevisionGUID": "e8e2bacf-8735-478b-8bc3-bdbbdda50aca", "CreationDate": "2020-09-16T06:32:47.217", "UserId": "13586954", "Comment": "added 756 characters in body", "Text": "I have created my aws infrastructure using terraform . the infrastructure includes creating elastic beanstalk apps , application load balancer , s3 , dynamodb , vpc-subnets and vpc-endpoints.\r\n\r\nthe aws infrastructure runs locally using the terraform commands as shown below:\r\n\r\n\r\n    terraform init\r\n    terraform plan -var-file=\"terraform.tfvars\"\r\n    terraform apply -auto-approve -var-file=\"terraform.tfvars\"\r\n\r\n\r\n\r\nThe terraform.tfvars contains the variables like region , instance type , access key etc .\r\n\r\nI want to automate the build and deploy process of this terraform infrastructure using the aws codepipeline .\r\nHow can I achieve this task ? What steps to follow ? Where to save the terraform.tfvars file ? What roles to specify in the specific codebuild role . What about the manual process of auto-approve ? \r\n\r\n**MY APPROACH** :The entire process of codecommit/github , codebuild , codedeploy ie (codepipeline) is carried out through aws console , I started with github as source , it is working (the github repo includes my terraform code for building aws infrastructure) then for codebuild , I need to specify the env variables and the buildspec.yml file , this is the problem , Iocally I had a terraform.tfvars to do the job but here I need to do it in the buildspec.yml file . \r\n\r\n**QUESTIONS** :I am unaware how to specify my terraform.tfvars credentials in the buildspec.yml file and what env variables to specify? I also know we need to specify roles in the codebuild project but how to effectively specify them ? How to also Store the Terraform state in s3 ? \r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "The terraform.tfvars contains the variables like region , instance type , access key etc . ", "keywords": ["instance"]}]}], "answers": [{"Id": "63901510", "PostTypeId": "2", "ParentId": "63900223", "CreationDate": "2020-09-15T12:07:43.563", "Score": "0", "Body": "<p><strong>- How can I achieve this task ?</strong></p>\n<p>Use CodeCommit to store your Terraform Code, CodeBuild to run terraform plan, terraform apply, etc and CodePipeline to connect CodeCommit with CodeBuild.</p>\n<p><strong>What steps to follow ?</strong></p>\n<p>There are many tutorials on the internet. Check this as an example:\n<a href=\"https://medium.com/faun/terraform-deployments-with-aws-codepipeline-342074248843\" rel=\"nofollow noreferrer\">https://medium.com/faun/terraform-deployments-with-aws-codepipeline-342074248843</a></p>\n<p><strong>Where to save the terraform.tfvars file ?</strong></p>\n<p>Ideally, you should create one <code>terraform.tfvars</code> for development environment, like <code>terraform.tfvars.dev</code>, and another one for production environment, like <code>terraform.tfvars.prod</code>. And in your CodeBuild environment, choose the file using environment variables.</p>\n<p><strong>What roles to specify in the specific CodeBuild role ?</strong></p>\n<p>Your CodeBuild role needs to have the permissions to create, list, delete and update resources. Basically, in one service, it's almost everything.</p>\n<p><strong>What about the manual process of auto-approve ?</strong></p>\n<p>Usually, you use <code>terraform plan</code> in one CodeBuild environment to show what are the changes in your environment, and after a manual approval, you execute <code>terraform apply -auto-approve</code> in another CodeBuild environment. Check the tutorial above, it shows how to create this.</p>\n", "OwnerUserId": "5337649", "LastActivityDate": "2020-09-15T12:07:43.563", "CommentCount": "10", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "113019981", "PostId": "63901510", "Score": "0", "Text": "There are many tutorials on the internet. Check this as an example: https://medium.com/faun/terraform-deployments-with-aws-codepipeline-342074248843       \n\ngiven tutorial shows how to build ci/cd pipeline using terraform code , what I want to do is I have aws infrastructure locally running using terraform commands , so i want to build a pipeline using aws code pipeline which will perform the commands terraform init ,terraform plan and terraform apply by itself , building and deploying the aws terraform infrastructure will be done by codepipeline itself .", "CreationDate": "2020-09-16T06:20:38.750", "UserId": "13586954", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "113020160", "PostId": "63901510", "Score": "0", "Text": "The entire process of codecommit/github , codebuild , codedeploy ie (codepipeline) is carried out through aws console , I started with github as source , it is working (the github repo includes my terraform code for building aws infrastructure) then for codebuild , I need to specify the env variables and the buildspec.yml file , this is the problem , Iocally I had a terraform.tfvars to do the job but here I need to do it in the buildspec.yml file , I am unaware how to do so ? I also know we need to specify roles in the codebuild project but how to effectively specify them ?", "CreationDate": "2020-09-16T06:29:13.130", "UserId": "13586954", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "113028359", "PostId": "63901510", "Score": "0", "Text": "You don't need to put your variables inside buildspec.yml. Just put them in a file and dynamic change the name of the file as I said in my response. But, if you still want to put them in the buildspec.yml, you can use Terraform variables as environment variables just exporting it with TF_VAR_ prefix.\n\nThere is no easy way to specify what permissions your terraform would use. Check this link below where it shows some suggestions: https://stackoverflow.com/questions/51273227/whats-the-most-efficient-way-to-determine-the-minimum-aws-permissions-necessary", "CreationDate": "2020-09-16T11:22:42.297", "UserId": "5337649", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Just put them in a file and dynamic change the name of the file as I said in my response. ", "keywords": ["change"]}, {"source": "Text", "text": "Check this link below where it shows some suggestions: https://stackoverflow.com/questions/51273227/whats-the-most-efficient-way-to-determine-the-minimum-aws-permissions-necessary", "keywords": ["efficient"]}]}, {"Id": "113028681", "PostId": "63901510", "Score": "0", "Text": "Thanks @Raul .I am passing the terraform variables as environmental variables using the TF_VAR_prefix but am getting this error :\n\nError: Error parsing /codebuild/output/src588537846/src/main.tf: At 2:13: Unknown token: 2:13 IDENT var.region", "CreationDate": "2020-09-16T11:34:03.660", "UserId": "13586954", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "113066462", "PostId": "63901510", "Score": "0", "Text": "if I want to put variables in a file and in use that file in my buildspec.yml to perform `terraform plan` and `terraform apply` then how can i do that ??( ps- my file is already created , i need a way to use that file to perform the automation of terraform commands in buildspec.yml file) .", "CreationDate": "2020-09-17T14:25:43.670", "UserId": "13586954", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "113079732", "PostId": "63901510", "Score": "0", "Text": "Hi @aditmodi, you can use `--var-file` to specify which file you want to use. Check this link here: https://www.terraform.io/docs/commands/apply.html#var-file-foo", "CreationDate": "2020-09-17T23:48:43.090", "UserId": "5337649", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "113082802", "PostId": "63901510", "Score": "0", "Text": "` Error: Error parsing /codebuild/output/src588537846/src/main.tf: At 2:13: Unknown token: 2:13 IDENT var.region` facing this issue ??? @Raul Barreto", "CreationDate": "2020-09-18T04:31:54.487", "UserId": "13586954", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "113090533", "PostId": "63901510", "Score": "0", "Text": "It's an error inside your main.tf. By the error description, I think you're using a variable var.region that is not declared in your variables file.", "CreationDate": "2020-09-18T10:11:58.033", "UserId": "5337649", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "113090728", "PostId": "63901510", "Score": "0", "Text": "`Error refreshing state: AllAccessDisabled: All access to this object has been disabled\n    status code: 403, request id:xxx , host id:xxx ` , solved above error but stuck on this one.", "CreationDate": "2020-09-18T10:20:10.860", "UserId": "13586954", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "113177811", "PostId": "63901510", "Score": "0", "Text": "Specified Roles , Specified Secret Keys using environmental variables , specified two buildspec.yml files ,for plan and apply. everything works , What to do to improve security?", "CreationDate": "2020-09-22T04:59:48.700", "UserId": "13586954", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "230861858", "PostHistoryTypeId": "2", "PostId": "63901510", "RevisionGUID": "e7c0227b-e127-443e-a776-6bb896adc565", "CreationDate": "2020-09-15T12:07:43.563", "UserId": "5337649", "Text": "**- How can I achieve this task ?**\r\n\r\nUse CodeCommit to store your Terraform Code, CodeBuild to run terraform plan, terraform apply, etc and CodePipeline to connect CodeCommit with CodeBuild.\r\n\r\n**What steps to follow ?**\r\n\r\nThere are many tutorials on the internet. Check this as an example:\r\nhttps://medium.com/faun/terraform-deployments-with-aws-codepipeline-342074248843\r\n\r\n**Where to save the terraform.tfvars file ?**\r\n\r\nIdeally, you should create one `terraform.tfvars` for development environment, like `terraform.tfvars.dev`, and another one for production environment, like `terraform.tfvars.prod`. And in your CodeBuild environment, choose the file using environment variables.\r\n\r\n**What roles to specify in the specific CodeBuild role ?**\r\n\r\nYour CodeBuild role needs to have the permissions to create, list, delete and update resources. Basically, in one service, it's almost everything.\r\n\r\n**What about the manual process of auto-approve ?**\r\n\r\nUsually, you use `terraform plan` in one CodeBuild environment to show what are the changes in your environment, and after a manual approval, you execute `terraform apply -auto-approve` in another CodeBuild environment. Check the tutorial above, it shows how to create this.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Usually, you use `terraform plan` in one CodeBuild environment to show what are the changes in your environment, and after a manual approval, you execute `terraform apply -auto-approve` in another CodeBuild environment. ", "keywords": ["change"]}]}], "filtered-sentences": [{"source": "Body", "text": "Usually, you use terraform plan in one CodeBuild environment to show what are the changes in your environment, and after a manual approval, you execute terraform apply -auto-approve in another CodeBuild environment. ", "keywords": ["change"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "the aws infrastructure runs locally using the terraform commands as shown below: The terraform.tfvars contains the variables like region , instance type , access key etc . ", "keywords": ["instance"]}]}