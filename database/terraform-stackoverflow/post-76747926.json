{"Id": "76747926", "PostTypeId": "1", "AcceptedAnswerId": "76749835", "CreationDate": "2023-07-23T11:10:54.117", "Score": "0", "ViewCount": "63", "Body": "<p>Moving to terraform cloud from my local receiving the below message. My codebase is in Gitlab. I presume its supported to reference the file just like I did locally?</p>\n<blockquote>\n<p>on ../modules/instances/instance.tf line 32, in resource &quot;aws_instance&quot; &quot;server&quot;:\nuser_data       = file(&quot;user-data-server.sh&quot;)\nwhile calling file(path)\nInvalid value for &quot;path&quot; parameter: no file exists at &quot;user-data-server.sh&quot;; this function works only with files that are distributed as part of the configuration source code, so if this file will be created by a resource in this configuration you must instead obtain this result from an attribute of that resource.</p>\n</blockquote>\n<p>My terraform file code references file as:</p>\n<pre><code>resource &quot;aws_instance&quot; &quot;server&quot; {\n  ami           = var.aws_ami_id\n  subnet_id     = &quot;${element(var.public_subnet.*.id, 3)}&quot;\n  key_name      = var.ec2_key_pair\n  instance_type = &quot;t2.micro&quot;\n  vpc_security_group_ids = [var.aws_security_group.main-sg.id]\n  associate_public_ip_address = true\n  user_data       = file(&quot;user-data-server.sh&quot;)\n\n  tags = {\n    Name = &quot;Server&quot;\n  }\n}\n</code></pre>\n<p>The file user-data-server.sh is in the same directory as this terraform script.</p>\n", "OwnerUserId": "6331750", "LastEditorUserId": "8343484", "LastEditDate": "2023-07-23T18:48:44.050", "LastActivityDate": "2023-07-23T18:48:44.050", "Title": "Terraform Cloud - Invalid value for \"path\" parameter: no file exists", "Tags": "<amazon-web-services><terraform><terraform-provider-aws>", "AnswerCount": "1", "CommentCount": "5", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "135306412", "PostId": "76747926", "Score": "0", "Text": "How about `user_data = file(\"${path.root}/user-data-server.sh\")`?", "CreationDate": "2023-07-23T14:56:08.737", "UserId": "8343484", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135306473", "PostId": "76747926", "Score": "0", "Text": "Pretty much the same:\nwhile calling file(path)\npath.root is \".\"\nInvalid value for \"path\" parameter: no file exists at \"./user-data-server.sh\"; this function works only with files that are distributed as part of the configuration source code, so if this file will be created by a resource in this configuration you must instead obtain this result from an attribute of that resource.", "CreationDate": "2023-07-23T15:04:40.097", "UserId": "6331750", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135307478", "PostId": "76747926", "Score": "1", "Text": "Ah, ok, so I didn't pay attention it was in the module. How about `user_data = file(\"${path.module}/user-data-server.sh\")`?", "CreationDate": "2023-07-23T17:11:25.820", "UserId": "8343484", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Ah, ok, so I didn't pay attention it was in the module. ", "keywords": ["pay"]}]}, {"Id": "135307684", "PostId": "76747926", "Score": "0", "Text": "@MarkoE You are spot on, thanks! Working now as expected, I did originally try path.root but didn't think about trying path.module. Thanks again!", "CreationDate": "2023-07-23T17:41:13.800", "UserId": "6331750", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135307709", "PostId": "76747926", "Score": "0", "Text": "@MarkoE Can you post this as an answer so I can accept?", "CreationDate": "2023-07-23T17:44:00.573", "UserId": "6331750", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "295746915", "PostHistoryTypeId": "2", "PostId": "76747926", "RevisionGUID": "6393d9a8-04a2-466d-ad0b-1e298930342d", "CreationDate": "2023-07-23T11:10:54.117", "UserId": "6331750", "Text": "Moving to terraform cloud from my local receiving the below message. My codebase is in Gitlab. I presume its supported to reference the file just like I did locally?\r\n\r\n>\r\non ../modules/instances/instance.tf line 32, in resource \"aws_instance\" \"server\":\r\nuser_data       = file(\"user-data-server.sh\")\r\nwhile calling file(path)\r\nInvalid value for \"path\" parameter: no file exists at \"user-data-server.sh\"; this function works only with files that are distributed as part of the configuration source code, so if this file will be created by a resource in this configuration you must instead obtain this result from an attribute of that resource.\r\n>\r\n\r\nMy terraform file code references file as:\r\n\r\n```\r\nresource \"aws_instance\" \"server\" {\r\nami           = var.aws_ami_id\r\nsubnet_id     = \"${element(var.public_subnet.*.id, 3)}\"\r\nkey_name      = var.ec2_key_pair\r\ninstance_type = \"t2.micro\"\r\nvpc_security_group_ids = [var.aws_security_group.main-sg.id]\r\nassociate_public_ip_address = true\r\nuser_data       = file(\"user-data-server.sh\")\r\ntags = {\r\n    Name = \"Server\"\r\n  }\r\n}\r\n```\r\n\r\nThe file user-data-mysql.sh is in the same directory as this terraform script. \r\n\r\nThanks", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I presume its supported to reference the file just like I did locally? > on ../modules/instances/instance.tf line 32, in resource \"aws_instance\" \"server\": user_data = file(\"user-data-server.sh\") while calling file(path) Invalid value for \"path\" parameter: no file exists at \"user-data-server.sh\"; this function works only with files that are distributed as part of the configuration source code, so if this file will be created by a resource in this configuration you must instead obtain this result from an attribute of that resource. ", "keywords": ["instance"]}]}, {"Id": "295746917", "PostHistoryTypeId": "1", "PostId": "76747926", "RevisionGUID": "6393d9a8-04a2-466d-ad0b-1e298930342d", "CreationDate": "2023-07-23T11:10:54.117", "UserId": "6331750", "Text": "Terraform Cloud - Invalid value for \"path\" parameter: no file exists", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "295746918", "PostHistoryTypeId": "3", "PostId": "76747926", "RevisionGUID": "6393d9a8-04a2-466d-ad0b-1e298930342d", "CreationDate": "2023-07-23T11:10:54.117", "UserId": "6331750", "Text": "<terraform><terraform-provider-aws>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "295747503", "PostHistoryTypeId": "5", "PostId": "76747926", "RevisionGUID": "1a7af1aa-1306-4acf-a81a-abf08acee575", "CreationDate": "2023-07-23T11:42:46.683", "UserId": "6331750", "Comment": "added 1 character in body", "Text": "Moving to terraform cloud from my local receiving the below message. My codebase is in Gitlab. I presume its supported to reference the file just like I did locally?\r\n\r\n>\r\non ../modules/instances/instance.tf line 32, in resource \"aws_instance\" \"server\":\r\nuser_data       = file(\"user-data-server.sh\")\r\nwhile calling file(path)\r\nInvalid value for \"path\" parameter: no file exists at \"user-data-server.sh\"; this function works only with files that are distributed as part of the configuration source code, so if this file will be created by a resource in this configuration you must instead obtain this result from an attribute of that resource.\r\n>\r\n\r\nMy terraform file code references file as:\r\n\r\n```\r\nresource \"aws_instance\" \"server\" {\r\nami           = var.aws_ami_id\r\nsubnet_id     = \"${element(var.public_subnet.*.id, 3)}\"\r\nkey_name      = var.ec2_key_pair\r\ninstance_type = \"t2.micro\"\r\nvpc_security_group_ids = [var.aws_security_group.main-sg.id]\r\nassociate_public_ip_address = true\r\nuser_data       = file(\"user-data-server.sh\")\r\ntags = {\r\n    Name = \"Server\"\r\n  }\r\n}\r\n```\r\n\r\nThe file user-data-server.sh is in the same directory as this terraform script. \r\n\r\nThanks", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I presume its supported to reference the file just like I did locally? > on ../modules/instances/instance.tf line 32, in resource \"aws_instance\" \"server\": user_data = file(\"user-data-server.sh\") while calling file(path) Invalid value for \"path\" parameter: no file exists at \"user-data-server.sh\"; this function works only with files that are distributed as part of the configuration source code, so if this file will be created by a resource in this configuration you must instead obtain this result from an attribute of that resource. ", "keywords": ["instance"]}]}, {"Id": "295757850", "PostHistoryTypeId": "5", "PostId": "76747926", "RevisionGUID": "b27d90b1-b18c-451a-85d7-d252b04f43b5", "CreationDate": "2023-07-23T18:48:44.050", "UserId": "8343484", "Comment": "added 8 characters in body; edited tags", "Text": "Moving to terraform cloud from my local receiving the below message. My codebase is in Gitlab. I presume its supported to reference the file just like I did locally?\r\n\r\n> on ../modules/instances/instance.tf line 32, in resource \"aws_instance\" \"server\":\r\nuser_data       = file(\"user-data-server.sh\")\r\nwhile calling file(path)\r\nInvalid value for \"path\" parameter: no file exists at \"user-data-server.sh\"; this function works only with files that are distributed as part of the configuration source code, so if this file will be created by a resource in this configuration you must instead obtain this result from an attribute of that resource.\r\n\r\n\r\nMy terraform file code references file as:\r\n\r\n```hcl\r\nresource \"aws_instance\" \"server\" {\r\n  ami           = var.aws_ami_id\r\n  subnet_id     = \"${element(var.public_subnet.*.id, 3)}\"\r\n  key_name      = var.ec2_key_pair\r\n  instance_type = \"t2.micro\"\r\n  vpc_security_group_ids = [var.aws_security_group.main-sg.id]\r\n  associate_public_ip_address = true\r\n  user_data       = file(\"user-data-server.sh\")\r\n\r\n  tags = {\r\n    Name = \"Server\"\r\n  }\r\n}\r\n```\r\n\r\nThe file user-data-server.sh is in the same directory as this terraform script.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I presume its supported to reference the file just like I did locally? > on ../modules/instances/instance.tf line 32, in resource \"aws_instance\" \"server\": user_data = file(\"user-data-server.sh\") while calling file(path) Invalid value for \"path\" parameter: no file exists at \"user-data-server.sh\"; this function works only with files that are distributed as part of the configuration source code, so if this file will be created by a resource in this configuration you must instead obtain this result from an attribute of that resource. ", "keywords": ["instance"]}]}, {"Id": "295757851", "PostHistoryTypeId": "6", "PostId": "76747926", "RevisionGUID": "b27d90b1-b18c-451a-85d7-d252b04f43b5", "CreationDate": "2023-07-23T18:48:44.050", "UserId": "8343484", "Comment": "added 8 characters in body; edited tags", "Text": "<amazon-web-services><terraform><terraform-provider-aws>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "76749835", "PostTypeId": "2", "ParentId": "76747926", "CreationDate": "2023-07-23T18:48:00.617", "Score": "1", "Body": "<p>Based on the error that is displayed, terraform cannot find the script at the location specified. Since a module is used to create the EC2 instance, and the path to the file specified is as if it were inside of the same directory where the root module is stored, that has caused the error. To help with that, terraform has <a href=\"https://developer.hashicorp.com/terraform/language/expressions/references#filesystem-and-workspace-info\" rel=\"nofollow noreferrer\">several built-in options</a>, one of which is <code>path.module</code>:</p>\n<blockquote>\n<p><code>path.module</code> is the filesystem path of the module where the expression is placed. We do not recommend using <code>path.module</code> in write operations because it can produce different behavior depending on whether you use remote or local module sources. Multiple invocations of local modules use the same source directory, overwriting the data in <code>path.module</code> during each call. This can lead to race conditions and unexpected results.</p>\n</blockquote>\n<p>To fix the error from the question, this should help:</p>\n<pre><code>resource &quot;aws_instance&quot; &quot;server&quot; {\n  ami           = var.aws_ami_id\n  subnet_id     = &quot;${element(var.public_subnet.*.id, 3)}&quot;\n  key_name      = var.ec2_key_pair\n  instance_type = &quot;t2.micro&quot;\n  vpc_security_group_ids = [var.aws_security_group.main-sg.id]\n  associate_public_ip_address = true\n  user_data       = file(&quot;${path.module}/user-data-server.sh&quot;)\n  tags = {\n    Name = &quot;Server&quot;\n  }\n}\n</code></pre>\n", "OwnerUserId": "8343484", "LastActivityDate": "2023-07-23T18:48:00.617", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "295757833", "PostHistoryTypeId": "2", "PostId": "76749835", "RevisionGUID": "118d06aa-9439-44b0-be1b-739a0c6e962d", "CreationDate": "2023-07-23T18:48:00.617", "UserId": "8343484", "Text": "Based on the error that is displayed, terraform cannot find the script at the location specified. Since a module is used to create the EC2 instance, and the path to the file specified is as if it were inside of the same directory where the root module is stored, that has caused the error. To help with that, terraform has [several built-in options][1], one of which is `path.module`:\r\n\r\n> `path.module` is the filesystem path of the module where the expression is placed. We do not recommend using `path.module` in write operations because it can produce different behavior depending on whether you use remote or local module sources. Multiple invocations of local modules use the same source directory, overwriting the data in `path.module` during each call. This can lead to race conditions and unexpected results.\r\n\r\nTo fix the error from the question, this should help:\r\n\r\n```hcl\r\nresource \"aws_instance\" \"server\" {\r\n  ami           = var.aws_ami_id\r\n  subnet_id     = \"${element(var.public_subnet.*.id, 3)}\"\r\n  key_name      = var.ec2_key_pair\r\n  instance_type = \"t2.micro\"\r\n  vpc_security_group_ids = [var.aws_security_group.main-sg.id]\r\n  associate_public_ip_address = true\r\n  user_data       = file(\"${path.module}/user-data-server.sh\")\r\n  tags = {\r\n    Name = \"Server\"\r\n  }\r\n}\r\n```\r\n\r\n  [1]: https://developer.hashicorp.com/terraform/language/expressions/references#filesystem-and-workspace-info", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Since a module is used to create the EC2 instance, and the path to the file specified is as if it were inside of the same directory where the root module is stored, that has caused the error. ", "keywords": ["instance"]}]}], "filtered-sentences": [{"source": "Body", "text": "Since a module is used to create the EC2 instance, and the path to the file specified is as if it were inside of the same directory where the root module is stored, that has caused the error. ", "keywords": ["instance"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I presume its supported to reference the file just like I did locally? on ../modules/instances/instance.tf line 32, in resource \"aws_instance\" \"server\": user_data = file(\"user-data-server.sh\") while calling file(path) Invalid value for \"path\" parameter: no file exists at \"user-data-server.sh\"; this function works only with files that are distributed as part of the configuration source code, so if this file will be created by a resource in this configuration you must instead obtain this result from an attribute of that resource. ", "keywords": ["instance"]}]}