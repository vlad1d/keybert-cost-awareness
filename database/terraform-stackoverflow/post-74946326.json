{"Id": "74946326", "PostTypeId": "1", "CreationDate": "2022-12-29T00:58:26.520", "Score": "0", "ViewCount": "80", "Body": "<p>I am trying to create sns billing alarm using cloudwatch when the cost reaches a particular threshold, I can do this manually but I'm trying to use terraform. Hello, I'm a NEWBIE to terraform, when I create this using terraform it's been created in the user account, I tried using the root Access keys but it continues to create them in my user account. Now, i'm not sure maybe i'm assuming wrong, when i create the billing alarm on the management console i do it using root account.\nHere is my code:</p>\n<pre><code>provider &quot;aws&quot; {\n  shared_config_files      = [&quot;/mnt/c/Users/{user}/.aws/config&quot;]\n  shared_credentials_files = [&quot;/mnt/c/Users/{user}/.aws/credentials&quot;]\n  profile                  = &quot;root&quot;\n  #  region  = &quot;us-east-2&quot;\n}\n</code></pre>\n<pre><code>module &quot;sns_topic&quot; {\n  source = &quot;/mnt/c/terraform-ansible-automate/sns&quot;\n\n  aws_account_id = var.aws_account_id\n  aws_env        = var.aws_env\n  email          = var.email\n}\n</code></pre>\n<pre><code>module &quot;cloudwatch&quot; {\n  source = &quot;/mnt/c/terraform-ansible-automate/cloudwatch&quot;\n  #  source = &quot;/cloudwatch&quot;\n\n  monthly_billing_threshold = var.monthly_billing_threshold\n  sns_topic_arn             = [module.sns_topic.sns_cost_alert_topic_arn]\n  aws_account_id            = var.aws_account_id\n  aws_env                   = var.aws_env\n}\n\n</code></pre>\n", "OwnerUserId": "12358220", "LastEditorUserId": "2597174", "LastEditDate": "2022-12-29T05:33:29.773", "LastActivityDate": "2023-01-02T22:49:44.567", "Title": "Using my user account to create sns and cloudwatch resources in root account using terraform", "Tags": "<amazon-web-services><terraform><terraform-provider-aws>", "AnswerCount": "1", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "132260536", "PostId": "74946326", "Score": "0", "Text": "What is the issue here? Are there any errors?", "CreationDate": "2022-12-29T06:51:37.613", "UserId": "8343484", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "285139847", "PostHistoryTypeId": "2", "PostId": "74946326", "RevisionGUID": "9e35f658-8c29-4fa5-b0b1-81b525cee78a", "CreationDate": "2022-12-29T00:58:26.520", "UserId": "12358220", "Text": "I am trying to create sns billing alarm using cloudwatch when the cost reaches a particular threshold, I can do this manually but I'm trying to use terraform. Hello, I'm a NEWBIE to terraform, when I create this using terraform it's been created in the user account, I tried using the root Access keys but it continues to create them in my user account. Now, i'm not sure maybe i'm assuming wrong, when i create the billing alarm on the management console i do it using root account.\r\nHere is my code:\r\n```\r\nprovider \"aws\" {\r\n  shared_config_files      = [\"/ mnt /c/Users/{user}/.aws/config\"]\r\n  shared_credentials_files = [\"/ mnt /c/Users/{user}/.aws/credentials\"]\r\n  profile                  = \"root\"\r\n  #  region  = \"us-east-2\"\r\n}\r\n```\r\n\r\n```\r\nodule \"sns_topic\" {\r\n  source = \"/ mnt /c/terraform-ansible-automate/sns\"\r\n\r\n  aws_account_id = var.aws_account_id\r\n  aws_env        = var.aws_env\r\n  email          = var.email\r\n\r\n\r\n}\r\n```\r\n\r\n```\r\nmodule \"cloudwatch\" {\r\n  source = \"/ mnt /c/terraform-ansible-automate/cloudwatch\"\r\n  #  source = \"/cloudwatch\"\r\n\r\n  monthly_billing_threshold = var.monthly_billing_threshold\r\n  sns_topic_arn             = [module.sns_topic.sns_cost_alert_topic_arn]\r\n  aws_account_id            = var.aws_account_id\r\n  aws_env                   = var.aws_env\r\n}\r\n\r\n```\r\n\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I am trying to create sns billing alarm using cloudwatch when the cost reaches a particular threshold, I can do this manually but I'm trying to use terraform. ", "keywords": ["bill", "cost"]}, {"source": "Text", "text": "Now, i'm not sure maybe i'm assuming wrong, when i create the billing alarm on the management console i do it using root account. ", "keywords": ["bill"]}, {"source": "Text", "text": "Here is my code: ``` provider \"aws\" { shared_config_files = [\"/ mnt /c/Users/{user}/.aws/config\"] shared_credentials_files = [\"/ mnt /c/Users/{user}/.aws/credentials\"] profile = \"root\" # region = \"us-east-2\" } ``` ``` odule \"sns_topic\" { source = \"/ mnt /c/terraform-ansible-automate/sns\" aws_account_id = var.aws_account_id aws_env = var.aws_env email = var.email } ``` ``` module \"cloudwatch\" { source = \"/ mnt /c/terraform-ansible-automate/cloudwatch\" # source = \"/cloudwatch\" monthly_billing_threshold = var.monthly_billing_threshold sns_topic_arn = [module.sns_topic.sns_cost_alert_topic_arn] aws_account_id = var.aws_account_id aws_env = var.aws_env ", "keywords": ["provider"]}]}, {"Id": "285139849", "PostHistoryTypeId": "1", "PostId": "74946326", "RevisionGUID": "9e35f658-8c29-4fa5-b0b1-81b525cee78a", "CreationDate": "2022-12-29T00:58:26.520", "UserId": "12358220", "Text": "Using my user account to create sns and cloudwatch resources in root account using terraform", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "285139850", "PostHistoryTypeId": "3", "PostId": "74946326", "RevisionGUID": "9e35f658-8c29-4fa5-b0b1-81b525cee78a", "CreationDate": "2022-12-29T00:58:26.520", "UserId": "12358220", "Text": "<amazon-web-services><terraform><terraform-provider-aws>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "285147859", "PostHistoryTypeId": "5", "PostId": "74946326", "RevisionGUID": "e6fb52c3-44b0-4dc3-9250-9eaa67d18317", "CreationDate": "2022-12-29T05:33:29.773", "UserId": "2597174", "Comment": "removing useless space", "Text": "I am trying to create sns billing alarm using cloudwatch when the cost reaches a particular threshold, I can do this manually but I'm trying to use terraform. Hello, I'm a NEWBIE to terraform, when I create this using terraform it's been created in the user account, I tried using the root Access keys but it continues to create them in my user account. Now, i'm not sure maybe i'm assuming wrong, when i create the billing alarm on the management console i do it using root account.\r\nHere is my code:\r\n```\r\nprovider \"aws\" {\r\n  shared_config_files      = [\"/mnt/c/Users/{user}/.aws/config\"]\r\n  shared_credentials_files = [\"/mnt/c/Users/{user}/.aws/credentials\"]\r\n  profile                  = \"root\"\r\n  #  region  = \"us-east-2\"\r\n}\r\n```\r\n\r\n```\r\nmodule \"sns_topic\" {\r\n  source = \"/mnt/c/terraform-ansible-automate/sns\"\r\n\r\n  aws_account_id = var.aws_account_id\r\n  aws_env        = var.aws_env\r\n  email          = var.email\r\n}\r\n```\r\n\r\n```\r\nmodule \"cloudwatch\" {\r\n  source = \"/mnt/c/terraform-ansible-automate/cloudwatch\"\r\n  #  source = \"/cloudwatch\"\r\n\r\n  monthly_billing_threshold = var.monthly_billing_threshold\r\n  sns_topic_arn             = [module.sns_topic.sns_cost_alert_topic_arn]\r\n  aws_account_id            = var.aws_account_id\r\n  aws_env                   = var.aws_env\r\n}\r\n\r\n```\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I am trying to create sns billing alarm using cloudwatch when the cost reaches a particular threshold, I can do this manually but I'm trying to use terraform. ", "keywords": ["bill", "cost"]}, {"source": "Text", "text": "Now, i'm not sure maybe i'm assuming wrong, when i create the billing alarm on the management console i do it using root account. ", "keywords": ["bill"]}, {"source": "Text", "text": "Here is my code: ``` provider \"aws\" { shared_config_files = [\"/mnt/c/Users/{user}/.aws/config\"] shared_credentials_files = [\"/mnt/c/Users/{user}/.aws/credentials\"] profile = \"root\" # region = \"us-east-2\" } ``` ``` module \"sns_topic\" { source = \"/mnt/c/terraform-ansible-automate/sns\" aws_account_id = var.aws_account_id aws_env = var.aws_env email = var.email } ``` ``` module \"cloudwatch\" { source = \"/mnt/c/terraform-ansible-automate/cloudwatch\" # source = \"/cloudwatch\" monthly_billing_threshold = var.monthly_billing_threshold sns_topic_arn = [module.sns_topic.sns_cost_alert_topic_arn] aws_account_id = var.aws_account_id aws_env = var.aws_env } ```", "keywords": ["provider"]}]}, {"Id": "285147860", "PostHistoryTypeId": "24", "PostId": "74946326", "RevisionGUID": "e6fb52c3-44b0-4dc3-9250-9eaa67d18317", "CreationDate": "2022-12-29T05:33:29.773", "Comment": "Proposed by 2597174 approved by 12358220 edit id of 5459772", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "74957376", "PostTypeId": "2", "ParentId": "74946326", "CreationDate": "2022-12-30T01:14:43.477", "Score": "0", "Body": "<p>Could you please verify in which account are you authenticated while running your terraform code?</p>\n<p>Use the below command:</p>\n<pre class=\"lang-bash prettyprint-override\"><code>## It assumes that you have aws CLI pre-installed.\naws sts get-caller-identity\n</code></pre>\n<p>If you are already logged in the root account (desired account) it should work normally but if you are in any other account (user account in your case).</p>\n<p>It could be because of the IAM user/role being used for the terraform authentication being in that account.\nAnd then you have two choices in general.</p>\n<ul>\n<li>Either assume a role in the desired account from the current signed/logged-in user. The role must have a trust relationship(policy) between your logged-in User. (your User should be allowed to assume that role from another account). The role being assumed must also have the required permissions(policies attached) on the desired account to make the required changes.</li>\n</ul>\n<p>Please look into Hashicorp Documentation on <a href=\"https://developer.hashicorp.com/terraform/tutorials/aws/aws-assumerole#provision-resource-across-aws-accounts\" rel=\"nofollow noreferrer\">provision-resource-across-aws-accounts</a></p>\n<p>From the code perspective, you can refer to <a href=\"https://github.com/ishuar/stackoverflow-terraform/tree/main/aws/user_with_programmatic_access_assume_role/user_assuming_role_with_policies_attached\" rel=\"nofollow noreferrer\">https://github.com/ishuar/stackoverflow-terraform/tree/main/aws/user_with_programmatic_access_assume_role/user_assuming_role_with_policies_attached</a> as an example on How to Use IAM User to Assume Role with Required Access.</p>\n<blockquote>\n<p>This is not a cross-account example but it is similar only need to adjust the role_arn in the provider block of <a href=\"https://github.com/ishuar/stackoverflow-terraform/blob/main/aws/user_with_programmatic_access_assume_role/user_assuming_role_with_policies_attached/instance_and_sg_creation/providers.tf\" rel=\"nofollow noreferrer\">instance_and_sg_creation</a></p>\n</blockquote>\n<ul>\n<li>Use an IAM user that already exists in the desired account with having required permissions. Use the secrets for that user in your terraform authentication and make the changes. This is like any normal terraform code execution.</li>\n</ul>\n", "OwnerUserId": "15808105", "LastEditorUserId": "2579738", "LastEditDate": "2023-01-02T22:49:44.567", "LastActivityDate": "2023-01-02T22:49:44.567", "CommentCount": "3", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "132328274", "PostId": "74957376", "Score": "0", "Text": "After using the '''aws sts get-caller-identity''' i got this: '''{\n    \"UserId\": \"AIDA2BN4Q4WLXEHAXF3IF\",\n    \"Account\": \"{{account-id}}\",\n    \"Arn\": \"arn:aws:iam::{{account-id}}:user/Kunle\"\n}''', it's also important to let you know the user already has Admin role attached to it, so I'm confused about what I'm missing.", "CreationDate": "2023-01-02T19:21:05.077", "UserId": "12358220", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "132329246", "PostId": "74957376", "Score": "0", "Text": "is the account which you got in the results is the same account ID where you want to deploy these resources? Also, the signed user has permission to assume a role in that account?", "CreationDate": "2023-01-02T20:27:48.000", "UserId": "15808105", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "132376825", "PostId": "74957376", "Score": "0", "Text": "No, it's not, there is the ROOT account and there is the ADMIN account \"KUNLE\". I created the SNS topic and Cloudwatch first using the ADMIN user Kunle's credentials, when the SNS topic was created, it did it in the ADMIN user account but I wanted it in the ROOT user account, I changed the credentials to the ROOT user account and still got the SNS topic and Cloudwatch created in the ADMIN users account.", "CreationDate": "2023-01-05T04:11:41.350", "UserId": "12358220", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I created the SNS topic and Cloudwatch first using the ADMIN user Kunle's credentials, when the SNS topic was created, it did it in the ADMIN user account but I wanted it in the ROOT user account, I changed the credentials to the ROOT user account and still got the SNS topic and Cloudwatch created in the ADMIN users account.", "keywords": ["change"]}]}], "history": [{"Id": "285202314", "PostHistoryTypeId": "2", "PostId": "74957376", "RevisionGUID": "abd55773-1073-4702-a841-42b08ae87a6a", "CreationDate": "2022-12-30T01:14:43.477", "UserId": "15808105", "Text": "Could you please verify in which account are you authenticated while running your terraform code?\r\n\r\nUse the below command:\r\n```bash\r\n## It assumes that you have aws CLI pre-installed.\r\naws sts get-caller-identity\r\n```\r\n\r\nIf you are already logged in the root account (desired account) it should work normally but if you are in any other account (user account in your case).\r\n\r\nIt could be because of the IAM user/role being used for the terraform authentication being in that account. \r\nAnd then you have two choices in general.\r\n\r\n - Either assume a role in the desired account from the current signed/logged-in user. The role must have a trust relationship(policy) between your logged-in User. (your User should be allowed to assume that role from another account). The role being assumed must also have the required permissions(policies attached) on the desired account to make the required changes.\r\n\r\nPlease look into Hashicorp Documentation on [provision-resource-across-aws-accounts](https://developer.hashicorp.com/terraform/tutorials/aws/aws-assumerole#provision-resource-across-aws-accounts)\r\n\r\nFrom the code perspective, you can refer to https://github.com/ishuar/stackoverflow-terraform/tree/main/aws/user_with_programmatic_access_assume_role/user_assuming_role_with_policies_attached as an example on How to Use IAM User to Assume Role with Required Access.\r\n> This is not a cross-account example but it is similar only need to adjust the role_arn in the provider block of [instance_and_sg_creation](https://github.com/ishuar/stackoverflow-terraform/blob/main/aws/user_with_programmatic_access_assume_role/user_assuming_role_with_policies_attached/instance_and_sg_creation/providers.tf)\r\n\r\n\r\n - Use an IAM user that already exists in the desired account with having required permissions. Use the secrets for that user in your terraform authentication and make the changes. This is like any normal terraform code execution.\r\n\r\nI hope the info helps.\r\n\r\n\r\n**Note:** Please add some more details and error messages and then may be we can help with the practical code snippets which might work for you.\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "The role must have a trust relationship(policy) between your logged-in User. ", "keywords": ["policy"]}, {"source": "Text", "text": "The role being assumed must also have the required permissions(policies attached) on the desired account to make the required changes. ", "keywords": ["change"]}, {"source": "Text", "text": "> This is not a cross-account example but it is similar only need to adjust the role_arn in the provider block of [instance_and_sg_creation](https://github.com/ishuar/stackoverflow-terraform/blob/main/aws/user_with_programmatic_access_assume_role/user_assuming_role_with_policies_attached/instance_and_sg_creation/providers.tf) - Use an IAM user that already exists in the desired account with having required permissions. ", "keywords": ["provider"]}, {"source": "Text", "text": "Use the secrets for that user in your terraform authentication and make the changes. ", "keywords": ["change"]}]}, {"Id": "285385547", "PostHistoryTypeId": "5", "PostId": "74957376", "RevisionGUID": "d80ea809-6942-4f98-b6b0-504bd363acc9", "CreationDate": "2023-01-02T22:49:44.567", "UserId": "2579738", "Comment": "deleted 176 characters in body", "Text": "Could you please verify in which account are you authenticated while running your terraform code?\r\n\r\nUse the below command:\r\n```bash\r\n## It assumes that you have aws CLI pre-installed.\r\naws sts get-caller-identity\r\n```\r\n\r\nIf you are already logged in the root account (desired account) it should work normally but if you are in any other account (user account in your case).\r\n\r\nIt could be because of the IAM user/role being used for the terraform authentication being in that account. \r\nAnd then you have two choices in general.\r\n\r\n - Either assume a role in the desired account from the current signed/logged-in user. The role must have a trust relationship(policy) between your logged-in User. (your User should be allowed to assume that role from another account). The role being assumed must also have the required permissions(policies attached) on the desired account to make the required changes.\r\n\r\nPlease look into Hashicorp Documentation on [provision-resource-across-aws-accounts](https://developer.hashicorp.com/terraform/tutorials/aws/aws-assumerole#provision-resource-across-aws-accounts)\r\n\r\nFrom the code perspective, you can refer to https://github.com/ishuar/stackoverflow-terraform/tree/main/aws/user_with_programmatic_access_assume_role/user_assuming_role_with_policies_attached as an example on How to Use IAM User to Assume Role with Required Access.\r\n> This is not a cross-account example but it is similar only need to adjust the role_arn in the provider block of [instance_and_sg_creation](https://github.com/ishuar/stackoverflow-terraform/blob/main/aws/user_with_programmatic_access_assume_role/user_assuming_role_with_policies_attached/instance_and_sg_creation/providers.tf)\r\n\r\n\r\n - Use an IAM user that already exists in the desired account with having required permissions. Use the secrets for that user in your terraform authentication and make the changes. This is like any normal terraform code execution.\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "The role must have a trust relationship(policy) between your logged-in User. ", "keywords": ["policy"]}, {"source": "Text", "text": "The role being assumed must also have the required permissions(policies attached) on the desired account to make the required changes. ", "keywords": ["change"]}, {"source": "Text", "text": "> This is not a cross-account example but it is similar only need to adjust the role_arn in the provider block of [instance_and_sg_creation](https://github.com/ishuar/stackoverflow-terraform/blob/main/aws/user_with_programmatic_access_assume_role/user_assuming_role_with_policies_attached/instance_and_sg_creation/providers.tf) - Use an IAM user that already exists in the desired account with having required permissions. ", "keywords": ["provider"]}, {"source": "Text", "text": "Use the secrets for that user in your terraform authentication and make the changes. ", "keywords": ["change"]}]}], "filtered-sentences": [{"source": "Body", "text": "The role must have a trust relationship(policy) between your logged-in User. ", "keywords": ["policy"]}, {"source": "Body", "text": "The role being assumed must also have the required permissions(policies attached) on the desired account to make the required changes. ", "keywords": ["change"]}, {"source": "Body", "text": "This is not a cross-account example but it is similar only need to adjust the role_arn in the provider block of instance_and_sg_creation ", "keywords": ["provider"]}, {"source": "Body", "text": "Use the secrets for that user in your terraform authentication and make the changes. ", "keywords": ["change"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I am trying to create sns billing alarm using cloudwatch when the cost reaches a particular threshold, I can do this manually but I'm trying to use terraform. ", "keywords": ["bill", "cost"]}, {"source": "Body", "text": "Now, i'm not sure maybe i'm assuming wrong, when i create the billing alarm on the management console i do it using root account. ", "keywords": ["bill"]}]}