{"Id": "73199811", "PostTypeId": "1", "AcceptedAnswerId": "73200499", "CreationDate": "2022-08-01T21:28:57.300", "Score": "-1", "ViewCount": "299", "Body": "<p>I'd like to create a duplicate of my production environment to use as a development environment in Google Cloud with Terraform. It will include a kubernetes cluster, cloudSQL, cloud storage, etc.</p>\n<p>I think it would be super helpful to have the dev env and prod env in separate <a href=\"https://cloud.google.com/storage/docs/projects\" rel=\"nofollow noreferrer\">Google Cloud Projects</a>. This way I would have more clarity with billing and have more clear separation of concerns. However, <a href=\"https://cloud.google.com/architecture/managing-infrastructure-as-code\" rel=\"nofollow noreferrer\">Google has a tutorial</a> that instead creates two clusters within the same project (Two VPC's,  etc.).</p>\n<p>Is it better to use a single project to host two different environments and will trying to use 2 separate projects cause any problems when trying to build this with Terraform?</p>\n<p>I would be super appreciative for any advice or resources that would point me in the correct direction.</p>\n<p>I'd also love any pointers from the Google cloud professionals out there regarding the pros and cons of hosting two separate environments on two google cloud projects, as opposed to forcing them both on one.</p>\n<p>Thanks in advance!</p>\n", "OwnerUserId": "2970710", "LastActivityDate": "2022-08-01T23:27:54.493", "Title": "Using terraform to create development & production environments in two different google projects", "Tags": "<google-cloud-platform><terraform><development-environment><production-environment>", "AnswerCount": "1", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "275398796", "PostHistoryTypeId": "2", "PostId": "73199811", "RevisionGUID": "6debe400-b6ee-490c-b2c4-b789bab0eb24", "CreationDate": "2022-08-01T21:28:57.300", "UserId": "2970710", "Text": "I'd like to create a duplicate of my production environment to use as a development environment in Google Cloud with Terraform. It will include a kubernetes cluster, cloudSQL, cloud storage, etc.\r\n\r\nI think it would be super helpful to have the dev env and prod env in separate [Google Cloud Projects](https://cloud.google.com/storage/docs/projects). This way I would have more clarity with billing and have more clear separation of concerns. However, [Google has a tutorial](https://cloud.google.com/architecture/managing-infrastructure-as-code) that instead creates two clusters within the same project (Two VPC's,  etc.).\r\n\r\nIs it better to use a single project to host two different environments and will trying to use 2 separate projects cause any problems when trying to build this with Terraform?\r\n\r\nI would be super appreciative for any advice or resources that would point me in the correct direction.\r\n\r\nI'd also love any pointers from the Google cloud professionals out there regarding the pros and cons of hosting two separate environments on two google cloud projects, as opposed to forcing them both on one.\r\n\r\nThanks in advance!", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "It will include a kubernetes cluster, cloudSQL, cloud storage, etc. ", "keywords": ["storage", "cluster"]}, {"source": "Text", "text": "I think it would be super helpful to have the dev env and prod env in separate [Google Cloud Projects](https://cloud.google.com/storage/docs/projects). ", "keywords": ["storage"]}, {"source": "Text", "text": "This way I would have more clarity with billing and have more clear separation of concerns. ", "keywords": ["bill"]}]}, {"Id": "275398798", "PostHistoryTypeId": "1", "PostId": "73199811", "RevisionGUID": "6debe400-b6ee-490c-b2c4-b789bab0eb24", "CreationDate": "2022-08-01T21:28:57.300", "UserId": "2970710", "Text": "Using terraform to create development & production environments in two different google projects", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "275398799", "PostHistoryTypeId": "3", "PostId": "73199811", "RevisionGUID": "6debe400-b6ee-490c-b2c4-b789bab0eb24", "CreationDate": "2022-08-01T21:28:57.300", "UserId": "2970710", "Text": "<google-cloud-platform><terraform><development-environment><production-environment>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "73200499", "PostTypeId": "2", "ParentId": "73199811", "CreationDate": "2022-08-01T23:27:54.493", "Score": "3", "Body": "<ol>\n<li><p>This is a very broad question that depends on details and planning.</p>\n</li>\n<li><p>In general use different projects. It is a good practice to implement <strong>separation of responsibility</strong> and <strong>isolation of resources</strong>.</p>\n</li>\n<li><p>Regarding Terraform, I recommend using separate HCL, separate project directories, etc. Again for the same separation and isolation reasons.</p>\n</li>\n<li><p>Implement change tracking on the HCL. Use something like GitHub to track HCL source changes and to provide project history.</p>\n</li>\n<li><p>Billing. Use different Billing Accounts with different Payments Accounts even if you are using the same credit/payment card.</p>\n</li>\n</ol>\n<p>In summary, put a <strong>wall</strong> between development and production environments. To cross that wall requires deliberate actions.</p>\n", "OwnerUserId": "8016720", "LastActivityDate": "2022-08-01T23:27:54.493", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "275402492", "PostHistoryTypeId": "2", "PostId": "73200499", "RevisionGUID": "43109477-0fbb-4cac-9de7-ed94d8c6c93c", "CreationDate": "2022-08-01T23:27:54.493", "UserId": "8016720", "Text": "1) This is a very broad question that depends on details and planning. \r\n\r\n2) In general use different projects. It is a good practice to implement **separation of responsibility** and **isolation of resources**. \r\n\r\n3) Regarding Terraform, I recommend using separate HCL, separate project directories, etc. Again for the same separation and isolation reasons. \r\n\r\n4) Implement change tracking on the HCL. Use something like GitHub to track HCL source changes and to provide project history.\r\n\r\n5) Billing. Use different Billing Accounts with different Payments Accounts even if you are using the same credit/payment card.\r\n\r\nIn summary, put a **wall** between development and production environments. To cross that wall requires deliberate actions.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "4) Implement change tracking on the HCL. ", "keywords": ["change"]}, {"source": "Text", "text": "Use something like GitHub to track HCL source changes and to provide project history. ", "keywords": ["change"]}]}, {"Id": "275402494", "PostHistoryTypeId": "33", "PostId": "73200499", "RevisionGUID": "0251ded6-f9dc-4219-8de3-6d4c19b9ea2d", "CreationDate": "2022-08-01T23:27:54.493", "UserId": "-1002", "Comment": "283087", "filtered-sentences": []}], "filtered-sentences": [{"source": "Body", "text": "Implement change tracking on the HCL. ", "keywords": ["change"]}, {"source": "Body", "text": "Use something like GitHub to track HCL source changes and to provide project history. ", "keywords": ["change"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "It will include a kubernetes cluster, cloudSQL, cloud storage, etc. ", "keywords": ["storage", "cluster"]}, {"source": "Body", "text": "This way I would have more clarity with billing and have more clear separation of concerns. ", "keywords": ["bill"]}]}