{"Id": "65668633", "PostTypeId": "1", "CreationDate": "2021-01-11T14:22:53.593", "Score": "3", "ViewCount": "1388", "Body": "<p>I have the following terraform config:</p>\n<pre><code>resource &quot;aws_dynamodb_table_item&quot; &quot;my_table&quot; {\n  table_name = aws_dynamodb_table.my_table.name\n  hash_key   = aws_dynamodb_table.my_table.hash_key\n\n  item = &lt;&lt;ITEM\n{\n  &quot;id&quot;: {&quot;S&quot;: &quot;nameAndCodes&quot;},\n  &quot;data&quot;: {&quot;S&quot;: &quot;[\n    {\n      &quot;code&quot;: &quot;03&quot;,\n      &quot;displayName&quot;: &quot;name1&quot;\n    },\n    {\n      &quot;code&quot;: &quot;04&quot;,\n      &quot;displayName&quot;: &quot;name2&quot;\n    }\n  ]&quot;}\n}\nITEM\n}\n</code></pre>\n<p>When the plan stage executes I receive the error:</p>\n<pre><code>Error: Invalid format of &quot;item&quot;: Decoding failed: invalid character '\\r' in string literal\n</code></pre>\n<p>The only way i can get this to work is to make the whole json a single line as follows:</p>\n<pre><code>&quot;data&quot;: {&quot;S&quot;: &quot;[{\\&quot;code\\&quot;: \\&quot;03\\&quot;, \\&quot;displayName\\&quot;: \\&quot;name1\\&quot;},{\\&quot;code\\&quot;: \\&quot;04\\&quot;, \\&quot;displayName\\&quot;: \\&quot;name2\\&quot;}]&quot;\n</code></pre>\n<p>This looks very ugly and difficult to manage.</p>\n<p>Does anyone know how I can enter a multiline JSON inside a &lt;&lt;ITEM block?</p>\n", "OwnerUserId": "854023", "LastActivityDate": "2023-01-08T21:08:23.797", "Title": "Terraform aws_dynamodb_table_item - insert multiline JSON into attribute", "Tags": "<json><amazon-web-services><amazon-dynamodb><terraform>", "AnswerCount": "1", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "116107194", "PostId": "65668633", "Score": "1", "Text": "Have you tried `use unix line endings` setting in the editor?", "CreationDate": "2021-01-11T15:27:30.000", "UserId": "10692493", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "238527816", "PostHistoryTypeId": "2", "PostId": "65668633", "RevisionGUID": "247bf49c-ac6c-4055-aac6-f7b2b303bec5", "CreationDate": "2021-01-11T14:22:53.593", "UserId": "854023", "Text": "I have the following terraform config:\r\n\r\n    resource \"aws_dynamodb_table_item\" \"my_table\" {\r\n      table_name = aws_dynamodb_table.my_table.name\r\n      hash_key   = aws_dynamodb_table.my_table.hash_key\r\n    \r\n      item = <<ITEM\r\n    {\r\n      \"id\": {\"S\": \"nameAndCodes\"},\r\n      \"data\": {\"S\": \"[\r\n        {\r\n          \"code\": \"03\",\r\n          \"displayName\": \"name1\"\r\n        },\r\n        {\r\n          \"code\": \"04\",\r\n          \"displayName\": \"name2\"\r\n        }\r\n      ]\"}\r\n    }\r\n    ITEM\r\n    }\r\n\r\nWhen the plan stage executes I receive the error:\r\n\r\n    Error: Invalid format of \"item\": Decoding failed: invalid character '\\r' in string literal\r\n\r\nThe only way i can get this to work is to make the whole json a single line as follows:\r\n\r\n    \"data\": {\"S\": \"[{\\\"code\\\": \\\"03\\\", \\\"displayName\\\": \\\"name1\\\"},{\\\"code\\\": \\\"04\\\", \\\"displayName\\\": \\\"name2\\\"}]\"\r\n\r\nThis looks very ugly and difficult to manage. \r\n\r\nDoes anyone know how I can enter a multiline JSON inside a <<ITEM block?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "238527817", "PostHistoryTypeId": "1", "PostId": "65668633", "RevisionGUID": "247bf49c-ac6c-4055-aac6-f7b2b303bec5", "CreationDate": "2021-01-11T14:22:53.593", "UserId": "854023", "Text": "Terraform aws_dynamodb_table_item - insert multiline JSON into attribute", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "238527818", "PostHistoryTypeId": "3", "PostId": "65668633", "RevisionGUID": "247bf49c-ac6c-4055-aac6-f7b2b303bec5", "CreationDate": "2021-01-11T14:22:53.593", "UserId": "854023", "Text": "<json><amazon-web-services><amazon-dynamodb><terraform>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "75050942", "PostTypeId": "2", "ParentId": "65668633", "CreationDate": "2023-01-08T20:11:38.610", "Score": "0", "Body": "<p>To resolve that issue, You can use the <code>jsonencode</code> function to set the item value and put entire JSON object in there. Here is an example in Terraform from my project which creates a DynamoDB table and put an initial item.</p>\n<pre><code>resource &quot;aws_dynamodb_table&quot; &quot;customer_table&quot; {\nname           = &quot;customer&quot;\nbilling_mode   = &quot;PAY_PER_REQUEST&quot;\nhash_key       = &quot;customerId&quot;\nstream_enabled = false\nattribute {\n  name = &quot;customerId&quot;\n  type = &quot;S&quot;\n }\n}\n\nresource &quot;aws_dynamodb_table_item&quot; &quot;customer_table_item&quot; {\n  table_name = aws_dynamodb_table.customer_table.name\n  hash_key   = aws_dynamodb_table.customer_table.hash_key\n  depends_on = [aws_dynamodb_table.customer_table]\n  item = jsonencode({\n  &quot;customerId&quot; : {\n    &quot;S&quot; : &quot;1&quot;\n },\n  &quot;firstName&quot; : {\n    &quot;S&quot; : &quot;John&quot;\n  },\n  &quot;lastName&quot; : {\n    &quot;S&quot; : &quot;Doe&quot;\n  },\n})\n}\n</code></pre>\n<p>commands:\n<code>terrform init</code>\n<code>terraform fmt</code>\n<code>terraform plan</code>\n<code>terraform apply</code></p>\n<p><a href=\"https://i.stack.imgur.com/uPGLR.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/uPGLR.png\" alt=\"enter image description here\" /></a></p>\n", "OwnerUserId": "793129", "LastEditorUserId": "793129", "LastEditDate": "2023-01-08T21:08:23.797", "LastActivityDate": "2023-01-08T21:08:23.797", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "132441635", "PostId": "75050942", "Score": "0", "Text": "Please don't post code as screenshot. Even if your answer is 100% correct, it is super annoying to use your code that you provided.", "CreationDate": "2023-01-08T20:16:13.807", "UserId": "7661119", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "132442021", "PostId": "75050942", "Score": "0", "Text": "@ErvinSzilagyi - edited above.", "CreationDate": "2023-01-08T20:51:40.157", "UserId": "793129", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "285753426", "PostHistoryTypeId": "2", "PostId": "75050942", "RevisionGUID": "99aaac94-e1e9-4ef9-9efe-79f73038c0d5", "CreationDate": "2023-01-08T20:11:38.610", "UserId": "793129", "Text": "To resolve that issue, You can use the `jsonencode` function to set the item value and put entire JSON object in there. Here is an example in Terraform from my project which creates a DynamoDB table and put initial item.\r\n\r\n\r\n\r\n[![enter image description here][1]][1]\r\n    \r\n\r\n\r\ncommands: \r\n`terrform init`\r\n`terraform fmt`\r\n`terraform plan`\r\n`terraform apply`\r\n\r\n\r\n[![enter image description here][2]][2]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/p0qhL.png\r\n  [2]: https://i.stack.imgur.com/uPGLR.png", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "285754799", "PostHistoryTypeId": "5", "PostId": "75050942", "RevisionGUID": "f311d6f2-8fe6-4342-af3c-8272fae9599a", "CreationDate": "2023-01-08T20:50:36.133", "UserId": "793129", "Comment": "added 618 characters in body", "Text": "To resolve that issue, You can use the `jsonencode` function to set the item value and put entire JSON object in there. Here is an example in Terraform from my project which creates a DynamoDB table and put initial item.\r\n\r\n    resource \"aws_dynamodb_table\" \"customer_table\" {\r\n    name           = \"customer\"\r\n    billing_mode   = \"PAY_PER_REQUEST\"\r\n    hash_key       = \"customerId\"\r\n    stream_enabled = false\r\n    attribute {\r\n      name = \"customerId\"\r\n      type = \"S\"\r\n     }\r\n    }\r\n\r\n    resource \"aws_dynamodb_table_item\" \"customer_table_item\" {\r\n      table_name = aws_dynamodb_table.customer_table.name\r\n      hash_key   = aws_dynamodb_table.customer_table.hash_key\r\n      depends_on = [aws_dynamodb_table.customer_table]\r\n      item = jsonencode({\r\n      \"customerId\" : {\r\n        \"S\" : \"1\"\r\n     },\r\n      \"firstName\" : {\r\n        \"S\" : \"John\"\r\n      },\r\n      \"lastName\" : {\r\n        \"S\" : \"Doe\"\r\n      },\r\n    })\r\n    }\r\n\r\n\r\n\r\ncommands: \r\n`terrform init`\r\n`terraform fmt`\r\n`terraform plan`\r\n`terraform apply`\r\n\r\n\r\n[![enter image description here][2]][2]\r\n\r\n  [2]: https://i.stack.imgur.com/uPGLR.png", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "resource \"aws_dynamodb_table\" \"customer_table\" { name = \"customer\" billing_mode = \"PAY_PER_REQUEST\" hash_key = \"customerId\" stream_enabled = false attribute { name = \"customerId\" type = \"S\" } } resource \"aws_dynamodb_table_item\" \"customer_table_item\" { table_name = aws_dynamodb_table.customer_table.name hash_key = aws_dynamodb_table.customer_table.hash_key depends_on = [aws_dynamodb_table.customer_table] item = jsonencode({ \"customerId\" : { \"S\" : \"1\" ", "keywords": ["bill"]}]}, {"Id": "285755504", "PostHistoryTypeId": "5", "PostId": "75050942", "RevisionGUID": "679fd40e-7557-4edd-bd62-17e4e3063811", "CreationDate": "2023-01-08T21:08:23.797", "UserId": "793129", "Comment": "added 3 characters in body", "Text": "To resolve that issue, You can use the `jsonencode` function to set the item value and put entire JSON object in there. Here is an example in Terraform from my project which creates a DynamoDB table and put an initial item.\r\n\r\n    resource \"aws_dynamodb_table\" \"customer_table\" {\r\n    name           = \"customer\"\r\n    billing_mode   = \"PAY_PER_REQUEST\"\r\n    hash_key       = \"customerId\"\r\n    stream_enabled = false\r\n    attribute {\r\n      name = \"customerId\"\r\n      type = \"S\"\r\n     }\r\n    }\r\n\r\n    resource \"aws_dynamodb_table_item\" \"customer_table_item\" {\r\n      table_name = aws_dynamodb_table.customer_table.name\r\n      hash_key   = aws_dynamodb_table.customer_table.hash_key\r\n      depends_on = [aws_dynamodb_table.customer_table]\r\n      item = jsonencode({\r\n      \"customerId\" : {\r\n        \"S\" : \"1\"\r\n     },\r\n      \"firstName\" : {\r\n        \"S\" : \"John\"\r\n      },\r\n      \"lastName\" : {\r\n        \"S\" : \"Doe\"\r\n      },\r\n    })\r\n    }\r\n\r\n\r\n\r\ncommands: \r\n`terrform init`\r\n`terraform fmt`\r\n`terraform plan`\r\n`terraform apply`\r\n\r\n\r\n[![enter image description here][2]][2]\r\n\r\n  [2]: https://i.stack.imgur.com/uPGLR.png", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "resource \"aws_dynamodb_table\" \"customer_table\" { name = \"customer\" billing_mode = \"PAY_PER_REQUEST\" hash_key = \"customerId\" stream_enabled = false attribute { name = \"customerId\" type = \"S\" } } resource \"aws_dynamodb_table_item\" \"customer_table_item\" { table_name = aws_dynamodb_table.customer_table.name hash_key = aws_dynamodb_table.customer_table.hash_key depends_on = [aws_dynamodb_table.customer_table] item = jsonencode({ \"customerId\" : { \"S\" : \"1\" ", "keywords": ["bill"]}]}], "filtered-sentences": []}], "contains-topic": false, "filtered-sentences": []}