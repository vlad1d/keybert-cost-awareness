{"Id": "69545380", "PostTypeId": "1", "AcceptedAnswerId": "69546959", "CreationDate": "2021-10-12T18:29:35.260", "Score": "1", "ViewCount": "624", "Body": "<p>I am working on a project to centralize our AWS Security Logs. The issue that we are running into is that we have just enabled organization level logging. Previously, our we our security terraform to each individual aws account. Now we are following this <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/creating-trail-organization.html\" rel=\"nofollow noreferrer\">practice</a>. The problem with this situation is that we have multiple accounts with multiple s3 buckets, multiple cloudwatch logs, multiple cloudwatch alerts. It would be easier to centralize all of these into one single &quot;security&quot;/&quot;organization&quot; account.</p>\n<p>Does it make sense to create a single aws account just for logging? If so, would it make sense to create security groups (Security Admin) and security roles (ops-sec-role) . For example, we could add security users (sec-op-1) to the group so that they can assume role into the security account. Reason being is to follow the philosophy of separation of roles.</p>\n<p>I am looking into potential <a href=\"https://docs.aws.amazon.com/prescriptive-guidance/latest/patterns/centralized-logging-and-multiple-account-security-guardrails.html#centralized-logging-and-multiple-account-security-guardrails-epics\" rel=\"nofollow noreferrer\">solutions</a> with CloudFormation, but it would be preferable to implement this with terraform.</p>\n<p>Has this been done before?</p>\n", "OwnerUserId": "3937811", "LastActivityDate": "2023-08-10T21:48:39.187", "Title": "How to implement centralized Logging for an AWS Organization Account", "Tags": "<terraform><amazon-cloudtrail>", "AnswerCount": "2", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "122927031", "PostId": "69545380", "Score": "0", "Text": "Maybe it has been done, but with cloudformation it's much easier. Cloudformation has stacksets which are specifically designed for handling multiple accounts ands regions. Terraform does not such a thing.", "CreationDate": "2021-10-12T20:55:56.653", "UserId": "248823", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "255691375", "PostHistoryTypeId": "2", "PostId": "69545380", "RevisionGUID": "e2642e55-a395-4f1f-bcbf-e8d61d529038", "CreationDate": "2021-10-12T18:29:35.260", "UserId": "3937811", "Text": "I am working on a project to centralize our AWS Security Logs. The issue that we are running into is that we have just enabled organization level logging. Previously, our we our security terraform to each individual aws account. Now we are following this [practice](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/creating-trail-organization.html). The problem with this situation is that we have multiple accounts with multiple s3 buckets, multiple cloudwatch logs, multiple cloudwatch alerts. It would be easier to centralize all of these into one single \"security\"/\"organization\" account. \r\n\r\nDoes it make sense to create a single aws account just for logging? If so, would it make sense to create security groups (Security Admin) and security roles (ops-sec-role) . For example, we could add security users (sec-op-1) to the group so that they can assume role into the security account. Reason being is to follow the philosophy of separation of roles.\r\n\r\nI am looking into potential [solutions][1] with CloudFormation, but it would be preferable to implement this with terraform. \r\n\r\nHas this been done before?\r\n\r\n\r\n  [1]: https://docs.aws.amazon.com/prescriptive-guidance/latest/patterns/centralized-logging-and-multiple-account-security-guardrails.html#centralized-logging-and-multiple-account-security-guardrails-epics", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "255691377", "PostHistoryTypeId": "1", "PostId": "69545380", "RevisionGUID": "e2642e55-a395-4f1f-bcbf-e8d61d529038", "CreationDate": "2021-10-12T18:29:35.260", "UserId": "3937811", "Text": "How to implement centralized Logging for an AWS Organization Account", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "255691378", "PostHistoryTypeId": "3", "PostId": "69545380", "RevisionGUID": "e2642e55-a395-4f1f-bcbf-e8d61d529038", "CreationDate": "2021-10-12T18:29:35.260", "UserId": "3937811", "Text": "<terraform><amazon-cloudtrail>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "69546959", "PostTypeId": "2", "ParentId": "69545380", "CreationDate": "2021-10-12T20:59:08.357", "Score": "1", "Body": "<p>Yes it absolutely makes sense to have a centralized logging account. If you are rolling this out across an organization I would recommend that this would actually be the perfect time to use <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html\" rel=\"nofollow noreferrer\">CloudFormation Stack Sets</a>.</p>\n<ol>\n<li>Define a stack set in the main Organization account which will create your logging infra for each account and how it forwards to the central account (IAM Roles, Cloudtrail logs, bucket replication etc.)</li>\n<li>Apply this stack set to your whole organization. This will automatically create a stack instance in each sub-account. Any new accounts added later will also have this stack automatically created.</li>\n<li>Use Organization <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps.html\" rel=\"nofollow noreferrer\">Service Control Policies</a> to stop anyone from modifying the logging infra within the sub-accounts.</li>\n</ol>\n<p>You could do the same kind of thing in Terraform but you will have to write your own automation to apply it to many accounts and also have to remember or automate running for new organization accounts. I usually prefer Terraform for IaC but this is one of the few cases where CloudFormation really shines. A hybrid approach could also work, using CloudFormation for the standard things like CloudTrail and IAM and custom Terraform for accounts with their own specific requirements.</p>\n<p>You may also want to take a look at the <a href=\"https://aws.amazon.com/controltower/features/\" rel=\"nofollow noreferrer\">AWS Control Tower </a> service which can automate some of this for you along with applying some other security best practices.</p>\n<p>Source: I am a certified AWS Solutions Architect Professional and DevOps Engineer Professional.</p>\n", "OwnerUserId": "2175002", "LastActivityDate": "2021-10-12T20:59:08.357", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "123003233", "PostId": "69546959", "Score": "0", "Text": "Do the sub-account trails feed into the Organization master trail? If so, would I just create a master trail in the organization account, then an s3 bucket, then capture all of the sub-account logs in the organization account CloudTrail?", "CreationDate": "2021-10-15T19:36:23.037", "UserId": "3937811", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "255699461", "PostHistoryTypeId": "2", "PostId": "69546959", "RevisionGUID": "3d184b72-7efe-4b82-8336-5cda5e38faa8", "CreationDate": "2021-10-12T20:59:08.357", "UserId": "2175002", "Text": "Yes it absolutely makes sense to have a centralized logging account. If you are rolling this out across an organization I would recommend that this would actually be the perfect time to use [CloudFormation Stack Sets][1]. \r\n\r\n1. Define a stack set in the main Organization account which will create your logging infra for each account and how it forwards to the central account (IAM Roles, Cloudtrail logs, bucket replication etc.)\r\n1. Apply this stack set to your whole organization. This will automatically create a stack instance in each sub-account. Any new accounts added later will also have this stack automatically created.\r\n1. Use Organization [Service Control Policies][2] to stop anyone from modifying the logging infra within the sub-accounts.\r\n\r\nYou could do the same kind of thing in Terraform but you will have to write your own automation to apply it to many accounts and also have to remember or automate running for new organization accounts. I usually prefer Terraform for IaC but this is one of the few cases where CloudFormation really shines. A hybrid approach could also work, using CloudFormation for the standard things like CloudTrail and IAM and custom Terraform for accounts with their own specific requirements.\r\n\r\nYou may also want to take a look at the [AWS Control Tower ][3] service which can automate some of this for you along with applying some other security best practices.\r\n\r\nSource: I am a certified AWS Solutions Architect Professional and DevOps Engineer Professional.\r\n\r\n  [1]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html\r\n  [2]: https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps.html\r\n  [3]: https://aws.amazon.com/controltower/features/", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "This will automatically create a stack instance in each sub-account. ", "keywords": ["instance"]}]}], "filtered-sentences": [{"source": "Body", "text": "This will automatically create a stack instance in each sub-account. ", "keywords": ["instance"]}]}, {"Id": "76879447", "PostTypeId": "2", "ParentId": "69545380", "CreationDate": "2023-08-10T21:38:04.330", "Score": "-1", "Body": "<p>Did you people try <strong>Control Tower service</strong> of AWS? It created for you 1 audit and logging account under Security OU and also sets up SNS, lambda, config, s3 etc to achieve this logging aggregation and auditing. It also creates roles and gives u control to manage users from administrator account, also configures an Active Directory for managing users. Control Tower service is as per the best standards for managing multiple accounts within the organisation i.e. as per the <strong>well architected framework</strong> practices. It provides you a Sandbox OU wherein u can have your prod, dev accounts etc. It does centralised logging, auditing for u. But u have to pay for the services it spins up. If u write your own lambdas, config api's , sns etc to aggregate things,  you can think of this service. You can also configure <strong>Guardrails</strong> like notify if someone deletes s3 bucket etc.. or preventive Guardrails like prevent anyone from deleting bucket from prod env.. So overall, eases our work a lot. You can manage all users from one admin account, plus many <strong>services like transit gateways, route 53 rules to be shared across the accounts</strong></p>\n<p>Else You can create a cloudformation stack as well and spin up as per your needs.</p>\n", "OwnerUserId": "3689942", "LastEditorUserId": "3689942", "LastEditDate": "2023-08-10T21:48:39.187", "LastActivityDate": "2023-08-10T21:48:39.187", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "296515360", "PostHistoryTypeId": "2", "PostId": "76879447", "RevisionGUID": "ffd584de-3ac8-44a9-a321-67e427774c23", "CreationDate": "2023-08-10T21:38:04.330", "UserId": "3689942", "Text": "Did you people try **Control Tower service** of AWS? It created for you 1 audit and logging account under Security OU and also sets up SNS, lambda, config, s3 etc to achieve this logging aggregation and auditing. It also creates roles and gives u control to manage users from administrator account, also configures an Active Directory for managing users. Control Tower service is as per the best standards for managing multiple accounts within the organisation i.e. as per the **well architected framework** practices. It provides you a Sandbox OU wherein u can have your prod, dev accounts etc.\r\n\r\nElse You can create a cloudformation stack as well and spin up as per your needs.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "296515698", "PostHistoryTypeId": "5", "PostId": "76879447", "RevisionGUID": "70c1eb8f-48c7-409a-b5de-ce8c2a8397ab", "CreationDate": "2023-08-10T21:48:39.187", "UserId": "3689942", "Comment": "added 542 characters in body", "Text": "Did you people try **Control Tower service** of AWS? It created for you 1 audit and logging account under Security OU and also sets up SNS, lambda, config, s3 etc to achieve this logging aggregation and auditing. It also creates roles and gives u control to manage users from administrator account, also configures an Active Directory for managing users. Control Tower service is as per the best standards for managing multiple accounts within the organisation i.e. as per the **well architected framework** practices. It provides you a Sandbox OU wherein u can have your prod, dev accounts etc. It does centralised logging, auditing for u. But u have to pay for the services it spins up. If u write your own lambdas, config api's , sns etc to aggregate things,  you can think of this service. You can also configure **Guardrails** like notify if someone deletes s3 bucket etc.. or preventive Guardrails like prevent anyone from deleting bucket from prod env.. So overall, eases our work a lot. You can manage all users from one admin account, plus many **services like transit gateways, route 53 rules to be shared across the accounts**\r\n\r\nElse You can create a cloudformation stack as well and spin up as per your needs.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "But u have to pay for the services it spins up. ", "keywords": ["pay"]}]}], "filtered-sentences": [{"source": "Body", "text": "But u have to pay for the services it spins up. ", "keywords": ["pay"]}]}], "contains-topic": true, "filtered-sentences": []}