{"Id": "55023605", "PostTypeId": "1", "AcceptedAnswerId": "55025189", "CreationDate": "2019-03-06T12:53:35.743", "Score": "10", "ViewCount": "12743", "Body": "<p>There is a repeatable configuration that I see in many Terraform projects where the provider is AWS:\n<em>The configuration of an outbound (egress) rule to allow ALL outbound traffic.</em></p>\n\n<p>As far as I understand, this is the default behavior in AWS as mentioned in the <a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html#VPCSecurityGroups\" rel=\"noreferrer\">AWS user guide</a>:</p>\n\n<blockquote>\n  <p>By default, a security group includes an outbound rule that allows all outbound traffic. You can remove the rule and add outbound rules that allow specific outbound traffic only. If your security group has no outbound rules, no outbound traffic originating from your instance is allowed.</p>\n</blockquote>\n\n<p>An example for a common Terraform setup for security group - The focus of my question is the egress block:</p>\n\n<pre><code> resource \"aws_security_group\" \"my_sg\" {\n       name        = \"my_sg\"\n       description = \"Some description\"\n       vpc_id      = \"${aws_vpc.my_vpc.id}\"\n       tags {\n         Name = \"my_sg_tag\"\n       }\n\n       #Not redundant - Because a new security group has no inbound rules.\n       ingress {\n         from_port   = \"80\"\n         to_port     = \"80\"\n         protocol    = \"TCP\"\n         cidr_blocks = [\"0.0.0.0/0\"]\n       }\n\n       #Isn't this redundant?    \n       egress {\n         from_port   = 0\n         to_port     = 0\n         protocol    = \"-1\"\n         cidr_blocks = [\"0.0.0.0/0\"]\n       }\n}\n</code></pre>\n\n<p>Is this configuration being made for documentation or does it have a technical reason?</p>\n", "OwnerUserId": "1103953", "LastEditorUserId": "2291321", "LastEditDate": "2019-03-06T14:19:03.977", "LastActivityDate": "2019-03-06T14:19:03.977", "Title": "AWS and Terraform - Default egress rule in security group", "Tags": "<amazon-web-services><terraform><infrastructure-as-code>", "AnswerCount": "1", "CommentCount": "0", "FavoriteCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "193028742", "PostHistoryTypeId": "2", "PostId": "55023605", "RevisionGUID": "aa191c52-3e7e-4eef-a778-34d5a833f39d", "CreationDate": "2019-03-06T12:53:35.743", "UserId": "1103953", "Text": "There is a repeatable configuration that i see in many terraform projects where the provider is AWS:\r\n*The configuration of an outbound (egress) rule to allow ALL outbound traffic.*\r\n\r\nAs far as i understand, *this is the default behavior in aws*.\r\n\r\nReference to aws docs -  in the \"Security Group Basics\" part , 5th bullet:\r\n\r\nhttps://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html\r\n\r\nAn example for a common terraform setup for security group - The focus of my question is the egress block:\r\n\r\n     resource \"aws_security_group\" \"my_sg\" {\r\n           name        = \"my_sg\"\r\n           description = \"Some description\"\r\n           vpc_id      = \"${aws_vpc.my_vpc.id}\"\r\n           tags {\r\n             Name = \"my_sg_tag\"\r\n           }\r\n\r\n           #Not redundant - Because a new security group has no inbound rules.\r\n           ingress {\r\n             from_port   = \"80\"\r\n             to_port     = \"80\"\r\n             protocol    = \"TCP\"\r\n             cidr_blocks = [\"0.0.0.0/0\"]\r\n           }\r\n\r\n           #Isn't this redundant?    \r\n           egress {\r\n             from_port   = 0\r\n             to_port     = 0\r\n             protocol    = \"-1\"\r\n             cidr_blocks = [\"0.0.0.0/0\"]\r\n           }\r\n    }\r\n\r\nMy question: Is this configuration being made for documentation or it has a technical reason?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "There is a repeatable configuration that i see in many terraform projects where the provider is AWS: *The configuration of an outbound (egress) rule to allow ALL outbound traffic.* ", "keywords": ["provider"]}]}, {"Id": "193028743", "PostHistoryTypeId": "1", "PostId": "55023605", "RevisionGUID": "aa191c52-3e7e-4eef-a778-34d5a833f39d", "CreationDate": "2019-03-06T12:53:35.743", "UserId": "1103953", "Text": "AWS and Terraform - Default egress rule in security group", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "193028744", "PostHistoryTypeId": "3", "PostId": "55023605", "RevisionGUID": "aa191c52-3e7e-4eef-a778-34d5a833f39d", "CreationDate": "2019-03-06T12:53:35.743", "UserId": "1103953", "Text": "<amazon-web-services><terraform><infrastructure-as-code>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "193035410", "PostHistoryTypeId": "5", "PostId": "55023605", "RevisionGUID": "252a4472-32c4-463d-b88d-96c5846afaf7", "CreationDate": "2019-03-06T14:19:03.977", "UserId": "2291321", "Comment": "added 273 characters in body", "Text": "There is a repeatable configuration that I see in many Terraform projects where the provider is AWS:\r\n*The configuration of an outbound (egress) rule to allow ALL outbound traffic.*\r\n\r\nAs far as I understand, this is the default behavior in AWS as mentioned in the [AWS user guide][1]:\r\n\r\n> By default, a security group includes an outbound rule that allows all outbound traffic. You can remove the rule and add outbound rules that allow specific outbound traffic only. If your security group has no outbound rules, no outbound traffic originating from your instance is allowed.\r\n\r\nAn example for a common Terraform setup for security group - The focus of my question is the egress block:\r\n\r\n     resource \"aws_security_group\" \"my_sg\" {\r\n           name        = \"my_sg\"\r\n           description = \"Some description\"\r\n           vpc_id      = \"${aws_vpc.my_vpc.id}\"\r\n           tags {\r\n             Name = \"my_sg_tag\"\r\n           }\r\n\r\n           #Not redundant - Because a new security group has no inbound rules.\r\n           ingress {\r\n             from_port   = \"80\"\r\n             to_port     = \"80\"\r\n             protocol    = \"TCP\"\r\n             cidr_blocks = [\"0.0.0.0/0\"]\r\n           }\r\n\r\n           #Isn't this redundant?    \r\n           egress {\r\n             from_port   = 0\r\n             to_port     = 0\r\n             protocol    = \"-1\"\r\n             cidr_blocks = [\"0.0.0.0/0\"]\r\n           }\r\n    }\r\n\r\nIs this configuration being made for documentation or does it have a technical reason?\r\n\r\n\r\n  [1]: https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html#VPCSecurityGroups", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "There is a repeatable configuration that I see in many Terraform projects where the provider is AWS: ", "keywords": ["provider"]}, {"source": "Text", "text": "If your security group has no outbound rules, no outbound traffic originating from your instance is allowed. ", "keywords": ["instance"]}]}], "answers": [{"Id": "55025189", "PostTypeId": "2", "ParentId": "55023605", "CreationDate": "2019-03-06T14:15:55.267", "Score": "16", "Body": "<p>The <a href=\"https://www.terraform.io/docs/providers/aws/r/security_group.html\" rel=\"noreferrer\">documentation for the <code>aws_security_group</code> resource</a> specifically states that they remove AWS' default egress rule intentionally by default and require users to specify it to limit surprises to users:</p>\n\n<blockquote>\n  <p>NOTE on Egress rules: By default, AWS creates an ALLOW ALL egress rule when creating a new Security Group inside of a VPC. When creating a new Security Group inside a VPC, Terraform will remove this default rule, and require you specifically re-create it if you desire that rule. We feel this leads to fewer surprises in terms of controlling your egress rules. If you desire this rule to be in place, you can use this egress block:</p>\n</blockquote>\n\n<pre><code>egress {\n  from_port   = 0\n  to_port     = 0\n  protocol    = \"-1\"\n  cidr_blocks = [\"0.0.0.0/0\"]\n}\n</code></pre>\n\n<p>There's also a technical/UX reason here in that it would be tricky to make Terraform understand whether it should keep the allow all egress rule when making changes to the security group. Should it always provide the allow all egress rule unless another egress rule is specified and then if so remove the default? How would that work with the combination of the <a href=\"https://www.terraform.io/docs/providers/aws/r/security_group_rule.html\" rel=\"noreferrer\"><code>aws_security_group_rule</code> resource</a>?</p>\n\n<p>AWS have made the decision that a default rule to allow all egress outbound is a nicer user experience than not having it (and confusing people as to why their instance is unable to communicate outbound) without <em>too</em> much of a security impact (compared to the equivalent for inbound). Even if they were to change their mind on the benefit of this now they would be unable to do this without massively breaking a lot of people's setups/workflows which AWS is very reluctant to do.</p>\n\n<p>Terraform, on the other hand, has made the decision the other way and that suits the tool better as well as slightly improving the security posture of the tool at the expense of making people define a repeated egress block in a lot of places.</p>\n\n<p>If you particularly care about the repetition and you do always want to allow all egress traffic then you might find it useful to use a module instead that automatically includes an allow all egress rule.</p>\n", "OwnerUserId": "2291321", "LastActivityDate": "2019-03-06T14:15:55.267", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "96806626", "PostId": "55025189", "Score": "1", "Text": "Thanks @ydaetskcoR nice catch!", "CreationDate": "2019-03-06T15:44:00.787", "UserId": "1103953", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "193035186", "PostHistoryTypeId": "2", "PostId": "55025189", "RevisionGUID": "0f40639d-12ea-4250-bb48-40626114cd40", "CreationDate": "2019-03-06T14:15:55.267", "UserId": "2291321", "Text": "The [documentation for the `aws_security_group` resource][1] specifically states that they remove AWS' default egress rule intentionally by default and require users to specify it to limit surprises to users:\r\n\r\n> NOTE on Egress rules: By default, AWS creates an ALLOW ALL egress rule when creating a new Security Group inside of a VPC. When creating a new Security Group inside a VPC, Terraform will remove this default rule, and require you specifically re-create it if you desire that rule. We feel this leads to fewer surprises in terms of controlling your egress rules. If you desire this rule to be in place, you can use this egress block:\r\n\r\n    egress {\r\n      from_port   = 0\r\n      to_port     = 0\r\n      protocol    = \"-1\"\r\n      cidr_blocks = [\"0.0.0.0/0\"]\r\n    }\r\n\r\nThere's also a technical/UX reason here in that it would be tricky to make Terraform understand whether it should keep the allow all egress rule when making changes to the security group. Should it always provide the allow all egress rule unless another egress rule is specified and then if so remove the default? How would that work with the combination of the [`aws_security_group_rule` resource][2]?\r\n\r\nAWS have made the decision that a default rule to allow all egress outbound is a nicer user experience than not having it (and confusing people as to why their instance is unable to communicate outbound) without _too_ much of a security impact (compared to the equivalent for inbound). Even if they were to change their mind on the benefit of this now they would be unable to do this without massively breaking a lot of people's setups/workflows which AWS is very reluctant to do.\r\n\r\nTerraform, on the other hand, has made the decision the other way and that suits the tool better as well as slightly improving the security posture of the tool at the expense of making people define a repeated egress block in a lot of places.\r\n\r\nIf you particularly care about the repetition and you do always want to allow all egress traffic then you might find it useful to use a module instead that automatically includes an allow all egress rule.\r\n\r\n  [1]: https://www.terraform.io/docs/providers/aws/r/security_group.html\r\n  [2]: https://www.terraform.io/docs/providers/aws/r/security_group_rule.html", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "There's also a technical/UX reason here in that it would be tricky to make Terraform understand whether it should keep the allow all egress rule when making changes to the security group. ", "keywords": ["change"]}, {"source": "Text", "text": "AWS have made the decision that a default rule to allow all egress outbound is a nicer user experience than not having it (and confusing people as to why their instance is unable to communicate outbound) without _too_ much of a security impact (compared to the equivalent for inbound). ", "keywords": ["instance"]}, {"source": "Text", "text": "Even if they were to change their mind on the benefit of this now they would be unable to do this without massively breaking a lot of people's setups/workflows which AWS is very reluctant to do. ", "keywords": ["change"]}, {"source": "Text", "text": "Terraform, on the other hand, has made the decision the other way and that suits the tool better as well as slightly improving the security posture of the tool at the expense of making people define a repeated egress block in a lot of places. ", "keywords": ["expense"]}]}], "filtered-sentences": [{"source": "Body", "text": "There's also a technical/UX reason here in that it would be tricky to make Terraform understand whether it should keep the allow all egress rule when making changes to the security group. ", "keywords": ["change"]}, {"source": "Body", "text": "AWS have made the decision that a default rule to allow all egress outbound is a nicer user experience than not having it (and confusing people as to why their instance is unable to communicate outbound) without too much of a security impact (compared to the equivalent for inbound). ", "keywords": ["instance"]}, {"source": "Body", "text": "Even if they were to change their mind on the benefit of this now they would be unable to do this without massively breaking a lot of people's setups/workflows which AWS is very reluctant to do. ", "keywords": ["change"]}, {"source": "Body", "text": "Terraform, on the other hand, has made the decision the other way and that suits the tool better as well as slightly improving the security posture of the tool at the expense of making people define a repeated egress block in a lot of places. ", "keywords": ["expense"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "There is a repeatable configuration that I see in many Terraform projects where the provider is AWS: ", "keywords": ["provider"]}, {"source": "Body", "text": "If your security group has no outbound rules, no outbound traffic originating from your instance is allowed. ", "keywords": ["instance"]}]}