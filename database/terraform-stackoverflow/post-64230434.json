{"Id": "64230434", "PostTypeId": "1", "AcceptedAnswerId": "64230545", "CreationDate": "2020-10-06T16:55:23.203", "Score": "2", "ViewCount": "1217", "Body": "<p>We have multiple aws modules in git and when we use a module in other project we specify the path of the module in git as a source like this:</p>\n<pre><code>module &quot;module_name&quot; {\n  source = &quot;git::https://gitlab_domain_name.com/terraform/modules/aws/module_name.git?ref=v1.0.0&quot;\n  ...\n}\n</code></pre>\n<p>I want to know if there is a benefit to use a terraform private registry to store our modules like for instance when developing in Java we use a repository to store JAR packaged or also when working with docker images.</p>\n", "OwnerUserId": "12664588", "LastActivityDate": "2020-10-06T17:19:22.690", "Title": "Store terraform module in a private registry benefit?", "Tags": "<terraform><terraform-modules><terraform-registry>", "AnswerCount": "1", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "127923716", "PostId": "64230434", "Score": "0", "Text": "Worth noting that from the perspective of terraform, using a private registry allows you to use version constraints in your modules. This is not possible with git module sources [ref](https://www.terraform.io/registry/private#private-registries)", "CreationDate": "2022-05-28T06:05:07.177", "UserId": "112196", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "232271848", "PostHistoryTypeId": "2", "PostId": "64230434", "RevisionGUID": "c098d3e1-3558-49a1-a01e-37a34854de72", "CreationDate": "2020-10-06T16:55:23.203", "UserId": "12664588", "Text": "We have multiple aws modules in git and when we use a module in other project we specify the path of the module in git as a source like this: \r\n\r\n    module \"module_name\" {\r\n      source = \"git::https://gitlab_domain_name.com/terraform/modules/aws/module_name.git?ref=v1.0.0\"\r\n      ...\r\n    }\r\n\r\nI want to know if there is a benefit to use a terraform private registry to store our modules like for instance when developing in Java we use a repository to store JAR packaged or also when working with docker images.\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I want to know if there is a benefit to use a terraform private registry to store our modules like for instance when developing in Java we use a repository to store JAR packaged or also when working with docker images.", "keywords": ["instance"]}]}, {"Id": "232271849", "PostHistoryTypeId": "1", "PostId": "64230434", "RevisionGUID": "c098d3e1-3558-49a1-a01e-37a34854de72", "CreationDate": "2020-10-06T16:55:23.203", "UserId": "12664588", "Text": "Store terraform module in a private registry benefit?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "232271850", "PostHistoryTypeId": "3", "PostId": "64230434", "RevisionGUID": "c098d3e1-3558-49a1-a01e-37a34854de72", "CreationDate": "2020-10-06T16:55:23.203", "UserId": "12664588", "Text": "<terraform><terraform-modules><terraform-registry>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "64230545", "PostTypeId": "2", "ParentId": "64230434", "CreationDate": "2020-10-06T17:02:38.303", "Score": "4", "Body": "<p>Yes, there are benefits to a private registry. Namely you can put some description, documentation, examples there and you get a better visual representation of what the module does, its inputs, outputs and resources.</p>\n<p>But apart from that in terms of functionality of the module it behaves the same way. A java registry for example (e.g. nexus) makes sense because you do not want to force everyone to build the libs themselves (maybe they can't at all) and therefore having a place where pre-built libraries are stored does make sense. That reasoning does not apply to terraform since there is nothing being compiled.</p>\n<p>Whole different story for custom providers, in that case you need a private registry to provide the compiled golang binaries, but you can write one yourself without too much effort (since terraform 0.13), it is just a http rest api.</p>\n", "OwnerUserId": "2442804", "LastEditorUserId": "2442804", "LastEditDate": "2020-10-06T17:19:22.690", "LastActivityDate": "2020-10-06T17:19:22.690", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "113584809", "PostId": "64230545", "Score": "0", "Text": "thanks! it makes sense but I think documentation, description and examples is not enough to handle or pay for a private terraform registry cause we can in each git module project put a readme file that contains documentation and stuff like this .. and exactly cause terraform is not compiled I don't see the point of using registry", "CreationDate": "2020-10-06T20:10:33.597", "UserId": "12664588", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "thanks! it makes sense but I think documentation, description and examples is not enough to handle or pay for a private terraform registry cause we can in each git module project put a readme file that contains documentation and stuff like this .. and exactly cause terraform is not compiled I don't see the point of using registry", "keywords": ["pay"]}]}, {"Id": "113584829", "PostId": "64230545", "Score": "0", "Text": "@nael.fridhi I completely agree!", "CreationDate": "2020-10-06T20:11:20.763", "UserId": "2442804", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "232272311", "PostHistoryTypeId": "2", "PostId": "64230545", "RevisionGUID": "67ee74e5-0409-42ab-8727-1abbaa10bdc6", "CreationDate": "2020-10-06T17:02:38.303", "UserId": "2442804", "Text": "Yes, there are benefits to a private registry. Namely you can put some description, documentation, examples there and you get a better visual representation of what the module does.\r\n\r\nBut apart from that in terms of functionality of the module it behaves the same way. A java registry for example (e.g. nexus) makes sense because you do not want to force everyone to build the libs themselves (maybe they can't at all) and therefore having a place where pre-built libraries are stored does make sense. That reasoning does not apply to terraform since there is nothing being compiled. \r\n\r\nWhole different story for custom providers, in that case you need a private registry to provide the compiled golang binaries, but you can write one yourself without too much effort (since terraform 0.13), it is just a http rest api.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "232273427", "PostHistoryTypeId": "5", "PostId": "64230545", "RevisionGUID": "7dec3c03-b3b6-4073-a22d-9a31bca706c5", "CreationDate": "2020-10-06T17:19:22.690", "UserId": "2442804", "Comment": "added 35 characters in body", "Text": "Yes, there are benefits to a private registry. Namely you can put some description, documentation, examples there and you get a better visual representation of what the module does, its inputs, outputs and resources.\r\n\r\nBut apart from that in terms of functionality of the module it behaves the same way. A java registry for example (e.g. nexus) makes sense because you do not want to force everyone to build the libs themselves (maybe they can't at all) and therefore having a place where pre-built libraries are stored does make sense. That reasoning does not apply to terraform since there is nothing being compiled. \r\n\r\nWhole different story for custom providers, in that case you need a private registry to provide the compiled golang binaries, but you can write one yourself without too much effort (since terraform 0.13), it is just a http rest api.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "We have multiple aws modules in git and when we use a module in other project we specify the path of the module in git as a source like this: I want to know if there is a benefit to use a terraform private registry to store our modules like for instance when developing in Java we use a repository to store JAR packaged or also when working with docker images.", "keywords": ["instance"]}]}