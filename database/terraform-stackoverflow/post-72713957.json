{"Id": "72713957", "PostTypeId": "1", "AcceptedAnswerId": "72714083", "CreationDate": "2022-06-22T10:36:13.247", "Score": "0", "ViewCount": "287", "Body": "<p>I have following <code>account_map</code>.</p>\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>account_map   = {\n      111111111111 = \"DEV\"\n      222222222222 = \"DEV\"\n      333333333333 = \"STG\"\n      444444444444 = \"DEV\"\n      555555555555 = \"PROD\"\n      666666666666 = \"DEV\"\n\n    }</code></pre>\r\n</div>\r\n</div>\r\n</p>\n<p>I'm trying something like below to get a <code>list(map)</code> output for my <code>instance_data</code> variable. (It should return only the account IDs of the <code>DEV</code>).  I know <code>lookup</code> is not going to work here. I pasted it, because this is my last try out.</p>\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>locals {\n  instance_data = flatten([\n    for account in module.organization.organization_accounts : [\n      for dev_accounts in lookup(local.account_group, account.id) : {\n        id = dev_accounts\n      }\n    ]\n  ])</code></pre>\r\n</div>\r\n</div>\r\n</p>\n<p>So my <code>local.instance_data</code> variable output must be something like below</p>\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>  + instance_data = [\n      + {\n          + id = \"111111111111\"\n        },\n      + {\n          + id = \"222222222222\"\n        },\n      + {\n          + id = \"444444444444\"\n        },\n      + {\n          + id = \"666666666666\"\n]</code></pre>\r\n</div>\r\n</div>\r\n</p>\n", "OwnerUserId": "6482719", "LastActivityDate": "2022-06-22T11:10:28.767", "Title": "Terraform dynamically create a list(map)", "Tags": "<terraform>", "AnswerCount": "1", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "272748764", "PostHistoryTypeId": "2", "PostId": "72713957", "RevisionGUID": "ded81781-80ec-49a0-a629-053ba80cc456", "CreationDate": "2022-06-22T10:36:13.247", "UserId": "6482719", "Text": "I have following `account_map`.\r\n\r\n<!-- begin snippet: js hide: false console: true babel: false -->\r\n\r\n<!-- language: lang-html -->\r\n\r\n    account_map   = {\r\n          111111111111 = \"DEV\"\r\n          222222222222 = \"DEV\"\r\n          333333333333 = \"STG\"\r\n          444444444444 = \"DEV\"\r\n          555555555555 = \"PROD\"\r\n          666666666666 = \"DEV\"\r\n\r\n        }\r\n\r\n<!-- end snippet -->\r\n\r\nI'm trying something like below to get a `list(map)` output for my `instance_data` variable. (It should return only the account IDs of the `DEV`).  I know `lookup` is not going to work here. I pasted it, because this is my last try out.\r\n\r\n<!-- begin snippet: js hide: false console: true babel: false -->\r\n\r\n<!-- language: lang-html -->\r\n\r\n    locals {\r\n      instance_data = flatten([\r\n        for account in module.organization.organization_accounts : [\r\n          for dev_accounts in lookup(local.account_group, account.id) : {\r\n            id = dev_accounts\r\n          }\r\n        ]\r\n      ])\r\n\r\n\r\n<!-- end snippet -->\r\n\r\nSo my `local.instance_data` variable output must be something like below\r\n\r\n<!-- begin snippet: js hide: false console: true babel: false -->\r\n\r\n<!-- language: lang-html -->\r\n\r\n      + instance_data = [\r\n          + {\r\n              + id = \"111111111111\"\r\n            },\r\n          + {\r\n              + id = \"222222222222\"\r\n            },\r\n          + {\r\n              + id = \"444444444444\"\r\n            },\r\n          + {\r\n              + id = \"666666666666\"\r\n]\r\n\r\n<!-- end snippet -->\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "272748766", "PostHistoryTypeId": "1", "PostId": "72713957", "RevisionGUID": "ded81781-80ec-49a0-a629-053ba80cc456", "CreationDate": "2022-06-22T10:36:13.247", "UserId": "6482719", "Text": "Terraform dynamically create a list(map)", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "272748767", "PostHistoryTypeId": "3", "PostId": "72713957", "RevisionGUID": "ded81781-80ec-49a0-a629-053ba80cc456", "CreationDate": "2022-06-22T10:36:13.247", "UserId": "6482719", "Text": "<terraform>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "72714083", "PostTypeId": "2", "ParentId": "72713957", "CreationDate": "2022-06-22T10:44:58.810", "Score": "2", "Body": "<p>You can reverse the keys and values from your map:</p>\n<pre><code>locals {\n\n  account_map   = {\n      111111111111 = &quot;DEV&quot;\n      222222222222 = &quot;DEV&quot;\n      333333333333 = &quot;STG&quot;\n      444444444444 = &quot;DEV&quot;\n      555555555555 = &quot;PROD&quot;\n      666666666666 = &quot;DEV&quot;\n    }\n\n  env_map = {for k, v in local.account_map: v =&gt; k...}\n}\n</code></pre>\n<p>then you get &quot;DEV&quot; accounts ids as:</p>\n<pre><code>dev_account_ids = env_map[&quot;DEV&quot;]\n</code></pre>\n<p><strong>UPDATE</strong></p>\n<p>To get exactly your desired output, you can do:</p>\n<pre><code>  env_map = [for k, v in local.account_map: {\n               id = k \n            } if v == &quot;DEV&quot;\n            ]\n</code></pre>\n", "OwnerUserId": "248823", "LastEditorUserId": "248823", "LastEditDate": "2022-06-22T11:10:28.767", "LastActivityDate": "2022-06-22T11:10:28.767", "CommentCount": "5", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "128439048", "PostId": "72714083", "Score": "1", "Text": "`v => k...` definitely handles the multiple keys situation, but would this not produce a `list(string)` of the `DEV` account id? That feels like a better structure, but is not the one requested in the question. Curious also why not `[ ... : k if v == \"DEV\" ]` instead in that case as that would be more compact and efficient.", "CreationDate": "2022-06-22T11:01:55.000", "UserId": "5343387", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Curious also why not `[ ... : k if v == \"DEV\" ]` instead in that case as that would be more compact and efficient.", "keywords": ["efficient"]}]}, {"Id": "128439109", "PostId": "72714083", "Score": "0", "Text": "@MattSchuchard My answer is more general. It will work for all environments, not only `DEV`.", "CreationDate": "2022-06-22T11:05:58.427", "UserId": "248823", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "128439136", "PostId": "72714083", "Score": "0", "Text": "Ok for sure; then it only matters if the alternate structure is fine, and it is definitely cleaner.", "CreationDate": "2022-06-22T11:07:11.853", "UserId": "5343387", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "128439207", "PostId": "72714083", "Score": "1", "Text": "@MattSchuchard I updated the answer with code to match precisely the OP's desired output.", "CreationDate": "2022-06-22T11:11:02.057", "UserId": "248823", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "128441274", "PostId": "72714083", "Score": "0", "Text": "Already LGTM though; ergo why I upvoted.", "CreationDate": "2022-06-22T12:38:04.617", "UserId": "5343387", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "272749481", "PostHistoryTypeId": "2", "PostId": "72714083", "RevisionGUID": "b6b2670f-82d4-4f63-80a2-f612efce4629", "CreationDate": "2022-06-22T10:44:58.810", "UserId": "248823", "Text": "You can reverse the keys and values from your map:\r\n\r\n```\r\nlocals {\r\n\r\n  account_map   = {\r\n      111111111111 = \"DEV\"\r\n      222222222222 = \"DEV\"\r\n      333333333333 = \"STG\"\r\n      444444444444 = \"DEV\"\r\n      555555555555 = \"PROD\"\r\n      666666666666 = \"DEV\"\r\n    }\r\n\r\n  env_map = {for k, v in local.account_map: v => k...}\r\n}\r\n```\r\n\r\nthen you get \"DEV\" accounts ids as:\r\n\r\n```\r\ndev_account_ids = env_map[\"DEV\"]\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "272751369", "PostHistoryTypeId": "5", "PostId": "72714083", "RevisionGUID": "73f8d81b-69ed-4ab9-b5b8-4392087d9e3d", "CreationDate": "2022-06-22T11:10:28.767", "UserId": "248823", "Comment": "added 192 characters in body", "Text": "You can reverse the keys and values from your map:\r\n\r\n```\r\nlocals {\r\n\r\n  account_map   = {\r\n      111111111111 = \"DEV\"\r\n      222222222222 = \"DEV\"\r\n      333333333333 = \"STG\"\r\n      444444444444 = \"DEV\"\r\n      555555555555 = \"PROD\"\r\n      666666666666 = \"DEV\"\r\n    }\r\n\r\n  env_map = {for k, v in local.account_map: v => k...}\r\n}\r\n```\r\n\r\nthen you get \"DEV\" accounts ids as:\r\n\r\n```\r\ndev_account_ids = env_map[\"DEV\"]\r\n```\r\n\r\n**UPDATE**\r\n\r\nTo get exactly your desired output, you can do:\r\n\r\n```\r\n  env_map = [for k, v in local.account_map: {\r\n               id = k \r\n            } if v == \"DEV\"\r\n            ]\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": false, "filtered-sentences": []}