{"Id": "68311202", "PostTypeId": "1", "CreationDate": "2021-07-09T04:14:53.247", "Score": "0", "ViewCount": "121", "Body": "<p>I am creating few AWS resources via terraform including DB and S3 buckets. I dont want to delete the DB and S3 bucket if the environment is PROD else delete all the resources.\nHow can I achieve this?</p>\n", "OwnerUserId": "5252078", "LastActivityDate": "2021-07-09T04:14:53.247", "Title": "Don't Delete prod Database when destroying other AWS resource in Terraform", "Tags": "<terraform><terraform-provider-aws><destroy>", "AnswerCount": "0", "CommentCount": "7", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "120730214", "PostId": "68311202", "Score": "0", "Text": "The easy answer is Terraform Workspaces, their SaaS offering.  This costs $$. If you don't want to pay for workspaces, you'll need to re-arrange your code so different environments have different state files (eg, prod.tfstate, nonprod.tfstate). This takes practice and experience.", "CreationDate": "2021-07-09T04:23:57.630", "UserId": "7512742", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "If you don't want to pay for workspaces, you'll need to re-arrange your code so different environments have different state files (eg, prod.tfstate, nonprod.tfstate). ", "keywords": ["pay"]}]}, {"Id": "120734984", "PostId": "68311202", "Score": "1", "Text": "@AdamVincent Workspaces are available in the free version of Terraform too? You haven't really explained how workspaces would help avoid this either.", "CreationDate": "2021-07-09T09:02:23.190", "UserId": "2291321", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "120739841", "PostId": "68311202", "Score": "0", "Text": "> \"Terraform Workspaces, their SaaS offering. This costs $$\" It is implied there is no free version of their SaaS offering. I cannot summarize the entirety of Workspaces in a comment, but the essential bit that can solve this problem is: Workspaces can help break up a monolithic terraform configuration into many smaller ones, without increasing the deployment complexity (this is still possible with the free version, but the complexity increases)", "CreationDate": "2021-07-09T12:44:00.920", "UserId": "7512742", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "120740533", "PostId": "68311202", "Score": "0", "Text": "If this is a one-off situation, then you can use the `-target=<resource namespace>` argument. If this is a persistent situation, then you should re-organize your configs such that you have more granular control of your resources.", "CreationDate": "2021-07-09T13:12:17.990", "UserId": "5343387", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "120741651", "PostId": "68311202", "Score": "0", "Text": "@AdamVincent Still I am not getting how can I avoid to delete few specific resources which are persisted if the Env is PROD.  I know, we can manage multiple tfstate files for each environment. But as I said, I want to create the resource if does not exist but do not destroy in case of PROD env.", "CreationDate": "2021-07-09T13:54:17.787", "UserId": "5252078", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "120741750", "PostId": "68311202", "Score": "0", "Text": "There is no 'environment' concept in Terraform. If you want environments and those environments are likely to change at different rates then you'll need to break your terraform configuration up into separate states. Then, changes to one environment will not affect another.", "CreationDate": "2021-07-09T13:58:58.793", "UserId": "7512742", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "If you want environments and those environments are likely to change at different rates then you'll need to break your terraform configuration up into separate states. ", "keywords": ["change"]}, {"source": "Text", "text": "Then, changes to one environment will not affect another.", "keywords": ["change"]}]}, {"Id": "120742280", "PostId": "68311202", "Score": "0", "Text": "By environment I mean, \n```\nIt's a variable, if variable value is PROD (Let's assume) -\n       Create the Resources when apply runs if does not exist. But dont delete when Destroy runs\nelse - \n      Create and Destroy as usual.\n```", "CreationDate": "2021-07-09T14:23:30.980", "UserId": "5252078", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "249923596", "PostHistoryTypeId": "2", "PostId": "68311202", "RevisionGUID": "bc1d4a7f-5d77-466e-85fa-ba0667bb9e92", "CreationDate": "2021-07-09T04:14:53.247", "UserId": "5252078", "Text": "I am creating few AWS resources via terraform including DB and S3 buckets. I dont want to delete the DB and S3 bucket if the environment is PROD else delete all the resources.\r\nHow can I achieve this? ", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "249923597", "PostHistoryTypeId": "1", "PostId": "68311202", "RevisionGUID": "bc1d4a7f-5d77-466e-85fa-ba0667bb9e92", "CreationDate": "2021-07-09T04:14:53.247", "UserId": "5252078", "Text": "Don't Delete prod Database when destroying other AWS resource in Terraform", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "249923598", "PostHistoryTypeId": "3", "PostId": "68311202", "RevisionGUID": "bc1d4a7f-5d77-466e-85fa-ba0667bb9e92", "CreationDate": "2021-07-09T04:14:53.247", "UserId": "5252078", "Text": "<terraform><terraform-provider-aws><destroy>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": []}