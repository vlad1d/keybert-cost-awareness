{"Id": "70310510", "PostTypeId": "1", "CreationDate": "2021-12-10T21:21:20.117", "Score": "1", "ViewCount": "1152", "Body": "<p>I have run a terraform script to create some resources, including a VPC with private subnets, an RDS instance, and Kinesis/Firehose. This is working fine.</p>\n<p>When I went to re-run terraform and add some new resources (ElasticSearch in this case), Terraform started outputting a plan that included adding AWS tags to many of my previously existing resources, the text of which look like <strong>&quot;map-migrated&quot; = &quot;d-server-01uw80xeqs2083&quot;</strong>. Here is a snippet from the plan:</p>\n<pre><code># module.rds.aws_db_instance.etl_metastore_rds_dbinstance will be updated in-place\n  ~ resource &quot;aws_db_instance&quot; &quot;rds_dbinstance&quot; {\n        id                                    = &quot;MyRDSId&quot;\n        name                                  = &quot;etldb&quot;\n      ~ tags                                  = {\n          - &quot;map-migrated&quot; = &quot;d-server-01uw80xeqs2083&quot; -&gt; null\n            # (2 unchanged elements hidden)\n        }\n      ~ tags_all                              = {\n          - &quot;map-migrated&quot; = &quot;d-server-01uw80xeqs2083&quot; -&gt; null\n            # (2 unchanged elements hidden)\n        }\n        # (48 unchanged attributes hidden)\n    }\n</code></pre>\n<p>I don't know why these tags are being added. Neither Google nor the Terraform docs have been any help on this issue. Is this something I can safely ignore? I'm worried that somehow I have crossed versions of Terraform and it's doing a migration that I don't want. As far as I know I am using the same version of Terraform before and after (1.0.1).</p>\n", "OwnerUserId": "787960", "LastActivityDate": "2023-02-06T10:06:39.067", "Title": "Why is terraform adding \"map-migrated\" tags to various resources?", "Tags": "<amazon-web-services><terraform>", "AnswerCount": "1", "CommentCount": "4", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "124291711", "PostId": "70310510", "Score": "1", "Text": "This plan seems to be proposing to _remove_ those tags, rather than to _add_ those tags. In situations like this, I'd typically guess that someone or something added tags outside of Terraform, which Terraform is now proposing to remove in order to restore the object to match the desired state described in the configuration.", "CreationDate": "2021-12-11T00:52:34.797", "UserId": "281848", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "124291729", "PostId": "70310510", "Score": "0", "Text": "Did the plan also include a \"Note: Objects changed outside of Terraform\" section to show that Terraform discovered that these tags had been added?", "CreationDate": "2021-12-11T00:53:39.897", "UserId": "281848", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Did the plan also include a \"Note: Objects changed outside of Terraform\" section to show that Terraform discovered that these tags had been added?", "keywords": ["change"]}]}, {"Id": "124292245", "PostId": "70310510", "Score": "1", "Text": "You must have an external auto-tagger somewhere in your account.", "CreationDate": "2021-12-11T02:06:34.363", "UserId": "248823", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "124306390", "PostId": "70310510", "Score": "0", "Text": "@MartinAtkins You are correct on both counts. I misread the plan, and interpreted the upper portion (where it discovered those new tags) with the bottom portion where it proposes to remove them. If you want to submit an answer summarizing this as such, I will approve it.", "CreationDate": "2021-12-12T01:21:23.247", "UserId": "787960", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "259812853", "PostHistoryTypeId": "2", "PostId": "70310510", "RevisionGUID": "268f0f41-126d-4bf8-9d6e-f49e98398d2d", "CreationDate": "2021-12-10T21:21:20.117", "UserId": "787960", "Text": "I have run a terraform script to create some resources, including a VPC with private subnets, an RDS instance, and Kinesis/Firehose. This is working fine.\r\n\r\nWhen I went to re-run terraform and add some new resources (ElasticSearch in this case), Terraform started outputting a plan that included adding AWS tags to many of my previously existing resources, the text of which look like **\"map-migrated\" = \"d-server-01uw80xeqs2083\"**. Here is a snippet from the plan:\r\n```\r\n# module.rds.aws_db_instance.etl_metastore_rds_dbinstance will be updated in-place\r\n  ~ resource \"aws_db_instance\" \"rds_dbinstance\" {\r\n        id                                    = \"MyRDSId\"\r\n        name                                  = \"etldb\"\r\n      ~ tags                                  = {\r\n          - \"map-migrated\" = \"d-server-01uw80xeqs2083\" -> null\r\n            # (2 unchanged elements hidden)\r\n        }\r\n      ~ tags_all                              = {\r\n          - \"map-migrated\" = \"d-server-01uw80xeqs2083\" -> null\r\n            # (2 unchanged elements hidden)\r\n        }\r\n        # (48 unchanged attributes hidden)\r\n    }\r\n```\r\n\r\nI don't know why these tags are being added. Neither Google nor the Terraform docs have been any help on this issue. Is this something I can safely ignore? I'm worried that somehow I have crossed versions of Terraform and it's doing a migration that I don't want. As far as I know I am using the same version of Terraform before and after (1.0.1).", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I have run a terraform script to create some resources, including a VPC with private subnets, an RDS instance, and Kinesis/Firehose. ", "keywords": ["instance"]}]}, {"Id": "259812855", "PostHistoryTypeId": "1", "PostId": "70310510", "RevisionGUID": "268f0f41-126d-4bf8-9d6e-f49e98398d2d", "CreationDate": "2021-12-10T21:21:20.117", "UserId": "787960", "Text": "Why is terraform adding \"map-migrated\" tags to various resources?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "259812856", "PostHistoryTypeId": "3", "PostId": "70310510", "RevisionGUID": "268f0f41-126d-4bf8-9d6e-f49e98398d2d", "CreationDate": "2021-12-10T21:21:20.117", "UserId": "787960", "Text": "<amazon-web-services><terraform>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "74572175", "PostTypeId": "2", "ParentId": "70310510", "CreationDate": "2022-11-25T11:31:45.460", "Score": "0", "Body": "<p>Terraform proposes to <strong>remove</strong> those tags.</p>\n<pre><code>    Resource actions are indicated with the following symbols:\n     + create\n     ~ update in-place\n     <b>- destroy</b></code></pre>\n<p>Reason for this is, that Terraform compares what you have running on AWS to what you defined in your terraform files. (<a href=\"https://developer.hashicorp.com/terraform/intro#track-your-infrastructure\" rel=\"nofollow noreferrer\">docs</a>)</p>\n<p>It will then take all the actions needed, so that your AWS infrastructure will match your Terraform configuration. (i.e. create, change and destroy AWS resources)</p>\n<p>Here Terraform detected, that you have those &quot;map-migrated&quot; tags on various AWS resources, so it proposes to delete them, since they are not defined in your terraform files.</p>\n<h2>Now <strong>why and how</strong> were those <strong>tags added</strong> - and <strong>can you safely remove/ignore them?</strong></h2>\n<p><strong>Why?</strong></p>\n<p>These tags are used for the <a href=\"https://aws.amazon.com/migration-acceleration-program/\" rel=\"nofollow noreferrer\"><strong>AWS Migration Acceleration Program (MAP)</strong></a>, that's why adding those tags is called &quot;MAP tagging&quot;.</p>\n<p>This is a <strong>cloud migration program</strong>, in which <strong>AWS offers</strong> to help companies get into the cloud by giving methods, tools, trainings and <strong>money</strong> (you can get AWS Credits).</p>\n<p>Now a <strong>requirement</strong> for that program is tagging your migrated resources with a <strong>&quot;map-migrated&quot; tag</strong> - or no credits for you. (credits are based on the cost and usage of tagged resources)</p>\n<p><strong>How?</strong></p>\n<p>Maybe your team is using the AWS Application Migration Service, which offers a setting to <a href=\"https://docs.aws.amazon.com/mgn/latest/ug/map-program-tagging.html\" rel=\"nofollow noreferrer\">automatically apply MAP tags</a> to launched instances.</p>\n<p>Or someone added the tags manually in the AWS account.</p>\n<p><strong>Can you safely remove/ignore them?</strong></p>\n<p>Technically you can, it won't break anything.</p>\n<p>But your project manager might get really angry, since you will lose out on funding. And the person who added those tags in AWS won't be happy either, if you override them with Terraform.</p>\n<h2>Solution</h2>\n<p>So the <strong>solution</strong> will be to ask your manager for the &quot;List of all MAP Included Services&quot; and <strong>incorporate the MAP tags in the Terraform code</strong> for all appropriate resources:</p>\n<pre><code>tags = {\n    ...\n    &quot;map-migrated&quot; = &quot;d-server-01uw80xeqs2083&quot;\n}\n</code></pre>\n<p>(Or - dirty solution - copy the tags from the <code>terraform apply</code> output into your code, until there are no such tag differences between AWS and your terraform code anymore.)</p>\n<blockquote>\n<p>Note: this tag is always the same for one <a href=\"https://docs.aws.amazon.com/managedservices/latest/onboardingguide/management-account.html\" rel=\"nofollow noreferrer\">management (payer) account</a> and all its member accounts. The unique value is called Server Id.</p>\n</blockquote>\n", "OwnerUserId": "20594090", "LastEditorUserId": "20594090", "LastEditDate": "2023-02-06T10:06:39.067", "LastActivityDate": "2023-02-06T10:06:39.067", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "282979212", "PostHistoryTypeId": "2", "PostId": "74572175", "RevisionGUID": "7646bc45-f867-4028-8bae-122eec1162bf", "CreationDate": "2022-11-25T11:31:45.460", "UserId": "20594090", "Text": "Terraform proposes to **remove** those tags.\r\n<pre><code>    Resource actions are indicated with the following symbols:\r\n     + create\r\n     ~ update in-place\r\n     <b>- destroy</b></code></pre>\r\n\r\nReason for this is, that Terraform compares what you have running on AWS to what you defined in your terraform files. ([docs][1])\r\n\r\nIt will then take all the actions needed, so that your AWS infrastructure will match your Terraform configuration. (i.e. create, change and destroy AWS resources)\r\n\r\nHere Terraform detected, that you have those \"map-migrated\" tags on various AWS resources, so it proposes to delete them, since they are not defined in your terraform files.\r\n\r\n\r\n----------\r\n\r\n\r\nNow **why and how** were those **tags added** - and **can you safely remove/ignore them?**\r\n\r\n**Why?**\r\n\r\nThese tags are used for the [**AWS Migration Acceleration Program (MAP)**][2], that's why adding those tags is called \"MAP tagging\".\r\n\r\nThis is a **cloud migration program**, in which **AWS offers** to help companies get into the cloud by giving methods, tools, trainings and **money** (you can get AWS Credits).\r\n\r\nNow a **requirement** for that program is tagging your migrated resources with a **\"map-migrated\" tag** - or no credits for you. (credits are based on the cost and usage of tagged resources)\r\n\r\n**How?**\r\n\r\nMaybe your team is using the AWS Application Migration Service, which offers a setting to [automatically apply MAP tags][3] to launched instances.\r\n\r\nOr someone added the tags manually in the AWS account.\r\n\r\n**Can you safely remove/ignore them?**\r\n\r\nTechnically you can, it won't break anything.\r\n\r\nBut your project manager might get really angry, since you will lose out on funding. And the person who added those tags in AWS won't be happy either, if you override them with Terraform.\r\n\r\nSo the **solution** will be to ask your manager for the \"List of all MAP Included Services\" and **incorporate the MAP tags in the Terraform code** for all appropriate resources:\r\n\r\n    tags = {\r\n        ...\r\n        \"map-migrated\" = \"d-server-01uw80xeqs2083\"\r\n    }\r\n\r\n(Or - dirty solution - copy the tags from the `terraform apply` output into your code, until there are no such tag differences between AWS and your terraform code anymore.)\r\n\r\n> Note: this tag is always the same for one [management (payer) account][4] and all its member accounts. The unique value is called Server Id.\r\n\r\n\r\n  [1]: https://developer.hashicorp.com/terraform/intro#track-your-infrastructure\r\n  [2]: https://aws.amazon.com/de/migration-acceleration-program/\r\n  [3]: https://docs.aws.amazon.com/mgn/latest/ug/map-program-tagging.html\r\n  [4]: https://docs.aws.amazon.com/managedservices/latest/onboardingguide/management-account.html", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "(i.e. create, change and destroy AWS resources) ", "keywords": ["change"]}, {"source": "Text", "text": "Now a **requirement** for that program is tagging your migrated resources with a **\"map-migrated\" tag** - or no credits for you. (credits are based on the cost and usage of tagged resources) **How?** ", "keywords": ["cost"]}]}, {"Id": "282979630", "PostHistoryTypeId": "5", "PostId": "74572175", "RevisionGUID": "1392932b-481a-4c6b-a88a-fe6b33638d43", "CreationDate": "2022-11-25T11:38:23.567", "UserId": "20594090", "Comment": "added 80 characters in body", "Text": "Terraform proposes to **remove** those tags.\r\n<pre><code>    Resource actions are indicated with the following symbols:\r\n     + create\r\n     ~ update in-place\r\n     <b>- destroy</b></code></pre>\r\n\r\nReason for this is, that Terraform compares what you have running on AWS to what you defined in your terraform files. ([docs][1])\r\n\r\nIt will then take all the actions needed, so that your AWS infrastructure will match your Terraform configuration. (i.e. create, change and destroy AWS resources)\r\n\r\nHere Terraform detected, that you have those \"map-migrated\" tags on various AWS resources, so it proposes to delete them, since they are not defined in your terraform files.\r\n\r\nNow **why and how** were those **tags added** - and **can you safely remove/ignore them?**\r\n------------------------------------------------------------------------\r\n\r\n**Why?**\r\n\r\nThese tags are used for the [**AWS Migration Acceleration Program (MAP)**][2], that's why adding those tags is called \"MAP tagging\".\r\n\r\nThis is a **cloud migration program**, in which **AWS offers** to help companies get into the cloud by giving methods, tools, trainings and **money** (you can get AWS Credits).\r\n\r\nNow a **requirement** for that program is tagging your migrated resources with a **\"map-migrated\" tag** - or no credits for you. (credits are based on the cost and usage of tagged resources)\r\n\r\n**How?**\r\n\r\nMaybe your team is using the AWS Application Migration Service, which offers a setting to [automatically apply MAP tags][3] to launched instances.\r\n\r\nOr someone added the tags manually in the AWS account.\r\n\r\n**Can you safely remove/ignore them?**\r\n\r\nTechnically you can, it won't break anything.\r\n\r\nBut your project manager might get really angry, since you will lose out on funding. And the person who added those tags in AWS won't be happy either, if you override them with Terraform.\r\n\r\n\r\nSolution\r\n--------\r\n\r\nSo the **solution** will be to ask your manager for the \"List of all MAP Included Services\" and **incorporate the MAP tags in the Terraform code** for all appropriate resources:\r\n\r\n    tags = {\r\n        ...\r\n        \"map-migrated\" = \"d-server-01uw80xeqs2083\"\r\n    }\r\n\r\n(Or - dirty solution - copy the tags from the `terraform apply` output into your code, until there are no such tag differences between AWS and your terraform code anymore.)\r\n\r\n> Note: this tag is always the same for one [management (payer) account][4] and all its member accounts. The unique value is called Server Id.\r\n\r\n\r\n  [1]: https://developer.hashicorp.com/terraform/intro#track-your-infrastructure\r\n  [2]: https://aws.amazon.com/de/migration-acceleration-program/\r\n  [3]: https://docs.aws.amazon.com/mgn/latest/ug/map-program-tagging.html\r\n  [4]: https://docs.aws.amazon.com/managedservices/latest/onboardingguide/management-account.html", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "(i.e. create, change and destroy AWS resources) ", "keywords": ["change"]}, {"source": "Text", "text": "Now a **requirement** for that program is tagging your migrated resources with a **\"map-migrated\" tag** - or no credits for you. (credits are based on the cost and usage of tagged resources) **How?** ", "keywords": ["cost"]}]}, {"Id": "287533961", "PostHistoryTypeId": "5", "PostId": "74572175", "RevisionGUID": "2688791a-99b3-4f41-b866-72861f16db57", "CreationDate": "2023-02-06T10:06:39.067", "UserId": "20594090", "Comment": "deleted 3 characters in body", "Text": "Terraform proposes to **remove** those tags.\r\n<pre><code>    Resource actions are indicated with the following symbols:\r\n     + create\r\n     ~ update in-place\r\n     <b>- destroy</b></code></pre>\r\n\r\nReason for this is, that Terraform compares what you have running on AWS to what you defined in your terraform files. ([docs][1])\r\n\r\nIt will then take all the actions needed, so that your AWS infrastructure will match your Terraform configuration. (i.e. create, change and destroy AWS resources)\r\n\r\nHere Terraform detected, that you have those \"map-migrated\" tags on various AWS resources, so it proposes to delete them, since they are not defined in your terraform files.\r\n\r\nNow **why and how** were those **tags added** - and **can you safely remove/ignore them?**\r\n------------------------------------------------------------------------\r\n\r\n**Why?**\r\n\r\nThese tags are used for the [**AWS Migration Acceleration Program (MAP)**][2], that's why adding those tags is called \"MAP tagging\".\r\n\r\nThis is a **cloud migration program**, in which **AWS offers** to help companies get into the cloud by giving methods, tools, trainings and **money** (you can get AWS Credits).\r\n\r\nNow a **requirement** for that program is tagging your migrated resources with a **\"map-migrated\" tag** - or no credits for you. (credits are based on the cost and usage of tagged resources)\r\n\r\n**How?**\r\n\r\nMaybe your team is using the AWS Application Migration Service, which offers a setting to [automatically apply MAP tags][3] to launched instances.\r\n\r\nOr someone added the tags manually in the AWS account.\r\n\r\n**Can you safely remove/ignore them?**\r\n\r\nTechnically you can, it won't break anything.\r\n\r\nBut your project manager might get really angry, since you will lose out on funding. And the person who added those tags in AWS won't be happy either, if you override them with Terraform.\r\n\r\n\r\nSolution\r\n--------\r\n\r\nSo the **solution** will be to ask your manager for the \"List of all MAP Included Services\" and **incorporate the MAP tags in the Terraform code** for all appropriate resources:\r\n\r\n    tags = {\r\n        ...\r\n        \"map-migrated\" = \"d-server-01uw80xeqs2083\"\r\n    }\r\n\r\n(Or - dirty solution - copy the tags from the `terraform apply` output into your code, until there are no such tag differences between AWS and your terraform code anymore.)\r\n\r\n> Note: this tag is always the same for one [management (payer) account][4] and all its member accounts. The unique value is called Server Id.\r\n\r\n\r\n  [1]: https://developer.hashicorp.com/terraform/intro#track-your-infrastructure\r\n  [2]: https://aws.amazon.com/migration-acceleration-program/\r\n  [3]: https://docs.aws.amazon.com/mgn/latest/ug/map-program-tagging.html\r\n  [4]: https://docs.aws.amazon.com/managedservices/latest/onboardingguide/management-account.html", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "(i.e. create, change and destroy AWS resources) ", "keywords": ["change"]}, {"source": "Text", "text": "Now a **requirement** for that program is tagging your migrated resources with a **\"map-migrated\" tag** - or no credits for you. (credits are based on the cost and usage of tagged resources) **How?** ", "keywords": ["cost"]}]}], "filtered-sentences": [{"source": "Body", "text": "It will then take all the actions needed, so that your AWS infrastructure will match your Terraform configuration. (i.e. create, change and destroy AWS resources) ", "keywords": ["change"]}, {"source": "Body", "text": "Now a requirement for that program is tagging your migrated resources with a \"map-migrated\" tag - or no credits for you. (credits are based on the cost and usage of tagged resources) ", "keywords": ["cost"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I have run a terraform script to create some resources, including a VPC with private subnets, an RDS instance, and Kinesis/Firehose. ", "keywords": ["instance"]}]}