{"Id": "69770131", "PostTypeId": "1", "CreationDate": "2021-10-29T13:53:56.157", "Score": "0", "ViewCount": "771", "Body": "<p>I am learning actually Terraform and I have been trying to use it to create docker containers on a remote server. It is working but the problem is <strong>It keeps asking for the passphrase on each step</strong>. I want to enter the passphrase only once in the beginning and then have all my resources deployed. Here is my terraform code.</p>\n<pre><code>terraform {\n  required_providers {\n    docker = {\n      source  = &quot;kreuzwerker/docker&quot;\n      version = &quot;&gt;= 2.13.0&quot;\n    }\n  }\n}\n\n\nprovider &quot;docker&quot; {\n  host = &quot;ssh://username@myserverip:22&quot;\n\n  registry_auth {\n    address     = &quot;my.docker.repo&quot;\n    config_file = pathexpand(&quot;~/.docker/config.json&quot;)\n  }\n\n}\n\nresource &quot;docker_image&quot; &quot;nginx&quot; {\n  name         = &quot;nginx:latest&quot;\n  keep_locally = false\n}\n\nresource &quot;docker_container&quot; &quot;nginx&quot; {\n  image = docker_image.nginx.latest\n  name  = &quot;tutorial&quot;\n  ports {\n    internal = 80\n    external = 8000\n  }\n}\n</code></pre>\n<p>Here is the interactive output of the deployment, you can see that with each SSH command, I keep entering the passphrase.</p>\n<pre><code>PS C:\\Users\\lenovo\\learn-terraform-docker-container&gt; terraform apply\nusername@server's password:\ndocker_image.nginx: Refreshing state... [id=sha256:d1a364dc548d5357f0da3268c888e1971bbdb957ee3f028fe7194f1d61c6fdeenginx:latest]\nusername@server's password:\ndocker_container.nginx: Refreshing state... [id=fab834920f1b0d1382be1e54a112124042e889b26fa86cbc82bb86cb9962a0f1]\nusername@server's password:\n\nUnless you have made equivalent changes to your configuration, or ignored the relevant       \nattributes using ignore_changes, the following plan may include actions to undo or respond   \nto these changes.\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \n\nTerraform used the selected providers to generate the following execution plan. Resource     \nactions are indicated with the following symbols:\n  + create\n\nTerraform will perform the following actions:\n\n  # docker_container.nginx will be created\n\nPlan: 1 to add, 0 to change, 0 to destroy.\n\nDo you want to perform these actions?\n  Terraform will perform the actions described above.\n  Only 'yes' will be accepted to approve.\n\n  Enter a value: yes\n\nusername@server's password\ndocker_container.nginx: Creating...\nusername@server's password: \ndocker_container.nginx: Still creating... [10s elapsed]\ndocker_container.nginx: Creation complete after 11s \n\nApply complete! Resources: 1 added, 0 changed, 0 destroyed.   \n</code></pre>\n<p>I generated the SSH key with ssh-keygen command and I copied the key to the SSH configuration file on my local computer:</p>\n<pre><code>    R\u00e9pertoire\u00a0: C:\\Users\\lenovo\\.ssh\n\n\nMode                 LastWriteTime         Length Name\n----                 -------------         ------ ----\n-a----        29/10/2021     15:33            316 config\n-a----        29/10/2021     15:10           1766 id_rsa\n-a----        29/10/2021     15:11            415 id_rsa.pub\n-a----        29/10/2021     14:01           5569 known_hosts\n</code></pre>\n<p>Here is the SSH config file</p>\n<pre><code>Host server_ip\n  HostName server_ip\n  IdentityFile &quot;C:\\Users\\lenovo\\.ssh\\id_rsa&quot;\n  User username\n</code></pre>\n<p>How can I be able to execute this code by only providing the SSH passphrase only once ?</p>\n", "OwnerUserId": "15333232", "LastActivityDate": "2022-02-18T08:10:18.670", "Title": "Terraform asks for passphrase to Docker Host on each step", "Tags": "<docker><ssh><terraform><ssh-keys><terraform-provider-docker>", "AnswerCount": "1", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "123332232", "PostId": "69770131", "Score": "0", "Text": "I would troubleshoot this error first outside of Terraform: `username@server's password:`. That looks like the SSH key is being bypassed and you are being prompted for `username` host password. Try just getting a plain vanilla SSH session working with the key you have generated, before attempting to introduce Terraform - if the key is not encrypted, when the key is in use it should not prompt you for anything and just connect. Also, it may sound odd, by try removing the `Hostname` line from your SSH config - I have seen odd behaviour with keys when that line is included.", "CreationDate": "2021-10-29T18:00:10.007", "UserId": "3178962", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "123332291", "PostId": "69770131", "Score": "0", "Text": "Also when troubleshooting raw SSH, try adding `-vvv` to get very verbose diag output. It might give a clue why the key is seemingly not being used.", "CreationDate": "2021-10-29T18:04:20.000", "UserId": "3178962", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "256895064", "PostHistoryTypeId": "2", "PostId": "69770131", "RevisionGUID": "b566bdc3-7e3d-4fe1-b9c5-e167ccf06441", "CreationDate": "2021-10-29T13:53:56.157", "UserId": "15333232", "Text": "I am learning actually Terraform and I have been trying to use it to create docker containers on a remote server. It is working but the problem is **It keeps asking for the passphrase on each step**. I want to enter the passphrase only once in the beginning and then have all my resources deployed. Here is my terraform code.\r\n\r\n    terraform {\r\n      required_providers {\r\n        docker = {\r\n          source  = \"kreuzwerker/docker\"\r\n          version = \">= 2.13.0\"\r\n        }\r\n      }\r\n    }\r\n    \r\n    \r\n    provider \"docker\" {\r\n      host = \"ssh://username@myserverip:22\"\r\n    \r\n      registry_auth {\r\n        address     = \"my.docker.repo\"\r\n        config_file = pathexpand(\"~/.docker/config.json\")\r\n      }\r\n    \r\n    }\r\n    \r\n    resource \"docker_image\" \"nginx\" {\r\n      name         = \"nginx:latest\"\r\n      keep_locally = false\r\n    }\r\n    \r\n    resource \"docker_container\" \"nginx\" {\r\n      image = docker_image.nginx.latest\r\n      name  = \"tutorial\"\r\n      ports {\r\n        internal = 80\r\n        external = 8000\r\n      }\r\n    }\r\n    \r\n  \r\nHere is the interactive output of the deployment, you can see that with each SSH command, I keep entering the passphrase. \r\n\r\n    PS C:\\Users\\lenovo\\learn-terraform-docker-container> terraform apply\r\n    username@server's password:\r\n    docker_image.nginx: Refreshing state... [id=sha256:d1a364dc548d5357f0da3268c888e1971bbdb957ee3f028fe7194f1d61c6fdeenginx:latest]\r\n    username@server's password:\r\n    docker_container.nginx: Refreshing state... [id=fab834920f1b0d1382be1e54a112124042e889b26fa86cbc82bb86cb9962a0f1]\r\n    username@server's password:\r\n    \r\n    Unless you have made equivalent changes to your configuration, or ignored the relevant       \r\n    attributes using ignore_changes, the following plan may include actions to undo or respond   \r\n    to these changes.\r\n    \r\n    \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \r\n    \r\n    Terraform used the selected providers to generate the following execution plan. Resource     \r\n    actions are indicated with the following symbols:\r\n      + create\r\n    \r\n    Terraform will perform the following actions:\r\n    \r\n      # docker_container.nginx will be created\r\n    \r\n    Plan: 1 to add, 0 to change, 0 to destroy.\r\n    \r\n    Do you want to perform these actions?\r\n      Terraform will perform the actions described above.\r\n      Only 'yes' will be accepted to approve.\r\n    \r\n      Enter a value: yes\r\n    \r\n    username@server's password\r\n    docker_container.nginx: Creating...\r\n    username@server's password: \r\n    docker_container.nginx: Still creating... [10s elapsed]\r\n    docker_container.nginx: Creation complete after 11s \r\n    \r\n    Apply complete! Resources: 1 added, 0 changed, 0 destroyed.   \r\n\r\nI generated the SSH key with ssh-keygen command and I copied the key to the SSH configuration file on my local computer:\r\n\r\n        R\u00e9pertoire\u00a0: C:\\Users\\lenovo\\.ssh\r\n    \r\n    \r\n    Mode                 LastWriteTime         Length Name\r\n    ----                 -------------         ------ ----\r\n    -a----        29/10/2021     15:33            316 config\r\n    -a----        29/10/2021     15:10           1766 id_rsa\r\n    -a----        29/10/2021     15:11            415 id_rsa.pub\r\n    -a----        29/10/2021     14:01           5569 known_hosts\r\n\r\nHere is the SSH config file\r\n\r\n    Host server_ip\r\n      HostName server_ip\r\n      IdentityFile \"C:\\Users\\lenovo\\.ssh\\id_rsa\"\r\n      User username\r\n\r\nHow can I be able to execute this code by only providing the SSH passphrase only once ?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Here is my terraform code. terraform { required_providers { docker = { source = \"kreuzwerker/docker\" version = \">= 2.13.0\" } } } provider \"docker\" { host = \"ssh://username@myserverip:22\" registry_auth { address = \"my.docker.repo\" config_file = pathexpand(\"~/.docker/config.json\") } } resource \"docker_image\" \"nginx\" { name = \"nginx:latest\" keep_locally = false } resource \"docker_container\" \"nginx\" { image = docker_image.nginx.latest name = \"tutorial\" ports { internal = 80 external = 8000 } } ", "keywords": ["provider"]}, {"source": "Text", "text": "[id=fab834920f1b0d1382be1e54a112124042e889b26fa86cbc82bb86cb9962a0f1] username@server's password: Unless you have made equivalent changes to your configuration, or ignored the relevant attributes using ignore_changes, the following plan may include actions to undo or respond to these changes. ", "keywords": ["change"]}, {"source": "Text", "text": "Resource actions are indicated with the following symbols: + create Terraform will perform the following actions: # docker_container.nginx will be created Plan: 1 to add, 0 to change, 0 to destroy. ", "keywords": ["change"]}, {"source": "Text", "text": "username@server's password: docker_container.nginx: Still creating... [10s elapsed] docker_container.nginx: Creation complete after 11s Apply complete! Resources: 1 added, 0 changed, 0 destroyed. ", "keywords": ["change"]}, {"source": "Text", "text": "I generated the SSH key with ssh-keygen command and I copied the key to the SSH configuration file on my local computer: R\u00e9pertoire : C:\\Users\\lenovo\\.ssh Mode LastWriteTime Length Name ---- ------------- ------ ---- -a---- 29/10/2021 15:33 316 config -a---- 29/10/2021 15:10 1766 id_rsa -a---- 29/10/2021 15:11 415 id_rsa.pub -a---- 29/10/2021 14:01 5569 known_hosts Here is the SSH config file Host server_ip HostName server_ip IdentityFile \"C:\\Users\\lenovo\\.ssh\\id_rsa\" User username How can I be able to execute this code by only providing the SSH passphrase only once ?", "keywords": ["billing mode"]}]}, {"Id": "256895066", "PostHistoryTypeId": "1", "PostId": "69770131", "RevisionGUID": "b566bdc3-7e3d-4fe1-b9c5-e167ccf06441", "CreationDate": "2021-10-29T13:53:56.157", "UserId": "15333232", "Text": "Terraform asks for passphrase to Docker Host on each step", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "256895067", "PostHistoryTypeId": "3", "PostId": "69770131", "RevisionGUID": "b566bdc3-7e3d-4fe1-b9c5-e167ccf06441", "CreationDate": "2021-10-29T13:53:56.157", "UserId": "15333232", "Text": "<docker><ssh><terraform><ssh-keys><terraform-provider-docker>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "71170211", "PostTypeId": "2", "ParentId": "69770131", "CreationDate": "2022-02-18T08:10:18.670", "Score": "0", "Body": "<p>you need to run an ssh-agent and add your identity attached to your private key to the agent. don't know how it works with windows. with linux it should work with calling each line separatly of the following code in the shell:</p>\n<p>export DISPLAY=1\nexport SSH_ASKPASS=/path_to_the/script_that_echos_your_passphrase.sh\neval $(ssh-agent -s)\nssh-add &quot;$HOME/.ssh/id_your_private_key&quot; &lt; $SSH_ASKPASS</p>\n<p>pay attention, you also have to manage to accept the fingerprint of the ssh server at the first connection. with linux it would be something like that:</p>\n<p>ssh-keyscan -H ip_of_your_ssh_server &gt; ~/.ssh/known_hosts</p>\n", "OwnerUserId": "18241738", "LastActivityDate": "2022-02-18T08:10:18.670", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "125805184", "PostId": "71170211", "Score": "0", "Text": "\"eval $(ssh-agent -s)\" and \"export DISPLAY=1\" are separate lines ;) somehow the indentation was screwed up", "CreationDate": "2022-02-18T08:14:09.007", "UserId": "18241738", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "125805434", "PostId": "71170211", "Score": "0", "Text": "https://github.com/hashicorp/terraform-provider-docker/issues/268 probably this helps too... but hardocding sensitive credentials is bad behaviour ;P", "CreationDate": "2022-02-18T08:28:11.380", "UserId": "18241738", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "https://github.com/hashicorp/terraform-provider-docker/issues/268 probably this helps too... ", "keywords": ["provider"]}]}], "history": [{"Id": "264390626", "PostHistoryTypeId": "2", "PostId": "71170211", "RevisionGUID": "d7ba25d2-e3e1-41b7-9147-cb8a6ac3b6aa", "CreationDate": "2022-02-18T08:10:18.670", "UserId": "18241738", "Text": "you need to run an ssh-agent and add your identity attached to your private key to the agent. don't know how it works with windows. with linux it should work with calling each line separatly of the following code in the shell:\r\n\r\nexport DISPLAY=1\r\nexport SSH_ASKPASS=/path_to_the/script_that_echos_your_passphrase.sh\r\neval $(ssh-agent -s)\r\nssh-add \"$HOME/.ssh/id_your_private_key\" < $SSH_ASKPASS\r\n\r\npay attention, you also have to manage to accept the fingerprint of the ssh server at the first connection. with linux it would be something like that:\r\n\r\nssh-keyscan -H ip_of_your_ssh_server > ~/.ssh/known_hosts", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "with linux it should work with calling each line separatly of the following code in the shell: export DISPLAY=1 export SSH_ASKPASS=/path_to_the/script_that_echos_your_passphrase.sh eval $(ssh-agent -s) ssh-add \"$HOME/.ssh/id_your_private_key\" < $SSH_ASKPASS pay attention, you also have to manage to accept the fingerprint of the ssh server at the first connection. ", "keywords": ["pay"]}]}], "filtered-sentences": [{"source": "Body", "text": "with linux it should work with calling each line separatly of the following code in the shell: export DISPLAY=1 export SSH_ASKPASS=/path_to_the/script_that_echos_your_passphrase.sh eval $(ssh-agent -s) ssh-add \"$HOME/.ssh/id_your_private_key\" < $SSH_ASKPASS pay attention, you also have to manage to accept the fingerprint of the ssh server at the first connection. ", "keywords": ["pay"]}]}], "contains-topic": true, "filtered-sentences": []}