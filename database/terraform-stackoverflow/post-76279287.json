{"Id": "76279287", "PostTypeId": "1", "AcceptedAnswerId": "76280122", "CreationDate": "2023-05-18T09:07:21.493", "Score": "0", "ViewCount": "103", "Body": "<p><strong>terraform-azurerm-servciebusnamespace</strong> code:</p>\n<p><strong>main.tf</strong></p>\n<pre><code>resource &quot;azurerm_servicebus_namespace&quot; &quot;servicebus_namespace&quot; {\n  name                          = regex(&quot;^[-\\\\w\\\\._\\\\(\\\\)]+$&quot;, substr(&quot;sbns-${var.environment_name}-${var.application_name}-${var.location}&quot;, 0, 50))\n  resource_group_name           = var.resource_group_name\n  location                      = var.location\n  sku                           = var.sku\n  capacity                      = var.capacity\n  tags                          = local.tags\n  public_network_access_enabled = false\n  minimum_tls_version           = &quot;1.2&quot;\n  local_auth_enabled            = false\n  identity                      = var.identity\n  customer_managed_key {\n    key_vault_key_id = var.key_vault_key_id\n    identity_id      = var.identity_id\n  }\n}\n</code></pre>\n<p><strong>outputs.tf</strong></p>\n<pre><code>output &quot;id&quot; {\n  value = azurerm_servicebus_namespace.servicebus_namespace.id\n}\noutput &quot;endpoint&quot; {\n  value = azurerm_servicebus_namespace.servicebus_namespace.endpoint\n}\n\n</code></pre>\n<p><strong>variables.tf</strong></p>\n<pre><code>variable &quot;location&quot; {\n  type        = string\n  description = &quot;Location of the resource group&quot;\n}\n\nvariable &quot;environment_name&quot; {\n  type        = string\n  description = &lt;&lt;EOT\n    (Optional)  The name of the environment where the resources will be deployed.\n\n    Options:\n      - dev\n      - uat\n      - test\n      - prod\n\n    Default: dev\n  EOT\n\n  default = &quot;dev&quot;\n\n  validation {\n    condition     = can(regex(&quot;(dev|uat|test|prod)&quot;, var.environment_name))\n    error_message = &quot;Err: environment name is not valid.&quot;\n  }\n}\nvariable &quot;department&quot; {\n  type        = string\n  description = &quot;Name of the department&quot;\n}\nvariable &quot;cost_centre&quot; {\n  type        = string\n  description = &quot;Cost Centre for the Resource or Resource Group&quot;\n\n}\nvariable &quot;application_name&quot; {\n  type        = string\n  description = &quot;Name of the application&quot;\n\n}\n\nvariable &quot;resource_group_name&quot; {\n  type        = string\n  description = &quot;Name of the Resource Group where service plan is to be deployed&quot;\n\n}\n\nvariable &quot;sku&quot; {\n  type        = string\n  description = &quot;(Required) Defines which tier to use. Options are Basic, Standard or Premium. Please note that setting this field to Premium will force the creation of a new resource.&quot;\n\n  validation {\n    condition     = can(index([&quot;Basic&quot;, &quot;Standard&quot;, &quot;Premium&quot;], var.sku))\n    error_message = &quot;Invalid value for my_variable. Allowed values are value1, value2, or value3.&quot;\n  }\n}\nvariable &quot;capacity&quot; {\n  type        = number\n  description = &quot;(Optional) Specifies the capacity. When sku is Premium, capacity can be 1, 2, 4, 8, or 16. When sku is Basic or Standard, capacity can be 0 only.&quot;\n\n  default = 0 # Set a default value, assuming Basic or Standard sku\n\n  validation {\n    condition     = var.sku == &quot;Premium&quot; ? can(index([1, 2, 4, 8, 16], var.capacity)) : var.capacity == 0\n    error_message = &quot;Invalid value for capacity. When sku is Premium, capacity can be 1, 2, 4, 8, or 16. When sku is Basic or Standard, capacity can be 0 only.&quot;\n  }\n}\nvariable &quot;zone_redundant&quot; {\n  type        = bool\n  description = &quot;(Optional) Whether or not this resource is zone redundant. sku needs to be Premium. Changing this forces a new resource to be created.&quot;\n\n  default = false # Set a default value\n\n  validation {\n    condition     = var.sku == &quot;Premium&quot; ? !var.zone_redundant : var.zone_redundant\n    error_message = &quot;Invalid value for zone_redundant. When sku is Premium, zone_redundant should be true. When sku is Basic or Standard, zone_redundant should be false.&quot;\n  }\n}\nvariable &quot;identity&quot; {\n  type    = any\n  default = null\n}\n</code></pre>\n<p><strong>locals.tf</strong></p>\n<pre><code>locals {\n  tags = {\n    &quot;Environment&quot; = var.environment_name\n    &quot;Department&quot;  = var.department\n    &quot;Managed By&quot;  = &quot;Terraform Open Source&quot;\n    &quot;Cost Centre&quot; = var.cost_centre\n  }\n}\n</code></pre>\n<p>I am now calling the code in a module as below, unfortunately, it reports errors below</p>\n<pre><code>module &quot;servicebus_namespace&quot; {\n  source              = &quot;./..&quot;\n  location            = &quot;australiaeast&quot;\n  environment_name    = &quot;dev&quot;\n  department          = &quot;Data Services&quot;\n  cost_centre         = &quot;ABC101&quot;\n  application_name    = &quot;demo&quot;\n  resource_group_name = &quot;rg-dev-demo-australiaeast&quot;\n\n}\n</code></pre>\n<p>Error:</p>\n<pre><code>terraform init\n\nInitializing the backend...\nInitializing modules...\nThere are some problems with the configuration, described below.\n\nThe Terraform configuration must be valid before initialization so that\nTerraform can determine which modules and providers need to be installed.\n\u2577\n\u2502 Error: Invalid reference in variable validation\n\u2502 \n\u2502   on ../variables.tf line 64, in variable &quot;capacity&quot;:\n\u2502   64:     condition     = var.sku == &quot;Premium&quot; ? can(index([1, 2, 4, 8, 16], var.capacity)) : var.capacity == 0\n\u2502 \n\u2502 The condition for variable &quot;capacity&quot; can only refer to the variable itself, using var.capacity.\n\u2575\n\n\u2577\n\u2502 Error: Invalid reference in variable validation\n\u2502 \n\u2502   on ../variables.tf line 75, in variable &quot;zone_redundant&quot;:\n\u2502   75:     condition     = var.sku == &quot;Premium&quot; ? !var.zone_redundant : var.zone_redundant\n\u2502 \n\u2502 The condition for variable &quot;zone_redundant&quot; can only refer to the variable itself, using var.zone_redundant.\n</code></pre>\n<p>Unable to understand how to resolve this error as I want capacity dependent on what user chooses SKU. Same situation for zone_redundant thing.</p>\n", "OwnerUserId": "5133523", "LastEditorUserId": "3390419", "LastEditDate": "2023-05-18T09:13:00.417", "LastActivityDate": "2023-05-18T11:28:16.520", "Title": "terraform code reporting error when using a dependent variable", "Tags": "<terraform><azureservicebus><terraform-provider-azure>", "AnswerCount": "1", "CommentCount": "3", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "134513921", "PostId": "76279287", "Score": "0", "Text": "You can only use the variable you are defining in the validation block. Also, I don't see you are using `zone_redundant` variable anywhere.", "CreationDate": "2023-05-18T09:40:21.263", "UserId": "8343484", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "134514293", "PostId": "76279287", "Score": "0", "Text": "You can't do such validations. You have to re-think your architecture.", "CreationDate": "2023-05-18T10:16:02.480", "UserId": "248823", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "134524389", "PostId": "76279287", "Score": "0", "Text": "Hello Marko and Marcin, Marko yes, I did not define the value in root tf config.\nMarcin, basically question is more TF related than architecture.\n1 if SKU is not premium, then capacity should be 0. [Basic and Standard can have capacity = 0]\n2. if sku is premium then zone_redudant is true else it should be false.\nHow to achieve. My apologies if I was not clear in my post. I was thinking of preconditions rather than validation but not sure how to accomplish it.", "CreationDate": "2023-05-19T01:42:18.210", "UserId": "5133523", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "292966324", "PostHistoryTypeId": "2", "PostId": "76279287", "RevisionGUID": "1e5d87cd-6f7d-4175-85e0-4460681da424", "CreationDate": "2023-05-18T09:07:21.493", "UserId": "5133523", "Text": "**terraform-azurerm-servciebusnamespace** code:\r\n\r\n**main.tf**\r\n\r\n```\r\nresource \"azurerm_servicebus_namespace\" \"servicebus_namespace\" {\r\n  name                          = regex(\"^[-\\\\w\\\\._\\\\(\\\\)]+$\", substr(\"sbns-${var.environment_name}-${var.application_name}-${var.location}\", 0, 50))\r\n  resource_group_name           = var.resource_group_name\r\n  location                      = var.location\r\n  sku                           = var.sku\r\n  capacity                      = var.capacity\r\n  tags                          = local.tags\r\n  public_network_access_enabled = false\r\n  minimum_tls_version           = \"1.2\"\r\n  local_auth_enabled            = false\r\n  identity                      = var.identity\r\n  customer_managed_key {\r\n    key_vault_key_id = var.key_vault_key_id\r\n    identity_id      = var.identity_id\r\n  }\r\n}\r\n```\r\n\r\n**outputs.tf**\r\n```\r\noutput \"id\" {\r\n  value = azurerm_servicebus_namespace.servicebus_namespace.id\r\n}\r\noutput \"endpoint\" {\r\n  value = azurerm_servicebus_namespace.servicebus_namespace.endpoint\r\n}\r\n\r\n```\r\n**variables.tf**\r\n```\r\nvariable \"location\" {\r\n  type        = string\r\n  description = \"Location of the resource group\"\r\n}\r\n\r\nvariable \"environment_name\" {\r\n  type        = string\r\n  description = <<EOT\r\n    (Optional)  The name of the environment where the resources will be deployed.\r\n\r\n    Options:\r\n      - dev\r\n      - uat\r\n      - test\r\n      - prod\r\n\r\n    Default: dev\r\n  EOT\r\n\r\n  default = \"dev\"\r\n\r\n  validation {\r\n    condition     = can(regex(\"(dev|uat|test|prod)\", var.environment_name))\r\n    error_message = \"Err: environment name is not valid.\"\r\n  }\r\n}\r\nvariable \"department\" {\r\n  type        = string\r\n  description = \"Name of the department\"\r\n}\r\nvariable \"cost_centre\" {\r\n  type        = string\r\n  description = \"Cost Centre for the Resource or Resource Group\"\r\n\r\n}\r\nvariable \"application_name\" {\r\n  type        = string\r\n  description = \"Name of the application\"\r\n\r\n}\r\n\r\nvariable \"resource_group_name\" {\r\n  type        = string\r\n  description = \"Name of the Resource Group where service plan is to be deployed\"\r\n\r\n}\r\n\r\nvariable \"sku\" {\r\n  type        = string\r\n  description = \"(Required) Defines which tier to use. Options are Basic, Standard or Premium. Please note that setting this field to Premium will force the creation of a new resource.\"\r\n\r\n  validation {\r\n    condition     = can(index([\"Basic\", \"Standard\", \"Premium\"], var.sku))\r\n    error_message = \"Invalid value for my_variable. Allowed values are value1, value2, or value3.\"\r\n  }\r\n}\r\nvariable \"capacity\" {\r\n  type        = number\r\n  description = \"(Optional) Specifies the capacity. When sku is Premium, capacity can be 1, 2, 4, 8, or 16. When sku is Basic or Standard, capacity can be 0 only.\"\r\n\r\n  default = 0 # Set a default value, assuming Basic or Standard sku\r\n\r\n  validation {\r\n    condition     = var.sku == \"Premium\" ? can(index([1, 2, 4, 8, 16], var.capacity)) : var.capacity == 0\r\n    error_message = \"Invalid value for capacity. When sku is Premium, capacity can be 1, 2, 4, 8, or 16. When sku is Basic or Standard, capacity can be 0 only.\"\r\n  }\r\n}\r\nvariable \"zone_redundant\" {\r\n  type        = bool\r\n  description = \"(Optional) Whether or not this resource is zone redundant. sku needs to be Premium. Changing this forces a new resource to be created.\"\r\n\r\n  default = false # Set a default value\r\n\r\n  validation {\r\n    condition     = var.sku == \"Premium\" ? !var.zone_redundant : var.zone_redundant\r\n    error_message = \"Invalid value for zone_redundant. When sku is Premium, zone_redundant should be true. When sku is Basic or Standard, zone_redundant should be false.\"\r\n  }\r\n}\r\nvariable \"identity\" {\r\n  type    = any\r\n  default = null\r\n}\r\n```\r\n**locals.tf**\r\n```\r\nlocals {\r\n  tags = {\r\n    \"Environment\" = var.environment_name\r\n    \"Department\"  = var.department\r\n    \"Managed By\"  = \"Terraform Open Source\"\r\n    \"Cost Centre\" = var.cost_centre\r\n  }\r\n}\r\n```\r\nI am now calling the code in a module as below, unfortunately, it reports errors below\r\n```\r\nmodule \"servicebus_namespace\" {\r\n  source              = \"./..\"\r\n  location            = \"australiaeast\"\r\n  environment_name    = \"dev\"\r\n  department          = \"Data Services\"\r\n  cost_centre         = \"ABC101\"\r\n  application_name    = \"demo\"\r\n  resource_group_name = \"rg-dev-demo-australiaeast\"\r\n\r\n}\r\n```\r\n\r\nError:\r\n\r\n```\r\nterraform init\r\n\r\nInitializing the backend...\r\nInitializing modules...\r\nThere are some problems with the configuration, described below.\r\n\r\nThe Terraform configuration must be valid before initialization so that\r\nTerraform can determine which modules and providers need to be installed.\r\n\u2577\r\n\u2502 Error: Invalid reference in variable validation\r\n\u2502 \r\n\u2502   on ../variables.tf line 64, in variable \"capacity\":\r\n\u2502   64:     condition     = var.sku == \"Premium\" ? can(index([1, 2, 4, 8, 16], var.capacity)) : var.capacity == 0\r\n\u2502 \r\n\u2502 The condition for variable \"capacity\" can only refer to the variable itself, using var.capacity.\r\n\u2575\r\n\r\n\u2577\r\n\u2502 Error: Invalid reference in variable validation\r\n\u2502 \r\n\u2502   on ../variables.tf line 75, in variable \"zone_redundant\":\r\n\u2502   75:     condition     = var.sku == \"Premium\" ? !var.zone_redundant : var.zone_redundant\r\n\u2502 \r\n\u2502 The condition for variable \"zone_redundant\" can only refer to the variable itself, using var.zone_redundant.\r\n```\r\n\r\nUnable to understand how to resolve this error as I want capacity dependent on what user chooses SKU. Same situation for zone_redundant thing.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Options: - dev - uat - test - prod Default: dev EOT default = \"dev\" validation { condition = can(regex(\"(dev|uat|test|prod)\", var.environment_name)) error_message = \"Err: environment name is not valid.\" } } variable \"department\" { type = string description = \"Name of the department\" } variable \"cost_centre\" { type = string description = \"Cost Centre for the Resource or Resource Group\" } variable \"application_name\" { type = string description = \"Name of the application\" } variable \"resource_group_name\" { type = string description = \"Name of the Resource Group where service plan is to be deployed\" } variable \"sku\" { type = string description = \"(Required) Defines which tier to use. ", "keywords": ["cost", "test"]}, {"source": "Text", "text": "Changing this forces a new resource to be created.\" default = false # Set a default value validation { condition = var.sku == \"Premium\" ? !var.zone_redundant : var.zone_redundant error_message = \"Invalid value for zone_redundant. ", "keywords": ["change"]}, {"source": "Text", "text": "When sku is Basic or Standard, zone_redundant should be false.\" } } variable \"identity\" { type = any default = null } ``` **locals.tf** ``` locals { tags = { \"Environment\" = var.environment_name \"Department\" = var.department \"Managed By\" = \"Terraform Open Source\" \"Cost Centre\" = var.cost_centre } } ``` I am now calling the code in a module as below, unfortunately, it reports errors below ``` module \"servicebus_namespace\" { source = \"./..\" location = \"australiaeast\" environment_name = \"dev\" department = \"Data Services\" cost_centre = \"ABC101\" application_name = \"demo\" resource_group_name = \"rg-dev-demo-australiaeast\" } ``` Error: ``` terraform init Initializing the backend... ", "keywords": ["cost"]}]}, {"Id": "292966326", "PostHistoryTypeId": "1", "PostId": "76279287", "RevisionGUID": "1e5d87cd-6f7d-4175-85e0-4460681da424", "CreationDate": "2023-05-18T09:07:21.493", "UserId": "5133523", "Text": "terraform code reporting error when using a dependent variable", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "292966327", "PostHistoryTypeId": "3", "PostId": "76279287", "RevisionGUID": "1e5d87cd-6f7d-4175-85e0-4460681da424", "CreationDate": "2023-05-18T09:07:21.493", "UserId": "5133523", "Text": "<azureservicebus><terraform-provider-azure>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "292966578", "PostHistoryTypeId": "6", "PostId": "76279287", "RevisionGUID": "0e1c7634-7d59-4b71-9cf5-a4d0539ad834", "CreationDate": "2023-05-18T09:13:00.417", "UserId": "3390419", "Comment": "edited tags", "Text": "<terraform><azureservicebus><terraform-provider-azure>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "76280122", "PostTypeId": "2", "ParentId": "76279287", "CreationDate": "2023-05-18T10:57:18.620", "Score": "1", "Body": "<p>The following way of validating one variable inside other is not possible AFAIk:</p>\n<p>variables.tf:</p>\n<pre><code>variable &quot;capacity&quot; {\n  type        = number\n  description = &quot;(Optional) Specifies the capacity. When sku is Premium, capacity can be 1, 2, 4, 8, or 16. When sku is Basic or Standard, capacity can be 0 only.&quot;\n\n  default = 0 # Set a default value, assuming Basic or Standard SKU\n\n  validation {\n    condition     = var.sku == &quot;Premium&quot; ? contains([1, 2, 4, 8, 16], var.capacity) : var.capacity == 0\n    error_message = &quot;Invalid .... capacity can be 1, 2, 4, 8, or 16. When SKU is Basic or Standard, capacity can be 0 only.&quot;\n  }\n}\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/LIest.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/LIest.png\" alt=\"enter image description here\" /></a></p>\n<p><em><strong>Modify variable validation with different value to validate only self value.</strong></em></p>\n<p><em><strong>Variables.tf</strong></em></p>\n<pre><code>variable &quot;sku&quot; {\n  type        = string\n  description = &quot;(Required) Defines which tier to use. Options are Basic, Standard or Premium. Please note that setting this field to Premium will force the creation of a new resource.&quot;\n\n  validation {\n    condition     = can(index([&quot;Basic&quot;, &quot;Standard&quot;, &quot;Premium&quot;], var.sku))\n    error_message = &quot;Invalid value for my_variable. Allowed values are value1, value2, or value3.&quot;\n  }\n}\nvariable &quot;capacity&quot; {\n  type        = number\n  description = &quot;(Optional) Specifies the capacity. When sku is Premium, capacity can be 1, 2, 4, 8, or 16. When sku is Basic or Standard, capacity can be 0 only.&quot;\n    \n  validation {\n    condition     = can(index([1, 2, 4, 8, 16], var.capacity))\n    error_message = &quot;Invalid value for capacity. When sku is Premium, capacity can be 1, 2, 4, 8, or 16. When sku is Basic or Standard, capacity can be 0 only.&quot;\n  }\n}\n</code></pre>\n<p><em><strong>Check the following way which worked for me to validate capacity based on sku\nUsing validate_capacity  in <code>locals</code></strong></em></p>\n<p>Main.tf:</p>\n<pre><code>provider &quot;azurerm&quot; {\n\n  features {\n    resource_group {\n      prevent_deletion_if_contains_resources = false\n    }\n  }\n}\n\n\nlocals {\n  validate_capacity = var.sku == &quot;Premium&quot; ? can(index([1, 2, 4, 8, 16], var.capacity)) : var.capacity == 0\n}\n\nMain.tf:\n\nresource &quot;azurerm_servicebus_namespace&quot; &quot;servicebus_namespace&quot; {\n  name                          = &quot;mxxxxxbnme&quot;\n  resource_group_name           = data.azurerm_resource_group.example.name\n  location                      = data.azurerm_resource_group.example.location\n  sku                           = var.sku\n  capacity                      = var.capacity\n  public_network_access_enabled = false\n  minimum_tls_version           = &quot;1.2&quot;\n  local_auth_enabled            = false\n  identity                      = var.identity\n   customer_managed_key {\n    ...\n   }\n}\n\n\n    output &quot;id&quot; {\n      value = azurerm_servicebus_namespace.servicebus_namespace.id\n    }\n    output &quot;endpoint&quot; {\n      value = azurerm_servicebus_namespace.servicebus_namespace.endpoint\n    }\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/2IOYl.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/2IOYl.png\" alt=\"enter image description here\" /></a></p>\n<p>with <strong><code>terraform apply</code></strong></p>\n<pre><code>*executed code:*\n\n**`terraform apply`**\n\n*Acquiring state lock. This may take a few moments...*\n\n    **var.application_name**\n      Name of the application\n    \n      Enter a value: mynewappn\n    \n    **var.capacity**\n      (Optional) Specifies the capacity. When sku is Premium, capacity can be 1, 2, 4, 8, or 16. When sku is Basic or Standard, capacity can be 0 only.\n    \n      **Enter a value**: 1\n    \n    **var.cost_centre**\n      Cost Centre for the Resource or Resource Group\n    \n      Enter a value: premium\n    \n    ****var.department**\n    \n      Name of the department**\n    \n      **Enter a value:** depmuh\n    \n    var.sku\n      (Required) Defines which tier to use. Options are Basic, Standard or Premium. Please note that setting this field to Premium will force the creation of a new resource.\n    \n      Enter a value: Premium\n\nTerraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\n  + create\n\n    **Terraform will perform the following actions:**\n\n         azurerm_servicebus_namespace.servicebus_namespace will be created\n          resource &quot;azurerm_servicebus_namespace&quot; &quot;servicebus_namespace&quot; {\n          + capacity                            = 1\n          + default_primary_connection_string   = (sensitive value)\n          + default_primary_key                 = (sensitive value)\n          + default_secondary_connection_string = (sensitive value)\n          + default_secondary_key               = (sensitive value)\n          + endpoint                            = (known after apply)\n          + id                                  = (known after apply)\n          + local_auth_enabled                  = false\n          + location                            = &quot;westus2&quot;\n          + minimum_tls_version                 = &quot;1.2&quot;\n          + name                                = &quot;mysvbnme&quot;\n          + public_network_access_enabled       = false\n          + resource_group_name                 = &quot;vttre&quot;\n          + sku          \n    \n                       = &quot;Premium&quot;\n        }\n\n**Plan: 1 to add, 0 to change, 0 to destroy.**\n\n**Changes to Outputs:**\n  + endpoint = (known after apply)\n  + id       = (known after apply)\n\n**Do you want to perform these actions?\n  Terraform will perform the actions described above.\n  Only 'yes' will be accepted to approve.**\n\n  **Enter a value:** yes\n\n**azurerm_servicebus_namespace.servicebus_namespace: Creating....**\n</code></pre>\n<p>Successfully, validated the sku and capacity value which is given as 1 is accepted:</p>\n<p><a href=\"https://i.stack.imgur.com/H1z3a.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/H1z3a.png\" alt=\"enter image description here\" /></a></p>\n<p><a href=\"https://i.stack.imgur.com/jdKF1.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/jdKF1.png\" alt=\"enter image description here\" /></a></p>\n<p>if unsupported values are given  for capacity in regards with sku, it triggers error as below:</p>\n<p><a href=\"https://i.stack.imgur.com/Ub7Go.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/Ub7Go.png\" alt=\"enter image description here\" /></a></p>\n", "OwnerUserId": "15997509", "LastEditorUserId": "15997509", "LastEditDate": "2023-05-18T11:28:16.520", "LastActivityDate": "2023-05-18T11:28:16.520", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "134524353", "PostId": "76280122", "Score": "0", "Text": "This looks promising! I have yet to test it out, but I appreciate it if you could guide me for zone_redundant as well.", "CreationDate": "2023-05-19T01:35:18.680", "UserId": "5133523", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I have yet to test it out, but I appreciate it if you could guide me for zone_redundant as well.", "keywords": ["test"]}]}], "history": [{"Id": "292970989", "PostHistoryTypeId": "2", "PostId": "76280122", "RevisionGUID": "ad571add-135d-4da9-8985-9e3fda34fd00", "CreationDate": "2023-05-18T10:57:18.620", "UserId": "15997509", "Text": "The following way of validating one variable inside other is not possible AFAIk:\r\n\r\nvariables.tf:\r\n\r\n    variable \"capacity\" {\r\n      type        = number\r\n      description = \"(Optional) Specifies the capacity. When sku is Premium, capacity can be 1, 2, 4, 8, or 16. When sku is Basic or Standard, capacity can be 0 only.\"\r\n    \r\n      default = 0 # Set a default value, assuming Basic or Standard SKU\r\n    \r\n      validation {\r\n        condition     = var.sku == \"Premium\" ? contains([1, 2, 4, 8, 16], var.capacity) : var.capacity == 0\r\n        error_message = \"Invalid .... capacity can be 1, 2, 4, 8, or 16. When SKU is Basic or Standard, capacity can be 0 only.\"\r\n      }\r\n    }\r\n\r\n[![enter image description here][1]][1]\r\n\r\n***Modify variable validation with different value to validate only self value.***\r\n\r\n\r\n***Variables.tf***\r\n\r\n    variable \"sku\" {\r\n      type        = string\r\n      description = \"(Required) Defines which tier to use. Options are Basic, Standard or Premium. Please note that setting this field to Premium will force the creation of a new resource.\"\r\n    \r\n      validation {\r\n        condition     = can(index([\"Basic\", \"Standard\", \"Premium\"], var.sku))\r\n        error_message = \"Invalid value for my_variable. Allowed values are value1, value2, or value3.\"\r\n      }\r\n    }\r\n    variable \"capacity\" {\r\n      type        = number\r\n      description = \"(Optional) Specifies the capacity. When sku is Premium, capacity can be 1, 2, 4, 8, or 16. When sku is Basic or Standard, capacity can be 0 only.\"\r\n    \r\n     // default = 0 # Set a default value, assuming Basic or Standard sku\r\n    \r\n      validation {\r\n        condition     = can(index([1, 2, 4, 8, 16], var.capacity))\r\n        error_message = \"Invalid value for capacity. When sku is Premium, capacity can be 1, 2, 4, 8, or 16. When sku is Basic or Standard, capacity can be 0 only.\"\r\n      }\r\n    }\r\n\r\n***Check the following way which worked for me to validate capacity based on sku\r\nUsing validate_capacity  in `locals`***\r\n\r\n\r\nMain.tf:\r\n\r\n\r\n    provider \"azurerm\" {\r\n    \r\n      features {\r\n        resource_group {\r\n          prevent_deletion_if_contains_resources = false\r\n        }\r\n      }\r\n    }\r\n    \r\n    \r\n    locals {\r\n      validate_capacity = var.sku == \"Premium\" ? can(index([1, 2, 4, 8, 16], var.capacity)) : var.capacity == 0\r\n    }\r\n    \r\n    Main.tf:\r\n    \r\n    resource \"azurerm_servicebus_namespace\" \"servicebus_namespace\" {\r\n      name                          = \"mxxxxxbnme\"\r\n      resource_group_name           = data.azurerm_resource_group.example.name\r\n      location                      = data.azurerm_resource_group.example.location\r\n      sku                           = var.sku\r\n      capacity                      = var.capacity\r\n      public_network_access_enabled = false\r\n      minimum_tls_version           = \"1.2\"\r\n      local_auth_enabled            = false\r\n      identity                      = var.identity\r\n       customer_managed_key {\r\n        ...\r\n       }\r\n    }\r\n    \r\n    \r\n        output \"id\" {\r\n          value = azurerm_servicebus_namespace.servicebus_namespace.id\r\n        }\r\n        output \"endpoint\" {\r\n          value = azurerm_servicebus_namespace.servicebus_namespace.endpoint\r\n        }\r\n\r\n[![enter image description here][2]][2]\r\n\r\nwith **`terraform apply`**\r\n\r\n    *executed code:*\r\n    \r\n    **`terraform apply`**\r\n    \r\n    *Acquiring state lock. This may take a few moments...*\r\n    \r\n        **var.application_name**\r\n          Name of the application\r\n        \r\n          Enter a value: mynewappn\r\n        \r\n        **var.capacity**\r\n          (Optional) Specifies the capacity. When sku is Premium, capacity can be 1, 2, 4, 8, or 16. When sku is Basic or Standard, capacity can be 0 only.\r\n        \r\n          **Enter a value**: 1\r\n        \r\n        **var.cost_centre**\r\n          Cost Centre for the Resource or Resource Group\r\n        \r\n          Enter a value: premium\r\n        \r\n        ****var.department**\r\n        \r\n          Name of the department**\r\n        \r\n          **Enter a value:** depmuh\r\n        \r\n        var.sku\r\n          (Required) Defines which tier to use. Options are Basic, Standard or Premium. Please note that setting this field to Premium will force the creation of a new resource.\r\n        \r\n          Enter a value: Premium\r\n    \r\n    Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\r\n      + create\r\n    \r\n        **Terraform will perform the following actions:**\r\n    \r\n             azurerm_servicebus_namespace.servicebus_namespace will be created\r\n              resource \"azurerm_servicebus_namespace\" \"servicebus_namespace\" {\r\n              + capacity                            = 1\r\n              + default_primary_connection_string   = (sensitive value)\r\n              + default_primary_key                 = (sensitive value)\r\n              + default_secondary_connection_string = (sensitive value)\r\n              + default_secondary_key               = (sensitive value)\r\n              + endpoint                            = (known after apply)\r\n              + id                                  = (known after apply)\r\n              + local_auth_enabled                  = false\r\n              + location                            = \"westus2\"\r\n              + minimum_tls_version                 = \"1.2\"\r\n              + name                                = \"mysvbnme\"\r\n              + public_network_access_enabled       = false\r\n              + resource_group_name                 = \"v-sakavya-Mindtree\"\r\n              + sku          \r\n        \r\n                           = \"Premium\"\r\n            }\r\n    \r\n    **Plan: 1 to add, 0 to change, 0 to destroy.**\r\n    \r\n    **Changes to Outputs:**\r\n      + endpoint = (known after apply)\r\n      + id       = (known after apply)\r\n    \r\n    **Do you want to perform these actions?\r\n      Terraform will perform the actions described above.\r\n      Only 'yes' will be accepted to approve.**\r\n    \r\n      **Enter a value:** yes\r\n    \r\n    **azurerm_servicebus_namespace.servicebus_namespace: Creating....**\r\n\r\n\r\nSuccessfully, validated the sku and capacity value which is given as 1 is accepted:\r\n[![enter image description here][3]][3]\r\n\r\n\r\n\r\n[![enter image description here][4]][4]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/LIest.png\r\n  [2]: https://i.stack.imgur.com/2IOYl.png\r\n  [3]: https://i.stack.imgur.com/H1z3a.png\r\n  [4]: https://i.stack.imgur.com/jdKF1.png", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Using validate_capacity in `locals`*** Main.tf: provider \"azurerm\" { features { resource_group { prevent_deletion_if_contains_resources = false } } } locals { validate_capacity = var.sku == \"Premium\" ? can(index([1, 2, 4, 8, 16], var.capacity)) : var.capacity == 0 } Main.tf: resource \"azurerm_servicebus_namespace\" \"servicebus_namespace\" { name = \"mxxxxxbnme\" resource_group_name = data.azurerm_resource_group.example.name location = data.azurerm_resource_group.example.location sku = var.sku capacity = var.capacity public_network_access_enabled = false minimum_tls_version = \"1.2\" local_auth_enabled = false identity = var.identity customer_managed_key { ... } } output \"id\" { value = azurerm_servicebus_namespace.servicebus_namespace.id } output \"endpoint\" { value = azurerm_servicebus_namespace.servicebus_namespace.endpoint } [![enter image description here][2]][2] with **`terraform apply`** *executed code:* **`terraform apply`** *Acquiring state lock. ", "keywords": ["provider"]}, {"source": "Text", "text": "When sku is Basic or Standard, capacity can be 0 only. **Enter a value**: 1 **var.cost_centre** Cost Centre for the Resource or Resource Group Enter a value: premium ****var.department** Name of the department** **Enter a value:** depmuh var.sku (Required) Defines which tier to use. ", "keywords": ["cost"]}, {"source": "Text", "text": "Resource actions are indicated with the following symbols: + create **Terraform will perform the following actions:** azurerm_servicebus_namespace.servicebus_namespace will be created resource \"azurerm_servicebus_namespace\" \"servicebus_namespace\" { + capacity = 1 + default_primary_connection_string = (sensitive value) + default_primary_key = (sensitive value) + default_secondary_connection_string = (sensitive value) + default_secondary_key = (sensitive value) + endpoint = (known after apply) + id = (known after apply) + local_auth_enabled = false + location = \"westus2\" + minimum_tls_version = \"1.2\" + name = \"mysvbnme\" + public_network_access_enabled = false + resource_group_name = \"v-sakavya-Mindtree\" + sku = \"Premium\" } **Plan: 1 to add, 0 to change, 0 to destroy.** **Changes to Outputs:** + endpoint = (known after apply) + id = (known after apply) **Do you want to perform these actions? ", "keywords": ["change"]}]}, {"Id": "292970991", "PostHistoryTypeId": "33", "PostId": "76280122", "RevisionGUID": "f3a337ba-ce95-48fa-9607-66ed079c463d", "CreationDate": "2023-05-18T10:57:18.620", "UserId": "-1010", "Comment": "319248", "filtered-sentences": []}, {"Id": "292972216", "PostHistoryTypeId": "5", "PostId": "76280122", "RevisionGUID": "4100657b-6410-4b9d-b46c-8a63e1896f6b", "CreationDate": "2023-05-18T11:19:06.780", "UserId": "15997509", "Comment": "added 112 characters in body", "Text": "The following way of validating one variable inside other is not possible AFAIk:\r\n\r\nvariables.tf:\r\n\r\n    variable \"capacity\" {\r\n      type        = number\r\n      description = \"(Optional) Specifies the capacity. When sku is Premium, capacity can be 1, 2, 4, 8, or 16. When sku is Basic or Standard, capacity can be 0 only.\"\r\n    \r\n      default = 0 # Set a default value, assuming Basic or Standard SKU\r\n    \r\n      validation {\r\n        condition     = var.sku == \"Premium\" ? contains([1, 2, 4, 8, 16], var.capacity) : var.capacity == 0\r\n        error_message = \"Invalid .... capacity can be 1, 2, 4, 8, or 16. When SKU is Basic or Standard, capacity can be 0 only.\"\r\n      }\r\n    }\r\n\r\n[![enter image description here][1]][1]\r\n\r\n***Modify variable validation with different value to validate only self value.***\r\n\r\n\r\n***Variables.tf***\r\n\r\n    variable \"sku\" {\r\n      type        = string\r\n      description = \"(Required) Defines which tier to use. Options are Basic, Standard or Premium. Please note that setting this field to Premium will force the creation of a new resource.\"\r\n    \r\n      validation {\r\n        condition     = can(index([\"Basic\", \"Standard\", \"Premium\"], var.sku))\r\n        error_message = \"Invalid value for my_variable. Allowed values are value1, value2, or value3.\"\r\n      }\r\n    }\r\n    variable \"capacity\" {\r\n      type        = number\r\n      description = \"(Optional) Specifies the capacity. When sku is Premium, capacity can be 1, 2, 4, 8, or 16. When sku is Basic or Standard, capacity can be 0 only.\"\r\n        \r\n      validation {\r\n        condition     = can(index([1, 2, 4, 8, 16], var.capacity))\r\n        error_message = \"Invalid value for capacity. When sku is Premium, capacity can be 1, 2, 4, 8, or 16. When sku is Basic or Standard, capacity can be 0 only.\"\r\n      }\r\n    }\r\n\r\n***Check the following way which worked for me to validate capacity based on sku\r\nUsing validate_capacity  in `locals`***\r\n\r\n\r\nMain.tf:\r\n\r\n\r\n    provider \"azurerm\" {\r\n    \r\n      features {\r\n        resource_group {\r\n          prevent_deletion_if_contains_resources = false\r\n        }\r\n      }\r\n    }\r\n    \r\n    \r\n    locals {\r\n      validate_capacity = var.sku == \"Premium\" ? can(index([1, 2, 4, 8, 16], var.capacity)) : var.capacity == 0\r\n    }\r\n    \r\n    Main.tf:\r\n    \r\n    resource \"azurerm_servicebus_namespace\" \"servicebus_namespace\" {\r\n      name                          = \"mxxxxxbnme\"\r\n      resource_group_name           = data.azurerm_resource_group.example.name\r\n      location                      = data.azurerm_resource_group.example.location\r\n      sku                           = var.sku\r\n      capacity                      = var.capacity\r\n      public_network_access_enabled = false\r\n      minimum_tls_version           = \"1.2\"\r\n      local_auth_enabled            = false\r\n      identity                      = var.identity\r\n       customer_managed_key {\r\n        ...\r\n       }\r\n    }\r\n    \r\n    \r\n        output \"id\" {\r\n          value = azurerm_servicebus_namespace.servicebus_namespace.id\r\n        }\r\n        output \"endpoint\" {\r\n          value = azurerm_servicebus_namespace.servicebus_namespace.endpoint\r\n        }\r\n\r\n[![enter image description here][2]][2]\r\n\r\nwith **`terraform apply`**\r\n\r\n    *executed code:*\r\n    \r\n    **`terraform apply`**\r\n    \r\n    *Acquiring state lock. This may take a few moments...*\r\n    \r\n        **var.application_name**\r\n          Name of the application\r\n        \r\n          Enter a value: mynewappn\r\n        \r\n        **var.capacity**\r\n          (Optional) Specifies the capacity. When sku is Premium, capacity can be 1, 2, 4, 8, or 16. When sku is Basic or Standard, capacity can be 0 only.\r\n        \r\n          **Enter a value**: 1\r\n        \r\n        **var.cost_centre**\r\n          Cost Centre for the Resource or Resource Group\r\n        \r\n          Enter a value: premium\r\n        \r\n        ****var.department**\r\n        \r\n          Name of the department**\r\n        \r\n          **Enter a value:** depmuh\r\n        \r\n        var.sku\r\n          (Required) Defines which tier to use. Options are Basic, Standard or Premium. Please note that setting this field to Premium will force the creation of a new resource.\r\n        \r\n          Enter a value: Premium\r\n    \r\n    Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\r\n      + create\r\n    \r\n        **Terraform will perform the following actions:**\r\n    \r\n             azurerm_servicebus_namespace.servicebus_namespace will be created\r\n              resource \"azurerm_servicebus_namespace\" \"servicebus_namespace\" {\r\n              + capacity                            = 1\r\n              + default_primary_connection_string   = (sensitive value)\r\n              + default_primary_key                 = (sensitive value)\r\n              + default_secondary_connection_string = (sensitive value)\r\n              + default_secondary_key               = (sensitive value)\r\n              + endpoint                            = (known after apply)\r\n              + id                                  = (known after apply)\r\n              + local_auth_enabled                  = false\r\n              + location                            = \"westus2\"\r\n              + minimum_tls_version                 = \"1.2\"\r\n              + name                                = \"mysvbnme\"\r\n              + public_network_access_enabled       = false\r\n              + resource_group_name                 = \"v-sakavya-Mindtree\"\r\n              + sku          \r\n        \r\n                           = \"Premium\"\r\n            }\r\n    \r\n    **Plan: 1 to add, 0 to change, 0 to destroy.**\r\n    \r\n    **Changes to Outputs:**\r\n      + endpoint = (known after apply)\r\n      + id       = (known after apply)\r\n    \r\n    **Do you want to perform these actions?\r\n      Terraform will perform the actions described above.\r\n      Only 'yes' will be accepted to approve.**\r\n    \r\n      **Enter a value:** yes\r\n    \r\n    **azurerm_servicebus_namespace.servicebus_namespace: Creating....**\r\n\r\n\r\nSuccessfully, validated the sku and capacity value which is given as 1 is accepted:\r\n\r\n[![enter image description here][3]][3]\r\n\r\n\r\n\r\n[![enter image description here][4]][4]\r\n\r\n\r\nif unsupported values are given  for capacity in regards with sku, it triggers error as below:\r\n\r\n[![enter image description here][5]][5]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/LIest.png\r\n  [2]: https://i.stack.imgur.com/2IOYl.png\r\n  [3]: https://i.stack.imgur.com/H1z3a.png\r\n  [4]: https://i.stack.imgur.com/jdKF1.png\r\n  [5]: https://i.stack.imgur.com/Ub7Go.png", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Using validate_capacity in `locals`*** Main.tf: provider \"azurerm\" { features { resource_group { prevent_deletion_if_contains_resources = false } } } locals { validate_capacity = var.sku == \"Premium\" ? can(index([1, 2, 4, 8, 16], var.capacity)) : var.capacity == 0 } Main.tf: resource \"azurerm_servicebus_namespace\" \"servicebus_namespace\" { name = \"mxxxxxbnme\" resource_group_name = data.azurerm_resource_group.example.name location = data.azurerm_resource_group.example.location sku = var.sku capacity = var.capacity public_network_access_enabled = false minimum_tls_version = \"1.2\" local_auth_enabled = false identity = var.identity customer_managed_key { ... } } output \"id\" { value = azurerm_servicebus_namespace.servicebus_namespace.id } output \"endpoint\" { value = azurerm_servicebus_namespace.servicebus_namespace.endpoint } [![enter image description here][2]][2] with **`terraform apply`** *executed code:* **`terraform apply`** *Acquiring state lock. ", "keywords": ["provider"]}, {"source": "Text", "text": "When sku is Basic or Standard, capacity can be 0 only. **Enter a value**: 1 **var.cost_centre** Cost Centre for the Resource or Resource Group Enter a value: premium ****var.department** Name of the department** **Enter a value:** depmuh var.sku (Required) Defines which tier to use. ", "keywords": ["cost"]}, {"source": "Text", "text": "Resource actions are indicated with the following symbols: + create **Terraform will perform the following actions:** azurerm_servicebus_namespace.servicebus_namespace will be created resource \"azurerm_servicebus_namespace\" \"servicebus_namespace\" { + capacity = 1 + default_primary_connection_string = (sensitive value) + default_primary_key = (sensitive value) + default_secondary_connection_string = (sensitive value) + default_secondary_key = (sensitive value) + endpoint = (known after apply) + id = (known after apply) + local_auth_enabled = false + location = \"westus2\" + minimum_tls_version = \"1.2\" + name = \"mysvbnme\" + public_network_access_enabled = false + resource_group_name = \"v-sakavya-Mindtree\" + sku = \"Premium\" } **Plan: 1 to add, 0 to change, 0 to destroy.** **Changes to Outputs:** + endpoint = (known after apply) + id = (known after apply) **Do you want to perform these actions? ", "keywords": ["change"]}]}, {"Id": "292972217", "PostHistoryTypeId": "33", "PostId": "76280122", "RevisionGUID": "da8e4f49-f73f-43fd-8d8e-1b0a0e825a68", "CreationDate": "2023-05-18T11:19:06.780", "UserId": "-1010", "Comment": "319250", "filtered-sentences": []}, {"Id": "292972604", "PostHistoryTypeId": "5", "PostId": "76280122", "RevisionGUID": "d5e48f03-6a60-4322-9c88-d7b8832d963c", "CreationDate": "2023-05-18T11:28:16.520", "UserId": "15997509", "Comment": "deleted 13 characters in body", "Text": "The following way of validating one variable inside other is not possible AFAIk:\r\n\r\nvariables.tf:\r\n\r\n    variable \"capacity\" {\r\n      type        = number\r\n      description = \"(Optional) Specifies the capacity. When sku is Premium, capacity can be 1, 2, 4, 8, or 16. When sku is Basic or Standard, capacity can be 0 only.\"\r\n    \r\n      default = 0 # Set a default value, assuming Basic or Standard SKU\r\n    \r\n      validation {\r\n        condition     = var.sku == \"Premium\" ? contains([1, 2, 4, 8, 16], var.capacity) : var.capacity == 0\r\n        error_message = \"Invalid .... capacity can be 1, 2, 4, 8, or 16. When SKU is Basic or Standard, capacity can be 0 only.\"\r\n      }\r\n    }\r\n\r\n[![enter image description here][1]][1]\r\n\r\n***Modify variable validation with different value to validate only self value.***\r\n\r\n\r\n***Variables.tf***\r\n\r\n    variable \"sku\" {\r\n      type        = string\r\n      description = \"(Required) Defines which tier to use. Options are Basic, Standard or Premium. Please note that setting this field to Premium will force the creation of a new resource.\"\r\n    \r\n      validation {\r\n        condition     = can(index([\"Basic\", \"Standard\", \"Premium\"], var.sku))\r\n        error_message = \"Invalid value for my_variable. Allowed values are value1, value2, or value3.\"\r\n      }\r\n    }\r\n    variable \"capacity\" {\r\n      type        = number\r\n      description = \"(Optional) Specifies the capacity. When sku is Premium, capacity can be 1, 2, 4, 8, or 16. When sku is Basic or Standard, capacity can be 0 only.\"\r\n        \r\n      validation {\r\n        condition     = can(index([1, 2, 4, 8, 16], var.capacity))\r\n        error_message = \"Invalid value for capacity. When sku is Premium, capacity can be 1, 2, 4, 8, or 16. When sku is Basic or Standard, capacity can be 0 only.\"\r\n      }\r\n    }\r\n\r\n***Check the following way which worked for me to validate capacity based on sku\r\nUsing validate_capacity  in `locals`***\r\n\r\n\r\nMain.tf:\r\n\r\n\r\n    provider \"azurerm\" {\r\n    \r\n      features {\r\n        resource_group {\r\n          prevent_deletion_if_contains_resources = false\r\n        }\r\n      }\r\n    }\r\n    \r\n    \r\n    locals {\r\n      validate_capacity = var.sku == \"Premium\" ? can(index([1, 2, 4, 8, 16], var.capacity)) : var.capacity == 0\r\n    }\r\n    \r\n    Main.tf:\r\n    \r\n    resource \"azurerm_servicebus_namespace\" \"servicebus_namespace\" {\r\n      name                          = \"mxxxxxbnme\"\r\n      resource_group_name           = data.azurerm_resource_group.example.name\r\n      location                      = data.azurerm_resource_group.example.location\r\n      sku                           = var.sku\r\n      capacity                      = var.capacity\r\n      public_network_access_enabled = false\r\n      minimum_tls_version           = \"1.2\"\r\n      local_auth_enabled            = false\r\n      identity                      = var.identity\r\n       customer_managed_key {\r\n        ...\r\n       }\r\n    }\r\n    \r\n    \r\n        output \"id\" {\r\n          value = azurerm_servicebus_namespace.servicebus_namespace.id\r\n        }\r\n        output \"endpoint\" {\r\n          value = azurerm_servicebus_namespace.servicebus_namespace.endpoint\r\n        }\r\n\r\n[![enter image description here][2]][2]\r\n\r\nwith **`terraform apply`**\r\n\r\n    *executed code:*\r\n    \r\n    **`terraform apply`**\r\n    \r\n    *Acquiring state lock. This may take a few moments...*\r\n    \r\n        **var.application_name**\r\n          Name of the application\r\n        \r\n          Enter a value: mynewappn\r\n        \r\n        **var.capacity**\r\n          (Optional) Specifies the capacity. When sku is Premium, capacity can be 1, 2, 4, 8, or 16. When sku is Basic or Standard, capacity can be 0 only.\r\n        \r\n          **Enter a value**: 1\r\n        \r\n        **var.cost_centre**\r\n          Cost Centre for the Resource or Resource Group\r\n        \r\n          Enter a value: premium\r\n        \r\n        ****var.department**\r\n        \r\n          Name of the department**\r\n        \r\n          **Enter a value:** depmuh\r\n        \r\n        var.sku\r\n          (Required) Defines which tier to use. Options are Basic, Standard or Premium. Please note that setting this field to Premium will force the creation of a new resource.\r\n        \r\n          Enter a value: Premium\r\n    \r\n    Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\r\n      + create\r\n    \r\n        **Terraform will perform the following actions:**\r\n    \r\n             azurerm_servicebus_namespace.servicebus_namespace will be created\r\n              resource \"azurerm_servicebus_namespace\" \"servicebus_namespace\" {\r\n              + capacity                            = 1\r\n              + default_primary_connection_string   = (sensitive value)\r\n              + default_primary_key                 = (sensitive value)\r\n              + default_secondary_connection_string = (sensitive value)\r\n              + default_secondary_key               = (sensitive value)\r\n              + endpoint                            = (known after apply)\r\n              + id                                  = (known after apply)\r\n              + local_auth_enabled                  = false\r\n              + location                            = \"westus2\"\r\n              + minimum_tls_version                 = \"1.2\"\r\n              + name                                = \"mysvbnme\"\r\n              + public_network_access_enabled       = false\r\n              + resource_group_name                 = \"vttre\"\r\n              + sku          \r\n        \r\n                           = \"Premium\"\r\n            }\r\n    \r\n    **Plan: 1 to add, 0 to change, 0 to destroy.**\r\n    \r\n    **Changes to Outputs:**\r\n      + endpoint = (known after apply)\r\n      + id       = (known after apply)\r\n    \r\n    **Do you want to perform these actions?\r\n      Terraform will perform the actions described above.\r\n      Only 'yes' will be accepted to approve.**\r\n    \r\n      **Enter a value:** yes\r\n    \r\n    **azurerm_servicebus_namespace.servicebus_namespace: Creating....**\r\n\r\n\r\nSuccessfully, validated the sku and capacity value which is given as 1 is accepted:\r\n\r\n[![enter image description here][3]][3]\r\n\r\n\r\n\r\n[![enter image description here][4]][4]\r\n\r\n\r\nif unsupported values are given  for capacity in regards with sku, it triggers error as below:\r\n\r\n[![enter image description here][5]][5]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/LIest.png\r\n  [2]: https://i.stack.imgur.com/2IOYl.png\r\n  [3]: https://i.stack.imgur.com/H1z3a.png\r\n  [4]: https://i.stack.imgur.com/jdKF1.png\r\n  [5]: https://i.stack.imgur.com/Ub7Go.png", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Using validate_capacity in `locals`*** Main.tf: provider \"azurerm\" { features { resource_group { prevent_deletion_if_contains_resources = false } } } locals { validate_capacity = var.sku == \"Premium\" ? can(index([1, 2, 4, 8, 16], var.capacity)) : var.capacity == 0 } Main.tf: resource \"azurerm_servicebus_namespace\" \"servicebus_namespace\" { name = \"mxxxxxbnme\" resource_group_name = data.azurerm_resource_group.example.name location = data.azurerm_resource_group.example.location sku = var.sku capacity = var.capacity public_network_access_enabled = false minimum_tls_version = \"1.2\" local_auth_enabled = false identity = var.identity customer_managed_key { ... } } output \"id\" { value = azurerm_servicebus_namespace.servicebus_namespace.id } output \"endpoint\" { value = azurerm_servicebus_namespace.servicebus_namespace.endpoint } [![enter image description here][2]][2] with **`terraform apply`** *executed code:* **`terraform apply`** *Acquiring state lock. ", "keywords": ["provider"]}, {"source": "Text", "text": "When sku is Basic or Standard, capacity can be 0 only. **Enter a value**: 1 **var.cost_centre** Cost Centre for the Resource or Resource Group Enter a value: premium ****var.department** Name of the department** **Enter a value:** depmuh var.sku (Required) Defines which tier to use. ", "keywords": ["cost"]}, {"source": "Text", "text": "Resource actions are indicated with the following symbols: + create **Terraform will perform the following actions:** azurerm_servicebus_namespace.servicebus_namespace will be created resource \"azurerm_servicebus_namespace\" \"servicebus_namespace\" { + capacity = 1 + default_primary_connection_string = (sensitive value) + default_primary_key = (sensitive value) + default_secondary_connection_string = (sensitive value) + default_secondary_key = (sensitive value) + endpoint = (known after apply) + id = (known after apply) + local_auth_enabled = false + location = \"westus2\" + minimum_tls_version = \"1.2\" + name = \"mysvbnme\" + public_network_access_enabled = false + resource_group_name = \"vttre\" + sku = \"Premium\" } **Plan: 1 to add, 0 to change, 0 to destroy.** **Changes to Outputs:** + endpoint = (known after apply) + id = (known after apply) **Do you want to perform these actions? ", "keywords": ["change"]}]}, {"Id": "292972605", "PostHistoryTypeId": "34", "PostId": "76280122", "RevisionGUID": "e3745a1c-9016-4fbb-aeb2-6c8bdbf9c930", "CreationDate": "2023-05-18T11:28:16.520", "UserId": "-1010", "Comment": "319250", "filtered-sentences": []}, {"Id": "292972606", "PostHistoryTypeId": "33", "PostId": "76280122", "RevisionGUID": "603ce478-fb14-4d86-9b95-92889b411b82", "CreationDate": "2023-05-18T11:28:16.520", "UserId": "-1010", "Comment": "319251", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": []}