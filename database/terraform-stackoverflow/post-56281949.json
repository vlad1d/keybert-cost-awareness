{"Id": "56281949", "PostTypeId": "1", "AcceptedAnswerId": "56319129", "CreationDate": "2019-05-23T19:40:48.660", "Score": "0", "ViewCount": "254", "Body": "<p>When creating a Windows machine in vRA, Terraform will move on to the Chef Provisioner block before it has acquired the IP/FQDN of the new machine to pass into the provisioner.</p>\n\n<p>Terraform v0.11.14\n+ provider.vra7 v0.2.0</p>\n\n<p>I've tried everything I can get my hands on from the internet; loca-exec'ing knife bootstrap, using a depends_on attribute, setting a sleep timer, nothing seems to work.</p>\n\n<pre><code>resource \"vra7_deployment\" \"terraform-1\" {\n  count             = \"${var.server_count}\"\n  description       = \"deployment via terraform\"\n  reasons           = \"because it's awesome\"\n  catalog_item_name = \"${var.vra_cat_item_name}\"\n  wait_timeout      = \"1800\"\n\n  provisioner \"chef\" {\n    # This is for chef_server to talk to the node\n    connection {\n      type = \"winrm\"\n      user = \"${var.KT_USER}\"\n      password = \"${var.KT_PASS}\"\n      insecure = true\n    }\n\n    # This is for TF to talk to the chef_server\n    server_url = \"${var.chef_server_url}\" \n    node_name  = \"terraform-chef-test\"\n    run_list   = [ ]\n    user_name  = \"${var.chef_user_name}\"\n    user_key   = \"${file(var.chef_user_pem)}\"\n    recreate_client = true\n    fetch_chef_certificates = true\n    environment = \"_default\"\n    ssl_verify_mode = false\n    version = \"12\"\n  }\n}\n</code></pre>\n\n<p>error:</p>\n\n<pre><code>vra7_deployment.terraform-1: Still creating... (21m20s elapsed)\nvra7_deployment.terraform-1 (chef): Connecting to remote host via WinRM...\nvra7_deployment.terraform-1 (chef):   Host:\nvra7_deployment.terraform-1 (chef):   Port: 5985\nvra7_deployment.terraform-1 (chef):   User: engineering\nvra7_deployment.terraform-1 (chef):   Password: true\nvra7_deployment.terraform-1 (chef):   HTTPS: false\nvra7_deployment.terraform-1 (chef):   Insecure: true\nvra7_deployment.terraform-1 (chef):   NTLM: false\nvra7_deployment.terraform-1 (chef):   CACert: false\n\n* vra7_deployment.terraform-1: interrupted - last error: unknown error Post http://:5985/wsman: dial tcp :5985: connectex: No connection could be made because the target machine actively refused it.\n</code></pre>\n", "OwnerUserId": "556078", "LastActivityDate": "2019-05-27T02:52:11.777", "Title": "vRA Windows machine creation does not return host name/addr before moving to chef provisioner block", "Tags": "<chef-infra><terraform><vmware><winrm>", "AnswerCount": "2", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "198337143", "PostHistoryTypeId": "2", "PostId": "56281949", "RevisionGUID": "a0cab3c2-edb4-44b2-a107-92ee6e9f5f65", "CreationDate": "2019-05-23T19:40:48.660", "UserId": "556078", "Text": "When creating a Windows machine in vRA, Terraform will move on to the Chef Provisioner block before it has acquired the IP/FQDN of the new machine to pass into the provisioner.\r\n\r\nTerraform v0.11.14\r\n+ provider.vra7 v0.2.0\r\n\r\n\r\n\r\nI've tried everything I can get my hands on from the internet; loca-exec'ing knife bootstrap, using a depends_on attribute, setting a sleep timer, nothing seems to work.\r\n\r\n```\r\nresource \"vra7_deployment\" \"terraform-1\" {\r\n  count             = \"${var.server_count}\"\r\n  description       = \"deployment via terraform\"\r\n  reasons           = \"because it's awesome\"\r\n  catalog_item_name = \"${var.vra_cat_item_name}\"\r\n  wait_timeout      = \"1800\"\r\n\r\n  provisioner \"chef\" {\r\n    # This is for chef_server to talk to the node\r\n    connection {\r\n      type = \"winrm\"\r\n      user = \"${var.KT_USER}\"\r\n      password = \"${var.KT_PASS}\"\r\n      insecure = true\r\n    }\r\n    \r\n    # This is for TF to talk to the chef_server\r\n    server_url = \"${var.chef_server_url}\" \r\n    node_name  = \"terraform-chef-test\"\r\n    run_list   = [ ]\r\n    user_name  = \"${var.chef_user_name}\"\r\n    user_key   = \"${file(var.chef_user_pem)}\"\r\n    recreate_client = true\r\n    fetch_chef_certificates = true\r\n    environment = \"_default\"\r\n    ssl_verify_mode = false\r\n    version = \"12\"\r\n  }\r\n}\r\n```\r\n\r\nerror:\r\n```\r\nvra7_deployment.terraform-1: Still creating... (21m20s elapsed)\r\nvra7_deployment.terraform-1 (chef): Connecting to remote host via WinRM...\r\nvra7_deployment.terraform-1 (chef):   Host:\r\nvra7_deployment.terraform-1 (chef):   Port: 5985\r\nvra7_deployment.terraform-1 (chef):   User: engineering\r\nvra7_deployment.terraform-1 (chef):   Password: true\r\nvra7_deployment.terraform-1 (chef):   HTTPS: false\r\nvra7_deployment.terraform-1 (chef):   Insecure: true\r\nvra7_deployment.terraform-1 (chef):   NTLM: false\r\nvra7_deployment.terraform-1 (chef):   CACert: false\r\n\r\n* vra7_deployment.terraform-1: interrupted - last error: unknown error Post http://:5985/wsman: dial tcp :5985: connectex: No connection could be made because the target machine actively refused it.\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Terraform v0.11.14 + provider.vra7 v0.2.0 I've tried everything I can get my hands on from the internet; loca-exec'ing knife bootstrap, using a depends_on attribute, setting a sleep timer, nothing seems to work. ", "keywords": ["provider"]}, {"source": "Text", "text": "``` resource \"vra7_deployment\" \"terraform-1\" { count = \"${var.server_count}\" description = \"deployment via terraform\" reasons = \"because it's awesome\" catalog_item_name = \"${var.vra_cat_item_name}\" wait_timeout = \"1800\" provisioner \"chef\" { # This is for chef_server to talk to the node connection { type = \"winrm\" user = \"${var.KT_USER}\" password = \"${var.KT_PASS}\" insecure = true } # This is for TF to talk to the chef_server server_url = \"${var.chef_server_url}\" node_name = \"terraform-chef-test\" run_list = [ ] user_name = \"${var.chef_user_name}\" user_key = \"${file(var.chef_user_pem)}\" recreate_client = true fetch_chef_certificates = true environment = \"_default\" ssl_verify_mode = false version = \"12\" } } ``` error: ``` vra7_deployment.terraform-1: Still creating... (21m20s elapsed) vra7_deployment.terraform-1 (chef): Connecting to remote host via WinRM... vra7_deployment.terraform-1 (chef): Host: vra7_deployment.terraform-1 (chef): Port: 5985 vra7_deployment.terraform-1 (chef): User: engineering vra7_deployment.terraform-1 (chef): Password: true vra7_deployment.terraform-1 (chef): HTTPS: false vra7_deployment.terraform-1 (chef): Insecure: true vra7_deployment.terraform-1 (chef): NTLM: false vra7_deployment.terraform-1 (chef): CACert: false * vra7_deployment.terraform-1: interrupted - last error: unknown error Post http://:5985/wsman: dial tcp :5985: connectex: No connection could be made because the target machine actively refused it", "keywords": ["test"]}]}, {"Id": "198337144", "PostHistoryTypeId": "1", "PostId": "56281949", "RevisionGUID": "a0cab3c2-edb4-44b2-a107-92ee6e9f5f65", "CreationDate": "2019-05-23T19:40:48.660", "UserId": "556078", "Text": "vRA Windows machine creation does not return host name/addr before moving to chef provisioner block", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "198337145", "PostHistoryTypeId": "3", "PostId": "56281949", "RevisionGUID": "a0cab3c2-edb4-44b2-a107-92ee6e9f5f65", "CreationDate": "2019-05-23T19:40:48.660", "UserId": "556078", "Text": "<chef-infra><terraform><vmware><winrm>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "56319129", "PostTypeId": "2", "ParentId": "56281949", "CreationDate": "2019-05-27T02:52:11.777", "Score": "0", "Body": "<p>I figured it out. The key was understanding that my instance of vRA is set up so that the VMs are called <code>vSphere_Machine_1</code>. It's right there in the UI, as <code>Component Name</code>.</p>\n\n<p>There were definitely some mental leaps involved, and I'm sure I had to have seen all the other examples and made all the mistakes i did in order for my brain to put it all together at that moment. Whatever the mechanism, this code now WORKS:</p>\n\n<pre><code># in resource block\nresource_configuration {\n    vSphere_Machine_1.name = \"\"\n  }\n\n...\n\n# in provisioner block\n    connection {\n      host = \"${self.resource_configuration.vSphere_Machine_1.name}\"\n     ....\n}\n</code></pre>\n\n<p>Now, of course, on to the next brick wall... but I figured this out. And I intend to pay it forward to the community.</p>\n\n<p>For others coming to this with the same question, you are looking for the Component Name in your vRa item's machine listing.\n<a href=\"https://i.stack.imgur.com/5LxFz.jpg\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/5LxFz.jpg\" alt=\"enter image description here\"></a></p>\n", "OwnerUserId": "556078", "LastActivityDate": "2019-05-27T02:52:11.777", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "198505749", "PostHistoryTypeId": "2", "PostId": "56319129", "RevisionGUID": "78fb4672-d9b2-485d-bc91-5dd7778a5983", "CreationDate": "2019-05-27T02:52:11.777", "UserId": "556078", "Text": "I figured it out. The key was understanding that my instance of vRA is set up so that the VMs are called `vSphere_Machine_1`. It's right there in the UI, as `Component Name`.\r\n\r\nThere were definitely some mental leaps involved, and I'm sure I had to have seen all the other examples and made all the mistakes i did in order for my brain to put it all together at that moment. Whatever the mechanism, this code now WORKS:\r\n\r\n```\r\n# in resource block\r\nresource_configuration {\r\n    vSphere_Machine_1.name = \"\"\r\n  }\r\n\r\n...\r\n\r\n# in provisioner block\r\n    connection {\r\n      host = \"${self.resource_configuration.vSphere_Machine_1.name}\"\r\n     ....\r\n}\r\n```\r\n\r\nNow, of course, on to the next brick wall... but I figured this out. And I intend to pay it forward to the community.\r\n\r\nFor others coming to this with the same question, you are looking for the Component Name in your vRa item's machine listing.\r\n[![enter image description here][1]][1]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/5LxFz.jpg", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "The key was understanding that my instance of vRA is set up so that the VMs are called `vSphere_Machine_1`. ", "keywords": ["instance"]}, {"source": "Text", "text": "And I intend to pay it forward to the community. ", "keywords": ["pay"]}]}], "filtered-sentences": [{"source": "Body", "text": "The key was understanding that my instance of vRA is set up so that the VMs are called vSphere_Machine_1. ", "keywords": ["instance"]}, {"source": "Body", "text": "And I intend to pay it forward to the community. ", "keywords": ["pay"]}]}, {"Id": "56283648", "PostTypeId": "2", "ParentId": "56281949", "CreationDate": "2019-05-23T22:23:31.367", "Score": "0", "Body": "<p><code>var.chef_server_url</code> is a terraform variable, not an output of <code>vra7_deployment.terraform-1</code>.</p>\n\n<p>if <code>var.chef_server_url</code> is not set and passed to the provisioner with no value, then the provisioner connection will not work</p>\n", "OwnerUserId": "4162641", "LastActivityDate": "2019-05-23T22:23:31.367", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "99183521", "PostId": "56283648", "Score": "0", "Text": "var.chef_server_url is set in variables.tf and I don\u2019t think that\u2019s the problem. I get same result if I hardcode it. If you see in the terraform output, it\u2019s trying to connect to the new node, not to the chef server. I could of course be mistaken.", "CreationDate": "2019-05-24T02:06:15.033", "UserId": "556078", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "198344133", "PostHistoryTypeId": "2", "PostId": "56283648", "RevisionGUID": "254b18f6-3eec-4624-9549-28b55c79d031", "CreationDate": "2019-05-23T22:23:31.367", "UserId": "4162641", "Text": "`var.chef_server_url` is a terraform variable, not an output of `vra7_deployment.terraform-1`.\r\n\r\nif `var.chef_server_url` is not set and passed to the provisioner with no value, then the provisioner connection will not work", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "Terraform v0.11.14 + provider.vra7 v0.2.0 I've tried everything I can get my hands on from the internet; loca-exec'ing knife bootstrap, using a depends_on attribute, setting a sleep timer, nothing seems to work. ", "keywords": ["provider"]}]}