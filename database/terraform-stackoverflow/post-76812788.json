{"Id": "76812788", "PostTypeId": "1", "AcceptedAnswerId": "76812869", "CreationDate": "2023-08-01T14:42:30.967", "Score": "0", "ViewCount": "45", "Body": "<p>I have some terraform code that will create the dynamodb table and inserts one item into that table. When I run <code>terraform apply</code> I am getting below error. It seems it going to insert the item before the dynamodb table gets complete created (status - Active).</p>\n<pre><code>module &quot;dynamodb_table&quot; {\n  source   = &quot;terraform-aws-modules/dynamodb-table/aws&quot;\n  name     = &quot;${var.aws.region}-${var.config.dynamodb.table_name}&quot;\n  hash_key = var.config.dynamodb.hash_key\n  attributes = [\n    {\n      name = var.config.dynamodb.hash_key\n      type = &quot;S&quot;\n    }\n  ]\n  billing_mode = &quot;PAY_PER_REQUEST&quot;\n  table_class  = &quot;STANDARD&quot;\n}\n\nresource &quot;random_string&quot; &quot;random&quot; {\n  length  = 16\n  special = false\n}\n\nresource &quot;aws_dynamodb_table_item&quot; &quot;table_item&quot; {\n  table_name = &quot;${var.aws.region}-${var.config.dynamodb.table_name}&quot;\n  hash_key   = var.config.dynamodb.hash_key\n  item = &lt;&lt;ITEM\n  {\n    &quot;${var.config.dynamodb.hash_key}&quot;: {&quot;S&quot;: &quot;${random_string.random.result}&quot;},\n    &quot;collections&quot;: {&quot;M&quot;: {}}\n  }\n  ITEM\n}\n\n</code></pre>\n<p>Error message:</p>\n<pre><code>Error: creating DynamoDB Table Item: ResourceNotFoundException: Requested resource not found\n</code></pre>\n", "OwnerUserId": "14031645", "LastActivityDate": "2023-08-01T15:18:48.543", "Title": "Terraform : wait till the dynamodb table status is \"Active\"", "Tags": "<amazon-web-services><terraform><amazon-dynamodb><command-line-interface><terraform-provider-aws>", "AnswerCount": "1", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "135416064", "PostId": "76812788", "Score": "2", "Text": "Well, it might be that terraform tries to create the item in the table first, because there are no implicit dependencies between the table and the item. In this case, you might try using `depends_on` so you tell terraform to create the table prior to trying to create the item. So for example, you would add `depends_on = module.dynamodb_table`.", "CreationDate": "2023-08-01T14:56:12.253", "UserId": "8343484", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "296122939", "PostHistoryTypeId": "2", "PostId": "76812788", "RevisionGUID": "4a8bcdb0-5bb8-4bf0-9122-c7feec015f80", "CreationDate": "2023-08-01T14:42:30.967", "UserId": "14031645", "Text": "I have some terraform code that will create the dynamodb table and inserts one item into that table. When I run `terraform apply` I am getting below error. It seems it going to insert the item before the dynamodb table gets complete created (status - Active).\r\n```\r\nmodule \"dynamodb_table\" {\r\n  source   = \"terraform-aws-modules/dynamodb-table/aws\"\r\n  name     = \"${var.aws.region}-${var.config.dynamodb.table_name}\"\r\n  hash_key = var.config.dynamodb.hash_key\r\n  attributes = [\r\n    {\r\n      name = var.config.dynamodb.hash_key\r\n      type = \"S\"\r\n    }\r\n  ]\r\n  billing_mode = \"PAY_PER_REQUEST\"\r\n  table_class  = \"STANDARD\"\r\n}\r\n\r\nresource \"random_string\" \"random\" {\r\n  length  = 16\r\n  special = false\r\n}\r\n\r\nresource \"aws_dynamodb_table_item\" \"table_item\" {\r\n  table_name = \"${var.aws.region}-${var.config.dynamodb.table_name}\"\r\n  hash_key   = var.config.dynamodb.hash_key\r\n  item = <<ITEM\r\n  {\r\n    \"${var.config.dynamodb.hash_key}\": {\"S\": \"${random_string.random.result}\"},\r\n    \"collections\": {\"M\": {}}\r\n  }\r\n  ITEM\r\n}\r\n\r\n```\r\nError message:\r\n```\r\nError: creating DynamoDB Table Item: ResourceNotFoundException: Requested resource not found\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "``` module \"dynamodb_table\" { source = \"terraform-aws-modules/dynamodb-table/aws\" name = \"${var.aws.region}-${var.config.dynamodb.table_name}\" hash_key = var.config.dynamodb.hash_key attributes = [ { name = var.config.dynamodb.hash_key type = \"S\" } ] billing_mode = \"PAY_PER_REQUEST\" table_class = \"STANDARD\" } resource \"random_string\" \"random\" { length = 16 special = false } resource \"aws_dynamodb_table_item\" \"table_item\" { table_name = \"${var.aws.region}-${var.config.dynamodb.table_name}\" hash_key = var.config.dynamodb.hash_key item = <<ITEM { \"${var.config.dynamodb.hash_key", "keywords": ["bill"]}]}, {"Id": "296122941", "PostHistoryTypeId": "1", "PostId": "76812788", "RevisionGUID": "4a8bcdb0-5bb8-4bf0-9122-c7feec015f80", "CreationDate": "2023-08-01T14:42:30.967", "UserId": "14031645", "Text": "Terraform : wait till the dynamodb table status is \"Active\"", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "296122942", "PostHistoryTypeId": "3", "PostId": "76812788", "RevisionGUID": "4a8bcdb0-5bb8-4bf0-9122-c7feec015f80", "CreationDate": "2023-08-01T14:42:30.967", "UserId": "14031645", "Text": "<amazon-web-services><terraform><amazon-dynamodb><command-line-interface><terraform-provider-aws>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "76812869", "PostTypeId": "2", "ParentId": "76812788", "CreationDate": "2023-08-01T14:52:14.660", "Score": "3", "Body": "<p>To wait for the table to exist, using Terraform <a href=\"https://developer.hashicorp.com/terraform/language/meta-arguments/depends_on\" rel=\"nofollow noreferrer\"><code>depends_on</code></a> should be enough to suffice:</p>\n<pre><code>module &quot;dynamodb_table&quot; {\n  source   = &quot;terraform-aws-modules/dynamodb-table/aws&quot;\n  name     = &quot;${var.aws.region}-${var.config.dynamodb.table_name}&quot;\n  hash_key = var.config.dynamodb.hash_key\n  attributes = [\n    {\n      name = var.config.dynamodb.hash_key\n      type = &quot;S&quot;\n    }\n  ]\n  billing_mode = &quot;PAY_PER_REQUEST&quot;\n  table_class  = &quot;STANDARD&quot;\n}\n\nresource &quot;random_string&quot; &quot;random&quot; {\n  length  = 16\n  special = false\n}\n\nresource &quot;aws_dynamodb_table_item&quot; &quot;table_item&quot; {\n  table_name = &quot;${var.aws.region}-${var.config.dynamodb.table_name}&quot;\n  depends_on = [module.dynamodb_table]\n  hash_key   = var.config.dynamodb.hash_key\n  item = &lt;&lt;ITEM\n  {\n    &quot;${var.config.dynamodb.hash_key}&quot;: {&quot;S&quot;: &quot;${random_string.random.result}&quot;},\n    &quot;collections&quot;: {&quot;M&quot;: {}}\n  }\n  ITEM\n}\n\n</code></pre>\n", "OwnerUserId": "7909676", "LastEditorUserId": "7909676", "LastEditDate": "2023-08-01T15:18:48.543", "LastActivityDate": "2023-08-01T15:18:48.543", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "296123383", "PostHistoryTypeId": "2", "PostId": "76812869", "RevisionGUID": "00587b27-b674-47de-a8a6-260bb210e9f8", "CreationDate": "2023-08-01T14:52:14.660", "UserId": "7909676", "Text": "To wait for the table to exist, using Terraform [`depends_on`](https://developer.hashicorp.com/terraform/language/meta-arguments/depends_on) should be enough to suffice:\r\n\r\n```\r\nmodule \"dynamodb_table\" {\r\n  source   = \"terraform-aws-modules/dynamodb-table/aws\"\r\n  name     = \"${var.aws.region}-${var.config.dynamodb.table_name}\"\r\n  hash_key = var.config.dynamodb.hash_key\r\n  attributes = [\r\n    {\r\n      name = var.config.dynamodb.hash_key\r\n      type = \"S\"\r\n    }\r\n  ]\r\n  billing_mode = \"PAY_PER_REQUEST\"\r\n  table_class  = \"STANDARD\"\r\n}\r\n\r\nresource \"random_string\" \"random\" {\r\n  length  = 16\r\n  special = false\r\n}\r\n\r\nresource \"aws_dynamodb_table_item\" \"table_item\" {\r\n  table_name = \"${var.aws.region}-${var.config.dynamodb.table_name}\"\r\n  depends_on = \"dynamodb_table\"\r\n  hash_key   = var.config.dynamodb.hash_key\r\n  item = <<ITEM\r\n  {\r\n    \"${var.config.dynamodb.hash_key}\": {\"S\": \"${random_string.random.result}\"},\r\n    \"collections\": {\"M\": {}}\r\n  }\r\n  ITEM\r\n}\r\n\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "To wait for the table to exist, using Terraform [`depends_on`](https://developer.hashicorp.com/terraform/language/meta-arguments/depends_on) should be enough to suffice: ``` module \"dynamodb_table\" { source = \"terraform-aws-modules/dynamodb-table/aws\" name = \"${var.aws.region}-${var.config.dynamodb.table_name}\" hash_key = var.config.dynamodb.hash_key attributes = [ { name = var.config.dynamodb.hash_key type = \"S\" } ] billing_mode = \"PAY_PER_REQUEST\" table_class = \"STANDARD\" } resource \"random_string\" \"random\" { length = 16 special = false } resource \"aws_dynamodb_table_item\" \"table_item\" { table_name = \"${var.aws.region}-${var.config.dynamodb.table_name}\" depends_on = \"dynamodb_table\" hash_key = var.config.dynamodb.hash_key item = <<ITEM { \"${var.config.dynamodb.hash_key", "keywords": ["bill"]}]}, {"Id": "296123385", "PostHistoryTypeId": "33", "PostId": "76812869", "RevisionGUID": "82b23433-9a67-440e-8d46-629517306ef8", "CreationDate": "2023-08-01T14:52:14.660", "UserId": "-1011", "Comment": "330849", "filtered-sentences": []}, {"Id": "296124501", "PostHistoryTypeId": "5", "PostId": "76812869", "RevisionGUID": "0f0f2bde-05e5-418d-a811-a66d59c14db7", "CreationDate": "2023-08-01T15:18:48.543", "UserId": "7909676", "Comment": "added 7 characters in body", "Text": "To wait for the table to exist, using Terraform [`depends_on`](https://developer.hashicorp.com/terraform/language/meta-arguments/depends_on) should be enough to suffice:\r\n\r\n```\r\nmodule \"dynamodb_table\" {\r\n  source   = \"terraform-aws-modules/dynamodb-table/aws\"\r\n  name     = \"${var.aws.region}-${var.config.dynamodb.table_name}\"\r\n  hash_key = var.config.dynamodb.hash_key\r\n  attributes = [\r\n    {\r\n      name = var.config.dynamodb.hash_key\r\n      type = \"S\"\r\n    }\r\n  ]\r\n  billing_mode = \"PAY_PER_REQUEST\"\r\n  table_class  = \"STANDARD\"\r\n}\r\n\r\nresource \"random_string\" \"random\" {\r\n  length  = 16\r\n  special = false\r\n}\r\n\r\nresource \"aws_dynamodb_table_item\" \"table_item\" {\r\n  table_name = \"${var.aws.region}-${var.config.dynamodb.table_name}\"\r\n  depends_on = [module.dynamodb_table]\r\n  hash_key   = var.config.dynamodb.hash_key\r\n  item = <<ITEM\r\n  {\r\n    \"${var.config.dynamodb.hash_key}\": {\"S\": \"${random_string.random.result}\"},\r\n    \"collections\": {\"M\": {}}\r\n  }\r\n  ITEM\r\n}\r\n\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "To wait for the table to exist, using Terraform [`depends_on`](https://developer.hashicorp.com/terraform/language/meta-arguments/depends_on) should be enough to suffice: ``` module \"dynamodb_table\" { source = \"terraform-aws-modules/dynamodb-table/aws\" name = \"${var.aws.region}-${var.config.dynamodb.table_name}\" hash_key = var.config.dynamodb.hash_key attributes = [ { name = var.config.dynamodb.hash_key type = \"S\" } ] billing_mode = \"PAY_PER_REQUEST\" table_class = \"STANDARD\" } resource \"random_string\" \"random\" { length = 16 special = false } resource \"aws_dynamodb_table_item\" \"table_item\" { table_name = \"${var.aws.region}-${var.config.dynamodb.table_name}\" depends_on = [module.dynamodb_table] hash_key = var.config.dynamodb.hash_key item = <<ITEM { \"${var.config.dynamodb.hash_key", "keywords": ["bill"]}]}, {"Id": "296124502", "PostHistoryTypeId": "33", "PostId": "76812869", "RevisionGUID": "74375402-c781-4eba-b2a6-301f15fd8204", "CreationDate": "2023-08-01T15:18:48.543", "UserId": "-1011", "Comment": "330851", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": []}