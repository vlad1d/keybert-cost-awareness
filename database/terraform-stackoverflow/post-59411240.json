{"Id": "59411240", "PostTypeId": "1", "AcceptedAnswerId": "59413878", "CreationDate": "2019-12-19T13:58:11.587", "Score": "1", "ViewCount": "1348", "Body": "<p>I'm creating an AWS S3 bucket on which many files will be uploaded.</p>\n\n<p>Since I don't want those file to stay forever, I would like to empty the bucket every month.</p>\n\n<p>I'm using Terraform to do this.</p>\n\n<p>I have the following documentation <a href=\"https://www.terraform.io/docs/providers/aws/r/s3_bucket.html\" rel=\"nofollow noreferrer\">https://www.terraform.io/docs/providers/aws/r/s3_bucket.html</a></p>\n\n<p>And the following Terraform configuration:</p>\n\n<pre><code>resource \"aws_s3_bucket\" \"garbage\" {\n  bucket = \"garbage-${terraform.workspace}\"\n  acl    = \"private\"\n\n  lifecycle {\n    prevent_destroy = false\n  }\n\n  lifecycle {\n    prevent_destroy = false\n  }\n\n  lifecycle_rule {\n    id = tmp\n    prefix= \"tmp/\"\n    enabled = true\n\n    expiration {\n      days = 1\n    }\n  }\n\n  server_side_encryption_configuration {\n    rule {\n      apply_server_side_encryption_by_default {\n        sse_algorithm = \"AES256\"\n      }\n    }\n  }\n}\n</code></pre>\n\n<p>Even with the documentation, I struggle to find how I could indicate that I want the file to be deleted every month in this bucket.</p>\n", "OwnerUserId": "6285832", "LastEditorUserId": "6285832", "LastEditDate": "2019-12-19T16:06:21.013", "LastActivityDate": "2019-12-20T15:01:06.067", "Title": "Empty AWS S3 bucket with lifecyle", "Tags": "<amazon-web-services><amazon-s3><terraform>", "AnswerCount": "1", "CommentCount": "9", "FavoriteCount": "0", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "105009987", "PostId": "59411240", "Score": "1", "Text": "You haven't included an `expiration` policy. Also, I'm not aware that you can empty the bucket using lifecycle policies. You would typically configure objects to expire 30 days after they were created. You could potentially set a date e.g. 2019-12-31 but you would then have to update that policy at the start of each new month.", "CreationDate": "2019-12-19T14:14:26.923", "UserId": "271415", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "You haven't included an `expiration` policy. ", "keywords": ["policy"]}, {"source": "Text", "text": "You could potentially set a date e.g. 2019-12-31 but you would then have to update that policy at the start of each new month.", "keywords": ["policy"]}]}, {"Id": "105011620", "PostId": "59411240", "Score": "0", "Text": "You can specify how long an object would live in days before being deleted or transitioned (eg to Glacier). It's not an emptying the bucket on a set date type thing but it achieve the same thing - not keeping each object for more than x days. @RobertReynolds have you tried using the `lifecycle_rule` parameters? What errors did you get if you did? If you didn't get an error what behaviour did you see vs what you expected?", "CreationDate": "2019-12-19T15:01:41.057", "UserId": "2291321", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "105013018", "PostId": "59411240", "Score": "0", "Text": "I don't know what to put in the lifecyle_rule to achieve what you said:\n\"on a set date type thing but it achieve the same thing - not keeping each object for more than x days.\"", "CreationDate": "2019-12-19T15:42:49.930", "UserId": "6285832", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "105013898", "PostId": "59411240", "Score": "0", "Text": "@ydaestcoR I've edited my post to add the lifecylce_rule, I'm not sure about what it will do and It's hard to test, as far as I understand it will delete files in the tmp folder rights ?", "CreationDate": "2019-12-19T16:10:31.193", "UserId": "6285832", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "@ydaestcoR I've edited my post to add the lifecylce_rule, I'm not sure about what it will do and It's hard to test, as far as I understand it will delete files in the tmp folder rights ?", "keywords": ["test"]}]}, {"Id": "105014464", "PostId": "59411240", "Score": "0", "Text": "Given the rule you added, objects with a prefix of tmp/ will expire and be queued for removal some time after they become 1 day old. Note that AWS evaluates lifecycle rules periodically (once per day afaik) and will queue expired objects for removal. Removal will take place some time after that. You are not charged for storage from the time of expiration.", "CreationDate": "2019-12-19T16:28:21.463", "UserId": "271415", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "You are not charged for storage from the time of expiration.", "keywords": ["storage"]}]}, {"Id": "105014505", "PostId": "59411240", "Score": "0", "Text": "will those object be deleted when they are expired or I need to do something else ?", "CreationDate": "2019-12-19T16:29:35.517", "UserId": "6285832", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "105014867", "PostId": "59411240", "Score": "0", "Text": "oh ok you answered", "CreationDate": "2019-12-19T16:41:15.887", "UserId": "6285832", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "105014940", "PostId": "59411240", "Score": "0", "Text": "I will add my commentary as an answer. You should set this up in a test bucket, add a few objects, and verify it late tomorrow or the following day (bear in mind that expired objects are queued for removal, not removed instantly).", "CreationDate": "2019-12-19T16:43:43.533", "UserId": "271415", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "You should set this up in a test bucket, add a few objects, and verify it late tomorrow or the following day (bear in mind that expired objects are queued for removal, not removed instantly).", "keywords": ["test"]}]}, {"Id": "105015054", "PostId": "59411240", "Score": "0", "Text": "yes you could do that it did help me, thx", "CreationDate": "2019-12-19T16:46:51.737", "UserId": "6285832", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "211533396", "PostHistoryTypeId": "2", "PostId": "59411240", "RevisionGUID": "301831a3-42ef-4ff3-bbea-8a4289d7f27f", "CreationDate": "2019-12-19T13:58:11.587", "UserId": "6285832", "Text": "I'm creating a Aws S3 bucket on which many file will be uploaded.\r\n\r\nSince I don't want those file to stay forever, I would like to empty the bucket every month.\r\n\r\nI'm using terraform to do this.\r\n\r\nI have the following documentation https://www.terraform.io/docs/providers/aws/r/s3_bucket.html\r\n\r\nAnd the following terrafomr code :\r\n\r\n    resource \"aws_s3_bucket\" \"garbage\" {\r\n      bucket = \"garbage-${terraform.workspace}\"\r\n      acl    = \"private\"\r\n    \r\n      lifecycle {\r\n        prevent_destroy = false\r\n      }\r\n    \r\n      server_side_encryption_configuration {\r\n        rule {\r\n          apply_server_side_encryption_by_default {\r\n            sse_algorithm = \"AES256\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\nEven with the documentation I struggle to find how I could indicate that I want the file to be deleted every month in this bucket.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "211533397", "PostHistoryTypeId": "1", "PostId": "59411240", "RevisionGUID": "301831a3-42ef-4ff3-bbea-8a4289d7f27f", "CreationDate": "2019-12-19T13:58:11.587", "UserId": "6285832", "Text": "Empty Aws S3 bucket with lifecyle", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "211533398", "PostHistoryTypeId": "3", "PostId": "59411240", "RevisionGUID": "301831a3-42ef-4ff3-bbea-8a4289d7f27f", "CreationDate": "2019-12-19T13:58:11.587", "UserId": "6285832", "Text": "<amazon-web-services><amazon-s3><terraform>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "211534164", "PostHistoryTypeId": "5", "PostId": "59411240", "RevisionGUID": "e35048e1-1f2d-4992-a4aa-4df619974fc3", "CreationDate": "2019-12-19T14:09:31.943", "UserId": "271415", "Comment": "added 11 characters in body; edited title", "Text": "I'm creating an AWS S3 bucket on which many files will be uploaded.\r\n\r\nSince I don't want those file to stay forever, I would like to empty the bucket every month.\r\n\r\nI'm using Terraform to do this.\r\n\r\nI have the following documentation https://www.terraform.io/docs/providers/aws/r/s3_bucket.html\r\n\r\nAnd the following Terraform configuration:\r\n\r\n    resource \"aws_s3_bucket\" \"garbage\" {\r\n      bucket = \"garbage-${terraform.workspace}\"\r\n      acl    = \"private\"\r\n    \r\n      lifecycle {\r\n        prevent_destroy = false\r\n      }\r\n    \r\n      server_side_encryption_configuration {\r\n        rule {\r\n          apply_server_side_encryption_by_default {\r\n            sse_algorithm = \"AES256\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\nEven with the documentation, I struggle to find how I could indicate that I want the file to be deleted every month in this bucket.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "211534165", "PostHistoryTypeId": "4", "PostId": "59411240", "RevisionGUID": "e35048e1-1f2d-4992-a4aa-4df619974fc3", "CreationDate": "2019-12-19T14:09:31.943", "UserId": "271415", "Comment": "added 11 characters in body; edited title", "Text": "Empty AWS S3 bucket with lifecyle", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "211542234", "PostHistoryTypeId": "5", "PostId": "59411240", "RevisionGUID": "d987b1e5-b22d-4552-b343-3934a1625dad", "CreationDate": "2019-12-19T16:06:21.013", "UserId": "6285832", "Comment": "added 227 characters in body", "Text": "I'm creating an AWS S3 bucket on which many files will be uploaded.\r\n\r\nSince I don't want those file to stay forever, I would like to empty the bucket every month.\r\n\r\nI'm using Terraform to do this.\r\n\r\nI have the following documentation https://www.terraform.io/docs/providers/aws/r/s3_bucket.html\r\n\r\nAnd the following Terraform configuration:\r\n\r\n    resource \"aws_s3_bucket\" \"garbage\" {\r\n      bucket = \"garbage-${terraform.workspace}\"\r\n      acl    = \"private\"\r\n    \r\n      lifecycle {\r\n        prevent_destroy = false\r\n      }\r\n\r\n      lifecycle {\r\n        prevent_destroy = false\r\n      }\r\n    \r\n      lifecycle_rule {\r\n        id = tmp\r\n        prefix= \"tmp/\"\r\n        enabled = true\r\n    \r\n        expiration {\r\n          days = 1\r\n        }\r\n      }\r\n    \r\n      server_side_encryption_configuration {\r\n        rule {\r\n          apply_server_side_encryption_by_default {\r\n            sse_algorithm = \"AES256\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\nEven with the documentation, I struggle to find how I could indicate that I want the file to be deleted every month in this bucket.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "59413878", "PostTypeId": "2", "ParentId": "59411240", "CreationDate": "2019-12-19T16:48:45.693", "Score": "3", "Body": "<p>You haven't included an expiration policy.</p>\n\n<p>You would typically configure objects to expire N days after they were created. You can't create a lifecycle policy that implements \"empty this bucket at the end of the month\". You could potentially set a date e.g. 2019-12-31 when all objects would expire but you would then have to update that policy to reflect the subsequent expiration date.</p>\n\n<p>Here's an example:</p>\n\n<pre><code>lifecycle_rule {\n    id = \"trash\"\n    prefix= \"trash/\"\n    enabled = true\n\n    expiration {\n        days = 30\n    }\n}\n</code></pre>\n\n<p>This says that objects with a prefix of <code>trash/</code> will expire and be queued for removal some time after they become 30 days old. Note that AWS evaluates lifecycle rules periodically (once per day afaik) and will queue expired objects for removal. Removal will take place some time after that. You are not charged for storage from the time an object expires.</p>\n\n<p>Note that there are other transitions available too, beyond removal, such as moving objects to cheaper storage tiers such as Glacier.</p>\n", "OwnerUserId": "271415", "LastEditorUserId": "271415", "LastEditDate": "2019-12-20T15:01:06.067", "LastActivityDate": "2019-12-20T15:01:06.067", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "105033805", "PostId": "59413878", "Score": "0", "Text": "Let's say I wouldn't  put any prefix, would all the object in the bucket be flagged for expiration ?", "CreationDate": "2019-12-20T10:35:05.293", "UserId": "6285832", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "105037705", "PostId": "59413878", "Score": "1", "Text": "Absence of prefix means all objects, yes.", "CreationDate": "2019-12-20T13:13:43.667", "UserId": "271415", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "211544624", "PostHistoryTypeId": "2", "PostId": "59413878", "RevisionGUID": "3a7f89e7-1805-4f50-b0a8-af3288fb60ae", "CreationDate": "2019-12-19T16:48:45.693", "UserId": "271415", "Text": "You haven't included an expiration policy.\r\n\r\nI'm not aware that you can empty the bucket using lifecycle policies. You would typically configure objects to expire N days after they were created. You could potentially set a date e.g. 2019-12-31 when all objects would expire but you would then have to update that policy to reflect the subsequent expiration date.\r\n\r\nHere's an example:\r\n\r\n    lifecycle_rule {\r\n        id = \"trash\"\r\n        prefix= \"trash/\"\r\n        enabled = true\r\n\r\n        expiration {\r\n            days = 30\r\n        }\r\n    }\r\n\r\nThis says that objects with a prefix of `trash/` will expire and be queued for removal some time after they become 30 days old. Note that AWS evaluates lifecycle rules periodically (once per day afaik) and will queue expired objects for removal. Removal will take place some time after that. You are not charged for storage from the time an object expires.\r\n\r\nNote that there are other transitions available too, beyond removal, such as moving objects to cheaper storage tiers such as Glacier.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "You haven't included an expiration policy. ", "keywords": ["policy"]}, {"source": "Text", "text": "You could potentially set a date e.g. 2019-12-31 when all objects would expire but you would then have to update that policy to reflect the subsequent expiration date. ", "keywords": ["policy"]}, {"source": "Text", "text": "You are not charged for storage from the time an object expires. ", "keywords": ["storage"]}, {"source": "Text", "text": "Note that there are other transitions available too, beyond removal, such as moving objects to cheaper storage tiers such as Glacier.", "keywords": ["cheap", "storage"]}]}, {"Id": "211600654", "PostHistoryTypeId": "5", "PostId": "59413878", "RevisionGUID": "fb315aa7-4b2e-49a8-84ca-4b0b1965dfc4", "CreationDate": "2019-12-20T15:01:06.067", "UserId": "271415", "Comment": "added 27 characters in body", "Text": "You haven't included an expiration policy.\r\n\r\nYou would typically configure objects to expire N days after they were created. You can't create a lifecycle policy that implements \"empty this bucket at the end of the month\". You could potentially set a date e.g. 2019-12-31 when all objects would expire but you would then have to update that policy to reflect the subsequent expiration date.\r\n\r\nHere's an example:\r\n\r\n    lifecycle_rule {\r\n        id = \"trash\"\r\n        prefix= \"trash/\"\r\n        enabled = true\r\n\r\n        expiration {\r\n            days = 30\r\n        }\r\n    }\r\n\r\nThis says that objects with a prefix of `trash/` will expire and be queued for removal some time after they become 30 days old. Note that AWS evaluates lifecycle rules periodically (once per day afaik) and will queue expired objects for removal. Removal will take place some time after that. You are not charged for storage from the time an object expires.\r\n\r\nNote that there are other transitions available too, beyond removal, such as moving objects to cheaper storage tiers such as Glacier.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "You haven't included an expiration policy. ", "keywords": ["policy"]}, {"source": "Text", "text": "You can't create a lifecycle policy that implements \"empty this bucket at the end of the month\". ", "keywords": ["policy"]}, {"source": "Text", "text": "You could potentially set a date e.g. 2019-12-31 when all objects would expire but you would then have to update that policy to reflect the subsequent expiration date. ", "keywords": ["policy"]}, {"source": "Text", "text": "You are not charged for storage from the time an object expires. ", "keywords": ["storage"]}, {"source": "Text", "text": "Note that there are other transitions available too, beyond removal, such as moving objects to cheaper storage tiers such as Glacier.", "keywords": ["cheap", "storage"]}]}], "filtered-sentences": [{"source": "Body", "text": "You haven't included an expiration policy. ", "keywords": ["policy"]}, {"source": "Body", "text": "You can't create a lifecycle policy that implements \"empty this bucket at the end of the month\". ", "keywords": ["policy"]}, {"source": "Body", "text": "You could potentially set a date e.g. 2019-12-31 when all objects would expire but you would then have to update that policy to reflect the subsequent expiration date. ", "keywords": ["policy"]}, {"source": "Body", "text": "You are not charged for storage from the time an object expires. ", "keywords": ["storage"]}, {"source": "Body", "text": "Note that there are other transitions available too, beyond removal, such as moving objects to cheaper storage tiers such as Glacier.", "keywords": ["cheap", "storage"]}]}], "contains-topic": true, "filtered-sentences": []}