{"Id": "68743624", "PostTypeId": "1", "CreationDate": "2021-08-11T14:07:37.163", "Score": "1", "ViewCount": "506", "Body": "<p>I am creating few public subnets, private subnets, igw, nat, route_tables, and route_table entry in AWS using terraform. Below is the number of resources I am creating.</p>\n<p>terraform.tfvars</p>\n<pre><code>vpc_cidr = &quot;10.0.0.0/16&quot;\npublic_subnet_count = 6\npublic_subnets_cidr  = [&quot;10.0.1.0/24&quot;,&quot;10.0.2.0/24&quot;,&quot;10.0.3.0/24&quot;,&quot;10.0.4.0/24&quot;,&quot;10.0.5.0/24&quot;, &quot;10.0.6.0/24&quot;]\navailability_zones = [&quot;us-east-2a&quot;, &quot;us-east-2b&quot;,&quot;us-east-2c&quot;,&quot;us-east-2d&quot;]\n</code></pre>\n<pre><code>\nresources.tf\n\nresource &quot;aws_vpc&quot; &quot;vpc&quot; {\n  cidr_block           = var.vpc_cidr\n  enable_dns_hostnames = true\n  enable_dns_support   = true\n  tags = {\n    Name        = &quot;${var.environment}-vpc&quot;\n    Environment = var.environment\n  }\n}\n\nresource &quot;aws_subnet&quot; &quot;public_subnet&quot; {\n  vpc_id                  = &quot;${aws_vpc.vpc.id}&quot;\n  count                   = var.public_subnet_count\n  cidr_block              = &quot;${element(var.public_subnets_cidr, count.index)}&quot;\n  availability_zone       = length(var.availability_zones) &gt; 1 ? var.availability_zones[count.index % length(var.availability_zones)] : var.availability_zones[0]\n  map_public_ip_on_launch = false\n  tags = {\n    Name        = &quot;${var.environment}-${element(var.availability_zones, count.index)}-public-subnet&quot;\n    Environment = &quot;${var.environment}&quot;\n  }\n}\n\nresource &quot;aws_internet_gateway&quot; &quot;ig&quot; {\n  count = 1\n  vpc_id = aws_vpc.vpc.id\n  tags = {\n    Name        = &quot;${var.environment}-igw&quot;\n    Environment = &quot;${var.environment}&quot;\n  }\n}\n\nresource &quot;aws_route_table&quot; &quot;public&quot; {\n  count = length(var.availability_zones)\n  vpc_id = aws_vpc.vpc.id\n  tags = {\n    Name        = &quot;${var.environment}-public-route-table&quot;\n    Environment = &quot;${var.environment}&quot;\n  }\n}\n\n resource &quot;aws_route&quot; &quot;public_internet_gateway&quot; {\n  count = length(aws_route_table.public.*.id)\n  route_table_id         = element(aws_route_table.public.*.id, count.index)\n  destination_cidr_block = &quot;0.0.0.0/0&quot;\n  gateway_id             = aws_internet_gateway.ig[0].id\n}\n\nresource &quot;aws_route_table_association&quot; &quot;public&quot; {\n  count = length(var.availability_zones)\n  subnet_id      = element(aws_subnet.public_subnet.*.id, count.index)\n  route_table_id = element(aws_route_table.public.*.id, count.index)\n}\n</code></pre>\n<p>Query in aws_route_table_association.public section.</p>\n<p>How do I attach private subnet of a particular az to a route table id. For example if i use 6 private subnets in tfvars, it creates atleast 2 private subnets in one az (ex: us-east-2a). How do i loop and attach 2 subnet from us-east-2a to one route table created for us-east-2a. Kind of map between multiple subnets in one az to route table in that az.</p>\n<p>This is to attach each az nat gateway to that az subnet for routing.</p>\n", "OwnerUserId": "7519440", "LastEditorUserId": "7519440", "LastEditDate": "2021-08-11T19:24:14.670", "LastActivityDate": "2021-08-16T16:25:12.503", "Title": "Terraform - Multi Loops or Maps", "Tags": "<amazon-web-services><terraform><terraform-provider-aws><terraform0.12+>", "AnswerCount": "1", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "251813469", "PostHistoryTypeId": "2", "PostId": "68743624", "RevisionGUID": "de8db6af-2b3a-4517-b514-3058b19d0fd4", "CreationDate": "2021-08-11T14:07:37.163", "UserId": "7519440", "Text": "I am creating few public subnets, private subnets, igw, nat, route_tables, and route_table entry in AWS using terraform. Below is the number of resources I am creating.\r\n\r\nterraform.tfvars\r\n\r\n    vpc_cidr = \"10.0.0.0/16\"\r\n    public_subnet_count = 6\r\n    public_subnets_cidr  = [\"10.0.1.0/24\",\"10.0.2.0/24\",\"10.0.3.0/24\",\"10.0.4.0/24\",\"10.0.5.0/24\", \"10.0.6.0/24\"]\r\n    availability_zones = [\"us-east-2a\", \"us-east-2b\",\"us-east-2c\",\"us-east-2d\"]\r\n```\r\n\r\nresources.tf\r\n\r\nresource \"aws_vpc\" \"vpc\" {\r\n  cidr_block           = var.vpc_cidr\r\n  enable_dns_hostnames = true\r\n  enable_dns_support   = true\r\n  tags = {\r\n    Name        = \"${var.environment}-vpc\"\r\n    Environment = var.environment\r\n  }\r\n}\r\n\r\nresource \"aws_subnet\" \"public_subnet\" {\r\n  vpc_id                  = \"${aws_vpc.vpc.id}\"\r\n  count                   = var.public_subnet_count\r\n  cidr_block              = \"${element(var.public_subnets_cidr, count.index)}\"\r\n  availability_zone       = length(var.availability_zones) > 1 ? var.availability_zones[count.index % length(var.availability_zones)] : var.availability_zones[0]\r\n  map_public_ip_on_launch = false\r\n  tags = {\r\n    Name        = \"${var.environment}-${element(var.availability_zones, count.index)}-public-subnet\"\r\n    Environment = \"${var.environment}\"\r\n  }\r\n}\r\n\r\nresource \"aws_internet_gateway\" \"ig\" {\r\n  count = 1\r\n  vpc_id = aws_vpc.vpc.id\r\n  tags = {\r\n    Name        = \"${var.environment}-igw\"\r\n    Environment = \"${var.environment}\"\r\n  }\r\n}\r\n\r\nresource \"aws_route_table\" \"public\" {\r\n  count = length(var.availability_zones)\r\n  vpc_id = aws_vpc.vpc.id\r\n  tags = {\r\n    Name        = \"${var.environment}-public-route-table\"\r\n    Environment = \"${var.environment}\"\r\n  }\r\n}\r\n\r\n resource \"aws_route\" \"public_internet_gateway\" {\r\n  count = length(aws_route_table.public.*.id)\r\n  route_table_id         = element(aws_route_table.public.*.id, count.index)\r\n  destination_cidr_block = \"0.0.0.0/0\"\r\n  gateway_id             = aws_internet_gateway.ig[0].id\r\n}\r\n\r\nresource \"aws_route_table_association\" \"public\" {\r\n  count = length(var.availability_zones)\r\n  subnet_id      = element(aws_subnet.public_subnet.*.id, count.index)\r\n  route_table_id = element(aws_route_table.public.*.id, count.index)\r\n}\r\n```\r\nQuery in aws_route_table_association.public section.\r\n\r\nHow do I attach private subnet of a particular az to a route table id of that az. For example if i use 6 public subnets in tfvars, it creates atleast 2 public subnets in one az (ex: us-east-2a). How do i loop and attach 2 subnet from us-east-2a to one route table created for us-east-2a. Kind of map between multiple subnets in one az to route table in that az.\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I am creating few public subnets, private subnets, igw, nat, route_tables, and route_table entry in AWS using terraform. ", "keywords": ["nat"]}]}, {"Id": "251813470", "PostHistoryTypeId": "1", "PostId": "68743624", "RevisionGUID": "de8db6af-2b3a-4517-b514-3058b19d0fd4", "CreationDate": "2021-08-11T14:07:37.163", "UserId": "7519440", "Text": "Terraform - Multi Loops or Maps", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "251813471", "PostHistoryTypeId": "3", "PostId": "68743624", "RevisionGUID": "de8db6af-2b3a-4517-b514-3058b19d0fd4", "CreationDate": "2021-08-11T14:07:37.163", "UserId": "7519440", "Text": "<amazon-web-services><terraform><terraform-provider-aws><terraform0.12+>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "251830923", "PostHistoryTypeId": "5", "PostId": "68743624", "RevisionGUID": "d06d3ee3-1dc0-4cf3-8823-f485b0aef41d", "CreationDate": "2021-08-11T19:24:14.670", "UserId": "7519440", "Comment": "added 64 characters in body", "Text": "I am creating few public subnets, private subnets, igw, nat, route_tables, and route_table entry in AWS using terraform. Below is the number of resources I am creating.\r\n\r\nterraform.tfvars\r\n\r\n    vpc_cidr = \"10.0.0.0/16\"\r\n    public_subnet_count = 6\r\n    public_subnets_cidr  = [\"10.0.1.0/24\",\"10.0.2.0/24\",\"10.0.3.0/24\",\"10.0.4.0/24\",\"10.0.5.0/24\", \"10.0.6.0/24\"]\r\n    availability_zones = [\"us-east-2a\", \"us-east-2b\",\"us-east-2c\",\"us-east-2d\"]\r\n```\r\n\r\nresources.tf\r\n\r\nresource \"aws_vpc\" \"vpc\" {\r\n  cidr_block           = var.vpc_cidr\r\n  enable_dns_hostnames = true\r\n  enable_dns_support   = true\r\n  tags = {\r\n    Name        = \"${var.environment}-vpc\"\r\n    Environment = var.environment\r\n  }\r\n}\r\n\r\nresource \"aws_subnet\" \"public_subnet\" {\r\n  vpc_id                  = \"${aws_vpc.vpc.id}\"\r\n  count                   = var.public_subnet_count\r\n  cidr_block              = \"${element(var.public_subnets_cidr, count.index)}\"\r\n  availability_zone       = length(var.availability_zones) > 1 ? var.availability_zones[count.index % length(var.availability_zones)] : var.availability_zones[0]\r\n  map_public_ip_on_launch = false\r\n  tags = {\r\n    Name        = \"${var.environment}-${element(var.availability_zones, count.index)}-public-subnet\"\r\n    Environment = \"${var.environment}\"\r\n  }\r\n}\r\n\r\nresource \"aws_internet_gateway\" \"ig\" {\r\n  count = 1\r\n  vpc_id = aws_vpc.vpc.id\r\n  tags = {\r\n    Name        = \"${var.environment}-igw\"\r\n    Environment = \"${var.environment}\"\r\n  }\r\n}\r\n\r\nresource \"aws_route_table\" \"public\" {\r\n  count = length(var.availability_zones)\r\n  vpc_id = aws_vpc.vpc.id\r\n  tags = {\r\n    Name        = \"${var.environment}-public-route-table\"\r\n    Environment = \"${var.environment}\"\r\n  }\r\n}\r\n\r\n resource \"aws_route\" \"public_internet_gateway\" {\r\n  count = length(aws_route_table.public.*.id)\r\n  route_table_id         = element(aws_route_table.public.*.id, count.index)\r\n  destination_cidr_block = \"0.0.0.0/0\"\r\n  gateway_id             = aws_internet_gateway.ig[0].id\r\n}\r\n\r\nresource \"aws_route_table_association\" \"public\" {\r\n  count = length(var.availability_zones)\r\n  subnet_id      = element(aws_subnet.public_subnet.*.id, count.index)\r\n  route_table_id = element(aws_route_table.public.*.id, count.index)\r\n}\r\n```\r\nQuery in aws_route_table_association.public section.\r\n\r\nHow do I attach private subnet of a particular az to a route table id. For example if i use 6 private subnets in tfvars, it creates atleast 2 private subnets in one az (ex: us-east-2a). How do i loop and attach 2 subnet from us-east-2a to one route table created for us-east-2a. Kind of map between multiple subnets in one az to route table in that az.\r\n\r\n\r\nThis is to attach each az nat gateway to that az subnet for routing. ", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I am creating few public subnets, private subnets, igw, nat, route_tables, and route_table entry in AWS using terraform. ", "keywords": ["nat"]}, {"source": "Text", "text": "This is to attach each az nat gateway to that az subnet for routing.", "keywords": ["nat"]}]}], "answers": [{"Id": "68806087", "PostTypeId": "2", "ParentId": "68743624", "CreationDate": "2021-08-16T16:11:33.100", "Score": "2", "Body": "<p>You don't need to create a route table per AZ, the route tables are linked to subnets. So, you can just create a single route table and then link all your public subnets to it:</p>\n<pre><code>resource &quot;aws_route_table&quot; &quot;public&quot; {\n  vpc_id = aws_vpc.vpc.id\n  route {\n    cidr_block = &quot;0.0.0.0/0&quot;\n    gateway_id = aws_internet_gateway.ig.id\n  }\n}\n\nresource &quot;aws_route_table_association&quot; &quot;public&quot; {\n  count = var.public_subnet_count\n  subnet_id      = aws_subnet.public_subnet[count.index].id\n  route_table_id = aws_route_table.public.id\n}\n</code></pre>\n<p>I've included the single route into the <code>route_table</code> to reduce the amount of code, so you can delete the <code>aws_route</code> resource if you use this.</p>\n<p>[Edit]\nSorry I just noticed your mention of private subnets, but attaching route tables follows the same principle, and you don't need a NAT gateway per AZ either (that's expensive!) so you could route all private subnets through a single NAT gateway with one route table.</p>\n<p>If you really want 4 NAT gateways, then you could do something like:</p>\n<pre><code>resource &quot;aws_route_table&quot; &quot;private&quot; {\n  count  = length(var.availability_zones)\n  vpc_id = aws_vpc.vpc.id\n  route {\n    cidr_block     = &quot;0.0.0.0/0&quot;\n    nat_gateway_id = aws_nat_gateway.nat[count.index].id\n  }\n}\n\nresource &quot;aws_route_table_association&quot; &quot;private&quot; {\n  count = var.private_subnet_count\n\n  subnet_id = aws_subnet.private[count.index].id\n  route_table_id = aws_route_table.private[\n    count.index % length(var.availability_zones)\n  ].id\n}\n</code></pre>\n<p>Since you already use the modulus (%) operator to distribute the subnets, I think you'll get the same result doing it this way.</p>\n", "OwnerUserId": "1651969", "LastEditorUserId": "1651969", "LastEditDate": "2021-08-16T16:25:12.503", "LastActivityDate": "2021-08-16T16:25:12.503", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "121600350", "PostId": "68806087", "Score": "0", "Text": "Single NAT is not a best solution. If one az is down and if all instances are attached to the same nat, then instances in other az will also be impacted. AWS suggest to use one nat per az(at least 2 nat).", "CreationDate": "2021-08-16T16:20:51.537", "UserId": "7519440", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Single NAT is not a best solution. ", "keywords": ["nat"]}, {"source": "Text", "text": "If one az is down and if all instances are attached to the same nat, then instances in other az will also be impacted. ", "keywords": ["nat"]}, {"source": "Text", "text": "AWS suggest to use one nat per az(at least 2 nat).", "keywords": ["nat"]}]}, {"Id": "121600478", "PostId": "68806087", "Score": "0", "Text": "Fair enough, I've updated my answer to include an option in case multiple NATs are desired.", "CreationDate": "2021-08-16T16:26:15.783", "UserId": "1651969", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "252089030", "PostHistoryTypeId": "2", "PostId": "68806087", "RevisionGUID": "73fc116e-3629-429e-81aa-929165ca74e2", "CreationDate": "2021-08-16T16:11:33.100", "UserId": "1651969", "Text": "You don't need to create a route table per AZ, the route tables are linked to subnets. So, you can just create a single route table and then link all your public subnets to it:\r\n\r\n    resource \"aws_route_table\" \"public\" {\r\n      vpc_id = aws_vpc.vpc.id\r\n      route {\r\n        cidr_block = \"0.0.0.0/0\"\r\n        gateway_id = aws_internet_gateway.ig.id\r\n      }\r\n    }\r\n\r\n    resource \"aws_route_table_association\" \"public\" {\r\n      count = var.public_subnet_count\r\n      subnet_id      = aws_subnet.public_subnet[count.index].id\r\n      route_table_id = aws_route_table.public.id\r\n    }\r\n\r\nI've included the single route into the `route_table` to reduce the amount of code, so you can delete the `aws_route` resource if you use this.\r\n\r\n[Edit]\r\nSorry I just noticed your mention of private subnets, but attaching route tables follows the same principle, and you don't need a NAT gateway per AZ either (that's expensive!) so you could route all private subnets through a single NAT gateway with one route table.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "[Edit] Sorry I just noticed your mention of private subnets, but attaching route tables follows the same principle, and you don't need a NAT gateway per AZ either (that's expensive!) so you could route all private subnets through a single NAT gateway with one route table.", "keywords": ["expense", "nat"]}]}, {"Id": "252089680", "PostHistoryTypeId": "5", "PostId": "68806087", "RevisionGUID": "e972d427-1b6d-44b3-8a2c-b2f5932edf63", "CreationDate": "2021-08-16T16:25:12.503", "UserId": "1651969", "Comment": "added 744 characters in body", "Text": "You don't need to create a route table per AZ, the route tables are linked to subnets. So, you can just create a single route table and then link all your public subnets to it:\r\n\r\n    resource \"aws_route_table\" \"public\" {\r\n      vpc_id = aws_vpc.vpc.id\r\n      route {\r\n        cidr_block = \"0.0.0.0/0\"\r\n        gateway_id = aws_internet_gateway.ig.id\r\n      }\r\n    }\r\n\r\n    resource \"aws_route_table_association\" \"public\" {\r\n      count = var.public_subnet_count\r\n      subnet_id      = aws_subnet.public_subnet[count.index].id\r\n      route_table_id = aws_route_table.public.id\r\n    }\r\n\r\nI've included the single route into the `route_table` to reduce the amount of code, so you can delete the `aws_route` resource if you use this.\r\n\r\n[Edit]\r\nSorry I just noticed your mention of private subnets, but attaching route tables follows the same principle, and you don't need a NAT gateway per AZ either (that's expensive!) so you could route all private subnets through a single NAT gateway with one route table.\r\n\r\nIf you really want 4 NAT gateways, then you could do something like:\r\n\r\n    resource \"aws_route_table\" \"private\" {\r\n      count  = length(var.availability_zones)\r\n      vpc_id = aws_vpc.vpc.id\r\n      route {\r\n        cidr_block     = \"0.0.0.0/0\"\r\n        nat_gateway_id = aws_nat_gateway.nat[count.index].id\r\n      }\r\n    }\r\n    \r\n    resource \"aws_route_table_association\" \"private\" {\r\n      count = var.private_subnet_count\r\n    \r\n      subnet_id = aws_subnet.private[count.index].id\r\n      route_table_id = aws_route_table.private[\r\n        count.index % length(var.availability_zones)\r\n      ].id\r\n    }\r\n\r\nSince you already use the modulus (%) operator to distribute the subnets, I think you'll get the same result doing it this way.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "[Edit] Sorry I just noticed your mention of private subnets, but attaching route tables follows the same principle, and you don't need a NAT gateway per AZ either (that's expensive!) so you could route all private subnets through a single NAT gateway with one route table. ", "keywords": ["expense", "nat"]}, {"source": "Text", "text": "If you really want 4 NAT gateways, then you could do something like: resource \"aws_route_table\" \"private\" { count = length(var.availability_zones) vpc_id = aws_vpc.vpc.id route { cidr_block = \"0.0.0.0/0\" nat_gateway_id = aws_nat_gateway.nat[count.index].id } } resource \"aws_route_table_association\" \"private\" { count = var.private_subnet_count subnet_id = aws_subnet.private[count.index].id route_table_id = aws_route_table.private[ count.index % length(var.availability_zones) ]", "keywords": ["nat"]}]}], "filtered-sentences": [{"source": "Body", "text": "[Edit] Sorry I just noticed your mention of private subnets, but attaching route tables follows the same principle, and you don't need a NAT gateway per AZ either (that's expensive!) so you could route all private subnets through a single NAT gateway with one route table. ", "keywords": ["expense", "nat"]}, {"source": "Body", "text": "If you really want 4 NAT gateways, then you could do something like: Since you already use the modulus (%) operator to distribute the subnets, I think you'll get the same result doing it this way.", "keywords": ["nat"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I am creating few public subnets, private subnets, igw, nat, route_tables, and route_table entry in AWS using terraform. ", "keywords": ["nat"]}, {"source": "Body", "text": "This is to attach each az nat gateway to that az subnet for routing.", "keywords": ["nat"]}]}