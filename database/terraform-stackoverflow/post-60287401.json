{"Id": "60287401", "PostTypeId": "1", "CreationDate": "2020-02-18T18:35:31.173", "Score": "7", "ViewCount": "6128", "Body": "<p>I am trying to create a simple appengine application with terraform.</p>\n\n<p>Firstly I have created all the basic resources with the gcloud cli. Here I list the commands I have executed:</p>\n\n<pre><code>export PROJECT=ProjectName\nexport TF_VAR_billing_account=xxxxxx-xxxxxx-xxxxxx\nexport TF_VAR_project=${PROJECT}-terraform\nexport TF_CREDS=./${PROJECT}-terraform.json\n\ngcloud projects create ${TF_VAR_project} \\\n  --set-as-default\n\ngcloud beta billing projects link ${TF_VAR_project} \\\n  --billing-account ${TF_VAR_billing_account}\n\n######################################################################################\n##### Create the Terraform service account\n######################################################################################\n\ngcloud iam service-accounts create terraform \\\n  --display-name \"Terraform admin account\"\n\ngcloud iam service-accounts keys create ${TF_CREDS} \\\n  --iam-account terraform@${TF_VAR_project}.iam.gserviceaccount.com\n\ngcloud projects add-iam-policy-binding ${TF_VAR_project} \\\n  --member serviceAccount:terraform@${TF_VAR_project}.iam.gserviceaccount.com \\\n  --role roles/editor\n\ngcloud projects add-iam-policy-binding ${TF_VAR_project} \\\n  --member serviceAccount:terraform@${TF_VAR_project}.iam.gserviceaccount.com \\\n  --role roles/storage.admin\n\ngcloud projects add-iam-policy-binding ${TF_VAR_project} \\\n  --member serviceAccount:terraform@${TF_VAR_project}.iam.gserviceaccount.com \\\n  --role roles/appengine.appAdmin\n\n\ngcloud services enable cloudresourcemanager.googleapis.com\ngcloud services enable cloudbilling.googleapis.com\ngcloud services enable iam.googleapis.com\ngcloud services enable serviceusage.googleapis.com\n\n######################################################################################\n##### Set up remote state in Cloud Storage\n######################################################################################\n\ngsutil mb -p ${TF_VAR_project} gs://${TF_VAR_project}\n\ncat &gt; backend.tf &lt;&lt; EOF\nterraform {\n backend \"gcs\" {\n   bucket  = \"${TF_VAR_project}\"\n   prefix  = \"terraform/state\"\n }\n}\nEOF\n\ngsutil versioning set on gs://${TF_VAR_project}\n\nexport GOOGLE_APPLICATION_CREDENTIALS=${TF_CREDS}\nexport GOOGLE_PROJECT=${TF_VAR_project}\n</code></pre>\n\n<p>Those commands are executed correctly. At this point  I have the following terraform file:</p>\n\n<pre><code>variable \"project\" {}\nvariable \"region\" {}\n\nprovider \"google\" {\n    project = var.project\n    region = var.region\n}\n\ndata \"google_project\" \"project\" {}\n\nresource \"google_project_service\" \"service\" {\n  for_each = toset([\n    \"appengine.googleapis.com\",\n    \"appengineflex.googleapis.com\",\n    \"firestore.googleapis.com\"\n  ])\n\n  service = each.key\n\n  disable_on_destroy = false\n}\n\nresource \"google_app_engine_application\" \"app\" {\n    project     = data.google_project.project.project_id\n    location_id = var.region\n}\n</code></pre>\n\n<p>When I run the terraform plan and apply the resources 'service' are created correcly but the app engine application cannot be created and I get the follwoing error:</p>\n\n<pre><code>google_app_engine_application.app: Creating...\n\nError: Error creating App Engine application: googleapi: Error 403: The caller does not have permission, forbidden\n\n  on project.tf line 24, in resource \"google_app_engine_application\" \"app\":\n  24: resource \"google_app_engine_application\" \"app\" {\n</code></pre>\n\n<p>It seems that the service key that I have created is missing some permission but I cannot figure out what is the issue.</p>\n", "OwnerUserId": "734205", "LastActivityDate": "2020-02-19T10:11:44.897", "Title": "Terraform: Error creating App Engine application: googleapi: Error 403: The caller does not have permission, forbidden", "Tags": "<google-app-engine><google-cloud-platform><terraform><gcloud>", "AnswerCount": "1", "CommentCount": "6", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "106641355", "PostId": "60287401", "Score": "0", "Text": "Set `GOOGLE_CLOUD_KEYFILE_JSON` to point to your service account. https://www.terraform.io/docs/providers/google/guides/getting_started.html", "CreationDate": "2020-02-18T18:57:29.740", "UserId": "8016720", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "106642022", "PostId": "60287401", "Score": "0", "Text": "That does not work :(", "CreationDate": "2020-02-18T19:24:44.407", "UserId": "734205", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "106643417", "PostId": "60287401", "Score": "0", "Text": "Clear both environment variables. What error do you get? How are you executing Terraform (the command line)?", "CreationDate": "2020-02-18T20:17:29.073", "UserId": "8016720", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "106650943", "PostId": "60287401", "Score": "1", "Text": "left-field: I've a feeling the robot needs to be an Owner to create App Engine apps.", "CreationDate": "2020-02-19T03:49:53.650", "UserId": "609290", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "106656725", "PostId": "60287401", "Score": "1", "Text": "@DazWilkin Thanks! I had to give role `roles/owner` to make it work. `roles/editor` seem not to be enough.", "CreationDate": "2020-02-19T08:43:08.830", "UserId": "734205", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "106671785", "PostId": "60287401", "Score": "0", "Text": "Great! I think this is part of App Engine's legacy as the oldest service.", "CreationDate": "2020-02-19T15:45:57.573", "UserId": "609290", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "215243620", "PostHistoryTypeId": "2", "PostId": "60287401", "RevisionGUID": "57eb8411-0843-4104-962b-e92f9d36267e", "CreationDate": "2020-02-18T18:35:31.173", "UserId": "734205", "Text": "I am trying to create a simple appengine application with terraform.\r\n\r\nFirstly I have created all the basic resources with the gcloud cli. Here I list the commands I have executed:\r\n\r\n```\r\nexport PROJECT=ProjectName\r\nexport TF_VAR_billing_account=xxxxxx-xxxxxx-xxxxxx\r\nexport TF_VAR_project=${PROJECT}-terraform\r\nexport TF_CREDS=./${PROJECT}-terraform.json\r\n\r\ngcloud projects create ${TF_VAR_project} \\\r\n  --set-as-default\r\n\r\ngcloud beta billing projects link ${TF_VAR_project} \\\r\n  --billing-account ${TF_VAR_billing_account}\r\n\r\n######################################################################################\r\n##### Create the Terraform service account\r\n######################################################################################\r\n\r\ngcloud iam service-accounts create terraform \\\r\n  --display-name \"Terraform admin account\"\r\n\r\ngcloud iam service-accounts keys create ${TF_CREDS} \\\r\n  --iam-account terraform@${TF_VAR_project}.iam.gserviceaccount.com\r\n\r\ngcloud projects add-iam-policy-binding ${TF_VAR_project} \\\r\n  --member serviceAccount:terraform@${TF_VAR_project}.iam.gserviceaccount.com \\\r\n  --role roles/editor\r\n\r\ngcloud projects add-iam-policy-binding ${TF_VAR_project} \\\r\n  --member serviceAccount:terraform@${TF_VAR_project}.iam.gserviceaccount.com \\\r\n  --role roles/storage.admin\r\n\r\ngcloud projects add-iam-policy-binding ${TF_VAR_project} \\\r\n  --member serviceAccount:terraform@${TF_VAR_project}.iam.gserviceaccount.com \\\r\n  --role roles/appengine.appAdmin\r\n\r\n\r\ngcloud services enable cloudresourcemanager.googleapis.com\r\ngcloud services enable cloudbilling.googleapis.com\r\ngcloud services enable iam.googleapis.com\r\ngcloud services enable serviceusage.googleapis.com\r\n\r\n######################################################################################\r\n##### Set up remote state in Cloud Storage\r\n######################################################################################\r\n\r\ngsutil mb -p ${TF_VAR_project} gs://${TF_VAR_project}\r\n\r\ncat > backend.tf << EOF\r\nterraform {\r\n backend \"gcs\" {\r\n   bucket  = \"${TF_VAR_project}\"\r\n   prefix  = \"terraform/state\"\r\n }\r\n}\r\nEOF\r\n\r\ngsutil versioning set on gs://${TF_VAR_project}\r\n\r\nexport GOOGLE_APPLICATION_CREDENTIALS=${TF_CREDS}\r\nexport GOOGLE_PROJECT=${TF_VAR_project}\r\n```\r\n\r\nThose commands are executed correctly. At this point  I have the following terraform file:\r\n\r\n```\r\nvariable \"project\" {}\r\nvariable \"region\" {}\r\n\r\nprovider \"google\" {\r\n    project = var.project\r\n    region = var.region\r\n}\r\n\r\ndata \"google_project\" \"project\" {}\r\n\r\nresource \"google_project_service\" \"service\" {\r\n  for_each = toset([\r\n    \"appengine.googleapis.com\",\r\n    \"appengineflex.googleapis.com\",\r\n    \"firestore.googleapis.com\"\r\n  ])\r\n\r\n  service = each.key\r\n\r\n  disable_on_destroy = false\r\n}\r\n\r\nresource \"google_app_engine_application\" \"app\" {\r\n    project     = data.google_project.project.project_id\r\n    location_id = var.region\r\n}\r\n```\r\n\r\n\r\nWhen I run the terraform plan and apply the resources 'service' are created correcly but the app engine application cannot be created and I get the follwoing error:\r\n\r\n```\r\ngoogle_app_engine_application.app: Creating...\r\n\r\nError: Error creating App Engine application: googleapi: Error 403: The caller does not have permission, forbidden\r\n\r\n  on project.tf line 24, in resource \"google_app_engine_application\" \"app\":\r\n  24: resource \"google_app_engine_application\" \"app\" {\r\n```\r\n\r\nIt seems that the service key that I have created is missing some permission but I cannot figure out what is the issue.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Here I list the commands I have executed: ``` export PROJECT=ProjectName export TF_VAR_billing_account=xxxxxx-xxxxxx-xxxxxx export TF_VAR_project=${PROJECT}-terraform export TF_CREDS=./${PROJECT}-terraform.json gcloud projects create ${TF_VAR_project} \\ --set-as-default gcloud beta billing projects link ${TF_VAR_project} \\ --billing-account ${TF_VAR_billing_account} ###################################################################################### ##### Create the Terraform service account ###################################################################################### gcloud iam service-accounts create terraform \\ --display-name \"Terraform admin account\" gcloud iam service-accounts keys create ${TF_CREDS} \\ --iam-account terraform@${TF_VAR_project}.iam.gserviceaccount.com gcloud projects add-iam-policy-binding ${TF_VAR_project} \\ --member serviceAccount:terraform@${TF_VAR_project}.iam.gserviceaccount.com \\ --role roles/editor gcloud projects add-iam-policy-binding ${TF_VAR_project} \\ --member serviceAccount:terraform@${TF_VAR_project}.iam.gserviceaccount.com \\ --role roles/storage.admin gcloud projects add-iam-policy-binding ${TF_VAR_project} \\ --member serviceAccount:terraform@${TF_VAR_project}.iam.gserviceaccount.com \\ --role roles/appengine.appAdmin gcloud services enable cloudresourcemanager.googleapis.com gcloud services enable cloudbilling.googleapis.com gcloud services enable iam.googleapis.com gcloud services enable serviceusage.googleapis.com ###################################################################################### ##### Set up remote state in Cloud Storage ###################################################################################### gsutil mb -p ${TF_VAR_project} gs://${TF_VAR_project} cat ", "keywords": ["bill", "storage", "policy"]}, {"source": "Text", "text": "At this point I have the following terraform file: ``` variable \"project\" {} variable \"region\" {} provider \"google\" { project = var.project region = var.region } data \"google_project\" \"project\" {} resource \"google_project_service\" \"service\" { for_each = toset([ \"appengine.googleapis.com\", \"appengineflex.googleapis.com\", \"firestore.googleapis.com\" ]) service = each.key disable_on_destroy = false } resource \"google_app_engine_application\" \"app\" { project = data.google_project.project.project_id location_id = var.region } ``` ", "keywords": ["provider"]}]}, {"Id": "215243621", "PostHistoryTypeId": "1", "PostId": "60287401", "RevisionGUID": "57eb8411-0843-4104-962b-e92f9d36267e", "CreationDate": "2020-02-18T18:35:31.173", "UserId": "734205", "Text": "Terraform: Error creating App Engine application: googleapi: Error 403: The caller does not have permission, forbidden", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "215243622", "PostHistoryTypeId": "3", "PostId": "60287401", "RevisionGUID": "57eb8411-0843-4104-962b-e92f9d36267e", "CreationDate": "2020-02-18T18:35:31.173", "UserId": "734205", "Text": "<google-app-engine><google-cloud-platform><terraform><gcloud>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "60297868", "PostTypeId": "2", "ParentId": "60287401", "CreationDate": "2020-02-19T10:11:44.897", "Score": "6", "Body": "<p>As another member of the community has pointed out, you need to have Owner permissions on the project in order to properly create applications if you are using the primitive roles. This is mentioned in the <a href=\"https://cloud.google.com/appengine/docs/standard/python/roles#primitive_roles\" rel=\"noreferrer\">permissions documentation</a> for App engine.</p>\n", "OwnerUserId": "10161306", "LastActivityDate": "2020-02-19T10:11:44.897", "CommentCount": "1", "CommunityOwnedDate": "2020-02-19T10:11:44.897", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "121226698", "PostId": "60297868", "Score": "0", "Text": "WTH, for creating firestore db user should be owner", "CreationDate": "2021-07-30T18:03:25.347", "UserId": "2279488", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "215286987", "PostHistoryTypeId": "2", "PostId": "60297868", "RevisionGUID": "3284f113-3c04-42c1-a06f-854db305c460", "CreationDate": "2020-02-19T10:11:44.897", "UserId": "10161306", "Text": "As another member of the community has pointed out, you need to have Owner permissions on the project in order to properly create applications if you are using the primitive roles. This is mentioned in the [permissions documentation](https://cloud.google.com/appengine/docs/standard/python/roles#primitive_roles) for App engine.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "215286988", "PostHistoryTypeId": "16", "PostId": "60297868", "RevisionGUID": "ded572bc-dd8b-48fd-bc42-29dd2a92e933", "CreationDate": "2020-02-19T10:11:44.897", "UserId": "10161306", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": []}