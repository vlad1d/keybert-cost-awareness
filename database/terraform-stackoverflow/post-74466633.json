{"Id": "74466633", "PostTypeId": "1", "CreationDate": "2022-11-16T20:11:41.793", "Score": "0", "ViewCount": "495", "Body": "<p>The code as follows gives me the output of &quot;Provisioned range for reads&quot; as 5 - 10 in the Additional settings, Read/write capacity. I would like to set it as 1 - 10. How to do it?</p>\n<pre><code>module &quot;dynamodb_table&quot; {\n  source   = &quot;terraform-aws-modules/dynamodb-table/aws&quot;\n  version  = &quot;3.1.1&quot;\n\n  name                = var.dbname\n  hash_key            = var.hash_key\n  billing_mode        = &quot;PROVISIONED&quot;\n  read_capacity       = 5\n  write_capacity      = 1\n  autoscaling_enabled = true\n\n  autoscaling_read = {\n    scale_in_cooldown  = 50\n    scale_out_cooldown = 40\n    target_value       = 70\n    min_capacity       = 1\n    max_capacity       = 10\n  }\n\n  autoscaling_write = {\n    scale_in_cooldown  = 50\n    scale_out_cooldown = 40\n    target_value       = 70\n    min_capacity       = 1\n    max_capacity       = 10\n  }\n\n  attributes = [\n    {\n      name = &quot;user_id&quot;\n      type = &quot;S&quot;\n    }\n  ]\n\n  tags = {\n    Terraform   = &quot;true&quot;\n    Environment = var.environment\n  }\n}\n</code></pre>\n<p>Code from module:</p>\n<pre><code>resource &quot;aws_appautoscaling_target&quot; &quot;table_read&quot; {\n  count = var.create_table &amp;&amp; var.autoscaling_enabled &amp;&amp; length(var.autoscaling_read) &gt; 0 ? 1 : 0\n\n  max_capacity       = var.autoscaling_read[&quot;max_capacity&quot;]\n  min_capacity       = var.read_capacity\n  resource_id        = &quot;table/${aws_dynamodb_table.autoscaled[0].name}&quot;\n  scalable_dimension = &quot;dynamodb:table:ReadCapacityUnits&quot;\n  service_namespace  = &quot;dynamodb&quot;\n}\n</code></pre>\n", "OwnerUserId": "20208419", "LastEditorUserId": "20208419", "LastEditDate": "2022-11-16T22:49:07.143", "LastActivityDate": "2022-12-22T05:42:00.070", "Title": "AWS DynamoDB Auto Scaling. Provisioned range for reads. How to setup the range in Terraform script?", "Tags": "<terraform><amazon-dynamodb>", "AnswerCount": "2", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "282374060", "PostHistoryTypeId": "2", "PostId": "74466633", "RevisionGUID": "577fb09a-b3aa-4aad-9777-503adfd75695", "CreationDate": "2022-11-16T20:11:41.793", "UserId": "20208419", "Text": "The code as follows gives me the output of \"Provisioned range for reads\" as 5 - 10 in the Additional settings, Read/write capacity. I would like to set it as 1 - 10. How to do it?\r\n\r\n```\r\nmodule \"dynamodb_table\" {\r\n  source   = \"terraform-aws-modules/dynamodb-table/aws\"\r\n  version  = \"3.1.1\"\r\n\r\n  name                = var.dbname\r\n  hash_key            = var.hash_key\r\n  billing_mode        = \"PROVISIONED\"\r\n  read_capacity       = 5\r\n  write_capacity      = 1\r\n  autoscaling_enabled = true\r\n\r\n  autoscaling_read = {\r\n    scale_in_cooldown  = 50\r\n    scale_out_cooldown = 40\r\n    target_value       = 70\r\n    max_capacity       = 10\r\n  }\r\n\r\n  autoscaling_write = {\r\n    scale_in_cooldown  = 50\r\n    scale_out_cooldown = 40\r\n    target_value       = 70\r\n    max_capacity       = 10\r\n  }\r\n\r\n  attributes = [\r\n    {\r\n      name = \"user_id\"\r\n      type = \"S\"\r\n    }\r\n  ]\r\n\r\n  tags = {\r\n    Terraform   = \"true\"\r\n    Environment = var.environment\r\n  }\r\n}\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "How to do it? ``` module \"dynamodb_table\" { source = \"terraform-aws-modules/dynamodb-table/aws\" version = \"3.1.1\" name = var.dbname hash_key = var.hash_key billing_mode = \"PROVISIONED\" read_capacity = 5 write_capacity = 1 autoscaling_enabled = true autoscaling_read = { scale_in_cooldown = 50 scale_out_cooldown = 40 target_value = 70 max_capacity = 10 } autoscaling_write = { scale_in_cooldown = 50 scale_out_cooldown = 40 target_value = 70 max_capacity = 10 } attributes = [ { name = \"user_id\" type = \"S\" ", "keywords": ["bill"]}]}, {"Id": "282374062", "PostHistoryTypeId": "1", "PostId": "74466633", "RevisionGUID": "577fb09a-b3aa-4aad-9777-503adfd75695", "CreationDate": "2022-11-16T20:11:41.793", "UserId": "20208419", "Text": "AWS DynamoDB Auto Scaling. Provisioned range for reads. How to setup the range in Terraform script?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "282374063", "PostHistoryTypeId": "3", "PostId": "74466633", "RevisionGUID": "577fb09a-b3aa-4aad-9777-503adfd75695", "CreationDate": "2022-11-16T20:11:41.793", "UserId": "20208419", "Text": "<terraform><amazon-dynamodb>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "282380521", "PostHistoryTypeId": "5", "PostId": "74466633", "RevisionGUID": "c02bb670-0fc6-4b69-8cf1-c0a655b99309", "CreationDate": "2022-11-16T22:00:13.260", "UserId": "20208419", "Comment": "added 56 characters in body", "Text": "The code as follows gives me the output of \"Provisioned range for reads\" as 5 - 10 in the Additional settings, Read/write capacity. I would like to set it as 1 - 10. How to do it?\r\n\r\n```\r\nmodule \"dynamodb_table\" {\r\n  source   = \"terraform-aws-modules/dynamodb-table/aws\"\r\n  version  = \"3.1.1\"\r\n\r\n  name                = var.dbname\r\n  hash_key            = var.hash_key\r\n  billing_mode        = \"PROVISIONED\"\r\n  read_capacity       = 5\r\n  write_capacity      = 1\r\n  autoscaling_enabled = true\r\n\r\n  autoscaling_read = {\r\n    scale_in_cooldown  = 50\r\n    scale_out_cooldown = 40\r\n    target_value       = 70\r\n    min_capacity       = 1\r\n    max_capacity       = 10\r\n  }\r\n\r\n  autoscaling_write = {\r\n    scale_in_cooldown  = 50\r\n    scale_out_cooldown = 40\r\n    target_value       = 70\r\n    min_capacity       = 1\r\n    max_capacity       = 10\r\n  }\r\n\r\n  attributes = [\r\n    {\r\n      name = \"user_id\"\r\n      type = \"S\"\r\n    }\r\n  ]\r\n\r\n  tags = {\r\n    Terraform   = \"true\"\r\n    Environment = var.environment\r\n  }\r\n}\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "How to do it? ``` module \"dynamodb_table\" { source = \"terraform-aws-modules/dynamodb-table/aws\" version = \"3.1.1\" name = var.dbname hash_key = var.hash_key billing_mode = \"PROVISIONED\" read_capacity = 5 write_capacity = 1 autoscaling_enabled = true autoscaling_read = { scale_in_cooldown = 50 scale_out_cooldown = 40 target_value = 70 min_capacity = 1 max_capacity = 10 } autoscaling_write = { scale_in_cooldown = 50 scale_out_cooldown = 40 target_value = 70 min_capacity = 1 max_capacity = 10 } attributes = [ { name = \"user_id\" type = \"S\" ", "keywords": ["bill"]}]}, {"Id": "282382958", "PostHistoryTypeId": "5", "PostId": "74466633", "RevisionGUID": "f0c641a6-ba16-4324-b4be-8469fc31d9ea", "CreationDate": "2022-11-16T22:49:07.143", "UserId": "20208419", "Comment": "added 456 characters in body", "Text": "The code as follows gives me the output of \"Provisioned range for reads\" as 5 - 10 in the Additional settings, Read/write capacity. I would like to set it as 1 - 10. How to do it?\r\n\r\n```\r\nmodule \"dynamodb_table\" {\r\n  source   = \"terraform-aws-modules/dynamodb-table/aws\"\r\n  version  = \"3.1.1\"\r\n\r\n  name                = var.dbname\r\n  hash_key            = var.hash_key\r\n  billing_mode        = \"PROVISIONED\"\r\n  read_capacity       = 5\r\n  write_capacity      = 1\r\n  autoscaling_enabled = true\r\n\r\n  autoscaling_read = {\r\n    scale_in_cooldown  = 50\r\n    scale_out_cooldown = 40\r\n    target_value       = 70\r\n    min_capacity       = 1\r\n    max_capacity       = 10\r\n  }\r\n\r\n  autoscaling_write = {\r\n    scale_in_cooldown  = 50\r\n    scale_out_cooldown = 40\r\n    target_value       = 70\r\n    min_capacity       = 1\r\n    max_capacity       = 10\r\n  }\r\n\r\n  attributes = [\r\n    {\r\n      name = \"user_id\"\r\n      type = \"S\"\r\n    }\r\n  ]\r\n\r\n  tags = {\r\n    Terraform   = \"true\"\r\n    Environment = var.environment\r\n  }\r\n}\r\n```\r\nCode from module:\r\n```\r\nresource \"aws_appautoscaling_target\" \"table_read\" {\r\n  count = var.create_table && var.autoscaling_enabled && length(var.autoscaling_read) > 0 ? 1 : 0\r\n\r\n  max_capacity       = var.autoscaling_read[\"max_capacity\"]\r\n  min_capacity       = var.read_capacity\r\n  resource_id        = \"table/${aws_dynamodb_table.autoscaled[0].name}\"\r\n  scalable_dimension = \"dynamodb:table:ReadCapacityUnits\"\r\n  service_namespace  = \"dynamodb\"\r\n}\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "How to do it? ``` module \"dynamodb_table\" { source = \"terraform-aws-modules/dynamodb-table/aws\" version = \"3.1.1\" name = var.dbname hash_key = var.hash_key billing_mode = \"PROVISIONED\" read_capacity = 5 write_capacity = 1 autoscaling_enabled = true autoscaling_read = { scale_in_cooldown = 50 scale_out_cooldown = 40 target_value = 70 min_capacity = 1 max_capacity = 10 } autoscaling_write = { scale_in_cooldown = 50 scale_out_cooldown = 40 target_value = 70 min_capacity = 1 max_capacity = 10 } attributes = [ { name = \"user_id\" type = \"S\" } ] tags = { Terraform = \"true\" Environment = var.environment } } ``` Code from module: ``` resource \"aws_appautoscaling_target\" \"table_read\" { count = var.create_table && var.autoscaling_enabled && length(var.autoscaling_read) > 0 ? 1 : 0 max_capacity = var.autoscaling_read[\"max_capacity\"] min_capacity = var.read_capacity resource_id = \"table/${aws_dynamodb_table.autoscaled[0]", "keywords": ["bill"]}]}], "answers": [{"Id": "74884384", "PostTypeId": "2", "ParentId": "74466633", "CreationDate": "2022-12-22T05:16:45.350", "Score": "1", "Body": "<p>I think what you really want is the code from this reference:</p>\n<ul>\n<li><a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/appautoscaling_target\" rel=\"nofollow noreferrer\">aws_appautoscaling_target</a></li>\n<li><a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/appautoscaling_policy\" rel=\"nofollow noreferrer\">aws_appautoscaling_policy</a></li>\n</ul>\n<p>Here is my implementation from <code>main.tf</code>:</p>\n<pre><code>resource &quot;aws_dynamodb_table&quot; &quot;table&quot; {\n  name           = var.table_name\n  billing_mode   = &quot;PROVISIONED&quot;\n  read_capacity  = var.read_capacity_target\n  write_capacity = var.write_capacity_target\n  hash_key       = var.partition_key_name\n  range_key      = var.sort_key_name\n  ttl            = var.ttl\n  point_in_time_recovery { enabled = true }\n  server_side_encryption { enabled = true }\n  lifecycle {ignore_changes = [read_capacity, write_capacity]}\n  attribute {\n    name = var.partition_key_name\n    type = var.partition_key_type\n  }\n  attribute {\n    name = var.sort_key_name\n    type = var.sort_key_type\n  }\n  tags = {\n    &quot;Environment&quot;  = var.environment\n  }\n}\n\nresource &quot;aws_appautoscaling_target&quot; &quot;dynamodb_table_read_target&quot; {\n  max_capacity       = var.read_capacity_maximum\n  min_capacity       = var.read_capacity_minimum\n  resource_id        = &quot;table/${aws_dynamodb_table.table.name}&quot;\n  scalable_dimension = &quot;dynamodb:table:ReadCapacityUnits&quot;\n  service_namespace  = &quot;dynamodb&quot;\n}\n\nresource &quot;aws_appautoscaling_policy&quot; &quot;dynamodb_table_read_policy&quot; {\n  name               = &quot;DynamoDBReadCapacityUtilization:${aws_appautoscaling_target.dynamodb_table_read_target.resource_id}&quot;\n  policy_type        = &quot;TargetTrackingScaling&quot;\n  resource_id        = aws_appautoscaling_target.dynamodb_table_read_target.resource_id\n  scalable_dimension = aws_appautoscaling_target.dynamodb_table_read_target.scalable_dimension\n  service_namespace  = aws_appautoscaling_target.dynamodb_table_read_target.service_namespace\n\n  target_tracking_scaling_policy_configuration {\n    predefined_metric_specification {\n      predefined_metric_type = &quot;DynamoDBReadCapacityUtilization&quot;\n    }\n\n    target_value = 70.0\n  }\n}\n</code></pre>\n<p>And here is the <code>variables.tf</code> code:</p>\n<pre><code>\nvariable &quot;vpc_id&quot; {\n  description = &quot;Required. The Virtual Private Network containing all services.&quot;\n  type    = string\n}\nvariable &quot;table_name&quot; {\n  description = &quot;Required. The name of the DDB table. No spaces.&quot;\n  type    = string\n}\nvariable &quot;partition_key_name&quot; {\n  description = &quot;Required. Name of the partition key. No spaces.&quot;\n  type    = string\n}\nvariable &quot;partition_key_type&quot; {\n  description = &quot;Required. Partition key type: 'S' or 'N'&quot;\n  type    = string\n}\nvariable &quot;sort_key_name&quot; {\n  description = &quot;Required. The name of the Sort key. No spaces.&quot;\n  type    = string\n}\nvariable &quot;sort_key_type&quot; {\n  description = &quot;Required. Sort key type: 'S' or 'N'&quot;\n  type    = string\n}\nvariable &quot;ttl&quot; {\n  description = &quot;Required. True if TTL or time-to-live is enabled&quot;\n  type    = bool\n}\n\nvariable &quot;read_capacity_maximum&quot; {\n  description = &quot;Required. Maximum allowed autoscale range.&quot;\n  type    = number\n  default = 10\n}\nvariable &quot;read_capacity_minimum&quot; {\n  description = &quot;Required. Minimum allowed autoscale range.&quot;\n  type    = number\n  default = 2\n}\nvariable &quot;read_capacity_target&quot; {\n  description = &quot;Required. Target within autoscale range.&quot;\n  type    = number\n  default = 5\n}\nvariable &quot;write_capacity_maximum&quot; {\n  description = &quot;Required. Maximum allowed autoscale range.&quot;\n  type    = number\n  default = 10\n}\nvariable &quot;write_capacity_minimum&quot; {\n  description = &quot;Required. Minimum allowed autoscale range.&quot;\n  type    = string\n  default = 2\n}\nvariable &quot;write_capacity_target&quot; {\n  description = &quot;Required. Target within autoscale range.&quot;\n  type    = number\n  default = 5\n}\n\nvariable &quot;environment&quot; {\n  description = &quot;The staging type: development, production.&quot;\n  default = &quot;development&quot;\n  type    = string\n}\n</code></pre>\n", "OwnerUserId": "985088", "LastEditorUserId": "985088", "LastEditDate": "2022-12-22T05:42:00.070", "LastActivityDate": "2022-12-22T05:42:00.070", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "284775424", "PostHistoryTypeId": "2", "PostId": "74884384", "RevisionGUID": "4bc3bbce-dec7-472e-922a-df302afdf731", "CreationDate": "2022-12-22T05:16:45.350", "UserId": "985088", "Text": "I think what you really want is the code from this reference:\r\n* [aws_appautoscaling_target](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/appautoscaling_target)\r\n* [aws_appautoscaling_policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/appautoscaling_policy)\r\n\r\nHere is my implementation from `main.tf`:\r\n```\r\nresource \"aws_dynamodb_table\" \"table\" {\r\n  name           = var.table_name\r\n  billing_mode   = \"PROVISIONED\"\r\n  read_capacity  = var.read_capacity_target\r\n  write_capacity = var.write_capacity_target\r\n  hash_key       = var.partition_key_name\r\n  range_key      = var.sort_key_name\r\n  ttl            = var.ttl\r\n  point_in_time_recovery { enabled = true }\r\n  server_side_encryption { enabled = true }\r\n  lifecycle {ignore_changes = [read_capacity, write_capacity]}\r\n  attribute {\r\n    name = var.partition_key_name\r\n    type = var.partition_key_type\r\n  }\r\n  attribute {\r\n    name = var.sort_key_name\r\n    type = var.sort_key_type\r\n  }\r\n  tags = {\r\n    \"Environment\"  = var.environment\r\n  }\r\n}\r\n\r\nresource \"aws_appautoscaling_target\" \"dynamodb_table_read_target\" {\r\n  max_capacity       = var.read_capacity_maximum\r\n  min_capacity       = var.read_capacity_minimum\r\n  resource_id        = \"table/${aws_dynamodb_table.table.name}\"\r\n  scalable_dimension = \"dynamodb:table:ReadCapacityUnits\"\r\n  service_namespace  = \"dynamodb\"\r\n}\r\n\r\nresource \"aws_appautoscaling_policy\" \"dynamodb_table_read_policy\" {\r\n  name               = \"DynamoDBReadCapacityUtilization:${aws_appautoscaling_target.dynamodb_table_read_target.resource_id}\"\r\n  policy_type        = \"TargetTrackingScaling\"\r\n  resource_id        = aws_appautoscaling_target.dynamodb_table_read_target.resource_id\r\n  scalable_dimension = aws_appautoscaling_target.dynamodb_table_read_target.scalable_dimension\r\n  service_namespace  = aws_appautoscaling_target.dynamodb_table_read_target.service_namespace\r\n\r\n  target_tracking_scaling_policy_configuration {\r\n    predefined_metric_specification {\r\n      predefined_metric_type = \"DynamoDBReadCapacityUtilization\"\r\n    }\r\n\r\n    target_value = 70.0\r\n  }\r\n}\r\n```\r\n\r\nAnd here is the `variables.tf` code:\r\n```\r\n\r\nvariable \"vpc_id\" {\r\n  description = \"Required. The Virtual Private Network containing all services.\"\r\n  type    = string\r\n}\r\nvariable \"table_name\" {\r\n  description = \"Required. The name of the DDB table. No spaces.\"\r\n  type    = string\r\n}\r\nvariable \"partition_key_name\" {\r\n  description = \"Required. Name of the partition key. No spaces.\"\r\n  type    = string\r\n}\r\nvariable \"partition_key_type\" {\r\n  description = \"Required. Partition key type: 'S' or 'N'\"\r\n  type    = string\r\n}\r\nvariable \"sort_key_name\" {\r\n  description = \"Required. The name of the Sort key. No spaces.\"\r\n  type    = string\r\n}\r\nvariable \"sort_key_type\" {\r\n  description = \"Required. Sort key type: 'S' or 'N'\"\r\n  type    = string\r\n}\r\nvariable \"ttl\" {\r\n  description = \"Required. True if TTL or time-to-live is enabled\"\r\n  type    = bool\r\n}\r\n\r\nvariable \"read_capacity_maximum\" {\r\n  description = \"Required. Maximum allowed autoscale range.\"\r\n  type    = string\r\n  default = 10\r\n}\r\nvariable \"read_capacity_minimum\" {\r\n  description = \"Required. Minimum allowed autoscale range.\"\r\n  type    = string\r\n  default = 2\r\n}\r\nvariable \"read_capacity_target\" {\r\n  description = \"Required. Target within autoscale range.\"\r\n  type    = string\r\n  default = 5\r\n}\r\nvariable \"write_capacity_maximum\" {\r\n  description = \"Required. Maximum allowed autoscale range.\"\r\n  type    = string\r\n  default = 10\r\n}\r\nvariable \"write_capacity_minimum\" {\r\n  description = \"Required. Minimum allowed autoscale range.\"\r\n  type    = string\r\n  default = 2\r\n}\r\nvariable \"write_capacity_target\" {\r\n  description = \"Required. Target within autoscale range.\"\r\n  type    = string\r\n  default = 5\r\n}\r\n\r\nvariable \"environment\" {\r\n  description = \"The staging type: development, production.\"\r\n  default = \"development\"\r\n  type    = string\r\n}\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I think what you really want is the code from this reference: * [aws_appautoscaling_target](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/appautoscaling_target) * [aws_appautoscaling_policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/appautoscaling_policy) Here is my implementation from `main.tf`: ``` resource \"aws_dynamodb_table\" \"table\" { name = var.table_name billing_mode = \"PROVISIONED\" read_capacity = var.read_capacity_target write_capacity = var.write_capacity_target hash_key = var.partition_key_name range_key = var.sort_key_name ttl = var.ttl point_in_time_recovery { enabled = true } server_side_encryption { enabled = true } lifecycle {ignore_changes = [read_capacity, write_capacity]} attribute { name = var.partition_key_name type = var.partition_key_type } attribute { name = var.sort_key_name type = var.sort_key_type } tags = { \"Environment\" = var.environment } } resource \"aws_appautoscaling_target\" \"dynamodb_table_read_target\" { max_capacity = var.read_capacity_maximum min_capacity = var.read_capacity_minimum resource_id = \"table/${aws_dynamodb_table.table.name}\" scalable_dimension = \"dynamodb:table:ReadCapacityUnits\" service_namespace = \"dynamodb\" } resource \"aws_appautoscaling_policy\" \"dynamodb_table_read_policy\" { name = \"DynamoDBReadCapacityUtilization:${aws_appautoscaling_target.dynamodb_table_read_target.resource_id}\" policy_type = \"TargetTrackingScaling\" resource_id = aws_appautoscaling_target.dynamodb_table_read_target.resource_id scalable_dimension = aws_appautoscaling_target.dynamodb_table_read_target.scalable_dimension service_namespace = aws_appautoscaling_target.dynamodb_table_read_target.service_namespace target_tracking_scaling_policy_configuration { predefined_metric_specification { predefined_metric_type = \"DynamoDBReadCapacityUtilization\" } target_value = 70.0 } } ``` ", "keywords": ["bill"]}]}, {"Id": "284776210", "PostHistoryTypeId": "5", "PostId": "74884384", "RevisionGUID": "dce5d7b5-8dbe-4209-85b2-2053afab3088", "CreationDate": "2022-12-22T05:42:00.070", "UserId": "985088", "Comment": "edited body", "Text": "I think what you really want is the code from this reference:\r\n* [aws_appautoscaling_target](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/appautoscaling_target)\r\n* [aws_appautoscaling_policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/appautoscaling_policy)\r\n\r\nHere is my implementation from `main.tf`:\r\n```\r\nresource \"aws_dynamodb_table\" \"table\" {\r\n  name           = var.table_name\r\n  billing_mode   = \"PROVISIONED\"\r\n  read_capacity  = var.read_capacity_target\r\n  write_capacity = var.write_capacity_target\r\n  hash_key       = var.partition_key_name\r\n  range_key      = var.sort_key_name\r\n  ttl            = var.ttl\r\n  point_in_time_recovery { enabled = true }\r\n  server_side_encryption { enabled = true }\r\n  lifecycle {ignore_changes = [read_capacity, write_capacity]}\r\n  attribute {\r\n    name = var.partition_key_name\r\n    type = var.partition_key_type\r\n  }\r\n  attribute {\r\n    name = var.sort_key_name\r\n    type = var.sort_key_type\r\n  }\r\n  tags = {\r\n    \"Environment\"  = var.environment\r\n  }\r\n}\r\n\r\nresource \"aws_appautoscaling_target\" \"dynamodb_table_read_target\" {\r\n  max_capacity       = var.read_capacity_maximum\r\n  min_capacity       = var.read_capacity_minimum\r\n  resource_id        = \"table/${aws_dynamodb_table.table.name}\"\r\n  scalable_dimension = \"dynamodb:table:ReadCapacityUnits\"\r\n  service_namespace  = \"dynamodb\"\r\n}\r\n\r\nresource \"aws_appautoscaling_policy\" \"dynamodb_table_read_policy\" {\r\n  name               = \"DynamoDBReadCapacityUtilization:${aws_appautoscaling_target.dynamodb_table_read_target.resource_id}\"\r\n  policy_type        = \"TargetTrackingScaling\"\r\n  resource_id        = aws_appautoscaling_target.dynamodb_table_read_target.resource_id\r\n  scalable_dimension = aws_appautoscaling_target.dynamodb_table_read_target.scalable_dimension\r\n  service_namespace  = aws_appautoscaling_target.dynamodb_table_read_target.service_namespace\r\n\r\n  target_tracking_scaling_policy_configuration {\r\n    predefined_metric_specification {\r\n      predefined_metric_type = \"DynamoDBReadCapacityUtilization\"\r\n    }\r\n\r\n    target_value = 70.0\r\n  }\r\n}\r\n```\r\n\r\nAnd here is the `variables.tf` code:\r\n```\r\n\r\nvariable \"vpc_id\" {\r\n  description = \"Required. The Virtual Private Network containing all services.\"\r\n  type    = string\r\n}\r\nvariable \"table_name\" {\r\n  description = \"Required. The name of the DDB table. No spaces.\"\r\n  type    = string\r\n}\r\nvariable \"partition_key_name\" {\r\n  description = \"Required. Name of the partition key. No spaces.\"\r\n  type    = string\r\n}\r\nvariable \"partition_key_type\" {\r\n  description = \"Required. Partition key type: 'S' or 'N'\"\r\n  type    = string\r\n}\r\nvariable \"sort_key_name\" {\r\n  description = \"Required. The name of the Sort key. No spaces.\"\r\n  type    = string\r\n}\r\nvariable \"sort_key_type\" {\r\n  description = \"Required. Sort key type: 'S' or 'N'\"\r\n  type    = string\r\n}\r\nvariable \"ttl\" {\r\n  description = \"Required. True if TTL or time-to-live is enabled\"\r\n  type    = bool\r\n}\r\n\r\nvariable \"read_capacity_maximum\" {\r\n  description = \"Required. Maximum allowed autoscale range.\"\r\n  type    = number\r\n  default = 10\r\n}\r\nvariable \"read_capacity_minimum\" {\r\n  description = \"Required. Minimum allowed autoscale range.\"\r\n  type    = number\r\n  default = 2\r\n}\r\nvariable \"read_capacity_target\" {\r\n  description = \"Required. Target within autoscale range.\"\r\n  type    = number\r\n  default = 5\r\n}\r\nvariable \"write_capacity_maximum\" {\r\n  description = \"Required. Maximum allowed autoscale range.\"\r\n  type    = number\r\n  default = 10\r\n}\r\nvariable \"write_capacity_minimum\" {\r\n  description = \"Required. Minimum allowed autoscale range.\"\r\n  type    = string\r\n  default = 2\r\n}\r\nvariable \"write_capacity_target\" {\r\n  description = \"Required. Target within autoscale range.\"\r\n  type    = number\r\n  default = 5\r\n}\r\n\r\nvariable \"environment\" {\r\n  description = \"The staging type: development, production.\"\r\n  default = \"development\"\r\n  type    = string\r\n}\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I think what you really want is the code from this reference: * [aws_appautoscaling_target](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/appautoscaling_target) * [aws_appautoscaling_policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/appautoscaling_policy) Here is my implementation from `main.tf`: ``` resource \"aws_dynamodb_table\" \"table\" { name = var.table_name billing_mode = \"PROVISIONED\" read_capacity = var.read_capacity_target write_capacity = var.write_capacity_target hash_key = var.partition_key_name range_key = var.sort_key_name ttl = var.ttl point_in_time_recovery { enabled = true } server_side_encryption { enabled = true } lifecycle {ignore_changes = [read_capacity, write_capacity]} attribute { name = var.partition_key_name type = var.partition_key_type } attribute { name = var.sort_key_name type = var.sort_key_type } tags = { \"Environment\" = var.environment } } resource \"aws_appautoscaling_target\" \"dynamodb_table_read_target\" { max_capacity = var.read_capacity_maximum min_capacity = var.read_capacity_minimum resource_id = \"table/${aws_dynamodb_table.table.name}\" scalable_dimension = \"dynamodb:table:ReadCapacityUnits\" service_namespace = \"dynamodb\" } resource \"aws_appautoscaling_policy\" \"dynamodb_table_read_policy\" { name = \"DynamoDBReadCapacityUtilization:${aws_appautoscaling_target.dynamodb_table_read_target.resource_id}\" policy_type = \"TargetTrackingScaling\" resource_id = aws_appautoscaling_target.dynamodb_table_read_target.resource_id scalable_dimension = aws_appautoscaling_target.dynamodb_table_read_target.scalable_dimension service_namespace = aws_appautoscaling_target.dynamodb_table_read_target.service_namespace target_tracking_scaling_policy_configuration { predefined_metric_specification { predefined_metric_type = \"DynamoDBReadCapacityUtilization\" } target_value = 70.0 } } ``` ", "keywords": ["bill"]}]}], "filtered-sentences": []}, {"Id": "74467004", "PostTypeId": "2", "ParentId": "74466633", "CreationDate": "2022-11-16T20:46:12.850", "Score": "0", "Body": "<p>My bet is your read_capacity is your min used for autoscaling and your max is defined within your autoscaling module.</p>\n<p>Try this:</p>\n<pre><code>module &quot;dynamodb_table&quot; {\n  source   = &quot;terraform-aws-modules/dynamodb-table/aws&quot;\n  version  = &quot;3.1.1&quot;\n\n  name                = var.dbname\n  hash_key            = var.hash_key\n  billing_mode        = &quot;PROVISIONED&quot;\n  read_capacity       = 1\n  write_capacity      = 1\n  autoscaling_enabled = true\n\n  autoscaling_read = {\n    scale_in_cooldown  = 50\n    scale_out_cooldown = 40\n    target_value       = 70\n    max_capacity       = 10\n  }\n\n  autoscaling_write = {\n    scale_in_cooldown  = 50\n    scale_out_cooldown = 40\n    target_value       = 70\n    max_capacity       = 10\n  }\n\n  attributes = [\n    {\n      name = &quot;user_id&quot;\n      type = &quot;S&quot;\n    }\n  ]\n\n  tags = {\n    Terraform   = &quot;true&quot;\n    Environment = var.environment\n  }\n}\n</code></pre>\n<p>If that fails try something like the following:</p>\n<pre><code>resource &quot;aws_appautoscaling_target&quot; &quot;dynamodb-test-table_read_target&quot; {\n    max_capacity       = 10\n    min_capacity       = 1\n    resource_id        = &quot;table/${aws_dynamodb_table.dynamodb-test-table.name}&quot;\n    scalable_dimension = &quot;dynamodb:table:ReadCapacityUnits&quot;\n    service_namespace  = &quot;dynamodb&quot;\n}\n</code></pre>\n", "OwnerUserId": "7909676", "LastEditorUserId": "7909676", "LastEditDate": "2022-11-16T22:55:56.913", "LastActivityDate": "2022-11-16T22:55:56.913", "CommentCount": "5", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "131457015", "PostId": "74467004", "Score": "0", "Text": "I added min_capacity       = 1.  It still shows \"Provisioned range for reads\" as 5 - 10.", "CreationDate": "2022-11-16T22:01:26.867", "UserId": "20208419", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "131457760", "PostId": "74467004", "Score": "0", "Text": "Did you suggest to change the module? I cannot simply place your code into my code. I think it is a bug.  See the code I got from the module.\n```\nresource \"aws_appautoscaling_target\" \"table_read\" {\n  count = var.create_table && var.autoscaling_enabled && length(var.autoscaling_read) > 0 ? 1 : 0\n\n  max_capacity       = var.autoscaling_read[\"max_capacity\"]\n  min_capacity       = var.read_capacity\n  resource_id        = \"table/${aws_dynamodb_table.autoscaled[0].name}\"\n  scalable_dimension = \"dynamodb:table:ReadCapacityUnits\"\n  service_namespace  = \"dynamodb\"\n}\n```", "CreationDate": "2022-11-16T22:48:22.647", "UserId": "20208419", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Did you suggest to change the module? ", "keywords": ["change"]}]}, {"Id": "131457783", "PostId": "74467004", "Score": "0", "Text": "The code I pasted in the comment is not in good format. I pasted the code in my question.", "CreationDate": "2022-11-16T22:49:56.203", "UserId": "20208419", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "131457850", "PostId": "74467004", "Score": "0", "Text": "Edited my code block. Try the first one.", "CreationDate": "2022-11-16T22:56:09.333", "UserId": "7909676", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "131457984", "PostId": "74467004", "Score": "0", "Text": "No luck. The version is version  = \"3.1.2\". Still same problem. Can you please try my code?", "CreationDate": "2022-11-16T23:07:42.693", "UserId": "20208419", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "282376191", "PostHistoryTypeId": "2", "PostId": "74467004", "RevisionGUID": "feb37b60-e5e3-4ee1-b669-a33e0c022213", "CreationDate": "2022-11-16T20:46:12.850", "UserId": "7909676", "Text": "Set inside your autoscaling_read the min_capacity as 1 and your max_capacity to 10. \r\n\r\nDo the same.in your autoscaling_write map. ", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "282381457", "PostHistoryTypeId": "5", "PostId": "74467004", "RevisionGUID": "fe56a219-862f-4a4f-aa39-72e7b6681d5d", "CreationDate": "2022-11-16T22:17:10.123", "UserId": "7909676", "Comment": "added 383 characters in body", "Text": "My bet is your read_capacity is your min used for autoscaling and your max is defined within your autoscaling module. \r\n\r\n\r\nIf that fails try something like the following:\r\n\r\n    resource \"aws_appautoscaling_target\" \"dynamodb-test-table_read_target\" {\r\n        max_capacity       = 10\r\n        min_capacity       = 1\r\n        resource_id        = \"table/${aws_dynamodb_table.dynamodb-test-table.name}\"\r\n        scalable_dimension = \"dynamodb:table:ReadCapacityUnits\"\r\n        service_namespace  = \"dynamodb\"\r\n    }", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "If that fails try something like the following: resource \"aws_appautoscaling_target\" \"dynamodb-test-table_read_target\" { max_capacity = 10 min_capacity = 1 resource_id = \"table/${aws_dynamodb_table.dynamodb-test-table.name}\" scalable_dimension = \"dynamodb:table:ReadCapacityUnits\" service_namespace = \"dynamodb\" }", "keywords": ["test"]}]}, {"Id": "282383275", "PostHistoryTypeId": "5", "PostId": "74467004", "RevisionGUID": "26e3a959-7993-461d-b503-67187a7f2529", "CreationDate": "2022-11-16T22:55:56.913", "UserId": "7909676", "Comment": "added 927 characters in body", "Text": "My bet is your read_capacity is your min used for autoscaling and your max is defined within your autoscaling module. \r\n\r\nTry this:\r\n\r\n    module \"dynamodb_table\" {\r\n      source   = \"terraform-aws-modules/dynamodb-table/aws\"\r\n      version  = \"3.1.1\"\r\n    \r\n      name                = var.dbname\r\n      hash_key            = var.hash_key\r\n      billing_mode        = \"PROVISIONED\"\r\n      read_capacity       = 1\r\n      write_capacity      = 1\r\n      autoscaling_enabled = true\r\n    \r\n      autoscaling_read = {\r\n        scale_in_cooldown  = 50\r\n        scale_out_cooldown = 40\r\n        target_value       = 70\r\n        max_capacity       = 10\r\n      }\r\n    \r\n      autoscaling_write = {\r\n        scale_in_cooldown  = 50\r\n        scale_out_cooldown = 40\r\n        target_value       = 70\r\n        max_capacity       = 10\r\n      }\r\n    \r\n      attributes = [\r\n        {\r\n          name = \"user_id\"\r\n          type = \"S\"\r\n        }\r\n      ]\r\n    \r\n      tags = {\r\n        Terraform   = \"true\"\r\n        Environment = var.environment\r\n      }\r\n    }\r\n\r\nIf that fails try something like the following:\r\n\r\n    resource \"aws_appautoscaling_target\" \"dynamodb-test-table_read_target\" {\r\n        max_capacity       = 10\r\n        min_capacity       = 1\r\n        resource_id        = \"table/${aws_dynamodb_table.dynamodb-test-table.name}\"\r\n        scalable_dimension = \"dynamodb:table:ReadCapacityUnits\"\r\n        service_namespace  = \"dynamodb\"\r\n    }\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Try this: module \"dynamodb_table\" { source = \"terraform-aws-modules/dynamodb-table/aws\" version = \"3.1.1\" name = var.dbname hash_key = var.hash_key billing_mode = \"PROVISIONED\" read_capacity = 1 write_capacity = 1 autoscaling_enabled = true autoscaling_read = { scale_in_cooldown = 50 scale_out_cooldown = 40 target_value = 70 max_capacity = 10 } autoscaling_write = { scale_in_cooldown = 50 scale_out_cooldown = 40 target_value = 70 max_capacity = 10 } attributes = [ { name = \"user_id\" type = \"S\" } ] tags = { Terraform = \"true\" Environment = var.environment } } If that fails try something like the following: resource \"aws_appautoscaling_target\" \"dynamodb-test-table_read_target\" { max_capacity = 10 min_capacity = 1 resource_id = \"table/${aws_dynamodb_table.dynamodb-test-table.name}\" scalable_dimension = \"dynamodb:table:ReadCapacityUnits\" service_namespace = \"dynamodb\" ", "keywords": ["bill", "test"]}]}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": []}