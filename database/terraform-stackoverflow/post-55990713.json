{"Id": "55990713", "PostTypeId": "1", "AcceptedAnswerId": "55991852", "CreationDate": "2019-05-05T09:50:19.530", "Score": "4", "ViewCount": "4284", "Body": "<p>Our cloud backend setup contains 5 Cloud SQL for Postgres instances. We manage our infrastructure using Terraform. We are using connecting them from GKE using a public IP and the <a href=\"https://cloud.google.com/sql/docs/postgres/connect-kubernetes-engine\" rel=\"nofollow noreferrer\">Cloud SQL container</a>.</p>\n\n<p>In order to simplify our setup we wish to get rid of the proxy containers by moving to a private IP. I tried following the <a href=\"https://www.terraform.io/docs/providers/google/r/sql_database_instance.html#private-ip-instance\" rel=\"nofollow noreferrer\">Terraform guide</a>. While a creating a single instance works fine, trying to create 5 instances simultaneously ends in 4 failed ones and one successful:\n<a href=\"https://i.stack.imgur.com/onjDF.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/onjDF.png\" alt=\"Failed instance list in the GCP console\"></a></p>\n\n<p>The error which appears in the Google Clod Console on the failed instances is \"An Unknown Error occurred\":\n<a href=\"https://i.stack.imgur.com/K8gXp.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/K8gXp.png\" alt=\"Failed instance with error message in the GCP console\"></a></p>\n\n<p>Following is the code which reproduces it. Pay attention to the <code>count = 5</code> line:</p>\n\n<pre><code>resource \"google_compute_network\" \"private_network\" {\n  provider = \"google-beta\"\n\n  name = \"private-network\"\n}\n\nresource \"google_compute_global_address\" \"private_ip_address\" {\n  provider = \"google-beta\"\n\n  name = \"private-ip-address\"\n  purpose = \"VPC_PEERING\"\n  address_type = \"INTERNAL\"\n  prefix_length = 16\n  network = \"${google_compute_network.private_network.self_link}\"\n}\n\nresource \"google_service_networking_connection\" \"private_vpc_connection\" {\n  provider = \"google-beta\"\n\n  network = \"${google_compute_network.private_network.self_link}\"\n  service = \"servicenetworking.googleapis.com\"\n  reserved_peering_ranges = [\"${google_compute_global_address.private_ip_address.name}\"]\n}\n\nresource \"google_sql_database_instance\" \"instance\" {\n  provider = \"google-beta\"\n  count = 5\n\n  name = \"private-instance-${count.index}\"\n  database_version = \"POSTGRES_9_6\"\n\n  depends_on = [\n    \"google_service_networking_connection.private_vpc_connection\"\n  ]\n\n  settings {\n    tier = \"db-custom-1-3840\"\n    availability_type = \"REGIONAL\"\n    ip_configuration {\n      ipv4_enabled = \"false\"\n      private_network = \"${google_compute_network.private_network.self_link}\"\n    }\n  }\n}\n\nprovider \"google-beta\" {\n  version = \"~&gt; 2.5\"\n  credentials = \"credentials.json\"\n  project = \"PROJECT_ID\"\n  region = \"us-central1\"\n  zone = \"us-central1-a\"\n}\n</code></pre>\n\n<p>I tried several alternatives:</p>\n\n<ul>\n<li>Waiting a minute after creating the <code>google_service_networking_connection</code> and then creating all the instances simultaneously, but I got the same error.</li>\n<li>Creating an address range and a <code>google_service_networking_connection</code> per instance, but I got an error that <code>google_service_networking_connection</code> cannot be created simultaneously.</li>\n<li>Creating an address range per instance and a single <code>google_service_networking_connection</code> which links to all of them, but I got the same error.</li>\n</ul>\n", "OwnerUserId": "2245293", "LastEditorUserId": "3688301", "LastEditDate": "2019-05-18T06:29:23.037", "LastActivityDate": "2021-03-04T16:46:47.930", "Title": "How to fix \"An Unknown Error Occurred\" when creating multiple Google Cloud SQL instances with private IP simultaneously?", "Tags": "<google-cloud-platform><google-cloud-sql><terraform-provider-gcp>", "AnswerCount": "3", "CommentCount": "0", "FavoriteCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "197118354", "PostHistoryTypeId": "2", "PostId": "55990713", "RevisionGUID": "ccdde019-64e3-43e6-abb2-e83c3ed42a7c", "CreationDate": "2019-05-05T09:50:19.530", "UserId": "2245293", "Text": "Our cloud backend setup contains 5 Cloud SQL for Postgres instances. We manage our infrastructure using Terraform. We are using connecting them from GKE using a public IP and the [Cloud SQL container][1].\r\n\r\nIn order to simplify our setup we wish to get rid of the proxy containers by moving to a private IP. I tried following the [Terraform guide][2]. While a creating a single instance works fine, trying to create 5 instances simultaneously ends in 4 failed ones and one success. The error which appears in the Google Clod Console on the failed instances is: \"An Unknown Error occurred\". The code which reproduces it:\r\n```\r\nresource \"google_compute_network\" \"private_network\" {\r\n  provider = \"google-beta\"\r\n\r\n  name       = \"private-network\"\r\n}\r\n\r\nresource \"google_compute_global_address\" \"private_ip_address\" {\r\n  provider = \"google-beta\"\r\n\r\n  name          = \"private-ip-address\"\r\n  purpose       = \"VPC_PEERING\"\r\n  address_type = \"INTERNAL\"\r\n  prefix_length = 16\r\n  network       = \"${google_compute_network.private_network.self_link}\"\r\n}\r\n\r\nresource \"google_service_networking_connection\" \"private_vpc_connection\" {\r\n  provider = \"google-beta\"\r\n\r\n  network       = \"${google_compute_network.private_network.self_link}\"\r\n  service       = \"servicenetworking.googleapis.com\"\r\n  reserved_peering_ranges = [\"${google_compute_global_address.private_ip_address.name}\"]\r\n}\r\n\r\nresource \"google_sql_database_instance\" \"instance\" {\r\n  provider = \"google-beta\"\r\n  count = 5\r\n\r\n  name = \"private-instance\"\r\n  region = \"central1\"\r\n  database_version = \"POSTGRES_9_6\"\r\n\r\n  depends_on = [\r\n    \"google_service_networking_connection.private_vpc_connection\"\r\n  ]\r\n\r\n  settings {\r\n    tier = \"db-custom-1-3840\"\r\n    availability_type = \"REGIONAL\"\r\n    ip_configuration {\r\n      ipv4_enabled = \"false\"\r\n      private_network = \"${google_compute_network.private_network.self_link}\"\r\n    }\r\n  }\r\n}\r\n\r\nprovider \"google-beta\"{\r\n  region = \"us-central1\"\r\n  zone   = \"us-central1-a\"\r\n}\r\n```\r\n\r\nI tried several alternatives:\r\n\r\n - Waiting a minute after creating the google_service_networking_connection and then creating all the instances simultaneously, but I got the same error.\r\n - Creating an address range and a google_service_networking_connection per DB, but I got an error that google_service_networking_connection cannot be created simultaneously.\r\n - Creating an address range per DB and a single google_service_networking_connection which links to all of them, but Igot the same error.\r\n\r\n  [1]: https://cloud.google.com/sql/docs/postgres/connect-kubernetes-engine\r\n  [2]: https://www.terraform.io/docs/providers/google/r/sql_database_instance.html#private-ip-instance", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "While a creating a single instance works fine, trying to create 5 instances simultaneously ends in 4 failed ones and one success. ", "keywords": ["instance"]}, {"source": "Text", "text": "The code which reproduces it: ``` resource \"google_compute_network\" \"private_network\" { provider = \"google-beta\" name = \"private-network\" } resource \"google_compute_global_address\" \"private_ip_address\" { provider = \"google-beta\" name = \"private-ip-address\" purpose = \"VPC_PEERING\" address_type = \"INTERNAL\" prefix_length = 16 network = \"${google_compute_network.private_network.self_link}\" } resource \"google_service_networking_connection\" \"private_vpc_connection\" { provider = \"google-beta\" network = \"${google_compute_network.private_network.self_link}\" service = \"servicenetworking.googleapis.com\" reserved_peering_ranges = [\"${google_compute_global_address.private_ip_address.name}\"] } resource \"google_sql_database_instance\" \"instance\" { provider = \"google-beta\" count = 5 name = \"private-instance\" region = \"central1\" database_version = \"POSTGRES_9_6\" depends_on = [ \"google_service_networking_connection.private_vpc_connection\" ] settings { tier = \"db-custom-1-3840\" availability_type = \"REGIONAL\" ip_configuration { ipv4_enabled = \"false\" private_network = \"${google_compute_network.private_network.self_link}\" } } } provider \"google-beta\"{ region = \"us-central1\" zone = \"us-central1-a\" } ``` ", "keywords": ["instance", "provider"]}, {"source": "Text", "text": "- Creating an address range per DB and a single google_service_networking_connection which links to all of them, but Igot the same error. [1]: https://cloud.google.com/sql/docs/postgres/connect-kubernetes-engine [2]: https://www.terraform.io/docs/providers/google/r/sql_database_instance.html#private-ip-instance", "keywords": ["instance"]}]}, {"Id": "197118355", "PostHistoryTypeId": "1", "PostId": "55990713", "RevisionGUID": "ccdde019-64e3-43e6-abb2-e83c3ed42a7c", "CreationDate": "2019-05-05T09:50:19.530", "UserId": "2245293", "Text": "How to fix \"An Unknown Error Occurred\" when creating multiple Google Cloud SQL instances with private IP simultaneously?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "197118356", "PostHistoryTypeId": "3", "PostId": "55990713", "RevisionGUID": "ccdde019-64e3-43e6-abb2-e83c3ed42a7c", "CreationDate": "2019-05-05T09:50:19.530", "UserId": "2245293", "Text": "<google-cloud-platform><google-cloud-sql>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "197120469", "PostHistoryTypeId": "5", "PostId": "55990713", "RevisionGUID": "de154fc9-b8c7-4db0-a794-f2976190013b", "CreationDate": "2019-05-05T10:52:29.027", "UserId": "2245293", "Comment": "Emphasized the important part of the code.", "Text": "Our cloud backend setup contains 5 Cloud SQL for Postgres instances. We manage our infrastructure using Terraform. We are using connecting them from GKE using a public IP and the [Cloud SQL container][1].\r\n\r\nIn order to simplify our setup we wish to get rid of the proxy containers by moving to a private IP. I tried following the [Terraform guide][2]. While a creating a single instance works fine, trying to create 5 instances simultaneously ends in 4 failed ones and one success. The error which appears in the Google Clod Console on the failed instances is: \"An Unknown Error occurred\". Following is the code which reproduces it. Pay attention to the `count = 5` line:\r\n```\r\nresource \"google_compute_network\" \"private_network\" {\r\n  provider = \"google-beta\"\r\n\r\n  name       = \"private-network\"\r\n}\r\n\r\nresource \"google_compute_global_address\" \"private_ip_address\" {\r\n  provider = \"google-beta\"\r\n\r\n  name          = \"private-ip-address\"\r\n  purpose       = \"VPC_PEERING\"\r\n  address_type = \"INTERNAL\"\r\n  prefix_length = 16\r\n  network       = \"${google_compute_network.private_network.self_link}\"\r\n}\r\n\r\nresource \"google_service_networking_connection\" \"private_vpc_connection\" {\r\n  provider = \"google-beta\"\r\n\r\n  network       = \"${google_compute_network.private_network.self_link}\"\r\n  service       = \"servicenetworking.googleapis.com\"\r\n  reserved_peering_ranges = [\"${google_compute_global_address.private_ip_address.name}\"]\r\n}\r\n\r\nresource \"google_sql_database_instance\" \"instance\" {\r\n  provider = \"google-beta\"\r\n  count = 5\r\n\r\n  name = \"private-instance\"\r\n  region = \"us-central1\"\r\n  database_version = \"POSTGRES_9_6\"\r\n\r\n  depends_on = [\r\n    \"google_service_networking_connection.private_vpc_connection\"\r\n  ]\r\n\r\n  settings {\r\n    tier = \"db-custom-1-3840\"\r\n    availability_type = \"REGIONAL\"\r\n    ip_configuration {\r\n      ipv4_enabled = \"false\"\r\n      private_network = \"${google_compute_network.private_network.self_link}\"\r\n    }\r\n  }\r\n}\r\n\r\nprovider \"google-beta\"{\r\n  region = \"us-central1\"\r\n  zone   = \"us-central1-a\"\r\n}\r\n```\r\n\r\nI tried several alternatives:\r\n\r\n - Waiting a minute after creating the `google_service_networking_connection` and then creating all the instances simultaneously, but I got the same error.\r\n - Creating an address range and a `google_service_networking_connection` per instance, but I got an error that `google_service_networking_connection` cannot be created simultaneously.\r\n - Creating an address range per instance and a single `google_service_networking_connection` which links to all of them, but I got the same error.\r\n\r\n  [1]: https://cloud.google.com/sql/docs/postgres/connect-kubernetes-engine\r\n  [2]: https://www.terraform.io/docs/providers/google/r/sql_database_instance.html#private-ip-instance", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "While a creating a single instance works fine, trying to create 5 instances simultaneously ends in 4 failed ones and one success. ", "keywords": ["instance"]}, {"source": "Text", "text": "Pay attention to the `count = 5` line: ``` resource \"google_compute_network\" \"private_network\" { provider = \"google-beta\" name = \"private-network\" } resource \"google_compute_global_address\" \"private_ip_address\" { provider = \"google-beta\" name = \"private-ip-address\" purpose = \"VPC_PEERING\" address_type = \"INTERNAL\" prefix_length = 16 network = \"${google_compute_network.private_network.self_link}\" } resource \"google_service_networking_connection\" \"private_vpc_connection\" { provider = \"google-beta\" network = \"${google_compute_network.private_network.self_link}\" service = \"servicenetworking.googleapis.com\" reserved_peering_ranges = [\"${google_compute_global_address.private_ip_address.name}\"] } resource \"google_sql_database_instance\" \"instance\" { provider = \"google-beta\" count = 5 name = \"private-instance\" region = \"us-central1\" database_version = \"POSTGRES_9_6\" depends_on = [ \"google_service_networking_connection.private_vpc_connection\" ] settings { tier = \"db-custom-1-3840\" availability_type = \"REGIONAL\" ip_configuration { ipv4_enabled = \"false\" private_network = \"${google_compute_network.private_network.self_link}\" } } } provider \"google-beta\"{ region = \"us-central1\" zone = \"us-central1-a\" } ``` I tried several alternatives: - Waiting a minute after creating the `google_service_networking_connection` and then creating all the instances simultaneously, but I got the same error. ", "keywords": ["pay", "instance", "provider"]}, {"source": "Text", "text": "- Creating an address range and a `google_service_networking_connection` per instance, but I got an error that `google_service_networking_connection` cannot be created simultaneously. ", "keywords": ["instance"]}, {"source": "Text", "text": "- Creating an address range per instance and a single `google_service_networking_connection` which links to all of them, but I got the same error. [1]: https://cloud.google.com/sql/docs/postgres/connect-kubernetes-engine [2]: https://www.terraform.io/docs/providers/google/r/sql_database_instance.html#private-ip-instance", "keywords": ["instance"]}]}, {"Id": "197120814", "PostHistoryTypeId": "5", "PostId": "55990713", "RevisionGUID": "d412b733-9a7a-4edb-bab9-936b14cb1ff6", "CreationDate": "2019-05-05T11:04:08.703", "UserId": "2245293", "Comment": "added 1 character in body", "Text": "Our cloud backend setup contains 5 Cloud SQL for Postgres instances. We manage our infrastructure using Terraform. We are using connecting them from GKE using a public IP and the [Cloud SQL container][1].\r\n\r\nIn order to simplify our setup we wish to get rid of the proxy containers by moving to a private IP. I tried following the [Terraform guide][2]. While a creating a single instance works fine, trying to create 5 instances simultaneously ends in 4 failed ones and one success. The error which appears in the Google Clod Console on the failed instances is: \"An Unknown Error occurred\". Following is the code which reproduces it. Pay attention to the `count = 5` line:\r\n```\r\nresource \"google_compute_network\" \"private_network\" {\r\n  provider = \"google-beta\"\r\n\r\n  name       = \"private-network\"\r\n}\r\n\r\nresource \"google_compute_global_address\" \"private_ip_address\" {\r\n  provider = \"google-beta\"\r\n\r\n  name          = \"private-ip-address\"\r\n  purpose       = \"VPC_PEERING\"\r\n  address_type = \"INTERNAL\"\r\n  prefix_length = 16\r\n  network       = \"${google_compute_network.private_network.self_link}\"\r\n}\r\n\r\nresource \"google_service_networking_connection\" \"private_vpc_connection\" {\r\n  provider = \"google-beta\"\r\n\r\n  network       = \"${google_compute_network.private_network.self_link}\"\r\n  service       = \"servicenetworking.googleapis.com\"\r\n  reserved_peering_ranges = [\"${google_compute_global_address.private_ip_address.name}\"]\r\n}\r\n\r\nresource \"google_sql_database_instance\" \"instance\" {\r\n  provider = \"google-beta\"\r\n  count = 5\r\n\r\n  name = \"private-instance\"\r\n  region = \"us-central1\"\r\n  database_version = \"POSTGRES_9_6\"\r\n\r\n  depends_on = [\r\n    \"google_service_networking_connection.private_vpc_connection\"\r\n  ]\r\n\r\n  settings {\r\n    tier = \"db-custom-1-3840\"\r\n    availability_type = \"REGIONAL\"\r\n    ip_configuration {\r\n      ipv4_enabled = \"false\"\r\n      private_network = \"${google_compute_network.private_network.self_link}\"\r\n    }\r\n  }\r\n}\r\n\r\nprovider \"google-beta\" {\r\n  region = \"us-central1\"\r\n  zone   = \"us-central1-a\"\r\n}\r\n```\r\n\r\nI tried several alternatives:\r\n\r\n - Waiting a minute after creating the `google_service_networking_connection` and then creating all the instances simultaneously, but I got the same error.\r\n - Creating an address range and a `google_service_networking_connection` per instance, but I got an error that `google_service_networking_connection` cannot be created simultaneously.\r\n - Creating an address range per instance and a single `google_service_networking_connection` which links to all of them, but I got the same error.\r\n\r\n  [1]: https://cloud.google.com/sql/docs/postgres/connect-kubernetes-engine\r\n  [2]: https://www.terraform.io/docs/providers/google/r/sql_database_instance.html#private-ip-instance", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "While a creating a single instance works fine, trying to create 5 instances simultaneously ends in 4 failed ones and one success. ", "keywords": ["instance"]}, {"source": "Text", "text": "Pay attention to the `count = 5` line: ``` resource \"google_compute_network\" \"private_network\" { provider = \"google-beta\" name = \"private-network\" } resource \"google_compute_global_address\" \"private_ip_address\" { provider = \"google-beta\" name = \"private-ip-address\" purpose = \"VPC_PEERING\" address_type = \"INTERNAL\" prefix_length = 16 network = \"${google_compute_network.private_network.self_link}\" } resource \"google_service_networking_connection\" \"private_vpc_connection\" { provider = \"google-beta\" network = \"${google_compute_network.private_network.self_link}\" service = \"servicenetworking.googleapis.com\" reserved_peering_ranges = [\"${google_compute_global_address.private_ip_address.name}\"] } resource \"google_sql_database_instance\" \"instance\" { provider = \"google-beta\" count = 5 name = \"private-instance\" region = \"us-central1\" database_version = \"POSTGRES_9_6\" depends_on = [ \"google_service_networking_connection.private_vpc_connection\" ] settings { tier = \"db-custom-1-3840\" availability_type = \"REGIONAL\" ip_configuration { ipv4_enabled = \"false\" private_network = \"${google_compute_network.private_network.self_link}\" } } } provider \"google-beta\" { region = \"us-central1\" zone = \"us-central1-a\" } ``` I tried several alternatives: - Waiting a minute after creating the `google_service_networking_connection` and then creating all the instances simultaneously, but I got the same error. ", "keywords": ["pay", "instance", "provider"]}, {"source": "Text", "text": "- Creating an address range and a `google_service_networking_connection` per instance, but I got an error that `google_service_networking_connection` cannot be created simultaneously. ", "keywords": ["instance"]}, {"source": "Text", "text": "- Creating an address range per instance and a single `google_service_networking_connection` which links to all of them, but I got the same error. [1]: https://cloud.google.com/sql/docs/postgres/connect-kubernetes-engine [2]: https://www.terraform.io/docs/providers/google/r/sql_database_instance.html#private-ip-instance", "keywords": ["instance"]}]}, {"Id": "197121681", "PostHistoryTypeId": "5", "PostId": "55990713", "RevisionGUID": "196ec27c-9abc-4c27-a487-117f13924d22", "CreationDate": "2019-05-05T11:34:33.883", "UserId": "2245293", "Comment": "Fixed screenshot", "Text": "Our cloud backend setup contains 5 Cloud SQL for Postgres instances. We manage our infrastructure using Terraform. We are using connecting them from GKE using a public IP and the [Cloud SQL container][1].\r\n\r\nIn order to simplify our setup we wish to get rid of the proxy containers by moving to a private IP. I tried following the [Terraform guide][2]. While a creating a single instance works fine, trying to create 5 instances simultaneously ends in 4 failed ones and one successful:\r\n[![Failed instance list in the GCP console][3]][3]\r\n\r\nThe error which appears in the Google Clod Console on the failed instances is \"An Unknown Error occurred\":\r\n[![Failed instance with error message in the GCP console][5]][5]\r\n\r\nFollowing is the code which reproduces it. Pay attention to the `count = 5` line:\r\n```\r\nresource \"google_compute_network\" \"private_network\" {\r\n  provider = \"google-beta\"\r\n\r\n  name = \"private-network\"\r\n}\r\n\r\nresource \"google_compute_global_address\" \"private_ip_address\" {\r\n  provider = \"google-beta\"\r\n\r\n  name = \"private-ip-address\"\r\n  purpose = \"VPC_PEERING\"\r\n  address_type = \"INTERNAL\"\r\n  prefix_length = 16\r\n  network = \"${google_compute_network.private_network.self_link}\"\r\n}\r\n\r\nresource \"google_service_networking_connection\" \"private_vpc_connection\" {\r\n  provider = \"google-beta\"\r\n\r\n  network = \"${google_compute_network.private_network.self_link}\"\r\n  service = \"servicenetworking.googleapis.com\"\r\n  reserved_peering_ranges = [\"${google_compute_global_address.private_ip_address.name}\"]\r\n}\r\n\r\nresource \"google_sql_database_instance\" \"instance\" {\r\n  provider = \"google-beta\"\r\n  count = 5\r\n\r\n  name = \"private-instance-${count.index}\"\r\n  database_version = \"POSTGRES_9_6\"\r\n\r\n  depends_on = [\r\n    \"google_service_networking_connection.private_vpc_connection\"\r\n  ]\r\n\r\n  settings {\r\n    tier = \"db-custom-1-3840\"\r\n    availability_type = \"REGIONAL\"\r\n    ip_configuration {\r\n      ipv4_enabled = \"false\"\r\n      private_network = \"${google_compute_network.private_network.self_link}\"\r\n    }\r\n  }\r\n}\r\n\r\nprovider \"google-beta\" {\r\n  version = \"~> 2.5\"\r\n  credentials = \"credentials.json\"\r\n  project = \"PROJECT_ID\"\r\n  region = \"us-central1\"\r\n  zone = \"us-central1-a\"\r\n}\r\n```\r\n\r\nI tried several alternatives:\r\n\r\n - Waiting a minute after creating the `google_service_networking_connection` and then creating all the instances simultaneously, but I got the same error.\r\n - Creating an address range and a `google_service_networking_connection` per instance, but I got an error that `google_service_networking_connection` cannot be created simultaneously.\r\n - Creating an address range per instance and a single `google_service_networking_connection` which links to all of them, but I got the same error.\r\n\r\n\r\n  [1]: https://cloud.google.com/sql/docs/postgres/connect-kubernetes-engine\r\n  [2]: https://www.terraform.io/docs/providers/google/r/sql_database_instance.html#private-ip-instance\r\n  [3]: https://i.stack.imgur.com/onjDF.png\r\n  [4]: https://i.stack.imgur.com/GcFh3.png\r\n  [5]: https://i.stack.imgur.com/K8gXp.png", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "While a creating a single instance works fine, trying to create 5 instances simultaneously ends in 4 failed ones and one successful: [![Failed instance list in the GCP console][3]][3] ", "keywords": ["instance"]}, {"source": "Text", "text": "The error which appears in the Google Clod Console on the failed instances is \"An Unknown Error occurred\": [![Failed instance with error message in the GCP console][5]][5] ", "keywords": ["instance"]}, {"source": "Text", "text": "Pay attention to the `count = 5` line: ``` resource \"google_compute_network\" \"private_network\" { provider = \"google-beta\" name = \"private-network\" } resource \"google_compute_global_address\" \"private_ip_address\" { provider = \"google-beta\" name = \"private-ip-address\" purpose = \"VPC_PEERING\" address_type = \"INTERNAL\" prefix_length = 16 network = \"${google_compute_network.private_network.self_link}\" } resource \"google_service_networking_connection\" \"private_vpc_connection\" { provider = \"google-beta\" network = \"${google_compute_network.private_network.self_link}\" service = \"servicenetworking.googleapis.com\" reserved_peering_ranges = [\"${google_compute_global_address.private_ip_address.name}\"] } resource \"google_sql_database_instance\" \"instance\" { provider = \"google-beta\" count = 5 name = \"private-instance-${count.index}\" database_version = \"POSTGRES_9_6\" depends_on = [ \"google_service_networking_connection.private_vpc_connection\" ] settings { tier = \"db-custom-1-3840\" availability_type = \"REGIONAL\" ip_configuration { ipv4_enabled = \"false\" private_network = \"${google_compute_network.private_network.self_link}\" } } } provider \"google-beta\" { version = \"~> 2.5\" credentials = \"credentials.json\" project = \"PROJECT_ID\" region = \"us-central1\" zone = \"us-central1-a\" } ``` I tried several alternatives: - Waiting a minute after creating the `google_service_networking_connection` and then creating all the instances simultaneously, but I got the same error. ", "keywords": ["pay", "instance", "provider"]}, {"source": "Text", "text": "- Creating an address range and a `google_service_networking_connection` per instance, but I got an error that `google_service_networking_connection` cannot be created simultaneously. ", "keywords": ["instance"]}, {"source": "Text", "text": "- Creating an address range per instance and a single `google_service_networking_connection` which links to all of them, but I got the same error. [1]: https://cloud.google.com/sql/docs/postgres/connect-kubernetes-engine [2]: https://www.terraform.io/docs/providers/google/r/sql_database_instance.html#private-ip-instance [3]: https://i.stack.imgur.com/onjDF.png [4]: https://i.stack.imgur.com/GcFh3.png [5]: https://i.stack.imgur.com/K8gXp.png", "keywords": ["instance"]}]}, {"Id": "197980212", "PostHistoryTypeId": "6", "PostId": "55990713", "RevisionGUID": "ba0481e5-8cee-43da-a49a-e5c31bfaf1d5", "CreationDate": "2019-05-18T06:29:23.037", "UserId": "3688301", "Comment": "added terraform tag", "Text": "<google-cloud-platform><google-cloud-sql><terraform-provider-gcp>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "197980213", "PostHistoryTypeId": "24", "PostId": "55990713", "RevisionGUID": "ba0481e5-8cee-43da-a49a-e5c31bfaf1d5", "CreationDate": "2019-05-18T06:29:23.037", "Comment": "Proposed by 3688301 approved by 9716597, 7404 edit id of 4293428", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "64144456", "PostTypeId": "2", "ParentId": "55990713", "CreationDate": "2020-09-30T19:26:10.913", "Score": "1", "Body": "<p>In case someone lands here with a slightly different case (creating <strong>google_sql_database_instance</strong> in a private network results in an &quot;Unknown error&quot;):</p>\n<ol>\n<li>Launch one Cloud SQL instance manually (this will enable <strong>servicenetworking.googleapis.com</strong> and some other APIs for the project it seems)</li>\n<li>Run your manifest</li>\n<li>Terminate the instance created in step 1.</li>\n</ol>\n<p>Works for me after that</p>\n<p>\u00af_(\u30c4)_/\u00af</p>\n", "OwnerUserId": "1233093", "LastActivityDate": "2020-09-30T19:26:10.913", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "117524078", "PostId": "64144456", "Score": "0", "Text": "when you said \"Launch one Cloud SQL instance manually\" what do you mean ?  a non private one ?", "CreationDate": "2021-03-04T15:58:55.323", "UserId": "5318634", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "when you said \"Launch one Cloud SQL instance manually\" what do you mean ? a non private one ?", "keywords": ["instance"]}]}, {"Id": "117685740", "PostId": "64144456", "Score": "0", "Text": "using the browser to open the GCP console and going through the \"wizards\" :D", "CreationDate": "2021-03-10T21:14:41.547", "UserId": "1233093", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "231898395", "PostHistoryTypeId": "2", "PostId": "64144456", "RevisionGUID": "39700ecb-865a-4062-a3ee-0dc65efc75c7", "CreationDate": "2020-09-30T19:26:10.913", "UserId": "1233093", "Text": "In case someone lands here with a slightly different case (creating **google_sql_database_instance** in a private network results in an \"Unknown error\"):\r\n1. Launch one Cloud SQL instance manually (this will enable **servicenetworking.googleapis.com** and some other APIs for the project it seems)\r\n1. Run your manifest\r\n1. Terminate the instance created in step 1.\r\n\r\nWorks for me after that\r\n\r\n\u00af\\_(\u30c4)_/\u00af", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "In case someone lands here with a slightly different case (creating **google_sql_database_instance** in a private network results in an \"Unknown error\"): 1. Launch one Cloud SQL instance manually (this will enable **servicenetworking.googleapis.com** and some other APIs for the project it seems) 1. Run your manifest 1. Terminate the instance created in step 1. Works for me after that \u00af\\_(\u30c4)_/\u00af", "keywords": ["instance"]}]}], "filtered-sentences": [{"source": "Body", "text": "In case someone lands here with a slightly different case (creating google_sql_database_instance in a private network results in an \"Unknown error\"): Launch one Cloud SQL instance manually (this will enable servicenetworking.googleapis.com and some other APIs for the project it seems) Run your manifest Terminate the instance created in step 1. ", "keywords": ["instance"]}]}, {"Id": "66479402", "PostTypeId": "2", "ParentId": "55990713", "CreationDate": "2021-03-04T16:46:47.930", "Score": "0", "Body": "<p>I land here with a slightly different case, same as @Grigorash Vasilij\n(creating google_sql_database_instance in a private network results in an &quot;Unknown error&quot;).</p>\n<p>I was using the UI to deploy an SQL instance on a private <code>VPC</code>, for some reason that trows me an &quot;Unknown error&quot; as well. I finally solved using the <code>gcloud</code> command instead (why that works and no the UI? IDK, maybe the UI is not doing the same as the command)</p>\n<pre><code>gcloud --project=[PROJECT_ID] beta sql instances create [INSTANCE_ID]\n       --network=[VPC_NETWORK_NAME]\n       --no-assign-ip \n</code></pre>\n<p><a href=\"https://cloud.google.com/sql/docs/mysql/configure-private-ip\" rel=\"nofollow noreferrer\">follow this for more details</a></p>\n", "OwnerUserId": "5318634", "LastActivityDate": "2021-03-04T16:46:47.930", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "242018501", "PostHistoryTypeId": "2", "PostId": "66479402", "RevisionGUID": "5e105527-6fbe-42de-babd-a865a8d1a7f2", "CreationDate": "2021-03-04T16:46:47.930", "UserId": "5318634", "Text": "I land here with a slightly different case, same as @Grigorash Vasilij\r\n (creating google_sql_database_instance in a private network results in an \"Unknown error\"). \r\n\r\nI was using the UI to deploy an SQL instance on a private `VPC`, for some reason that trows me an \"Unknown error\" as well. I finally solved using the `gcloud` command instead (why that works and no the UI? IDK, maybe the UI is not doing the same as the command)\r\n\r\n\r\n    gcloud --project=[PROJECT_ID] beta sql instances create [INSTANCE_ID]\r\n           --network=[VPC_NETWORK_NAME]\r\n           --no-assign-ip \r\n\r\n\r\n[follow this for more details][1]  \r\n\r\n\r\n  [1]: https://cloud.google.com/sql/docs/mysql/configure-private-ip", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I was using the UI to deploy an SQL instance on a private `VPC`, for some reason that trows me an \"Unknown error\" as well. ", "keywords": ["instance"]}]}], "filtered-sentences": [{"source": "Body", "text": "I was using the UI to deploy an SQL instance on a private VPC, for some reason that trows me an \"Unknown error\" as well. ", "keywords": ["instance"]}]}, {"Id": "55991852", "PostTypeId": "2", "ParentId": "55990713", "CreationDate": "2019-05-05T12:18:03.513", "Score": "4", "Body": "<p>Found an ugly yet working solution. There <a href=\"https://issuetracker.google.com/issues/131908322\" rel=\"nofollow noreferrer\">is a bug in GCP</a> which does not prevent simultaneous creation of instances although it cannot be completed. There is neither documentation about it nor a meaningful error message. It appears in the <a href=\"https://github.com/terraform-providers/terraform-provider-google/issues/3069\" rel=\"nofollow noreferrer\">Terraform Google provider issue tracker</a> as well.</p>\n\n<p>One alternative is adding a dependence between the instances. This allows their creation to complete successfully. However, each instance takes several minutes to create. This accumulates to many spent minutes. If we add an artificial delay of 60 seconds between instance creation, we manage to avoid the failures. Notes:</p>\n\n<ul>\n<li>The needed amount of seconds to delay depends on the instance tier. For example, for <code>db-f1-micro</code>, 30 seconds were enough. They were not enough for <code>db-custom-1-3840</code>.</li>\n<li>I am not sure what is the exact number of needed seconds for <code>db-custom-1-3840</code>. 30 seconds were not enough, 60 were.</li>\n</ul>\n\n<p>Following is a the code sample to resolve the issue. It shows 2 instances only since due to <code>depends_on</code> limitations I could not use the count feature and showing the full code for 5 instances would be very long. It works the same for 5 instances:</p>\n\n<pre><code>resource \"google_compute_network\" \"private_network\" {\n  provider = \"google-beta\"\n\n  name = \"private-network\"\n}\n\nresource \"google_compute_global_address\" \"private_ip_address\" {\n  provider = \"google-beta\"\n\n  name = \"private-ip-address\"\n  purpose = \"VPC_PEERING\"\n  address_type = \"INTERNAL\"\n  prefix_length = 16\n  network = \"${google_compute_network.private_network.self_link}\"\n}\n\nresource \"google_service_networking_connection\" \"private_vpc_connection\" {\n  provider = \"google-beta\"\n\n  network = \"${google_compute_network.private_network.self_link}\"\n  service = \"servicenetworking.googleapis.com\"\n  reserved_peering_ranges = [\"${google_compute_global_address.private_ip_address.name}\"]\n}\n\nlocals {\n  db_instance_creation_delay_factor_seconds = 60\n}\n\nresource \"null_resource\" \"delayer_1\" {\n  depends_on = [\"google_service_networking_connection.private_vpc_connection\"]\n\n  provisioner \"local-exec\" {\n    command = \"echo Gradual DB instance creation &amp;&amp; sleep ${local.db_instance_creation_delay_factor_seconds * 0}\"\n  }\n}\n\nresource \"google_sql_database_instance\" \"instance_1\" {\n  provider = \"google-beta\"\n\n  name = \"private-instance-delayed-1\"\n  database_version = \"POSTGRES_9_6\"\n\n  depends_on = [\n    \"google_service_networking_connection.private_vpc_connection\",\n    \"null_resource.delayer_1\"\n  ]\n\n  settings {\n    tier = \"db-custom-1-3840\"\n    availability_type = \"REGIONAL\"\n    ip_configuration {\n      ipv4_enabled = \"false\"\n      private_network = \"${google_compute_network.private_network.self_link}\"\n    }\n  }\n}\n\nresource \"null_resource\" \"delayer_2\" {\n  depends_on = [\"google_service_networking_connection.private_vpc_connection\"]\n\n  provisioner \"local-exec\" {\n    command = \"echo Gradual DB instance creation &amp;&amp; sleep ${local.db_instance_creation_delay_factor_seconds * 1}\"\n  }\n}\n\nresource \"google_sql_database_instance\" \"instance_2\" {\n  provider = \"google-beta\"\n\n  name = \"private-instance-delayed-2\"\n  database_version = \"POSTGRES_9_6\"\n\n  depends_on = [\n    \"google_service_networking_connection.private_vpc_connection\",\n    \"null_resource.delayer_2\"\n  ]\n\n  settings {\n    tier = \"db-custom-1-3840\"\n    availability_type = \"REGIONAL\"\n    ip_configuration {\n      ipv4_enabled = \"false\"\n      private_network = \"${google_compute_network.private_network.self_link}\"\n    }\n  }\n}\n\nprovider \"google-beta\" {\n  version = \"~&gt; 2.5\"\n  credentials = \"credentials.json\"\n  project = \"PROJECT_ID\"\n  region = \"us-central1\"\n  zone = \"us-central1-a\"\n}\n\nprovider \"null\" {\n  version = \"~&gt; 1.0\"\n}\n</code></pre>\n", "OwnerUserId": "2245293", "LastEditorUserId": "2245293", "LastEditDate": "2019-05-20T12:13:44.513", "LastActivityDate": "2019-05-20T12:13:44.513", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "197123278", "PostHistoryTypeId": "2", "PostId": "55991852", "RevisionGUID": "3a959e7b-253a-4b5f-b5d3-0c32d8d75829", "CreationDate": "2019-05-05T12:18:03.513", "UserId": "2245293", "Text": "Found an ugly yet working solution. There seems to be a bug in GCP which does not prevent simultaneous creation of instances although it cannot be completed. There is neither documentation about it nor meaningful error message.\r\n\r\nOne alternative is adding a dependence between the instances. This allows their creation to complete successfully. However, each instance takes several minutes to create. This accumulates to many spent minutes. If we add an artificial delay of 60 seconds between instance creation, we manage to avoid the failures. Notes:\r\n\r\n - The needed amount of seconds to delay depends on the instance tier. For example, for `db-f1-micro`, 30 seconds were enough. They were not enough for `db-custom-1-3840`.\r\n - I am not sure what is the exact number of needed seconds for `db-custom-1-3840`. 30 seconds were not enough, 60 were.\r\n\r\nFollowing is a the code sample to resolve the issue. It shows 2 instances only since due to `depends_on` limitations I could not use the count feature and showing the full code for 5 instances would be very long. It works the same for 5 instances:\r\n```\r\nresource \"google_compute_network\" \"private_network\" {\r\n  provider = \"google-beta\"\r\n\r\n  name = \"private-network\"\r\n}\r\n\r\nresource \"google_compute_global_address\" \"private_ip_address\" {\r\n  provider = \"google-beta\"\r\n\r\n  name = \"private-ip-address\"\r\n  purpose = \"VPC_PEERING\"\r\n  address_type = \"INTERNAL\"\r\n  prefix_length = 16\r\n  network = \"${google_compute_network.private_network.self_link}\"\r\n}\r\n\r\nresource \"google_service_networking_connection\" \"private_vpc_connection\" {\r\n  provider = \"google-beta\"\r\n\r\n  network = \"${google_compute_network.private_network.self_link}\"\r\n  service = \"servicenetworking.googleapis.com\"\r\n  reserved_peering_ranges = [\"${google_compute_global_address.private_ip_address.name}\"]\r\n}\r\n\r\nlocals {\r\n  db_instance_creation_delay_factor_seconds = 60\r\n}\r\n\r\nresource \"null_resource\" \"delayer_1\" {\r\n  depends_on = [\"google_service_networking_connection.private_vpc_connection\"]\r\n\r\n  provisioner \"local-exec\" {\r\n    command = \"echo Gradual DB instance creation && sleep ${local.db_instance_creation_delay_factor_seconds * 0}\"\r\n  }\r\n}\r\n\r\nresource \"google_sql_database_instance\" \"instance_1\" {\r\n  provider = \"google-beta\"\r\n\r\n  name = \"private-instance-delayed-1\"\r\n  database_version = \"POSTGRES_9_6\"\r\n\r\n  depends_on = [\r\n    \"google_service_networking_connection.private_vpc_connection\",\r\n    \"null_resource.delayer_1\"\r\n  ]\r\n\r\n  settings {\r\n    tier = \"db-custom-1-3840\"\r\n    availability_type = \"REGIONAL\"\r\n    ip_configuration {\r\n      ipv4_enabled = \"false\"\r\n      private_network = \"${google_compute_network.private_network.self_link}\"\r\n    }\r\n  }\r\n}\r\n\r\nresource \"null_resource\" \"delayer_2\" {\r\n  depends_on = [\"google_service_networking_connection.private_vpc_connection\"]\r\n\r\n  provisioner \"local-exec\" {\r\n    command = \"echo Gradual DB instance creation && sleep ${local.db_instance_creation_delay_factor_seconds * 1}\"\r\n  }\r\n}\r\n\r\nresource \"google_sql_database_instance\" \"instance_2\" {\r\n  provider = \"google-beta\"\r\n\r\n  name = \"private-instance-delayed-2\"\r\n  database_version = \"POSTGRES_9_6\"\r\n\r\n  depends_on = [\r\n    \"google_service_networking_connection.private_vpc_connection\",\r\n    \"null_resource.delayer_2\"\r\n  ]\r\n\r\n  settings {\r\n    tier = \"db-custom-1-3840\"\r\n    availability_type = \"REGIONAL\"\r\n    ip_configuration {\r\n      ipv4_enabled = \"false\"\r\n      private_network = \"${google_compute_network.private_network.self_link}\"\r\n    }\r\n  }\r\n}\r\n\r\nprovider \"google-beta\" {\r\n  version = \"~> 2.5\"\r\n  credentials = \"credentials.json\"\r\n  project = \"PROJECT_ID\"\r\n  region = \"us-central1\"\r\n  zone = \"us-central1-a\"\r\n}\r\n\r\nprovider \"null\" {\r\n  version = \"~> 1.0\"\r\n}\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "However, each instance takes several minutes to create. ", "keywords": ["instance"]}, {"source": "Text", "text": "If we add an artificial delay of 60 seconds between instance creation, we manage to avoid the failures. ", "keywords": ["instance"]}, {"source": "Text", "text": "Notes: - The needed amount of seconds to delay depends on the instance tier. ", "keywords": ["instance"]}, {"source": "Text", "text": "It shows 2 instances only since due to `depends_on` limitations I could not use the count feature and showing the full code for 5 instances would be very long. ", "keywords": ["feature"]}, {"source": "Text", "text": "It works the same for 5 instances: ``` resource \"google_compute_network\" \"private_network\" { provider = \"google-beta\" name = \"private-network\" } resource \"google_compute_global_address\" \"private_ip_address\" { provider = \"google-beta\" name = \"private-ip-address\" purpose = \"VPC_PEERING\" address_type = \"INTERNAL\" prefix_length = 16 network = \"${google_compute_network.private_network.self_link}\" } resource \"google_service_networking_connection\" \"private_vpc_connection\" { provider = \"google-beta\" network = \"${google_compute_network.private_network.self_link}\" service = \"servicenetworking.googleapis.com\" reserved_peering_ranges = [\"${google_compute_global_address.private_ip_address.name}\"] } locals { db_instance_creation_delay_factor_seconds = 60 } resource \"null_resource\" \"delayer_1\" { depends_on = [\"google_service_networking_connection.private_vpc_connection\"] provisioner \"local-exec\" { command = \"echo Gradual DB instance creation && sleep ${local.db_instance_creation_delay_factor_seconds * 0}\" } } resource \"google_sql_database_instance\" \"instance_1\" { provider = \"google-beta\" name = \"private-instance-delayed-1\" database_version = \"POSTGRES_9_6\" depends_on = [ \"google_service_networking_connection.private_vpc_connection\", \"null_resource.delayer_1\" ] settings { tier = \"db-custom-1-3840\" availability_type = \"REGIONAL\" ip_configuration { ipv4_enabled = \"false\" private_network = \"${google_compute_network.private_network.self_link}\" } } } resource \"null_resource\" \"delayer_2\" { depends_on = [\"google_service_networking_connection.private_vpc_connection\"] provisioner \"local-exec\" { command = \"echo Gradual DB instance creation && sleep ${local.db_instance_creation_delay_factor_seconds * 1}\" } } resource \"google_sql_database_instance\" \"instance_2\" { provider = \"google-beta\" name = \"private-instance-delayed-2\" database_version = \"POSTGRES_9_6\" depends_on = [ \"google_service_networking_connection.private_vpc_connection\", \"null_resource.delayer_2\" ] settings { tier = \"db-custom-1-3840\" availability_type = \"REGIONAL\" ip_configuration { ipv4_enabled = \"false\" private_network = \"${google_compute_network.private_network.self_link}\" } } } provider \"google-beta\" { version = \"~", "keywords": ["instance", "provider"]}, {"source": "Text", "text": "} provider \"null\" { version = \"~", "keywords": ["provider"]}]}, {"Id": "198085558", "PostHistoryTypeId": "5", "PostId": "55991852", "RevisionGUID": "8ac3c7c9-d84e-4328-9278-a55c4b9bbbae", "CreationDate": "2019-05-20T12:13:44.513", "UserId": "2245293", "Comment": "added 216 characters in body", "Text": "Found an ugly yet working solution. There [is a bug in GCP][1] which does not prevent simultaneous creation of instances although it cannot be completed. There is neither documentation about it nor a meaningful error message. It appears in the [Terraform Google provider issue tracker][2] as well.\r\n\r\nOne alternative is adding a dependence between the instances. This allows their creation to complete successfully. However, each instance takes several minutes to create. This accumulates to many spent minutes. If we add an artificial delay of 60 seconds between instance creation, we manage to avoid the failures. Notes:\r\n\r\n - The needed amount of seconds to delay depends on the instance tier. For example, for `db-f1-micro`, 30 seconds were enough. They were not enough for `db-custom-1-3840`.\r\n - I am not sure what is the exact number of needed seconds for `db-custom-1-3840`. 30 seconds were not enough, 60 were.\r\n\r\nFollowing is a the code sample to resolve the issue. It shows 2 instances only since due to `depends_on` limitations I could not use the count feature and showing the full code for 5 instances would be very long. It works the same for 5 instances:\r\n```\r\nresource \"google_compute_network\" \"private_network\" {\r\n  provider = \"google-beta\"\r\n\r\n  name = \"private-network\"\r\n}\r\n\r\nresource \"google_compute_global_address\" \"private_ip_address\" {\r\n  provider = \"google-beta\"\r\n\r\n  name = \"private-ip-address\"\r\n  purpose = \"VPC_PEERING\"\r\n  address_type = \"INTERNAL\"\r\n  prefix_length = 16\r\n  network = \"${google_compute_network.private_network.self_link}\"\r\n}\r\n\r\nresource \"google_service_networking_connection\" \"private_vpc_connection\" {\r\n  provider = \"google-beta\"\r\n\r\n  network = \"${google_compute_network.private_network.self_link}\"\r\n  service = \"servicenetworking.googleapis.com\"\r\n  reserved_peering_ranges = [\"${google_compute_global_address.private_ip_address.name}\"]\r\n}\r\n\r\nlocals {\r\n  db_instance_creation_delay_factor_seconds = 60\r\n}\r\n\r\nresource \"null_resource\" \"delayer_1\" {\r\n  depends_on = [\"google_service_networking_connection.private_vpc_connection\"]\r\n\r\n  provisioner \"local-exec\" {\r\n    command = \"echo Gradual DB instance creation && sleep ${local.db_instance_creation_delay_factor_seconds * 0}\"\r\n  }\r\n}\r\n\r\nresource \"google_sql_database_instance\" \"instance_1\" {\r\n  provider = \"google-beta\"\r\n\r\n  name = \"private-instance-delayed-1\"\r\n  database_version = \"POSTGRES_9_6\"\r\n\r\n  depends_on = [\r\n    \"google_service_networking_connection.private_vpc_connection\",\r\n    \"null_resource.delayer_1\"\r\n  ]\r\n\r\n  settings {\r\n    tier = \"db-custom-1-3840\"\r\n    availability_type = \"REGIONAL\"\r\n    ip_configuration {\r\n      ipv4_enabled = \"false\"\r\n      private_network = \"${google_compute_network.private_network.self_link}\"\r\n    }\r\n  }\r\n}\r\n\r\nresource \"null_resource\" \"delayer_2\" {\r\n  depends_on = [\"google_service_networking_connection.private_vpc_connection\"]\r\n\r\n  provisioner \"local-exec\" {\r\n    command = \"echo Gradual DB instance creation && sleep ${local.db_instance_creation_delay_factor_seconds * 1}\"\r\n  }\r\n}\r\n\r\nresource \"google_sql_database_instance\" \"instance_2\" {\r\n  provider = \"google-beta\"\r\n\r\n  name = \"private-instance-delayed-2\"\r\n  database_version = \"POSTGRES_9_6\"\r\n\r\n  depends_on = [\r\n    \"google_service_networking_connection.private_vpc_connection\",\r\n    \"null_resource.delayer_2\"\r\n  ]\r\n\r\n  settings {\r\n    tier = \"db-custom-1-3840\"\r\n    availability_type = \"REGIONAL\"\r\n    ip_configuration {\r\n      ipv4_enabled = \"false\"\r\n      private_network = \"${google_compute_network.private_network.self_link}\"\r\n    }\r\n  }\r\n}\r\n\r\nprovider \"google-beta\" {\r\n  version = \"~> 2.5\"\r\n  credentials = \"credentials.json\"\r\n  project = \"PROJECT_ID\"\r\n  region = \"us-central1\"\r\n  zone = \"us-central1-a\"\r\n}\r\n\r\nprovider \"null\" {\r\n  version = \"~> 1.0\"\r\n}\r\n```\r\n\r\n\r\n  [1]: https://issuetracker.google.com/issues/131908322\r\n  [2]: https://github.com/terraform-providers/terraform-provider-google/issues/3069", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "It appears in the [Terraform Google provider issue tracker][2] as well. ", "keywords": ["provider"]}, {"source": "Text", "text": "However, each instance takes several minutes to create. ", "keywords": ["instance"]}, {"source": "Text", "text": "If we add an artificial delay of 60 seconds between instance creation, we manage to avoid the failures. ", "keywords": ["instance"]}, {"source": "Text", "text": "Notes: - The needed amount of seconds to delay depends on the instance tier. ", "keywords": ["instance"]}, {"source": "Text", "text": "It shows 2 instances only since due to `depends_on` limitations I could not use the count feature and showing the full code for 5 instances would be very long. ", "keywords": ["feature"]}, {"source": "Text", "text": "It works the same for 5 instances: ``` resource \"google_compute_network\" \"private_network\" { provider = \"google-beta\" name = \"private-network\" } resource \"google_compute_global_address\" \"private_ip_address\" { provider = \"google-beta\" name = \"private-ip-address\" purpose = \"VPC_PEERING\" address_type = \"INTERNAL\" prefix_length = 16 network = \"${google_compute_network.private_network.self_link}\" } resource \"google_service_networking_connection\" \"private_vpc_connection\" { provider = \"google-beta\" network = \"${google_compute_network.private_network.self_link}\" service = \"servicenetworking.googleapis.com\" reserved_peering_ranges = [\"${google_compute_global_address.private_ip_address.name}\"] } locals { db_instance_creation_delay_factor_seconds = 60 } resource \"null_resource\" \"delayer_1\" { depends_on = [\"google_service_networking_connection.private_vpc_connection\"] provisioner \"local-exec\" { command = \"echo Gradual DB instance creation && sleep ${local.db_instance_creation_delay_factor_seconds * 0}\" } } resource \"google_sql_database_instance\" \"instance_1\" { provider = \"google-beta\" name = \"private-instance-delayed-1\" database_version = \"POSTGRES_9_6\" depends_on = [ \"google_service_networking_connection.private_vpc_connection\", \"null_resource.delayer_1\" ] settings { tier = \"db-custom-1-3840\" availability_type = \"REGIONAL\" ip_configuration { ipv4_enabled = \"false\" private_network = \"${google_compute_network.private_network.self_link}\" } } } resource \"null_resource\" \"delayer_2\" { depends_on = [\"google_service_networking_connection.private_vpc_connection\"] provisioner \"local-exec\" { command = \"echo Gradual DB instance creation && sleep ${local.db_instance_creation_delay_factor_seconds * 1}\" } } resource \"google_sql_database_instance\" \"instance_2\" { provider = \"google-beta\" name = \"private-instance-delayed-2\" database_version = \"POSTGRES_9_6\" depends_on = [ \"google_service_networking_connection.private_vpc_connection\", \"null_resource.delayer_2\" ] settings { tier = \"db-custom-1-3840\" availability_type = \"REGIONAL\" ip_configuration { ipv4_enabled = \"false\" private_network = \"${google_compute_network.private_network.self_link}\" } } } provider \"google-beta\" { version = \"~> 2.5\" credentials = \"credentials.json\" project = \"PROJECT_ID\" region = \"us-central1\" zone = \"us-central1-a\" ", "keywords": ["instance", "provider"]}, {"source": "Text", "text": "} provider \"null\" { version = \"~", "keywords": ["provider"]}, {"source": "Text", "text": "} ``` [1]: https://issuetracker.google.com/issues/131908322 [2]: https://github.com/terraform-providers/terraform-provider-google/issues/3069", "keywords": ["provider"]}]}], "filtered-sentences": [{"source": "Body", "text": "It appears in the Terraform Google provider issue tracker as well. ", "keywords": ["provider"]}, {"source": "Body", "text": "However, each instance takes several minutes to create. ", "keywords": ["instance"]}, {"source": "Body", "text": "If we add an artificial delay of 60 seconds between instance creation, we manage to avoid the failures. ", "keywords": ["instance"]}, {"source": "Body", "text": "Notes: The needed amount of seconds to delay depends on the instance tier. ", "keywords": ["instance"]}, {"source": "Body", "text": "It shows 2 instances only since due to depends_on limitations I could not use the count feature and showing the full code for 5 instances would be very long. ", "keywords": ["feature"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "While a creating a single instance works fine, trying to create 5 instances simultaneously ends in 4 failed ones and one successful: ", "keywords": ["instance"]}, {"source": "Body", "text": "Pay attention to the count = 5 line: I tried several alternatives: Waiting a minute after creating the google_service_networking_connection and then creating all the instances simultaneously, but I got the same error. ", "keywords": ["pay"]}, {"source": "Body", "text": "Creating an address range and a google_service_networking_connection per instance, but I got an error that google_service_networking_connection cannot be created simultaneously. ", "keywords": ["instance"]}, {"source": "Body", "text": "Creating an address range per instance and a single google_service_networking_connection which links to all of them, but I got the same error.", "keywords": ["instance"]}]}