{"Id": "75371060", "PostTypeId": "1", "CreationDate": "2023-02-07T09:08:13.410", "Score": "0", "ViewCount": "382", "Body": "<p>I am working on creating Azure landing zone and part of that is to enable/disable resource providers on the newly created subscriptions.</p>\n<p>I have tried to used alias with a variable but i am getting error that i cant use variable in an alias so is there any way through which i can use this feature on multiple subscription</p>\n<p>This is my code main.tf</p>\n<pre><code>terraform {\n  required_providers {\n    azurerm = {\n      source  = &quot;hashicorp/azurerm&quot;\n      version = &quot;=3.0.0&quot;\n    }\n  }\n}\n\n#list of providers i want to register\nlocals {\n  # List is compiled from here\n  # https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/azure-services-resource-providers\n  provider_list = [\n    &quot;Microsoft.Storage&quot;\n  ]\n  provider_map = { for p in local.provider_list : p =&gt; p }\n}\n\n# Registering a default provider here and skipping registration \n# as i will do it later\nprovider &quot;azurerm&quot; {\n  features {}\n  skip_provider_registration = true\n}\n\n# I am creating a subscription here with same alias as the name\n# the subscription is being created under and EA enrollment but \n# any type of subscription will do\nresource &quot;azurerm_subscription&quot; &quot;feature_subscription&quot; {\n  billing_scope_id  = &quot;/providers/Microsoft.Billing/billingAccounts/xxx/enrollmentAccounts/xx&quot;\n  alias = var.temp_alias # &quot;test-provider-registration&quot;\n  subscription_name = &quot;test-provider-registration&quot;\n}\n\n#this is what i have created to point out my azurerm_resource_provider_registration\n#module i am using variable in alias which is failing\nprovider &quot;azurerm&quot; {\n  alias = var.temp_alias\n  subscription_id = azurerm_subscription.feature_subscription.id\n  features {\n\n  }\n  skip_provider_registration = true\n}\n\n\n#module through which i am registering the resource providers\nmodule &quot;azurerm_resource_provider_registration-provider&quot; {\n  source = &quot;../modules/azurerm_resource_provider_registration&quot;\n  providers =  {\n    azurerm = azurerm.test-provider-registration\n  }\n  feature_list = local.provider_map \n}\n\n#the module code is mentioned here\n#resource &quot;azurerm_resource_provider_registration&quot; &quot;provider&quot; {\n#  for_each =  var.feature_list\n#  name     = each.value\n#}\n</code></pre>\n<p>I am getting this error when i run it</p>\n<blockquote>\n<p>There are some problems with the configuration, described below.</p>\n<p>The Terraform configuration must be valid before initialization so that\nTerraform can determine which modules and providers need to be installed.\n\u2577\nError: Variables not allowed\n\u2502\nOn main.tf line 25: Variables may not be used here.\n\u2575</p>\n<p>\u2577\nError: Unsuitable value type\n\u2502\nOn main.tf line 25: Unsuitable value: value must be known</p>\n</blockquote>\n<p>There is a workaround available like using this</p>\n<pre><code>resource &quot;null_resource&quot; &quot;provider_registration&quot; {\n  for_each = local.provider_map\n  \n  provisioner &quot;local-exec&quot; {\n    command = &quot;az account set --subscription ${data.azurerm_subscription.subscription.subscription_id} &amp;&amp; az provider register --namespace ${each.value}&quot;\n  }\n}\n</code></pre>\n<p>but i want to use the state file for the resource registration if possible as i have more subscriptions in a loop</p>\n", "OwnerUserId": "5636484", "LastActivityDate": "2023-02-07T11:14:15.977", "Title": "Using azure azurerm_resource_provider_registration with newly created subscription", "Tags": "<azure><terraform><infrastructure>", "AnswerCount": "1", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "287598173", "PostHistoryTypeId": "2", "PostId": "75371060", "RevisionGUID": "ecd1fbd1-9607-49e3-ada0-75b85206a5fc", "CreationDate": "2023-02-07T09:08:13.410", "UserId": "5636484", "Text": "I am working on creating Azure landing zone and part of that is to enable/disable resource providers on the newly created subscriptions. \r\n\r\nI have tried to used alias with a variable but i am getting error that i cant use variable in an alias so is there any way through which i can use this feature on multiple subscription\r\n\r\n\r\n\r\nThis is my code main.tf\r\n\r\n```\r\nterraform {\r\n  required_providers {\r\n    azurerm = {\r\n      source  = \"hashicorp/azurerm\"\r\n      version = \"=3.0.0\"\r\n    }\r\n  }\r\n}\r\n\r\n#list of providers i want to register\r\nlocals {\r\n  # List is compiled from here\r\n  # https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/azure-services-resource-providers\r\n  provider_list = [\r\n    \"Microsoft.Storage\"\r\n  ]\r\n  provider_map = { for p in local.provider_list : p => p }\r\n}\r\n\r\n# Registering a default provider here and skipping registration \r\n# as i will do it later\r\nprovider \"azurerm\" {\r\n  features {}\r\n  skip_provider_registration = true\r\n}\r\n\r\n# I am creating a subscription here with same alias as the name\r\n# the subscription is being created under and EA enrollment but \r\n# any type of subscription will do\r\nresource \"azurerm_subscription\" \"feature_subscription\" {\r\n  billing_scope_id  = \"/providers/Microsoft.Billing/billingAccounts/xxx/enrollmentAccounts/xx\"\r\n  alias = var.temp_alias # \"test-provider-registration\"\r\n  subscription_name = \"test-provider-registration\"\r\n}\r\n\r\n#this is what i have created to point out my azurerm_resource_provider_registration\r\n#module i am using variable in alias which is failing\r\nprovider \"azurerm\" {\r\n  alias = var.temp_alias\r\n  subscription_id = azurerm_subscription.feature_subscription.id\r\n  features {\r\n\r\n  }\r\n  skip_provider_registration = true\r\n}\r\n\r\n\r\n#module through which i am registering the resource providers\r\nmodule \"azurerm_resource_provider_registration-provider\" {\r\n  source = \"../modules/azurerm_resource_provider_registration\"\r\n  providers =  {\r\n    azurerm = azurerm.test-provider-registration\r\n  }\r\n  feature_list = local.provider_map \r\n}\r\n\r\n#the module code is mentioned here\r\n#resource \"azurerm_resource_provider_registration\" \"provider\" {\r\n#  for_each =  var.feature_list\r\n#  name     = each.value\r\n#}\r\n```\r\n\r\nI am getting this error when i run it\r\n\r\n> There are some problems with the configuration, described below.\r\n> \r\n> The Terraform configuration must be valid before initialization so that\r\n> Terraform can determine which modules and providers need to be installed.\r\n> \u2577\r\n> Error: Variables not allowed\r\n> \u2502\r\n> On main.tf line 25: Variables may not be used here.\r\n> \u2575\r\n> \r\n> \u2577\r\n> Error: Unsuitable value type\r\n> \u2502\r\n> On main.tf line 25: Unsuitable value: value must be known\r\n\r\nThere is a workaround available like using this \r\n\r\n```\r\nresource \"null_resource\" \"provider_registration\" {\r\n  for_each = local.provider_map\r\n  \r\n  provisioner \"local-exec\" {\r\n    command = \"az account set --subscription ${data.azurerm_subscription.subscription.subscription_id} && az provider register --namespace ${each.value}\"\r\n  }\r\n}\r\n```\r\n\r\nbut i want to use the state file for the resource registration if possible as i have more subscriptions in a loop ", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I have tried to used alias with a variable but i am getting error that i cant use variable in an alias so is there any way through which i can use this feature on multiple subscription ", "keywords": ["feature"]}, {"source": "Text", "text": "This is my code main.tf ``` terraform { required_providers { azurerm = { source = \"hashicorp/azurerm\" version = \"=3.0.0\" } } } #list of providers i want to register locals { # List is compiled from here # https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/azure-services-resource-providers provider_list = [ \"Microsoft.Storage\" ] provider_map = { for p in local.provider_list : p => p } } # Registering a default provider here and skipping registration # as i will do it later provider \"azurerm\" { features {} skip_provider_registration = true } # I am creating a subscription here with same alias as the name # the subscription is being created under and EA enrollment but # any type of subscription will do resource \"azurerm_subscription\" \"feature_subscription\" { billing_scope_id = \"/providers/Microsoft.Billing/billingAccounts/xxx/enrollmentAccounts/xx\" alias = var.temp_alias # \"test-provider-registration\" subscription_name = \"test-provider-registration\" } #this is what i have created to point out my azurerm_resource_provider_registration #module i am using variable in alias which is failing provider \"azurerm\" { alias = var.temp_alias subscription_id = azurerm_subscription.feature_subscription.id features { } skip_provider_registration = true } #module through which i am registering the resource providers module \"azurerm_resource_provider_registration-provider\" { source = \"../modules/azurerm_resource_provider_registration\" providers = { azurerm = azurerm.test-provider-registration } feature_list = local.provider_map } #the module code is mentioned here #resource \"azurerm_resource_provider_registration\" \"provider\" { # for_each = var.feature_list # name = each.value #} ``` ", "keywords": ["bill", "storage", "provider", "test"]}, {"source": "Text", "text": "There is a workaround available like using this ``` resource \"null_resource\" \"provider_registration\" { for_each = local.provider_map provisioner \"local-exec\" { command = \"az account set --subscription ${data.azurerm_subscription.subscription.subscription_id} && az provider register --namespace ${each.value}\" } } ``` but i want to use the state file for the resource registration if possible as i have more subscriptions in a loop", "keywords": ["provider"]}]}, {"Id": "287598175", "PostHistoryTypeId": "1", "PostId": "75371060", "RevisionGUID": "ecd1fbd1-9607-49e3-ada0-75b85206a5fc", "CreationDate": "2023-02-07T09:08:13.410", "UserId": "5636484", "Text": "Using azure azurerm_resource_provider_registration with newly created subscription", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "287598176", "PostHistoryTypeId": "3", "PostId": "75371060", "RevisionGUID": "ecd1fbd1-9607-49e3-ada0-75b85206a5fc", "CreationDate": "2023-02-07T09:08:13.410", "UserId": "5636484", "Text": "<azure><terraform><infrastructure>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "287598177", "PostHistoryTypeId": "66", "PostId": "75371060", "RevisionGUID": "ecd1fbd1-9607-49e3-ada0-75b85206a5fc", "CreationDate": "2023-02-07T09:08:13.410", "UserId": "5636484", "filtered-sentences": []}], "answers": [{"Id": "75372577", "PostTypeId": "2", "ParentId": "75371060", "CreationDate": "2023-02-07T11:14:15.977", "Score": "0", "Body": "<blockquote>\n<p>Error: Unsuitable value type | Unsuitable value: value must be known</p>\n</blockquote>\n<p><em><strong>Need to check:</strong></em></p>\n<ol>\n<li>This problem usually occurs with <code>module</code> sources or versions. When invoking a module, using variables instead of passing direct values for the source and some other arguments causes this error. <code>terraform init</code>doesn't take variable inputs with modules in backend state configuration.</li>\n</ol>\n<p><strong>Note</strong>: And also include required version for modules.</p>\n<ol start=\"2\">\n<li><p>To make it work, use direct values for module block instead of accessing from other resources.</p>\n</li>\n<li><p>Pass provider explicitly to make it work as detailed in <a href=\"https://developer.hashicorp.com/terraform/language/modules/develop/providers#passing-providers-explicitly\" rel=\"nofollow noreferrer\">terraform providers</a>.</p>\n</li>\n</ol>\n<pre class=\"lang-bash prettyprint-override\"><code> providers =  {\n    azurerm = azurerm.test-provider-registration\n    }\n  feature_list = local.provider_map \n}\n}\nmodule &quot;azurerm_resource_provider_registration-provider&quot; {\n  source =&quot;../modules/azurerm_resource_provider_registration&quot;\n  version = &lt;required version&gt; //Use latest one\n</code></pre>\n<p>After checking the above conditions, I tried same in my environment and it was <em><strong>initialized successfully:</strong></em></p>\n<p><img src=\"https://i.stack.imgur.com/K85HJ.png\" alt=\"enter image description here\" /></p>\n<p>Refer <a href=\"https://jeffbrown.tech/terraform-azure-multiple-subscriptions/\" rel=\"nofollow noreferrer\">aliasing</a> for the deployment in multiple subscriptions detailed by @Jeff Brown</p>\n", "OwnerUserId": "19785512", "LastActivityDate": "2023-02-07T11:14:15.977", "CommentCount": "4", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "132996518", "PostId": "75372577", "Score": "0", "Text": "So this works if i change this\nprovider \"azurerm\" {\n  alias = var.temp_alias\n  subscription_id = azurerm_subscription.feature_subscription.id\n  features {\n\n  }\n  skip_provider_registration = true\n}\n\nto this \n\nprovider \"azurerm\" {\n  alias = var.temp_alias\n  subscription_id = azurerm_subscription.feature_subscription.id\n  features {\n\n  }\n  skip_provider_registration = true\n}\n\nThe alias works if the value is directly there and that is where i am having challenge as i will get the name from new subscription variable. \nmodule it works fine if i just change that line", "CreationDate": "2023-02-07T12:10:22.347", "UserId": "5636484", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "So this works if i change this provider \"azurerm\" { alias = var.temp_alias subscription_id = azurerm_subscription.feature_subscription.id features { } skip_provider_registration = true } to this provider \"azurerm\" { alias = var.temp_alias subscription_id = azurerm_subscription.feature_subscription.id features { } skip_provider_registration = true } ", "keywords": ["provider", "change"]}, {"source": "Text", "text": "module it works fine if i just change that line", "keywords": ["change"]}]}, {"Id": "132996662", "PostId": "75372577", "Score": "0", "Text": "Yes as described in the above answer.", "CreationDate": "2023-02-07T12:17:32.437", "UserId": "19785512", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "132996760", "PostId": "75372577", "Score": "0", "Text": "The main problem here is actully to use a provider with an alias of a subscription which we just created and in a landing zone we create quite a few subscription and we need to register certain modules in each subscription. I can even skip the module", "CreationDate": "2023-02-07T12:22:08.440", "UserId": "5636484", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "The main problem here is actully to use a provider with an alias of a subscription which we just created and in a landing zone we create quite a few subscription and we need to register certain modules in each subscription. ", "keywords": ["provider"]}]}, {"Id": "132997002", "PostId": "75372577", "Score": "0", "Text": "Did you declare a variable for `var.temp_alias` in `variable.tf` file?", "CreationDate": "2023-02-07T12:34:26.257", "UserId": "19785512", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "287606841", "PostHistoryTypeId": "2", "PostId": "75372577", "RevisionGUID": "2729574b-adef-4458-8566-a2ae9dd987cd", "CreationDate": "2023-02-07T11:14:15.977", "UserId": "19785512", "Text": "> Error: Unsuitable value type | Unsuitable value: value must be known\r\n\r\n***Need to check:***\r\n\r\n1. This problem usually occurs with `module` sources or versions. When invoking a module, using variables instead of passing direct values for the source and some other arguments causes this error. `terraform init`doesn't take variable inputs with modules in backend state configuration. \r\n\r\n**Note**: And also include required version for modules.  \r\n\r\n2. To make it work, use direct values for module block instead of accessing from other resources.\r\n\r\n\r\n3. Pass provider explicitly to make it work as detailed in [terraform providers](https://developer.hashicorp.com/terraform/language/modules/develop/providers#passing-providers-explicitly).\r\n\r\n```bash\r\n providers =  {\r\n    azurerm = azurerm.test-provider-registration\r\n    }\r\n  feature_list = local.provider_map \r\n}\r\n}\r\nmodule \"azurerm_resource_provider_registration-provider\" {\r\n  source =\"../modules/azurerm_resource_provider_registration\"\r\n  version = <required version> //Use latest one\r\n```\r\n\r\nAfter checking the above conditions, I tried same in my environment and it was ***initialized successfully:***\r\n\r\n![enter image description here](https://i.stack.imgur.com/K85HJ.png)\r\n\r\n\r\nRefer [aliasing](https://jeffbrown.tech/terraform-azure-multiple-subscriptions/) for the deployment in multiple subscriptions detailed by @Jeff Brown", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "3. Pass provider explicitly to make it work as detailed in [terraform providers](https://developer.hashicorp.com/terraform/language/modules/develop/providers#passing-providers-explicitly). ", "keywords": ["provider"]}, {"source": "Text", "text": "```bash providers = { azurerm = azurerm.test-provider-registration } feature_list = local.provider_map } } module \"azurerm_resource_provider_registration-provider\" { source =\"../modules/azurerm_resource_provider_registration\" version = //Use latest one ``` ", "keywords": ["provider", "test"]}]}], "filtered-sentences": [{"source": "Body", "text": "Pass provider explicitly to make it work as detailed in terraform providers. ", "keywords": ["provider"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I have tried to used alias with a variable but i am getting error that i cant use variable in an alias so is there any way through which i can use this feature on multiple subscription ", "keywords": ["feature"]}]}