{"Id": "70424018", "PostTypeId": "1", "CreationDate": "2021-12-20T15:19:36.520", "Score": "0", "ViewCount": "990", "Body": "<p>depending on environment I want to set separate tfvars files.</p>\n<p>main.tf</p>\n<pre><code>module &quot;dynamodb_users&quot; {\n  source = &quot;./modules/dynamodb/users&quot;\n  for_each = var.users_tables_list\n  table_name = each.value\n}\n</code></pre>\n<p>module</p>\n<pre><code>resource &quot;aws_dynamodb_table&quot; &quot;users&quot; {\n  name           = var.table_name\n  billing_mode   = &quot;PROVISIONED&quot;\n  read_capacity  = 5\n  write_capacity = 5\n  hash_key       = &quot;login&quot;\n\n  attribute {\n    name = &quot;login&quot;\n    type = &quot;S&quot;\n  }\n}\n</code></pre>\n<p>variables.tf</p>\n<pre><code>variable &quot;users_tables_list&quot; {\n  type = set(string)\n  default = [&quot;users&quot;]\n}\n</code></pre>\n<p>tfvars json file</p>\n<pre><code>{\n  &quot;users_tables_list&quot;: [\n    &quot;test-users&quot;, \n    &quot;users&quot;\n  ]\n}\n</code></pre>\n<p>When I am trying to plan without ftvars it is working as it should, but with it error is occuring</p>\n<pre><code>Error: error unmarshaling run variable: json: cannot unmarshal array into Go value of type string\n</code></pre>\n", "OwnerUserId": "10731820", "LastActivityDate": "2021-12-20T15:19:36.520", "Title": "Providing list type variable in tfvars file for for_each parameter in resource", "Tags": "<terraform><terraform-provider-aws>", "AnswerCount": "0", "CommentCount": "4", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "124489203", "PostId": "70424018", "Score": "0", "Text": "That JSON is the correct structure, and Go should definitely be able to unamrshal that array into string types. I feel like either something else is happening here and we need more info, or there is some bug impeding your progress.", "CreationDate": "2021-12-20T16:06:22.067", "UserId": "5343387", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "124493380", "PostId": "70424018", "Score": "0", "Text": "That terminology \"run variable\" sounds like something Terraform Cloud might say. Are you using Terraform Cloud with remote operations in this case, or are you running this locally? (In other words, does your configuration include a `cloud` or a `backend \"remote\"` block to integrate with Terraform Cloud?)", "CreationDate": "2021-12-20T19:21:42.643", "UserId": "281848", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "124499928", "PostId": "70424018", "Score": "0", "Text": "@MartinAtkins Yes, I am using Terraform Cloud, it is ```cloud```", "CreationDate": "2021-12-21T04:15:44.007", "UserId": "10731820", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "124516779", "PostId": "70424018", "Score": "1", "Text": "I think you may have found the bug that [Terraform PR #30220](https://github.com/hashicorp/terraform/pull/30220) is aiming to fix, in which case this error should be dealt with in a future v1.1.x point release. If you need a sooner resolution then it may help to contact Terraform Cloud support to see if they can suggest a workaround.", "CreationDate": "2021-12-21T18:27:17.523", "UserId": "281848", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "260427597", "PostHistoryTypeId": "2", "PostId": "70424018", "RevisionGUID": "abf2d1d3-86df-4f12-88fb-e7abd3e425e4", "CreationDate": "2021-12-20T15:19:36.520", "UserId": "10731820", "Text": "depending on environment I want to set separate tfvars files.\r\n\r\nmain.tf\r\n```\r\nmodule \"dynamodb_users\" {\r\n  source = \"./modules/dynamodb/users\"\r\n  for_each = var.users_tables_list\r\n  table_name = each.value\r\n}\r\n```\r\n\r\nmodule\r\n```\r\nresource \"aws_dynamodb_table\" \"users\" {\r\n  name           = var.table_name\r\n  billing_mode   = \"PROVISIONED\"\r\n  read_capacity  = 5\r\n  write_capacity = 5\r\n  hash_key       = \"login\"\r\n\r\n  attribute {\r\n    name = \"login\"\r\n    type = \"S\"\r\n  }\r\n}\r\n```\r\n\r\nvariables.tf\r\n```\r\nvariable \"users_tables_list\" {\r\n  type = set(string)\r\n  default = [\"users\"]\r\n}\r\n```\r\n\r\ntfvars json file\r\n```\r\n{\r\n  \"users_tables_list\": [\r\n    \"test-users\", \r\n    \"users\"\r\n  ]\r\n}\r\n```\r\n\r\nWhen I am trying to plan without ftvars it is working as it should, but with it error is occuring\r\n```\r\nError: error unmarshaling run variable: json: cannot unmarshal array into Go value of type string\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "depending on environment I want to set separate tfvars files. main.tf ``` module \"dynamodb_users\" { source = \"./modules/dynamodb/users\" for_each = var.users_tables_list table_name = each.value } ``` module ``` resource \"aws_dynamodb_table\" \"users\" { name = var.table_name billing_mode = \"PROVISIONED\" read_capacity = 5 write_capacity = 5 hash_key = \"login\" attribute { name = \"login\" type = \"S\" } } ``` variables.tf ``` variable \"users_tables_list\" { type = set(string) default = [\"users\"] } ``` tfvars json file ``` { \"users_tables_list\": [ \"test-users\", \"users\" ] } ``` When I am trying to plan without ftvars it is working as it should, but with it error is occuring ``` ", "keywords": ["bill", "test"]}]}, {"Id": "260427599", "PostHistoryTypeId": "1", "PostId": "70424018", "RevisionGUID": "abf2d1d3-86df-4f12-88fb-e7abd3e425e4", "CreationDate": "2021-12-20T15:19:36.520", "UserId": "10731820", "Text": "Providing list type variable in tfvars file for for_each parameter in resource", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "260427600", "PostHistoryTypeId": "3", "PostId": "70424018", "RevisionGUID": "abf2d1d3-86df-4f12-88fb-e7abd3e425e4", "CreationDate": "2021-12-20T15:19:36.520", "UserId": "10731820", "Text": "<terraform><terraform-provider-aws>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": []}