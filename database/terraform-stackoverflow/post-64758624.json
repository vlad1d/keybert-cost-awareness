{"Id": "64758624", "PostTypeId": "1", "AcceptedAnswerId": "64771162", "CreationDate": "2020-11-09T20:13:48.740", "Score": "1", "ViewCount": "2608", "Body": "<p><strong>Some Background:</strong>\nWe have terraform code to create various AWS resources. Some of these resources are created per AWS account and hence are structured to be stored in a <code>account-scope</code> folder in our project. This was when we were only having one AWS region. Now our application is made multi-region and hence these resources are to be created per region for each AWS account.</p>\n<p>In order to do that we have now moved these TF scripts to <code>region-scope</code> folder which will be run per region. Since these resources are no longer part of <em>'account scope'</em> we have removed them from the account scope <em>Terraform state</em>.\nNow when I try to import these resources</p>\n<p><strong>Imported the resources by running this from <code>xyz-region-scope</code> directory:</strong></p>\n<pre><code>terraform import -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color &lt;RESOURCE_NAME&gt; &lt;RESOURCE_ID&gt;\n</code></pre>\n<p>One of the examples of a resource is:</p>\n<pre><code>RESOURCE_NAME=module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \nRESOURCE_ID=&quot;ab-xyz-stage-cloudtrail-logging-72a2c5cd&quot;\n</code></pre>\n<p>I was expecting the imports would update the resources in the terraform state file on my local machine but the terraform state file created under <code>xyz-region-scope/state/xyz-stage/terraform.tfstate</code> is not updated.</p>\n<p><strong>Verified the Imports with:</strong></p>\n<pre><code>terraform show\n</code></pre>\n<p><strong>Run terraform plan:</strong></p>\n<pre><code>terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color\n</code></pre>\n<p>But the terraform plan output shows <code>Plan: 6 to add, 0 to change, 5 to destroy.</code> that is those resources will be destroyed and recreated.</p>\n<p>I am not clear why so, am I missing something and not doing it right?</p>\n<p>Please note we store the remote state in S3 bucket <s>but I currently do not have the remote TF state file created in S3 bucket for <strong>region scope</strong> (I do have one for <em>account scope</em> though). I was expecting that the <code>Import..Plan..Apply</code> process will create one for region scope as well.</s></p>\n<p><strong>EDIT:</strong> I see the remote TF state file created in the S3 for region scope after running imports. One difference that I see between this new region-scope tf state file from old account-scope one is: the new file does not have any <code>&quot;depends_on&quot;</code> block under any of the resources <code>resources[] &gt; instances[]</code></p>\n<p><strong>Environment:</strong></p>\n<pre><code>Local machine: macOS v10.14.6\n\nTerraform v0.12.29\n+ provider.aws v3.14.1\n+ provider.null v2.1.2\n+ provider.random v2.3.1\n+ provider.template v2.1.2\n</code></pre>\n<hr />\n<hr />\n<p><strong>EDIT 2:</strong></p>\n<p><strong>Here are my Imports and terraform plan:</strong></p>\n<pre><code>terraform import module.buckets.random_id.cloudtrail_bucket_suffix cqLFzQ\nterraform import module.buckets.aws_s3_bucket.cloudtrail_logging_bucket &quot;ab-xyz-stage-cloudtrail-logging-72a2c5cd&quot;\nterraform import  module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket &quot;ab-xyz-stage-cloudtrail-logging-72a2c5cd&quot;\nterraform import  module.buckets.module.access_logging_bucket.aws_s3_bucket.default &quot;ab-xyz-stage-access-logging-9d8e94ff&quot;\nterraform import  module.buckets.module.access_logging_bucket.random_id.bucket_suffix  nY6U_w\nterraform import module.encryption.module.data_key.aws_iam_policy.decrypt &quot;arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt&quot;\nterraform import module.encryption.module.data_key.aws_iam_policy.encrypt &quot;arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt&quot;\n\n\n\nmymachine:xyz-region-scope kuldeepjain$ ../scripts/terraform.sh xyz-stage plan -no-color\n+ set -o posix\n+ IFS='\n    '\n++ blhome\n+ BASH_LIB_HOME=/usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT\n+ source /usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT/s3/bucket.sh\n+ main xyz-stage plan -no-color\n+ '[' 3 -lt 2 ']'\n+ local env=xyz-stage\n+ shift\n+ local command=plan\n+ shift\n++ get_region xyz-stage\n++ local env=xyz-stage\n++ shift\n+++ aws --profile xyz-stage configure get region\n++ local region=us-west-2\n++ '[' -z us-west-2 ']'\n++ echo us-west-2\n+ local region=us-west-2\n++ _get_bucket xyz-stage xyz-stage-tfstate\n++ local env=xyz-stage\n++ shift\n++ local name=xyz-stage-tfstate\n++ shift\n+++ _get_bucket_list xyz-stage xyz-stage-tfstate\n+++ local env=xyz-stage\n+++ shift\n+++ local name=xyz-stage-tfstate\n+++ shift\n+++ aws --profile xyz-stage --output json s3api list-buckets --query 'Buckets[?contains(Name, `xyz-stage-tfstate`) == `true`].Name'\n++ local 'bucket_list=[\n    &quot;ab-xyz-stage-tfstate-5b8873b8&quot;\n]'\n+++ _count_buckets_in_json '[\n    &quot;ab-xyz-stage-tfstate-5b8873b8&quot;\n]'\n+++ local 'json=[\n    &quot;ab-xyz-stage-tfstate-5b8873b8&quot;\n]'\n+++ shift\n+++ echo '[\n    &quot;ab-xyz-stage-tfstate-5b8873b8&quot;\n]'\n+++ jq '. | length'\n++ local number_of_buckets=1\n++ '[' 1 == 0 ']'\n++ '[' 1 -gt 1 ']'\n+++ echo '[\n    &quot;ab-xyz-stage-tfstate-5b8873b8&quot;\n]'\n+++ jq -r '.[0]'\n++ local bucket_name=ab-xyz-stage-tfstate-5b8873b8\n++ echo ab-xyz-stage-tfstate-5b8873b8\n+ local tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8\n++ get_config_file xyz-stage us-west-2\n++ local env=xyz-stage\n++ shift\n++ local region=us-west-2\n++ shift\n++ local config_file=config/us-west-2/xyz-stage.tfvars\n++ '[' '!' -f config/us-west-2/xyz-stage.tfvars ']'\n++ config_file=config/us-west-2/default.tfvars\n++ echo config/us-west-2/default.tfvars\n+ local config_file=config/us-west-2/default.tfvars\n+ export TF_DATA_DIR=state/xyz-stage/\n+ TF_DATA_DIR=state/xyz-stage/\n+ terraform get\n+ terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color\nRefreshing Terraform state in-memory prior to plan...\nThe refreshed state will be used to calculate this plan, but will not be\npersisted to local or remote state storage.\n\nmodule.encryption.module.data_key.data.null_data_source.key: Refreshing state...\nmodule.buckets.data.template_file.dependencies: Refreshing state...\nmodule.buckets.module.access_logging_bucket.data.template_file.dependencies: Refreshing state...\nmodule.encryption.module.data_key.data.aws_region.current: Refreshing state...\nmodule.buckets.module.access_logging_bucket.data.aws_caller_identity.current: Refreshing state...\ndata.aws_caller_identity.current: Refreshing state...\nmodule.buckets.module.access_logging_bucket.data.aws_kms_alias.encryption_key_alias: Refreshing state...\nmodule.buckets.data.aws_caller_identity.current: Refreshing state...\nmodule.encryption.module.data_key.data.aws_caller_identity.current: Refreshing state...\nmodule.encryption.module.data_key.data.aws_kms_alias.default: Refreshing state...\nmodule.buckets.module.access_logging_bucket.data.template_file.encryption_configuration: Refreshing state...\nmodule.encryption.module.data_key.data.aws_iam_policy_document.decrypt: Refreshing state...\nmodule.encryption.module.data_key.data.aws_iam_policy_document.encrypt: Refreshing state...\nmodule.buckets.module.access_logging_bucket.random_id.bucket_suffix: Refreshing state... [id=nY6U_w]\nmodule.encryption.module.data_key.aws_iam_policy.decrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt]\nmodule.encryption.module.data_key.aws_iam_policy.encrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt]\nmodule.buckets.module.access_logging_bucket.aws_s3_bucket.default: Refreshing state... [id=ab-xyz-stage-access-logging-9d8e94ff]\nmodule.buckets.random_id.cloudtrail_bucket_suffix: Refreshing state... [id=cqLFzQ]\nmodule.buckets.aws_s3_bucket.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd]\nmodule.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail: Refreshing state...\nmodule.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd]\n\n------------------------------------------------------------------------\n\nAn execution plan has been generated and is shown below.\nResource actions are indicated with the following symbols:\n  + create\n-/+ destroy and then create replacement\n &lt;= read (data resources)\n\nTerraform will perform the following actions:\n\n  # module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply\n  # (config refers to values not yet known)\n &lt;= data &quot;aws_iam_policy_document&quot; &quot;restrict_access_cloudtrail&quot;  {\n      + id   = (known after apply)\n      + json = (known after apply)\n\n      + statement {\n          + actions   = [\n              + &quot;s3:GetBucketAcl&quot;,\n            ]\n          + effect    = &quot;Allow&quot;\n          + resources = [\n              + (known after apply),\n            ]\n          + sid       = &quot;AWSCloudTrailAclCheck&quot;\n\n          + principals {\n              + identifiers = [\n                  + &quot;cloudtrail.amazonaws.com&quot;,\n                ]\n              + type        = &quot;Service&quot;\n            }\n        }\n      + statement {\n          + actions   = [\n              + &quot;s3:PutObject&quot;,\n            ]\n          + effect    = &quot;Allow&quot;\n          + resources = [\n              + (known after apply),\n            ]\n          + sid       = &quot;AWSCloudTrailWrite&quot;\n\n          + condition {\n              + test     = &quot;StringEquals&quot;\n              + values   = [\n                  + &quot;bucket-owner-full-control&quot;,\n                ]\n              + variable = &quot;s3:x-amz-acl&quot;\n            }\n\n          + principals {\n              + identifiers = [\n                  + &quot;cloudtrail.amazonaws.com&quot;,\n                ]\n              + type        = &quot;Service&quot;\n            }\n        }\n    }\n\n  # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket must be replaced\n-/+ resource &quot;aws_s3_bucket&quot; &quot;cloudtrail_logging_bucket&quot; {\n      + acceleration_status         = (known after apply)\n      + acl                         = &quot;private&quot;\n      ~ arn                         = &quot;arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd&quot; -&gt; (known after apply)\n      ~ bucket                      = &quot;ab-xyz-stage-cloudtrail-logging-72a2c5cd&quot; -&gt; (known after apply) # forces replacement\n      ~ bucket_domain_name          = &quot;ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com&quot; -&gt; (known after apply)\n      ~ bucket_regional_domain_name = &quot;ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com&quot; -&gt; (known after apply)\n      + force_destroy               = false\n      ~ hosted_zone_id              = &quot;Z3BJ6K6RIION7M&quot; -&gt; (known after apply)\n      ~ id                          = &quot;ab-xyz-stage-cloudtrail-logging-72a2c5cd&quot; -&gt; (known after apply)\n      ~ region                      = &quot;us-west-2&quot; -&gt; (known after apply)\n      ~ request_payer               = &quot;BucketOwner&quot; -&gt; (known after apply)\n        tags                        = {\n            &quot;mycompany:finance:accountenvironment&quot;   = &quot;xyz-stage&quot;\n            &quot;mycompany:finance:application&quot;          = &quot;ab-platform&quot;\n            &quot;mycompany:finance:billablebusinessunit&quot; = &quot;my-dev&quot;\n            &quot;name&quot;                                = &quot;Cloudtrail logging bucket&quot;\n        }\n      + website_domain              = (known after apply)\n      + website_endpoint            = (known after apply)\n\n      ~ lifecycle_rule {\n          - abort_incomplete_multipart_upload_days = 0 -&gt; null\n            enabled                                = true\n          ~ id                                     = &quot;intu-lifecycle-s3-int-tier&quot; -&gt; (known after apply)\n          - tags                                   = {} -&gt; null\n\n            transition {\n                days          = 32\n                storage_class = &quot;INTELLIGENT_TIERING&quot;\n            }\n        }\n\n      - logging {\n          - target_bucket = &quot;ab-xyz-stage-access-logging-9d8e94ff&quot; -&gt; null\n          - target_prefix = &quot;logs/cloudtrail-logging/&quot; -&gt; null\n        }\n      + logging {\n          + target_bucket = (known after apply)\n          + target_prefix = &quot;logs/cloudtrail-logging/&quot;\n        }\n\n      ~ versioning {\n          ~ enabled    = false -&gt; (known after apply)\n          ~ mfa_delete = false -&gt; (known after apply)\n        }\n    }\n\n  # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket must be replaced\n-/+ resource &quot;aws_s3_bucket_policy&quot; &quot;cloudtrail_logging_bucket&quot; {\n      ~ bucket = &quot;ab-xyz-stage-cloudtrail-logging-72a2c5cd&quot; -&gt; (known after apply) # forces replacement\n      ~ id     = &quot;ab-xyz-stage-cloudtrail-logging-72a2c5cd&quot; -&gt; (known after apply)\n      ~ policy = jsonencode(\n            {\n              - Statement = [\n                  - {\n                      - Action    = &quot;s3:GetBucketAcl&quot;\n                      - Effect    = &quot;Allow&quot;\n                      - Principal = {\n                          - Service = &quot;cloudtrail.amazonaws.com&quot;\n                        }\n                      - Resource  = &quot;arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd&quot;\n                      - Sid       = &quot;AWSCloudTrailAclCheck&quot;\n                    },\n                  - {\n                      - Action    = &quot;s3:PutObject&quot;\n                      - Condition = {\n                          - StringEquals = {\n                              - s3:x-amz-acl = &quot;bucket-owner-full-control&quot;\n                            }\n                        }\n                      - Effect    = &quot;Allow&quot;\n                      - Principal = {\n                          - Service = &quot;cloudtrail.amazonaws.com&quot;\n                        }\n                      - Resource  = &quot;arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*&quot;\n                      - Sid       = &quot;AWSCloudTrailWrite&quot;\n                    },\n                ]\n              - Version   = &quot;2012-10-17&quot;\n            }\n        ) -&gt; (known after apply)\n    }\n\n  # module.buckets.random_id.cloudtrail_bucket_suffix must be replaced\n-/+ resource &quot;random_id&quot; &quot;cloudtrail_bucket_suffix&quot; {\n      ~ b64         = &quot;cqLFzQ&quot; -&gt; (known after apply)\n      ~ b64_std     = &quot;cqLFzQ==&quot; -&gt; (known after apply)\n      ~ b64_url     = &quot;cqLFzQ&quot; -&gt; (known after apply)\n        byte_length = 4\n      ~ dec         = &quot;1923270093&quot; -&gt; (known after apply)\n      ~ hex         = &quot;72a2c5cd&quot; -&gt; (known after apply)\n      ~ id          = &quot;cqLFzQ&quot; -&gt; (known after apply)\n      + keepers     = {\n          + &quot;aws_account_id&quot; = &quot;123412341234&quot;\n          + &quot;env&quot;            = &quot;xyz-stage&quot;\n        } # forces replacement\n    }\n\n  # module.buckets.module.access_logging_bucket.aws_s3_bucket.default must be replaced\n-/+ resource &quot;aws_s3_bucket&quot; &quot;default&quot; {\n      + acceleration_status         = (known after apply)\n      + acl                         = &quot;log-delivery-write&quot;\n      ~ arn                         = &quot;arn:aws:s3:::ab-xyz-stage-access-logging-9d8e94ff&quot; -&gt; (known after apply)\n      ~ bucket                      = &quot;ab-xyz-stage-access-logging-9d8e94ff&quot; -&gt; (known after apply) # forces replacement\n      ~ bucket_domain_name          = &quot;ab-xyz-stage-access-logging-9d8e94ff.s3.amazonaws.com&quot; -&gt; (known after apply)\n      ~ bucket_regional_domain_name = &quot;ab-xyz-stage-access-logging-9d8e94ff.s3.us-west-2.amazonaws.com&quot; -&gt; (known after apply)\n      + force_destroy               = false\n      ~ hosted_zone_id              = &quot;Z3BJ6K6RIION7M&quot; -&gt; (known after apply)\n      ~ id                          = &quot;ab-xyz-stage-access-logging-9d8e94ff&quot; -&gt; (known after apply)\n      ~ region                      = &quot;us-west-2&quot; -&gt; (known after apply)\n      ~ request_payer               = &quot;BucketOwner&quot; -&gt; (known after apply)\n        tags                        = {\n            &quot;mycompany:finance:accountenvironment&quot;   = &quot;xyz-stage&quot;\n            &quot;mycompany:finance:application&quot;          = &quot;ab-platform&quot;\n            &quot;mycompany:finance:billablebusinessunit&quot; = &quot;my-dev&quot;\n            &quot;name&quot;                                = &quot;Access logging bucket&quot;\n        }\n      + website_domain              = (known after apply)\n      + website_endpoint            = (known after apply)\n\n      - grant {\n          - permissions = [\n              - &quot;READ_ACP&quot;,\n              - &quot;WRITE&quot;,\n            ] -&gt; null\n          - type        = &quot;Group&quot; -&gt; null\n          - uri         = &quot;http://acs.amazonaws.com/groups/s3/LogDelivery&quot; -&gt; null\n        }\n      - grant {\n          - id          = &quot;0343271a8c2f184152c171b223945b22ceaf5be5c9b78cf167660600747b5ad8&quot; -&gt; null\n          - permissions = [\n              - &quot;FULL_CONTROL&quot;,\n            ] -&gt; null\n          - type        = &quot;CanonicalUser&quot; -&gt; null\n        }\n\n      - lifecycle_rule {\n          - abort_incomplete_multipart_upload_days = 0 -&gt; null\n          - enabled                                = true -&gt; null\n          - id                                     = &quot;intu-lifecycle-s3-int-tier&quot; -&gt; null\n          - tags                                   = {} -&gt; null\n\n          - transition {\n              - days          = 32 -&gt; null\n              - storage_class = &quot;INTELLIGENT_TIERING&quot; -&gt; null\n            }\n        }\n\n      + logging {\n          + target_bucket = (known after apply)\n          + target_prefix = &quot;logs/access-logging/&quot;\n        }\n\n      ~ versioning {\n          ~ enabled    = false -&gt; (known after apply)\n          ~ mfa_delete = false -&gt; (known after apply)\n        }\n    }\n\n  # module.buckets.module.access_logging_bucket.random_id.bucket_suffix must be replaced\n-/+ resource &quot;random_id&quot; &quot;bucket_suffix&quot; {\n      ~ b64         = &quot;nY6U_w&quot; -&gt; (known after apply)\n      ~ b64_std     = &quot;nY6U/w==&quot; -&gt; (known after apply)\n      ~ b64_url     = &quot;nY6U_w&quot; -&gt; (known after apply)\n        byte_length = 4\n      ~ dec         = &quot;2643367167&quot; -&gt; (known after apply)\n      ~ hex         = &quot;9d8e94ff&quot; -&gt; (known after apply)\n      ~ id          = &quot;nY6U_w&quot; -&gt; (known after apply)\n      + keepers     = {\n          + &quot;aws_account_id&quot; = &quot;123412341234&quot;\n          + &quot;env&quot;            = &quot;xyz-stage&quot;\n        } # forces replacement\n    }\n\nPlan: 6 to add, 0 to change, 5 to destroy.\n</code></pre>\n<p>Snippet of Diff of my current remote TF state(<strong>LEFT</strong>) vs old account-scope(<strong>RIGHT</strong>) for <code>cloudtrail_bucket_suffix</code>:</p>\n<p><a href=\"https://i.stack.imgur.com/NvnCx.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/NvnCx.png\" alt=\"Snippet of Diff of my current remote TF state(LEFT) vs old account-scope(RIGHT) for cloudtrail_bucket_suffix\" /></a></p>\n", "OwnerUserId": "948268", "LastEditorUserId": "948268", "LastEditDate": "2020-11-10T17:38:21.033", "LastActivityDate": "2020-11-10T23:01:04.773", "Title": "Terraform (0.12.29) import not working as expected; import succeeded but plan shows destroy & recreate", "Tags": "<amazon-web-services><import><terraform><terraform-provider-aws><terraform0.12+>", "AnswerCount": "1", "CommentCount": "5", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "114507076", "PostId": "64758624", "Score": "0", "Text": "the plan should point you to the reason for the recreation. e.g. which changes force them. can you post the output of the plan?", "CreationDate": "2020-11-10T04:52:48.913", "UserId": "2157547", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "e.g. which changes force them. ", "keywords": ["change"]}]}, {"Id": "114509037", "PostId": "64758624", "Score": "0", "Text": "@mariux, thanks for checking this. I have added Output snippet of my terraform plan. Pls let me know if you need any other details.", "CreationDate": "2020-11-10T07:05:29.390", "UserId": "948268", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "114509087", "PostId": "64758624", "Score": "0", "Text": "So based on your comment, does that mean what I imported (which are the actual resources in aws) has something different from what my terraform scripts represent?", "CreationDate": "2020-11-10T07:08:08.043", "UserId": "948268", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "114509511", "PostId": "64758624", "Score": "0", "Text": "@mariux Also want to mention that I do have some code changes for upgrading TF from version `0.11` to `0.12.29`.", "CreationDate": "2020-11-10T07:30:22.997", "UserId": "948268", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Also want to mention that I do have some code changes for upgrading TF from version `0.11` to `0.12.29`.", "keywords": ["change"]}]}, {"Id": "114520962", "PostId": "64758624", "Score": "0", "Text": "thx for the addition i might have a hint.. see my answer", "CreationDate": "2020-11-10T14:43:22.803", "UserId": "2157547", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "234577066", "PostHistoryTypeId": "2", "PostId": "64758624", "RevisionGUID": "685e1a3c-7589-4552-873b-37744fb84fdc", "CreationDate": "2020-11-09T20:13:48.740", "UserId": "948268", "Text": "**Some Background:**\r\nWe have terraform code to create various AWS resources. Some of these resources are created per AWS account and hence are structured to be stored in a `account-scope` folder in our project. This was when we were only having one AWS region. Now our application is made multi-region and hence these resources are to be created per region for each AWS account.\r\n\r\nIn order to do that we have now moved these TF scripts to `region-scope` folder which will be run per region. Since these resources are no longer part of *'account scope'* we have removed them from the account scope *Terraform state*.\r\nNow when I try to import these resources \r\n\r\n**Imported the resources by running this from `xyz-region-scope` directory:**\r\n\r\n    terraform import -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color <RESOURCE_NAME> <RESOURCE_ID>\r\n\r\nOne of the example of this is:\r\n\r\n    RESOURCE_NAME=module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \r\n    RESOURCE_ID=\"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n\r\nI was expecting the imports would update the resources in the terraform state file on my local machine but the terraform state file created under `xyz-region-scope/state/xyz-stage/terraform.tfstate` is not updated.\r\n\r\n**Verified the Imports with:**\r\n\r\n    terraform show\r\n\r\n\r\n**Run terraform plan:**\r\n\r\n    terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color\r\n\r\nBut the terraform plan output shows `Plan: 6 to add, 0 to change, 5 to destroy.` that is those resources will be destroyed and recreated. \r\n\r\nI am not clear why so, am I missing something and not doing it right?\r\n\r\n\r\nPlease note we store the remote state in S3 bucket but I currently do not have the remote TF state file created in S3 bucket for **region scope** (I do have one for *account scope* though). I was expecting that the `Import..Plan..Apply` process will create one for region scope as well.\r\n\r\nI am using:\r\n\r\n    Terraform v0.12.29\r\n    + provider.aws v3.14.1\r\n    + provider.null v2.1.2\r\n    + provider.random v2.3.1\r\n    + provider.template v2.1.2", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "But the terraform plan output shows `Plan: 6 to add, 0 to change, 5 to destroy.", "keywords": ["change"]}, {"source": "Text", "text": "I am using: Terraform v0.12.29 + provider.aws v3.14.1 + provider.null v2.1.2 + provider.random v2.3.1 + provider.template v2.1.2", "keywords": ["provider"]}]}, {"Id": "234577067", "PostHistoryTypeId": "1", "PostId": "64758624", "RevisionGUID": "685e1a3c-7589-4552-873b-37744fb84fdc", "CreationDate": "2020-11-09T20:13:48.740", "UserId": "948268", "Text": "Terraform (0.12.29) import not working as expected; import succeeded but plan shows destroy & recreate", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "234577068", "PostHistoryTypeId": "3", "PostId": "64758624", "RevisionGUID": "685e1a3c-7589-4552-873b-37744fb84fdc", "CreationDate": "2020-11-09T20:13:48.740", "UserId": "948268", "Text": "<import><terraform><terraform-provider-aws><terraform0.12+>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "234577601", "PostHistoryTypeId": "5", "PostId": "64758624", "RevisionGUID": "08a41a9d-4b4a-4e38-b3f4-6e993d050094", "CreationDate": "2020-11-09T20:22:51.213", "UserId": "948268", "Comment": "Added more details", "Text": "**Some Background:**\r\nWe have terraform code to create various AWS resources. Some of these resources are created per AWS account and hence are structured to be stored in a `account-scope` folder in our project. This was when we were only having one AWS region. Now our application is made multi-region and hence these resources are to be created per region for each AWS account.\r\n\r\nIn order to do that we have now moved these TF scripts to `region-scope` folder which will be run per region. Since these resources are no longer part of *'account scope'* we have removed them from the account scope *Terraform state*.\r\nNow when I try to import these resources \r\n\r\n**Imported the resources by running this from `xyz-region-scope` directory:**\r\n\r\n    terraform import -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color <RESOURCE_NAME> <RESOURCE_ID>\r\n\r\nOne of the example of this is:\r\n\r\n    RESOURCE_NAME=module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \r\n    RESOURCE_ID=\"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n\r\nI was expecting the imports would update the resources in the terraform state file on my local machine but the terraform state file created under `xyz-region-scope/state/xyz-stage/terraform.tfstate` is not updated.\r\n\r\n**Verified the Imports with:**\r\n\r\n    terraform show\r\n\r\n\r\n**Run terraform plan:**\r\n\r\n    terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color\r\n\r\nBut the terraform plan output shows `Plan: 6 to add, 0 to change, 5 to destroy.` that is those resources will be destroyed and recreated. \r\n\r\nI am not clear why so, am I missing something and not doing it right?\r\n\r\n\r\nPlease note we store the remote state in S3 bucket but I currently do not have the remote TF state file created in S3 bucket for **region scope** (I do have one for *account scope* though). I was expecting that the `Import..Plan..Apply` process will create one for region scope as well.\r\n\r\n**EDIT:** I see the remote TF state file created in the S3 for region scope after running imports.\r\n\r\nI am using:\r\n\r\n    Terraform v0.12.29\r\n    + provider.aws v3.14.1\r\n    + provider.null v2.1.2\r\n    + provider.random v2.3.1\r\n    + provider.template v2.1.2", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "But the terraform plan output shows `Plan: 6 to add, 0 to change, 5 to destroy.", "keywords": ["change"]}, {"source": "Text", "text": "I am using: Terraform v0.12.29 + provider.aws v3.14.1 + provider.null v2.1.2 + provider.random v2.3.1 + provider.template v2.1.2", "keywords": ["provider"]}]}, {"Id": "234578297", "PostHistoryTypeId": "5", "PostId": "64758624", "RevisionGUID": "2fd24fcf-5c45-405d-a488-5c596b847085", "CreationDate": "2020-11-09T20:36:13.793", "UserId": "948268", "Comment": "Some correction", "Text": "**Some Background:**\r\nWe have terraform code to create various AWS resources. Some of these resources are created per AWS account and hence are structured to be stored in a `account-scope` folder in our project. This was when we were only having one AWS region. Now our application is made multi-region and hence these resources are to be created per region for each AWS account.\r\n\r\nIn order to do that we have now moved these TF scripts to `region-scope` folder which will be run per region. Since these resources are no longer part of *'account scope'* we have removed them from the account scope *Terraform state*.\r\nNow when I try to import these resources \r\n\r\n**Imported the resources by running this from `xyz-region-scope` directory:**\r\n\r\n    terraform import -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color <RESOURCE_NAME> <RESOURCE_ID>\r\n\r\nOne of the example of this is:\r\n\r\n    RESOURCE_NAME=module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \r\n    RESOURCE_ID=\"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n\r\nI was expecting the imports would update the resources in the terraform state file on my local machine but the terraform state file created under `xyz-region-scope/state/xyz-stage/terraform.tfstate` is not updated.\r\n\r\n**Verified the Imports with:**\r\n\r\n    terraform show\r\n\r\n\r\n**Run terraform plan:**\r\n\r\n    terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color\r\n\r\nBut the terraform plan output shows `Plan: 6 to add, 0 to change, 5 to destroy.` that is those resources will be destroyed and recreated. \r\n\r\nI am not clear why so, am I missing something and not doing it right?\r\n\r\n\r\nPlease note we store the remote state in S3 bucket <s>but I currently do not have the remote TF state file created in S3 bucket for **region scope** (I do have one for *account scope* though). I was expecting that the `Import..Plan..Apply` process will create one for region scope as well.</s>\r\n\r\n**EDIT:** I see the remote TF state file created in the S3 for region scope after running imports. One difference that I see between this new region-scope tf state file from old account-scope one is: the new file does not have any `\"depends_on\"` block under any of the resources `resources[] > instances[]`\r\n\r\nI am using:\r\n\r\n    Terraform v0.12.29\r\n    + provider.aws v3.14.1\r\n    + provider.null v2.1.2\r\n    + provider.random v2.3.1\r\n    + provider.template v2.1.2", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "But the terraform plan output shows `Plan: 6 to add, 0 to change, 5 to destroy.", "keywords": ["change"]}, {"source": "Text", "text": "I am using: Terraform v0.12.29 + provider.aws v3.14.1 + provider.null v2.1.2 + provider.random v2.3.1 + provider.template v2.1.2", "keywords": ["provider"]}]}, {"Id": "234579475", "PostHistoryTypeId": "6", "PostId": "64758624", "RevisionGUID": "e0fa8f3b-d8b0-4b0d-af97-ee35cbac151e", "CreationDate": "2020-11-09T20:59:54.307", "UserId": "948268", "Comment": "edited tags", "Text": "<amazon-web-services><import><terraform><terraform-provider-aws><terraform0.12+>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "234579709", "PostHistoryTypeId": "5", "PostId": "64758624", "RevisionGUID": "5f3a75c9-2331-4dd0-bb9c-30c2d8cba132", "CreationDate": "2020-11-09T21:05:11.080", "UserId": "948268", "Comment": "added env details", "Text": "**Some Background:**\r\nWe have terraform code to create various AWS resources. Some of these resources are created per AWS account and hence are structured to be stored in a `account-scope` folder in our project. This was when we were only having one AWS region. Now our application is made multi-region and hence these resources are to be created per region for each AWS account.\r\n\r\nIn order to do that we have now moved these TF scripts to `region-scope` folder which will be run per region. Since these resources are no longer part of *'account scope'* we have removed them from the account scope *Terraform state*.\r\nNow when I try to import these resources \r\n\r\n**Imported the resources by running this from `xyz-region-scope` directory:**\r\n\r\n    terraform import -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color <RESOURCE_NAME> <RESOURCE_ID>\r\n\r\nOne of the examples of a resource is:\r\n\r\n    RESOURCE_NAME=module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \r\n    RESOURCE_ID=\"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n\r\nI was expecting the imports would update the resources in the terraform state file on my local machine but the terraform state file created under `xyz-region-scope/state/xyz-stage/terraform.tfstate` is not updated.\r\n\r\n**Verified the Imports with:**\r\n\r\n    terraform show\r\n\r\n\r\n**Run terraform plan:**\r\n\r\n    terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color\r\n\r\nBut the terraform plan output shows `Plan: 6 to add, 0 to change, 5 to destroy.` that is those resources will be destroyed and recreated. \r\n\r\nI am not clear why so, am I missing something and not doing it right?\r\n\r\n\r\nPlease note we store the remote state in S3 bucket <s>but I currently do not have the remote TF state file created in S3 bucket for **region scope** (I do have one for *account scope* though). I was expecting that the `Import..Plan..Apply` process will create one for region scope as well.</s>\r\n\r\n**EDIT:** I see the remote TF state file created in the S3 for region scope after running imports. One difference that I see between this new region-scope tf state file from old account-scope one is: the new file does not have any `\"depends_on\"` block under any of the resources `resources[] > instances[]`\r\n\r\n**Environment:**\r\n\r\n    Local machine: macOS v10.14.6\r\n\r\n    Terraform v0.12.29\r\n    + provider.aws v3.14.1\r\n    + provider.null v2.1.2\r\n    + provider.random v2.3.1\r\n    + provider.template v2.1.2\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "But the terraform plan output shows `Plan: 6 to add, 0 to change, 5 to destroy.", "keywords": ["change"]}, {"source": "Text", "text": "**Environment:** Local machine: macOS v10.14.6 Terraform v0.12.29 + provider.aws v3.14.1 + provider.null v2.1.2 + provider.random v2.3.1 + provider.template v2.1.2", "keywords": ["provider"]}]}, {"Id": "234602069", "PostHistoryTypeId": "5", "PostId": "64758624", "RevisionGUID": "7da3ecc4-cd9c-4d4f-bba7-8ae7616cd2f0", "CreationDate": "2020-11-10T07:04:08.113", "UserId": "948268", "Comment": "Added Output snippet of terraform plan", "Text": "**Some Background:**\r\nWe have terraform code to create various AWS resources. Some of these resources are created per AWS account and hence are structured to be stored in a `account-scope` folder in our project. This was when we were only having one AWS region. Now our application is made multi-region and hence these resources are to be created per region for each AWS account.\r\n\r\nIn order to do that we have now moved these TF scripts to `region-scope` folder which will be run per region. Since these resources are no longer part of *'account scope'* we have removed them from the account scope *Terraform state*.\r\nNow when I try to import these resources \r\n\r\n**Imported the resources by running this from `xyz-region-scope` directory:**\r\n\r\n    terraform import -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color <RESOURCE_NAME> <RESOURCE_ID>\r\n\r\nOne of the examples of a resource is:\r\n\r\n    RESOURCE_NAME=module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \r\n    RESOURCE_ID=\"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n\r\nI was expecting the imports would update the resources in the terraform state file on my local machine but the terraform state file created under `xyz-region-scope/state/xyz-stage/terraform.tfstate` is not updated.\r\n\r\n**Verified the Imports with:**\r\n\r\n    terraform show\r\n\r\n\r\n**Run terraform plan:**\r\n\r\n    terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color\r\n\r\nBut the terraform plan output shows `Plan: 6 to add, 0 to change, 5 to destroy.` that is those resources will be destroyed and recreated.\r\n\r\n**Output snippet of terraform plan:**\r\n\r\n      # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket must be replaced\r\n    -/+ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" {\r\n          + acceleration_status         = (known after apply)\r\n          + acl                         = \"private\"\r\n          ~ arn                         = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply)\r\n          ~ bucket                      = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement\r\n          ~ bucket_domain_name          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\" -> (known after apply)\r\n          ~ bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\" -> (known after apply)\r\n          + force_destroy               = false\r\n          ~ hosted_zone_id              = \"Z3BJ6K6RIION7M\" -> (known after apply)\r\n          ~ id                          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply)\r\n          ~ region                      = \"us-west-2\" -> (known after apply)\r\n          ~ request_payer               = \"BucketOwner\" -> (known after apply)\r\n            tags                        = {\r\n                \"intuit:finance:accountenvironment\"   = \"xyz-stage\"\r\n                \"intuit:finance:application\"          = \"ab-platform\"\r\n                \"intuit:finance:billablebusinessunit\" = \"my-dev\"\r\n                \"name\"                                = \"Cloudtrail logging bucket\"\r\n            }\r\n          + website_domain              = (known after apply)\r\n          + website_endpoint            = (known after apply)\r\n    \r\n          ~ lifecycle_rule {\r\n              - abort_incomplete_multipart_upload_days = 0 -> null\r\n                enabled                                = true\r\n              ~ id                                     = \"intu-lifecycle-s3-int-tier\" -> (known after apply)\r\n              - tags                                   = {} -> null\r\n    \r\n                transition {\r\n                    days          = 32\r\n                    storage_class = \"INTELLIGENT_TIERING\"\r\n                }\r\n            }\r\n    \r\n          - logging {\r\n              - target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" -> null\r\n              - target_prefix = \"logs/cloudtrail-logging/\" -> null\r\n            }\r\n          + logging {\r\n              + target_bucket = (known after apply)\r\n              + target_prefix = \"logs/cloudtrail-logging/\"\r\n            }\r\n    \r\n          ~ versioning {\r\n              ~ enabled    = false -> (known after apply)\r\n              ~ mfa_delete = false -> (known after apply)\r\n            }\r\n        }\r\n    \r\n      # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket must be replaced\r\n    -/+ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" {\r\n          ~ bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement\r\n          ~ id     = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply)\r\n          ~ policy = jsonencode(\r\n                {\r\n                  - Statement = [\r\n                      - {\r\n                          - Action    = \"s3:GetBucketAcl\"\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n                          - Sid       = \"AWSCloudTrailAclCheck\"\r\n                        },\r\n                      - {\r\n                          - Action    = \"s3:PutObject\"\r\n                          - Condition = {\r\n                              - StringEquals = {\r\n                                  - s3:x-amz-acl = \"bucket-owner-full-control\"\r\n                                }\r\n                            }\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\"\r\n                          - Sid       = \"AWSCloudTrailWrite\"\r\n                        },\r\n                    ]\r\n                  - Version   = \"2012-10-17\"\r\n                }\r\n            ) -> (known after apply)\r\n        }\r\n    \r\n      # module.buckets.random_id.cloudtrail_bucket_suffix must be replaced\r\n    -/+ resource \"random_id\" \"cloudtrail_bucket_suffix\" {\r\n          ~ b64         = \"cqLFzQ\" -> (known after apply)\r\n          ~ b64_std     = \"cqLFzQ==\" -> (known after apply)\r\n          ~ b64_url     = \"cqLFzQ\" -> (known after apply)\r\n            byte_length = 4\r\n          ~ dec         = \"1923270093\" -> (known after apply)\r\n          ~ hex         = \"72a2c5cd\" -> (known after apply)\r\n          ~ id          = \"cqLFzQ\" -> (known after apply)\r\n          + keepers     = {\r\n              + \"aws_account_id\" = \"123412341234\"\r\n              + \"env\"            = \"xyz-stage\"\r\n            } # forces replacement\r\n        }\r\n\r\n\r\n\r\nI am not clear why so, am I missing something and not doing it right?\r\n\r\n\r\nPlease note we store the remote state in S3 bucket <s>but I currently do not have the remote TF state file created in S3 bucket for **region scope** (I do have one for *account scope* though). I was expecting that the `Import..Plan..Apply` process will create one for region scope as well.</s>\r\n\r\n**EDIT:** I see the remote TF state file created in the S3 for region scope after running imports. One difference that I see between this new region-scope tf state file from old account-scope one is: the new file does not have any `\"depends_on\"` block under any of the resources `resources[] > instances[]`\r\n\r\n**Environment:**\r\n\r\n    Local machine: macOS v10.14.6\r\n\r\n    Terraform v0.12.29\r\n    + provider.aws v3.14.1\r\n    + provider.null v2.1.2\r\n    + provider.random v2.3.1\r\n    + provider.template v2.1.2\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I was expecting the imports would update the resources in the terraform state file on my local machine but the terraform state file created under `xyz-region-scope/state/xyz-stage/terraform.tfstate` is not updated. **Verified the Imports with:** terraform show **Run terraform plan:** terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color But the terraform plan output shows `Plan: 6 to add, 0 to change, 5 to destroy.", "keywords": ["change"]}, {"source": "Text", "text": "**Output snippet of terraform plan:** # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket must be replaced -/+ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" { + acceleration_status = (known after apply) + acl = \"private\" ~ arn = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) ~ bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement ~ bucket_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\" -> (known after apply) ~ bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\" -> (known after apply) + force_destroy = false ~ hosted_zone_id = \"Z3BJ6K6RIION7M\" -> (known after apply) ~ id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) ~ region = \"us-west-2\" -> (known after apply) ~ request_payer = \"BucketOwner\" -> (known after apply) tags = { \"intuit:finance:accountenvironment\" = \"xyz-stage\" \"intuit:finance:application\" = \"ab-platform\" \"intuit:finance:billablebusinessunit\" = \"my-dev\" \"name\" = \"Cloudtrail logging bucket\" } + website_domain = (known after apply) + website_endpoint = (known after apply) ~ lifecycle_rule { - abort_incomplete_multipart_upload_days = 0 -> null enabled = true ~ id = \"intu-lifecycle-s3-int-tier\" -> (known after apply) - tags = {} -> null transition { days = 32 storage_class = \"INTELLIGENT_TIERING\" } } - logging { - target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" -> null - target_prefix = \"logs/cloudtrail-logging/\" -> null } + logging { + target_bucket = (known after apply) + target_prefix = \"logs/cloudtrail-logging/\" } ~ versioning { ~ enabled = false -> (known after apply) ~ mfa_delete = false -> (known after apply) } } # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket must be replaced -/+ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" { ~ bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement ~ id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) ~ policy = jsonencode( { - Statement = [ - { - Action = \"s3:GetBucketAcl\" - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" - Sid = \"AWSCloudTrailAclCheck\" }, - { - Action = \"s3:PutObject\" - Condition = { - StringEquals = { - s3:x-amz-acl = \"bucket-owner-full-control\" } } - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\" - Sid = \"AWSCloudTrailWrite\" }, ] - Version = \"2012-10-17\" } ) -> (known after apply) } # module.buckets.random_id.cloudtrail_bucket_suffix must be replaced -/+ resource \"random_id\" \"cloudtrail_bucket_suffix\" { ~ b64 = \"cqLFzQ\" -> (known after apply) ~ b64_std = \"cqLFzQ==\" -> (known after apply) ~ b64_url = \"cqLFzQ\" -> (known after apply) byte_length = 4 ~ dec = \"1923270093\" -> (known after apply) ~ hex = \"72a2c5cd\" -> (known after apply) ~ id = \"cqLFzQ\" -> (known after apply) + keepers = { + \"aws_account_id\" = \"123412341234\" + \"env\" = \"xyz-stage\" } # forces replacement } I am not clear why so, am I missing something and not doing it right? ", "keywords": ["bill", "policy"]}, {"source": "Text", "text": "**Environment:** Local machine: macOS v10.14.6 Terraform v0.12.29 + provider.aws v3.14.1 + provider.null v2.1.2 + provider.random v2.3.1 + provider.template v2.1.2", "keywords": ["provider"]}]}, {"Id": "234639878", "PostHistoryTypeId": "5", "PostId": "64758624", "RevisionGUID": "fd657007-d8a5-4888-9406-d1532a29ed6e", "CreationDate": "2020-11-10T16:49:20.093", "UserId": "948268", "Comment": "Added full output for details", "Text": "**Some Background:**\r\nWe have terraform code to create various AWS resources. Some of these resources are created per AWS account and hence are structured to be stored in a `account-scope` folder in our project. This was when we were only having one AWS region. Now our application is made multi-region and hence these resources are to be created per region for each AWS account.\r\n\r\nIn order to do that we have now moved these TF scripts to `region-scope` folder which will be run per region. Since these resources are no longer part of *'account scope'* we have removed them from the account scope *Terraform state*.\r\nNow when I try to import these resources \r\n\r\n**Imported the resources by running this from `xyz-region-scope` directory:**\r\n\r\n    terraform import -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color <RESOURCE_NAME> <RESOURCE_ID>\r\n\r\nOne of the examples of a resource is:\r\n\r\n    RESOURCE_NAME=module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \r\n    RESOURCE_ID=\"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n\r\nI was expecting the imports would update the resources in the terraform state file on my local machine but the terraform state file created under `xyz-region-scope/state/xyz-stage/terraform.tfstate` is not updated.\r\n\r\n**Verified the Imports with:**\r\n\r\n    terraform show\r\n\r\n\r\n**Run terraform plan:**\r\n\r\n    terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color\r\n\r\nBut the terraform plan output shows `Plan: 6 to add, 0 to change, 5 to destroy.` that is those resources will be destroyed and recreated.\r\n\r\n**Output snippet of terraform plan:**\r\n\r\n      # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket must be replaced\r\n    -/+ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" {\r\n          + acceleration_status         = (known after apply)\r\n          + acl                         = \"private\"\r\n          ~ arn                         = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply)\r\n          ~ bucket                      = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement\r\n          ~ bucket_domain_name          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\" -> (known after apply)\r\n          ~ bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\" -> (known after apply)\r\n          + force_destroy               = false\r\n          ~ hosted_zone_id              = \"Z3BJ6K6RIION7M\" -> (known after apply)\r\n          ~ id                          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply)\r\n          ~ region                      = \"us-west-2\" -> (known after apply)\r\n          ~ request_payer               = \"BucketOwner\" -> (known after apply)\r\n            tags                        = {\r\n                \"intuit:finance:accountenvironment\"   = \"xyz-stage\"\r\n                \"intuit:finance:application\"          = \"ab-platform\"\r\n                \"intuit:finance:billablebusinessunit\" = \"my-dev\"\r\n                \"name\"                                = \"Cloudtrail logging bucket\"\r\n            }\r\n          + website_domain              = (known after apply)\r\n          + website_endpoint            = (known after apply)\r\n    \r\n          ~ lifecycle_rule {\r\n              - abort_incomplete_multipart_upload_days = 0 -> null\r\n                enabled                                = true\r\n              ~ id                                     = \"intu-lifecycle-s3-int-tier\" -> (known after apply)\r\n              - tags                                   = {} -> null\r\n    \r\n                transition {\r\n                    days          = 32\r\n                    storage_class = \"INTELLIGENT_TIERING\"\r\n                }\r\n            }\r\n    \r\n          - logging {\r\n              - target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" -> null\r\n              - target_prefix = \"logs/cloudtrail-logging/\" -> null\r\n            }\r\n          + logging {\r\n              + target_bucket = (known after apply)\r\n              + target_prefix = \"logs/cloudtrail-logging/\"\r\n            }\r\n    \r\n          ~ versioning {\r\n              ~ enabled    = false -> (known after apply)\r\n              ~ mfa_delete = false -> (known after apply)\r\n            }\r\n        }\r\n    \r\n      # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket must be replaced\r\n    -/+ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" {\r\n          ~ bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement\r\n          ~ id     = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply)\r\n          ~ policy = jsonencode(\r\n                {\r\n                  - Statement = [\r\n                      - {\r\n                          - Action    = \"s3:GetBucketAcl\"\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n                          - Sid       = \"AWSCloudTrailAclCheck\"\r\n                        },\r\n                      - {\r\n                          - Action    = \"s3:PutObject\"\r\n                          - Condition = {\r\n                              - StringEquals = {\r\n                                  - s3:x-amz-acl = \"bucket-owner-full-control\"\r\n                                }\r\n                            }\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\"\r\n                          - Sid       = \"AWSCloudTrailWrite\"\r\n                        },\r\n                    ]\r\n                  - Version   = \"2012-10-17\"\r\n                }\r\n            ) -> (known after apply)\r\n        }\r\n    \r\n      # module.buckets.random_id.cloudtrail_bucket_suffix must be replaced\r\n    -/+ resource \"random_id\" \"cloudtrail_bucket_suffix\" {\r\n          ~ b64         = \"cqLFzQ\" -> (known after apply)\r\n          ~ b64_std     = \"cqLFzQ==\" -> (known after apply)\r\n          ~ b64_url     = \"cqLFzQ\" -> (known after apply)\r\n            byte_length = 4\r\n          ~ dec         = \"1923270093\" -> (known after apply)\r\n          ~ hex         = \"72a2c5cd\" -> (known after apply)\r\n          ~ id          = \"cqLFzQ\" -> (known after apply)\r\n          + keepers     = {\r\n              + \"aws_account_id\" = \"123412341234\"\r\n              + \"env\"            = \"xyz-stage\"\r\n            } # forces replacement\r\n        }\r\n\r\n\r\n\r\nI am not clear why so, am I missing something and not doing it right?\r\n\r\n\r\nPlease note we store the remote state in S3 bucket <s>but I currently do not have the remote TF state file created in S3 bucket for **region scope** (I do have one for *account scope* though). I was expecting that the `Import..Plan..Apply` process will create one for region scope as well.</s>\r\n\r\n**EDIT:** I see the remote TF state file created in the S3 for region scope after running imports. One difference that I see between this new region-scope tf state file from old account-scope one is: the new file does not have any `\"depends_on\"` block under any of the resources `resources[] > instances[]`\r\n\r\n**Environment:**\r\n\r\n    Local machine: macOS v10.14.6\r\n\r\n    Terraform v0.12.29\r\n    + provider.aws v3.14.1\r\n    + provider.null v2.1.2\r\n    + provider.random v2.3.1\r\n    + provider.template v2.1.2\r\n\r\n\r\n----------\r\n\r\n\r\n----------\r\n**EDIT 2:**\r\n\r\n**Here are my Imports and terraform plan:**\r\n\r\n    terraform import module.buckets.random_id.cloudtrail_bucket_suffix cqLFzQ\r\n    terraform import module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n    terraform import  module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n    terraform import  module.buckets.module.access_logging_bucket.aws_s3_bucket.default \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n    terraform import  module.buckets.module.access_logging_bucket.random_id.bucket_suffix  nY6U_w\r\n    terraform import module.encryption.module.data_key.aws_iam_policy.decrypt \"arn:aws:iam::123412341234:policy/ab_data_key_mxs_stage_decrypt\"\r\n    terraform import module.encryption.module.data_key.aws_iam_policy.encrypt \"arn:aws:iam::123412341234:policy/ab_data_key_mxs_stage_encrypt\"\r\n\r\n\r\n\r\n    mymachine:xyz-region-scope kuldeepjain$ ../scripts/terraform.sh xyz-stage plan -no-color\r\n    + set -o posix\r\n    + IFS='\r\n     '\r\n    ++ blhome\r\n    + BASH_LIB_HOME=/usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT\r\n    + source /usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT/s3/bucket.sh\r\n    + main xyz-stage plan -no-color\r\n    + '[' 3 -lt 2 ']'\r\n    + local env=xyz-stage\r\n    + shift\r\n    + local command=plan\r\n    + shift\r\n    ++ get_region xyz-stage\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    +++ aws --profile xyz-stage configure get region\r\n    ++ local region=us-west-2\r\n    ++ '[' -z us-west-2 ']'\r\n    ++ echo us-west-2\r\n    + local region=us-west-2\r\n    ++ _get_bucket xyz-stage xyz-stage-tfstate\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    ++ local name=xyz-stage-tfstate\r\n    ++ shift\r\n    +++ _get_bucket_list xyz-stage xyz-stage-tfstate\r\n    +++ local env=xyz-stage\r\n    +++ shift\r\n    +++ local name=xyz-stage-tfstate\r\n    +++ shift\r\n    +++ aws --profile xyz-stage --output json s3api list-buckets --query 'Buckets[?contains(Name, `xyz-stage-tfstate`) == `true`].Name'\r\n    ++ local 'bucket_list=[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ _count_buckets_in_json '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ local 'json=[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ shift\r\n    +++ echo '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ jq '. | length'\r\n    ++ local number_of_buckets=1\r\n    ++ '[' 1 == 0 ']'\r\n    ++ '[' 1 -gt 1 ']'\r\n    +++ echo '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ jq -r '.[0]'\r\n    ++ local bucket_name=ab-xyz-stage-tfstate-5b8873b8\r\n    ++ echo ab-xyz-stage-tfstate-5b8873b8\r\n    + local tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8\r\n    ++ get_config_file xyz-stage us-west-2\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    ++ local region=us-west-2\r\n    ++ shift\r\n    ++ local config_file=config/us-west-2/xyz-stage.tfvars\r\n    ++ '[' '!' -f config/us-west-2/xyz-stage.tfvars ']'\r\n    ++ config_file=config/us-west-2/default.tfvars\r\n    ++ echo config/us-west-2/default.tfvars\r\n    + local config_file=config/us-west-2/default.tfvars\r\n    + export TF_DATA_DIR=state/xyz-stage/\r\n    + TF_DATA_DIR=state/xyz-stage/\r\n    + terraform get\r\n    + terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color\r\n    Refreshing Terraform state in-memory prior to plan...\r\n    The refreshed state will be used to calculate this plan, but will not be\r\n    persisted to local or remote state storage.\r\n    \r\n    module.encryption.module.data_key.data.null_data_source.key: Refreshing state...\r\n    module.buckets.data.template_file.dependencies: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.template_file.dependencies: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_region.current: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.aws_caller_identity.current: Refreshing state...\r\n    data.aws_caller_identity.current: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.aws_kms_alias.encryption_key_alias: Refreshing state...\r\n    module.buckets.data.aws_caller_identity.current: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_caller_identity.current: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_kms_alias.default: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.template_file.encryption_configuration: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_iam_policy_document.decrypt: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_iam_policy_document.encrypt: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.random_id.bucket_suffix: Refreshing state... [id=nY6U_w]\r\n    module.encryption.module.data_key.aws_iam_policy.decrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt]\r\n    module.encryption.module.data_key.aws_iam_policy.encrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt]\r\n    module.buckets.module.access_logging_bucket.aws_s3_bucket.default: Refreshing state... [id=ab-xyz-stage-access-logging-9d8e94ff]\r\n    module.buckets.random_id.cloudtrail_bucket_suffix: Refreshing state... [id=cqLFzQ]\r\n    module.buckets.aws_s3_bucket.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd]\r\n    module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail: Refreshing state...\r\n    module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd]\r\n    \r\n    ------------------------------------------------------------------------\r\n    \r\n    An execution plan has been generated and is shown below.\r\n    Resource actions are indicated with the following symbols:\r\n      + create\r\n    -/+ destroy and then create replacement\r\n     <= read (data resources)\r\n    \r\n    Terraform will perform the following actions:\r\n    \r\n      # module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply\r\n      # (config refers to values not yet known)\r\n     <= data \"aws_iam_policy_document\" \"restrict_access_cloudtrail\"  {\r\n          + id   = (known after apply)\r\n          + json = (known after apply)\r\n    \r\n          + statement {\r\n              + actions   = [\r\n                  + \"s3:GetBucketAcl\",\r\n                ]\r\n              + effect    = \"Allow\"\r\n              + resources = [\r\n                  + (known after apply),\r\n                ]\r\n              + sid       = \"AWSCloudTrailAclCheck\"\r\n    \r\n              + principals {\r\n                  + identifiers = [\r\n                      + \"cloudtrail.amazonaws.com\",\r\n                    ]\r\n                  + type        = \"Service\"\r\n                }\r\n            }\r\n          + statement {\r\n              + actions   = [\r\n                  + \"s3:PutObject\",\r\n                ]\r\n              + effect    = \"Allow\"\r\n              + resources = [\r\n                  + (known after apply),\r\n                ]\r\n              + sid       = \"AWSCloudTrailWrite\"\r\n    \r\n              + condition {\r\n                  + test     = \"StringEquals\"\r\n                  + values   = [\r\n                      + \"bucket-owner-full-control\",\r\n                    ]\r\n                  + variable = \"s3:x-amz-acl\"\r\n                }\r\n    \r\n              + principals {\r\n                  + identifiers = [\r\n                      + \"cloudtrail.amazonaws.com\",\r\n                    ]\r\n                  + type        = \"Service\"\r\n                }\r\n            }\r\n        }\r\n    \r\n      # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket must be replaced\r\n    -/+ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" {\r\n          + acceleration_status         = (known after apply)\r\n          + acl                         = \"private\"\r\n          ~ arn                         = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply)\r\n          ~ bucket                      = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement\r\n          ~ bucket_domain_name          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\" -> (known after apply)\r\n          ~ bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\" -> (known after apply)\r\n          + force_destroy               = false\r\n          ~ hosted_zone_id              = \"Z3BJ6K6RIION7M\" -> (known after apply)\r\n          ~ id                          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply)\r\n          ~ region                      = \"us-west-2\" -> (known after apply)\r\n          ~ request_payer               = \"BucketOwner\" -> (known after apply)\r\n            tags                        = {\r\n                \"mycompany:finance:accountenvironment\"   = \"xyz-stage\"\r\n                \"mycompany:finance:application\"          = \"ab-platform\"\r\n                \"mycompany:finance:billablebusinessunit\" = \"cto-dev\"\r\n                \"name\"                                = \"Cloudtrail logging bucket\"\r\n            }\r\n          + website_domain              = (known after apply)\r\n          + website_endpoint            = (known after apply)\r\n    \r\n          ~ lifecycle_rule {\r\n              - abort_incomplete_multipart_upload_days = 0 -> null\r\n                enabled                                = true\r\n              ~ id                                     = \"intu-lifecycle-s3-int-tier\" -> (known after apply)\r\n              - tags                                   = {} -> null\r\n    \r\n                transition {\r\n                    days          = 32\r\n                    storage_class = \"INTELLIGENT_TIERING\"\r\n                }\r\n            }\r\n    \r\n          - logging {\r\n              - target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" -> null\r\n              - target_prefix = \"logs/cloudtrail-logging/\" -> null\r\n            }\r\n          + logging {\r\n              + target_bucket = (known after apply)\r\n              + target_prefix = \"logs/cloudtrail-logging/\"\r\n            }\r\n    \r\n          ~ versioning {\r\n              ~ enabled    = false -> (known after apply)\r\n              ~ mfa_delete = false -> (known after apply)\r\n            }\r\n        }\r\n    \r\n      # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket must be replaced\r\n    -/+ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" {\r\n          ~ bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement\r\n          ~ id     = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply)\r\n          ~ policy = jsonencode(\r\n                {\r\n                  - Statement = [\r\n                      - {\r\n                          - Action    = \"s3:GetBucketAcl\"\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n                          - Sid       = \"AWSCloudTrailAclCheck\"\r\n                        },\r\n                      - {\r\n                          - Action    = \"s3:PutObject\"\r\n                          - Condition = {\r\n                              - StringEquals = {\r\n                                  - s3:x-amz-acl = \"bucket-owner-full-control\"\r\n                                }\r\n                            }\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\"\r\n                          - Sid       = \"AWSCloudTrailWrite\"\r\n                        },\r\n                    ]\r\n                  - Version   = \"2012-10-17\"\r\n                }\r\n            ) -> (known after apply)\r\n        }\r\n    \r\n      # module.buckets.random_id.cloudtrail_bucket_suffix must be replaced\r\n    -/+ resource \"random_id\" \"cloudtrail_bucket_suffix\" {\r\n          ~ b64         = \"cqLFzQ\" -> (known after apply)\r\n          ~ b64_std     = \"cqLFzQ==\" -> (known after apply)\r\n          ~ b64_url     = \"cqLFzQ\" -> (known after apply)\r\n            byte_length = 4\r\n          ~ dec         = \"1923270093\" -> (known after apply)\r\n          ~ hex         = \"72a2c5cd\" -> (known after apply)\r\n          ~ id          = \"cqLFzQ\" -> (known after apply)\r\n          + keepers     = {\r\n              + \"aws_account_id\" = \"123412341234\"\r\n              + \"env\"            = \"xyz-stage\"\r\n            } # forces replacement\r\n        }\r\n    \r\n      # module.buckets.module.access_logging_bucket.aws_s3_bucket.default must be replaced\r\n    -/+ resource \"aws_s3_bucket\" \"default\" {\r\n          + acceleration_status         = (known after apply)\r\n          + acl                         = \"log-delivery-write\"\r\n          ~ arn                         = \"arn:aws:s3:::ab-xyz-stage-access-logging-9d8e94ff\" -> (known after apply)\r\n          ~ bucket                      = \"ab-xyz-stage-access-logging-9d8e94ff\" -> (known after apply) # forces replacement\r\n          ~ bucket_domain_name          = \"ab-xyz-stage-access-logging-9d8e94ff.s3.amazonaws.com\" -> (known after apply)\r\n          ~ bucket_regional_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.us-west-2.amazonaws.com\" -> (known after apply)\r\n          + force_destroy               = false\r\n          ~ hosted_zone_id              = \"Z3BJ6K6RIION7M\" -> (known after apply)\r\n          ~ id                          = \"ab-xyz-stage-access-logging-9d8e94ff\" -> (known after apply)\r\n          ~ region                      = \"us-west-2\" -> (known after apply)\r\n          ~ request_payer               = \"BucketOwner\" -> (known after apply)\r\n            tags                        = {\r\n                \"mycompany:finance:accountenvironment\"   = \"xyz-stage\"\r\n                \"mycompany:finance:application\"          = \"ab-platform\"\r\n                \"mycompany:finance:billablebusinessunit\" = \"my-dev\"\r\n                \"name\"                                = \"Access logging bucket\"\r\n            }\r\n          + website_domain              = (known after apply)\r\n          + website_endpoint            = (known after apply)\r\n    \r\n          - grant {\r\n              - permissions = [\r\n                  - \"READ_ACP\",\r\n                  - \"WRITE\",\r\n                ] -> null\r\n              - type        = \"Group\" -> null\r\n              - uri         = \"http://acs.amazonaws.com/groups/s3/LogDelivery\" -> null\r\n            }\r\n          - grant {\r\n              - id          = \"0343271a8c2f184152c171b223945b22ceaf5be5c9b78cf167660600747b5ad8\" -> null\r\n              - permissions = [\r\n                  - \"FULL_CONTROL\",\r\n                ] -> null\r\n              - type        = \"CanonicalUser\" -> null\r\n            }\r\n    \r\n          - lifecycle_rule {\r\n              - abort_incomplete_multipart_upload_days = 0 -> null\r\n              - enabled                                = true -> null\r\n              - id                                     = \"intu-lifecycle-s3-int-tier\" -> null\r\n              - tags                                   = {} -> null\r\n    \r\n              - transition {\r\n                  - days          = 32 -> null\r\n                  - storage_class = \"INTELLIGENT_TIERING\" -> null\r\n                }\r\n            }\r\n    \r\n          + logging {\r\n              + target_bucket = (known after apply)\r\n              + target_prefix = \"logs/access-logging/\"\r\n            }\r\n    \r\n          ~ versioning {\r\n              ~ enabled    = false -> (known after apply)\r\n              ~ mfa_delete = false -> (known after apply)\r\n            }\r\n        }\r\n    \r\n      # module.buckets.module.access_logging_bucket.random_id.bucket_suffix must be replaced\r\n    -/+ resource \"random_id\" \"bucket_suffix\" {\r\n          ~ b64         = \"nY6U_w\" -> (known after apply)\r\n          ~ b64_std     = \"nY6U/w==\" -> (known after apply)\r\n          ~ b64_url     = \"nY6U_w\" -> (known after apply)\r\n            byte_length = 4\r\n          ~ dec         = \"2643367167\" -> (known after apply)\r\n          ~ hex         = \"9d8e94ff\" -> (known after apply)\r\n          ~ id          = \"nY6U_w\" -> (known after apply)\r\n          + keepers     = {\r\n              + \"aws_account_id\" = \"123412341234\"\r\n              + \"env\"            = \"xyz-stage\"\r\n            } # forces replacement\r\n        }\r\n    \r\n    Plan: 6 to add, 0 to change, 5 to destroy.\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I was expecting the imports would update the resources in the terraform state file on my local machine but the terraform state file created under `xyz-region-scope/state/xyz-stage/terraform.tfstate` is not updated. **Verified the Imports with:** terraform show **Run terraform plan:** terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color But the terraform plan output shows `Plan: 6 to add, 0 to change, 5 to destroy.", "keywords": ["change"]}, {"source": "Text", "text": "**Output snippet of terraform plan:** # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket must be replaced -/+ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" { + acceleration_status = (known after apply) + acl = \"private\" ~ arn = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) ~ bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement ~ bucket_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\" -> (known after apply) ~ bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\" -> (known after apply) + force_destroy = false ~ hosted_zone_id = \"Z3BJ6K6RIION7M\" -> (known after apply) ~ id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) ~ region = \"us-west-2\" -> (known after apply) ~ request_payer = \"BucketOwner\" -> (known after apply) tags = { \"intuit:finance:accountenvironment\" = \"xyz-stage\" \"intuit:finance:application\" = \"ab-platform\" \"intuit:finance:billablebusinessunit\" = \"my-dev\" \"name\" = \"Cloudtrail logging bucket\" } + website_domain = (known after apply) + website_endpoint = (known after apply) ~ lifecycle_rule { - abort_incomplete_multipart_upload_days = 0 -> null enabled = true ~ id = \"intu-lifecycle-s3-int-tier\" -> (known after apply) - tags = {} -> null transition { days = 32 storage_class = \"INTELLIGENT_TIERING\" } } - logging { - target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" -> null - target_prefix = \"logs/cloudtrail-logging/\" -> null } + logging { + target_bucket = (known after apply) + target_prefix = \"logs/cloudtrail-logging/\" } ~ versioning { ~ enabled = false -> (known after apply) ~ mfa_delete = false -> (known after apply) } } # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket must be replaced -/+ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" { ~ bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement ~ id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) ~ policy = jsonencode( { - Statement = [ - { - Action = \"s3:GetBucketAcl\" - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" - Sid = \"AWSCloudTrailAclCheck\" }, - { - Action = \"s3:PutObject\" - Condition = { - StringEquals = { - s3:x-amz-acl = \"bucket-owner-full-control\" } } - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\" - Sid = \"AWSCloudTrailWrite\" }, ] - Version = \"2012-10-17\" } ) -> (known after apply) } # module.buckets.random_id.cloudtrail_bucket_suffix must be replaced -/+ resource \"random_id\" \"cloudtrail_bucket_suffix\" { ~ b64 = \"cqLFzQ\" -> (known after apply) ~ b64_std = \"cqLFzQ==\" -> (known after apply) ~ b64_url = \"cqLFzQ\" -> (known after apply) byte_length = 4 ~ dec = \"1923270093\" -> (known after apply) ~ hex = \"72a2c5cd\" -> (known after apply) ~ id = \"cqLFzQ\" -> (known after apply) + keepers = { + \"aws_account_id\" = \"123412341234\" + \"env\" = \"xyz-stage\" } # forces replacement } I am not clear why so, am I missing something and not doing it right? ", "keywords": ["bill", "policy"]}, {"source": "Text", "text": "One difference that I see between this new region-scope tf state file from old account-scope one is: the new file does not have any `\"depends_on\"` block under any of the resources `resources[] > instances[]` **Environment:** Local machine: macOS v10.14.6 Terraform v0.12.29 + provider.aws v3.14.1 + provider.null v2.1.2 + provider.random v2.3.1 + provider.template v2.1.2 ---------- ---------- **EDIT 2:** **Here are my Imports and terraform plan:** terraform import module.buckets.random_id.cloudtrail_bucket_suffix cqLFzQ terraform import module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" terraform import module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" terraform import module.buckets.module.access_logging_bucket.aws_s3_bucket.default \"ab-xyz-stage-access-logging-9d8e94ff\" terraform import module.buckets.module.access_logging_bucket.random_id.bucket_suffix nY6U_w terraform import module.encryption.module.data_key.aws_iam_policy.decrypt \"arn:aws:iam::123412341234:policy/ab_data_key_mxs_stage_decrypt\" terraform import module.encryption.module.data_key.aws_iam_policy.encrypt \"arn:aws:iam::123412341234:policy/ab_data_key_mxs_stage_encrypt\" mymachine:xyz-region-scope kuldeepjain$ ../scripts/terraform.sh xyz-stage plan -no-color + set -o posix + IFS=' ' ++ blhome + BASH_LIB_HOME=/usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT + source /usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT/s3/bucket.sh + main xyz-stage plan -no-color + '[' 3 -lt 2 ']' + local env=xyz-stage + shift + local command=plan + shift ++ get_region xyz-stage ++ local env=xyz-stage ++ shift +++ aws --profile xyz-stage configure get region ++ local region=us-west-2 ++ '[' -z us-west-2 ']' ++ echo us-west-2 + local region=us-west-2 ++ _get_bucket xyz-stage xyz-stage-tfstate ++ local env=xyz-stage ++ shift ++ local name=xyz-stage-tfstate ++ shift +++ _get_bucket_list xyz-stage xyz-stage-tfstate +++ local env=xyz-stage +++ shift +++ local name=xyz-stage-tfstate +++ shift +++ aws --profile xyz-stage --output json s3api list-buckets --query 'Buckets[?contains(Name, `xyz-stage-tfstate`) == `true`].Name' ++ local 'bucket_list=[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ _count_buckets_in_json '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ local 'json=[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ shift +++ echo '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ jq '. | length' ++ local number_of_buckets=1 ++ '[' 1 == 0 ']' ++ '[' 1 -gt 1 ']' +++ echo '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ jq -r '.[0]' ++ local bucket_name=ab-xyz-stage-tfstate-5b8873b8 ++ echo ab-xyz-stage-tfstate-5b8873b8 + local tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 ++ get_config_file xyz-stage us-west-2 ++ local env=xyz-stage ++ shift ++ local region=us-west-2 ++ shift ++ local config_file=config/us-west-2/xyz-stage.tfvars ++ '[' '!' -f config/us-west-2/xyz-stage.tfvars ']' ++ config_file=config/us-west-2/default.tfvars ++ echo config/us-west-2/default.tfvars + local config_file=config/us-west-2/default.tfvars + export TF_DATA_DIR=state/xyz-stage/ + TF_DATA_DIR=state/xyz-stage/ + terraform get + terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color Refreshing Terraform state in-memory prior to plan... ", "keywords": ["provider", "policy"]}, {"source": "Text", "text": "The refreshed state will be used to calculate this plan, but will not be persisted to local or remote state storage. module.encryption.module.data_key.data.null_data_source.key: Refreshing state... module.buckets.data.template_file.dependencies: Refreshing state... module.buckets.module.access_logging_bucket.data.template_file.dependencies: Refreshing state... module.encryption.module.data_key.data.aws_region.current: Refreshing state... module.buckets.module.access_logging_bucket.data.aws_caller_identity.current: Refreshing state... data.aws_caller_identity.current: Refreshing state... module.buckets.module.access_logging_bucket.data.aws_kms_alias.encryption_key_alias: Refreshing state... module.buckets.data.aws_caller_identity.current: Refreshing state... module.encryption.module.data_key.data.aws_caller_identity.current: Refreshing state... module.encryption.module.data_key.data.aws_kms_alias.default: Refreshing state... module.buckets.module.access_logging_bucket.data.template_file.encryption_configuration: Refreshing state... module.encryption.module.data_key.data.aws_iam_policy_document.decrypt: Refreshing state... module.encryption.module.data_key.data.aws_iam_policy_document.encrypt: Refreshing state... module.buckets.module.access_logging_bucket.random_id.bucket_suffix: Refreshing state... [id=nY6U_w] module.encryption.module.data_key.aws_iam_policy.decrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt] module.encryption.module.data_key.aws_iam_policy.encrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt] module.buckets.module.access_logging_bucket.aws_s3_bucket.default: Refreshing state... [id=ab-xyz-stage-access-logging-9d8e94ff] module.buckets.random_id.cloudtrail_bucket_suffix: Refreshing state... [id=cqLFzQ] module.buckets.aws_s3_bucket.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd] module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail: Refreshing state... module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd] ------------------------------------------------------------------------ ", "keywords": ["storage", "policy"]}, {"source": "Text", "text": "Resource actions are indicated with the following symbols: + create -/+ destroy and then create replacement <= read (data resources) Terraform will perform the following actions: # module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply # (config refers to values not yet known) <= data \"aws_iam_policy_document\" \"restrict_access_cloudtrail\" { + id = (known after apply) + json = (known after apply) + statement { + actions = [ + \"s3:GetBucketAcl\", ] + effect = \"Allow\" + resources = [ + (known after apply), ] + sid = \"AWSCloudTrailAclCheck\" + principals { + identifiers = [ + \"cloudtrail.amazonaws.com\", ] + type = \"Service\" } } + statement { + actions = [ + \"s3:PutObject\", ] + effect = \"Allow\" + resources = [ + (known after apply), ] + sid = \"AWSCloudTrailWrite\" + condition { + test = \"StringEquals\" + values = [ + \"bucket-owner-full-control\", ] + variable = \"s3:x-amz-acl\" } + principals { + identifiers = [ + \"cloudtrail.amazonaws.com\", ] + type = \"Service\" } } } # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket must be replaced -/+ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" { + acceleration_status = (known after apply) + acl = \"private\" ~ arn = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) ~ bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement ~ bucket_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\" -> (known after apply) ~ bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\" -> (known after apply) + force_destroy = false ~ hosted_zone_id = \"Z3BJ6K6RIION7M\" -> (known after apply) ~ id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) ~ region = \"us-west-2\" -> (known after apply) ~ request_payer = \"BucketOwner\" -> (known after apply) tags = { \"mycompany:finance:accountenvironment\" = \"xyz-stage\" \"mycompany:finance:application\" = \"ab-platform\" \"mycompany:finance:billablebusinessunit\" = \"cto-dev\" \"name\" = \"Cloudtrail logging bucket\" } + website_domain = (known after apply) + website_endpoint = (known after apply) ~ lifecycle_rule { - abort_incomplete_multipart_upload_days = 0 -> null enabled = true ~ id = \"intu-lifecycle-s3-int-tier\" -> (known after apply) - tags = {} -> null transition { days = 32 storage_class = \"INTELLIGENT_TIERING\" } } - logging { - target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" -> null - target_prefix = \"logs/cloudtrail-logging/\" -> null } + logging { + target_bucket = (known after apply) + target_prefix = \"logs/cloudtrail-logging/\" } ~ versioning { ~ enabled = false -> (known after apply) ~ mfa_delete = false -> (known after apply) } } # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket must be replaced -/+ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" { ~ bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement ~ id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) ~ policy = jsonencode( { - Statement = [ - { - Action = \"s3:GetBucketAcl\" - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" - Sid = \"AWSCloudTrailAclCheck\" }, - { - Action = \"s3:PutObject\" - Condition = { - StringEquals = { - s3:x-amz-acl = \"bucket-owner-full-control\" } } - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\" - Sid = \"AWSCloudTrailWrite\" }, ] - Version = \"2012-10-17\" } ) -> (known after apply) } # module.buckets.random_id.cloudtrail_bucket_suffix must be replaced -/+ resource \"random_id\" \"cloudtrail_bucket_suffix\" { ~ b64 = \"cqLFzQ\" -> (known after apply) ~ b64_std = \"cqLFzQ==\" -> (known after apply) ~ b64_url = \"cqLFzQ\" -> (known after apply) byte_length = 4 ~ dec = \"1923270093\" -> (known after apply) ~ hex = \"72a2c5cd\" -> (known after apply) ~ id = \"cqLFzQ\" -> (known after apply) + keepers = { + \"aws_account_id\" = \"123412341234\" + \"env\" = \"xyz-stage\" } # forces replacement } # module.buckets.module.access_logging_bucket.aws_s3_bucket.default must be replaced -/+ resource \"aws_s3_bucket\" \"default\" { + acceleration_status = (known after apply) + acl = \"log-delivery-write\" ~ arn = \"arn:aws:s3:::ab-xyz-stage-access-logging-9d8e94ff\" -> (known after apply) ~ bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" -> (known after apply) # forces replacement ~ bucket_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.amazonaws.com\" -> (known after apply) ~ bucket_regional_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.us-west-2.amazonaws.com\" -> (known after apply) + force_destroy = false ~ hosted_zone_id = \"Z3BJ6K6RIION7M\" -> (known after apply) ~ id = \"ab-xyz-stage-access-logging-9d8e94ff\" -> (known after apply) ~ region = \"us-west-2\" -> (known after apply) ~ request_payer = \"BucketOwner\" -> (known after apply) tags = { \"mycompany:finance:accountenvironment\" = \"xyz-stage\" \"mycompany:finance:application\" = \"ab-platform\" \"mycompany:finance:billablebusinessunit\" = \"my-dev\" \"name\" = \"Access logging bucket\" } + website_domain = (known after apply) + website_endpoint = (known after apply) - grant { - permissions = [ - \"READ_ACP\", - \"WRITE\", ] -> null - type = \"Group\" -> null - uri = \"http://acs.amazonaws.com/groups/s3/LogDelivery\" -> null } - grant { - id = \"0343271a8c2f184152c171b223945b22ceaf5be5c9b78cf167660600747b5ad8\" -> null - permissions = [ - \"FULL_CONTROL\", ] -> null - type = \"CanonicalUser\" -> null } - lifecycle_rule { - abort_incomplete_multipart_upload_days = 0 -> null - enabled = true -> null - id = \"intu-lifecycle-s3-int-tier\" -> null - tags = {} -> null - transition { - days = 32 -> null - storage_class = \"INTELLIGENT_TIERING\" -> null } } + logging { + target_bucket = (known after apply) + target_prefix = \"logs/access-logging/\" } ~ versioning { ~ enabled = false -> (known after apply) ~ mfa_delete = false -> (known after apply) } } # module.buckets.module.access_logging_bucket.random_id.bucket_suffix must be replaced -/+ resource \"random_id\" \"bucket_suffix\" { ~ b64 = \"nY6U_w\" -> (known after apply) ~ b64_std = \"nY6U/w==\" -> (known after apply) ~ b64_url = \"nY6U_w\" -> (known after apply) byte_length = 4 ~ dec = \"2643367167\" -> (known after apply) ~ hex = \"9d8e94ff\" -> (known after apply) ~ id = \"nY6U_w\" -> (known after apply) + keepers = { + \"aws_account_id\" = \"123412341234\" + \"env\" = \"xyz-stage\" ", "keywords": ["bill", "policy", "test"]}, {"source": "Text", "text": "} Plan: 6 to add, 0 to change, 5 to destroy", "keywords": ["change"]}]}, {"Id": "234641321", "PostHistoryTypeId": "5", "PostId": "64758624", "RevisionGUID": "e98a3e18-053e-4f78-afef-b2b0070dc128", "CreationDate": "2020-11-10T17:12:06.037", "UserId": "948268", "Comment": "Added image diff", "Text": "**Some Background:**\r\nWe have terraform code to create various AWS resources. Some of these resources are created per AWS account and hence are structured to be stored in a `account-scope` folder in our project. This was when we were only having one AWS region. Now our application is made multi-region and hence these resources are to be created per region for each AWS account.\r\n\r\nIn order to do that we have now moved these TF scripts to `region-scope` folder which will be run per region. Since these resources are no longer part of *'account scope'* we have removed them from the account scope *Terraform state*.\r\nNow when I try to import these resources \r\n\r\n**Imported the resources by running this from `xyz-region-scope` directory:**\r\n\r\n    terraform import -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color <RESOURCE_NAME> <RESOURCE_ID>\r\n\r\nOne of the examples of a resource is:\r\n\r\n    RESOURCE_NAME=module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \r\n    RESOURCE_ID=\"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n\r\nI was expecting the imports would update the resources in the terraform state file on my local machine but the terraform state file created under `xyz-region-scope/state/xyz-stage/terraform.tfstate` is not updated.\r\n\r\n**Verified the Imports with:**\r\n\r\n    terraform show\r\n\r\n\r\n**Run terraform plan:**\r\n\r\n    terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color\r\n\r\nBut the terraform plan output shows `Plan: 6 to add, 0 to change, 5 to destroy.` that is those resources will be destroyed and recreated.\r\n\r\n**Output snippet of terraform plan:**\r\n\r\n      # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket must be replaced\r\n    -/+ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" {\r\n          + acceleration_status         = (known after apply)\r\n          + acl                         = \"private\"\r\n          ~ arn                         = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply)\r\n          ~ bucket                      = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement\r\n          ~ bucket_domain_name          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\" -> (known after apply)\r\n          ~ bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\" -> (known after apply)\r\n          + force_destroy               = false\r\n          ~ hosted_zone_id              = \"Z3BJ6K6RIION7M\" -> (known after apply)\r\n          ~ id                          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply)\r\n          ~ region                      = \"us-west-2\" -> (known after apply)\r\n          ~ request_payer               = \"BucketOwner\" -> (known after apply)\r\n            tags                        = {\r\n                \"intuit:finance:accountenvironment\"   = \"xyz-stage\"\r\n                \"intuit:finance:application\"          = \"ab-platform\"\r\n                \"intuit:finance:billablebusinessunit\" = \"my-dev\"\r\n                \"name\"                                = \"Cloudtrail logging bucket\"\r\n            }\r\n          + website_domain              = (known after apply)\r\n          + website_endpoint            = (known after apply)\r\n    \r\n          ~ lifecycle_rule {\r\n              - abort_incomplete_multipart_upload_days = 0 -> null\r\n                enabled                                = true\r\n              ~ id                                     = \"intu-lifecycle-s3-int-tier\" -> (known after apply)\r\n              - tags                                   = {} -> null\r\n    \r\n                transition {\r\n                    days          = 32\r\n                    storage_class = \"INTELLIGENT_TIERING\"\r\n                }\r\n            }\r\n    \r\n          - logging {\r\n              - target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" -> null\r\n              - target_prefix = \"logs/cloudtrail-logging/\" -> null\r\n            }\r\n          + logging {\r\n              + target_bucket = (known after apply)\r\n              + target_prefix = \"logs/cloudtrail-logging/\"\r\n            }\r\n    \r\n          ~ versioning {\r\n              ~ enabled    = false -> (known after apply)\r\n              ~ mfa_delete = false -> (known after apply)\r\n            }\r\n        }\r\n    \r\n      # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket must be replaced\r\n    -/+ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" {\r\n          ~ bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement\r\n          ~ id     = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply)\r\n          ~ policy = jsonencode(\r\n                {\r\n                  - Statement = [\r\n                      - {\r\n                          - Action    = \"s3:GetBucketAcl\"\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n                          - Sid       = \"AWSCloudTrailAclCheck\"\r\n                        },\r\n                      - {\r\n                          - Action    = \"s3:PutObject\"\r\n                          - Condition = {\r\n                              - StringEquals = {\r\n                                  - s3:x-amz-acl = \"bucket-owner-full-control\"\r\n                                }\r\n                            }\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\"\r\n                          - Sid       = \"AWSCloudTrailWrite\"\r\n                        },\r\n                    ]\r\n                  - Version   = \"2012-10-17\"\r\n                }\r\n            ) -> (known after apply)\r\n        }\r\n    \r\n      # module.buckets.random_id.cloudtrail_bucket_suffix must be replaced\r\n    -/+ resource \"random_id\" \"cloudtrail_bucket_suffix\" {\r\n          ~ b64         = \"cqLFzQ\" -> (known after apply)\r\n          ~ b64_std     = \"cqLFzQ==\" -> (known after apply)\r\n          ~ b64_url     = \"cqLFzQ\" -> (known after apply)\r\n            byte_length = 4\r\n          ~ dec         = \"1923270093\" -> (known after apply)\r\n          ~ hex         = \"72a2c5cd\" -> (known after apply)\r\n          ~ id          = \"cqLFzQ\" -> (known after apply)\r\n          + keepers     = {\r\n              + \"aws_account_id\" = \"123412341234\"\r\n              + \"env\"            = \"xyz-stage\"\r\n            } # forces replacement\r\n        }\r\n\r\n\r\n\r\nI am not clear why so, am I missing something and not doing it right?\r\n\r\n\r\nPlease note we store the remote state in S3 bucket <s>but I currently do not have the remote TF state file created in S3 bucket for **region scope** (I do have one for *account scope* though). I was expecting that the `Import..Plan..Apply` process will create one for region scope as well.</s>\r\n\r\n**EDIT:** I see the remote TF state file created in the S3 for region scope after running imports. One difference that I see between this new region-scope tf state file from old account-scope one is: the new file does not have any `\"depends_on\"` block under any of the resources `resources[] > instances[]`\r\n\r\n**Environment:**\r\n\r\n    Local machine: macOS v10.14.6\r\n\r\n    Terraform v0.12.29\r\n    + provider.aws v3.14.1\r\n    + provider.null v2.1.2\r\n    + provider.random v2.3.1\r\n    + provider.template v2.1.2\r\n\r\n\r\n----------\r\n\r\n\r\n----------\r\n**EDIT 2:**\r\n\r\n**Here are my Imports and terraform plan:**\r\n\r\n    terraform import module.buckets.random_id.cloudtrail_bucket_suffix cqLFzQ\r\n    terraform import module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n    terraform import  module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n    terraform import  module.buckets.module.access_logging_bucket.aws_s3_bucket.default \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n    terraform import  module.buckets.module.access_logging_bucket.random_id.bucket_suffix  nY6U_w\r\n    terraform import module.encryption.module.data_key.aws_iam_policy.decrypt \"arn:aws:iam::123412341234:policy/ab_data_key_mxs_stage_decrypt\"\r\n    terraform import module.encryption.module.data_key.aws_iam_policy.encrypt \"arn:aws:iam::123412341234:policy/ab_data_key_mxs_stage_encrypt\"\r\n\r\n\r\n\r\n    mymachine:xyz-region-scope kuldeepjain$ ../scripts/terraform.sh xyz-stage plan -no-color\r\n    + set -o posix\r\n    + IFS='\r\n     '\r\n    ++ blhome\r\n    + BASH_LIB_HOME=/usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT\r\n    + source /usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT/s3/bucket.sh\r\n    + main xyz-stage plan -no-color\r\n    + '[' 3 -lt 2 ']'\r\n    + local env=xyz-stage\r\n    + shift\r\n    + local command=plan\r\n    + shift\r\n    ++ get_region xyz-stage\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    +++ aws --profile xyz-stage configure get region\r\n    ++ local region=us-west-2\r\n    ++ '[' -z us-west-2 ']'\r\n    ++ echo us-west-2\r\n    + local region=us-west-2\r\n    ++ _get_bucket xyz-stage xyz-stage-tfstate\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    ++ local name=xyz-stage-tfstate\r\n    ++ shift\r\n    +++ _get_bucket_list xyz-stage xyz-stage-tfstate\r\n    +++ local env=xyz-stage\r\n    +++ shift\r\n    +++ local name=xyz-stage-tfstate\r\n    +++ shift\r\n    +++ aws --profile xyz-stage --output json s3api list-buckets --query 'Buckets[?contains(Name, `xyz-stage-tfstate`) == `true`].Name'\r\n    ++ local 'bucket_list=[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ _count_buckets_in_json '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ local 'json=[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ shift\r\n    +++ echo '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ jq '. | length'\r\n    ++ local number_of_buckets=1\r\n    ++ '[' 1 == 0 ']'\r\n    ++ '[' 1 -gt 1 ']'\r\n    +++ echo '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ jq -r '.[0]'\r\n    ++ local bucket_name=ab-xyz-stage-tfstate-5b8873b8\r\n    ++ echo ab-xyz-stage-tfstate-5b8873b8\r\n    + local tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8\r\n    ++ get_config_file xyz-stage us-west-2\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    ++ local region=us-west-2\r\n    ++ shift\r\n    ++ local config_file=config/us-west-2/xyz-stage.tfvars\r\n    ++ '[' '!' -f config/us-west-2/xyz-stage.tfvars ']'\r\n    ++ config_file=config/us-west-2/default.tfvars\r\n    ++ echo config/us-west-2/default.tfvars\r\n    + local config_file=config/us-west-2/default.tfvars\r\n    + export TF_DATA_DIR=state/xyz-stage/\r\n    + TF_DATA_DIR=state/xyz-stage/\r\n    + terraform get\r\n    + terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color\r\n    Refreshing Terraform state in-memory prior to plan...\r\n    The refreshed state will be used to calculate this plan, but will not be\r\n    persisted to local or remote state storage.\r\n    \r\n    module.encryption.module.data_key.data.null_data_source.key: Refreshing state...\r\n    module.buckets.data.template_file.dependencies: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.template_file.dependencies: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_region.current: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.aws_caller_identity.current: Refreshing state...\r\n    data.aws_caller_identity.current: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.aws_kms_alias.encryption_key_alias: Refreshing state...\r\n    module.buckets.data.aws_caller_identity.current: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_caller_identity.current: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_kms_alias.default: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.template_file.encryption_configuration: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_iam_policy_document.decrypt: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_iam_policy_document.encrypt: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.random_id.bucket_suffix: Refreshing state... [id=nY6U_w]\r\n    module.encryption.module.data_key.aws_iam_policy.decrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt]\r\n    module.encryption.module.data_key.aws_iam_policy.encrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt]\r\n    module.buckets.module.access_logging_bucket.aws_s3_bucket.default: Refreshing state... [id=ab-xyz-stage-access-logging-9d8e94ff]\r\n    module.buckets.random_id.cloudtrail_bucket_suffix: Refreshing state... [id=cqLFzQ]\r\n    module.buckets.aws_s3_bucket.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd]\r\n    module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail: Refreshing state...\r\n    module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd]\r\n    \r\n    ------------------------------------------------------------------------\r\n    \r\n    An execution plan has been generated and is shown below.\r\n    Resource actions are indicated with the following symbols:\r\n      + create\r\n    -/+ destroy and then create replacement\r\n     <= read (data resources)\r\n    \r\n    Terraform will perform the following actions:\r\n    \r\n      # module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply\r\n      # (config refers to values not yet known)\r\n     <= data \"aws_iam_policy_document\" \"restrict_access_cloudtrail\"  {\r\n          + id   = (known after apply)\r\n          + json = (known after apply)\r\n    \r\n          + statement {\r\n              + actions   = [\r\n                  + \"s3:GetBucketAcl\",\r\n                ]\r\n              + effect    = \"Allow\"\r\n              + resources = [\r\n                  + (known after apply),\r\n                ]\r\n              + sid       = \"AWSCloudTrailAclCheck\"\r\n    \r\n              + principals {\r\n                  + identifiers = [\r\n                      + \"cloudtrail.amazonaws.com\",\r\n                    ]\r\n                  + type        = \"Service\"\r\n                }\r\n            }\r\n          + statement {\r\n              + actions   = [\r\n                  + \"s3:PutObject\",\r\n                ]\r\n              + effect    = \"Allow\"\r\n              + resources = [\r\n                  + (known after apply),\r\n                ]\r\n              + sid       = \"AWSCloudTrailWrite\"\r\n    \r\n              + condition {\r\n                  + test     = \"StringEquals\"\r\n                  + values   = [\r\n                      + \"bucket-owner-full-control\",\r\n                    ]\r\n                  + variable = \"s3:x-amz-acl\"\r\n                }\r\n    \r\n              + principals {\r\n                  + identifiers = [\r\n                      + \"cloudtrail.amazonaws.com\",\r\n                    ]\r\n                  + type        = \"Service\"\r\n                }\r\n            }\r\n        }\r\n    \r\n      # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket must be replaced\r\n    -/+ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" {\r\n          + acceleration_status         = (known after apply)\r\n          + acl                         = \"private\"\r\n          ~ arn                         = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply)\r\n          ~ bucket                      = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement\r\n          ~ bucket_domain_name          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\" -> (known after apply)\r\n          ~ bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\" -> (known after apply)\r\n          + force_destroy               = false\r\n          ~ hosted_zone_id              = \"Z3BJ6K6RIION7M\" -> (known after apply)\r\n          ~ id                          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply)\r\n          ~ region                      = \"us-west-2\" -> (known after apply)\r\n          ~ request_payer               = \"BucketOwner\" -> (known after apply)\r\n            tags                        = {\r\n                \"mycompany:finance:accountenvironment\"   = \"xyz-stage\"\r\n                \"mycompany:finance:application\"          = \"ab-platform\"\r\n                \"mycompany:finance:billablebusinessunit\" = \"cto-dev\"\r\n                \"name\"                                = \"Cloudtrail logging bucket\"\r\n            }\r\n          + website_domain              = (known after apply)\r\n          + website_endpoint            = (known after apply)\r\n    \r\n          ~ lifecycle_rule {\r\n              - abort_incomplete_multipart_upload_days = 0 -> null\r\n                enabled                                = true\r\n              ~ id                                     = \"intu-lifecycle-s3-int-tier\" -> (known after apply)\r\n              - tags                                   = {} -> null\r\n    \r\n                transition {\r\n                    days          = 32\r\n                    storage_class = \"INTELLIGENT_TIERING\"\r\n                }\r\n            }\r\n    \r\n          - logging {\r\n              - target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" -> null\r\n              - target_prefix = \"logs/cloudtrail-logging/\" -> null\r\n            }\r\n          + logging {\r\n              + target_bucket = (known after apply)\r\n              + target_prefix = \"logs/cloudtrail-logging/\"\r\n            }\r\n    \r\n          ~ versioning {\r\n              ~ enabled    = false -> (known after apply)\r\n              ~ mfa_delete = false -> (known after apply)\r\n            }\r\n        }\r\n    \r\n      # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket must be replaced\r\n    -/+ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" {\r\n          ~ bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement\r\n          ~ id     = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply)\r\n          ~ policy = jsonencode(\r\n                {\r\n                  - Statement = [\r\n                      - {\r\n                          - Action    = \"s3:GetBucketAcl\"\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n                          - Sid       = \"AWSCloudTrailAclCheck\"\r\n                        },\r\n                      - {\r\n                          - Action    = \"s3:PutObject\"\r\n                          - Condition = {\r\n                              - StringEquals = {\r\n                                  - s3:x-amz-acl = \"bucket-owner-full-control\"\r\n                                }\r\n                            }\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\"\r\n                          - Sid       = \"AWSCloudTrailWrite\"\r\n                        },\r\n                    ]\r\n                  - Version   = \"2012-10-17\"\r\n                }\r\n            ) -> (known after apply)\r\n        }\r\n    \r\n      # module.buckets.random_id.cloudtrail_bucket_suffix must be replaced\r\n    -/+ resource \"random_id\" \"cloudtrail_bucket_suffix\" {\r\n          ~ b64         = \"cqLFzQ\" -> (known after apply)\r\n          ~ b64_std     = \"cqLFzQ==\" -> (known after apply)\r\n          ~ b64_url     = \"cqLFzQ\" -> (known after apply)\r\n            byte_length = 4\r\n          ~ dec         = \"1923270093\" -> (known after apply)\r\n          ~ hex         = \"72a2c5cd\" -> (known after apply)\r\n          ~ id          = \"cqLFzQ\" -> (known after apply)\r\n          + keepers     = {\r\n              + \"aws_account_id\" = \"123412341234\"\r\n              + \"env\"            = \"xyz-stage\"\r\n            } # forces replacement\r\n        }\r\n    \r\n      # module.buckets.module.access_logging_bucket.aws_s3_bucket.default must be replaced\r\n    -/+ resource \"aws_s3_bucket\" \"default\" {\r\n          + acceleration_status         = (known after apply)\r\n          + acl                         = \"log-delivery-write\"\r\n          ~ arn                         = \"arn:aws:s3:::ab-xyz-stage-access-logging-9d8e94ff\" -> (known after apply)\r\n          ~ bucket                      = \"ab-xyz-stage-access-logging-9d8e94ff\" -> (known after apply) # forces replacement\r\n          ~ bucket_domain_name          = \"ab-xyz-stage-access-logging-9d8e94ff.s3.amazonaws.com\" -> (known after apply)\r\n          ~ bucket_regional_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.us-west-2.amazonaws.com\" -> (known after apply)\r\n          + force_destroy               = false\r\n          ~ hosted_zone_id              = \"Z3BJ6K6RIION7M\" -> (known after apply)\r\n          ~ id                          = \"ab-xyz-stage-access-logging-9d8e94ff\" -> (known after apply)\r\n          ~ region                      = \"us-west-2\" -> (known after apply)\r\n          ~ request_payer               = \"BucketOwner\" -> (known after apply)\r\n            tags                        = {\r\n                \"mycompany:finance:accountenvironment\"   = \"xyz-stage\"\r\n                \"mycompany:finance:application\"          = \"ab-platform\"\r\n                \"mycompany:finance:billablebusinessunit\" = \"my-dev\"\r\n                \"name\"                                = \"Access logging bucket\"\r\n            }\r\n          + website_domain              = (known after apply)\r\n          + website_endpoint            = (known after apply)\r\n    \r\n          - grant {\r\n              - permissions = [\r\n                  - \"READ_ACP\",\r\n                  - \"WRITE\",\r\n                ] -> null\r\n              - type        = \"Group\" -> null\r\n              - uri         = \"http://acs.amazonaws.com/groups/s3/LogDelivery\" -> null\r\n            }\r\n          - grant {\r\n              - id          = \"0343271a8c2f184152c171b223945b22ceaf5be5c9b78cf167660600747b5ad8\" -> null\r\n              - permissions = [\r\n                  - \"FULL_CONTROL\",\r\n                ] -> null\r\n              - type        = \"CanonicalUser\" -> null\r\n            }\r\n    \r\n          - lifecycle_rule {\r\n              - abort_incomplete_multipart_upload_days = 0 -> null\r\n              - enabled                                = true -> null\r\n              - id                                     = \"intu-lifecycle-s3-int-tier\" -> null\r\n              - tags                                   = {} -> null\r\n    \r\n              - transition {\r\n                  - days          = 32 -> null\r\n                  - storage_class = \"INTELLIGENT_TIERING\" -> null\r\n                }\r\n            }\r\n    \r\n          + logging {\r\n              + target_bucket = (known after apply)\r\n              + target_prefix = \"logs/access-logging/\"\r\n            }\r\n    \r\n          ~ versioning {\r\n              ~ enabled    = false -> (known after apply)\r\n              ~ mfa_delete = false -> (known after apply)\r\n            }\r\n        }\r\n    \r\n      # module.buckets.module.access_logging_bucket.random_id.bucket_suffix must be replaced\r\n    -/+ resource \"random_id\" \"bucket_suffix\" {\r\n          ~ b64         = \"nY6U_w\" -> (known after apply)\r\n          ~ b64_std     = \"nY6U/w==\" -> (known after apply)\r\n          ~ b64_url     = \"nY6U_w\" -> (known after apply)\r\n            byte_length = 4\r\n          ~ dec         = \"2643367167\" -> (known after apply)\r\n          ~ hex         = \"9d8e94ff\" -> (known after apply)\r\n          ~ id          = \"nY6U_w\" -> (known after apply)\r\n          + keepers     = {\r\n              + \"aws_account_id\" = \"123412341234\"\r\n              + \"env\"            = \"xyz-stage\"\r\n            } # forces replacement\r\n        }\r\n    \r\n    Plan: 6 to add, 0 to change, 5 to destroy.\r\n\r\n\r\nSnippet of Diff of my current remote TF state(**LEFT**) vs old account-scope(**RIGHT**) for `cloudtrail_bucket_suffix`:\r\n\r\n[![Snippet of Diff of my current remote TF state(**LEFT**) vs old account-scope(**RIGHT**) for `cloudtrail_bucket_suffix`][1]][1]\r\n\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/NvnCx.png", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I was expecting the imports would update the resources in the terraform state file on my local machine but the terraform state file created under `xyz-region-scope/state/xyz-stage/terraform.tfstate` is not updated. **Verified the Imports with:** terraform show **Run terraform plan:** terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color But the terraform plan output shows `Plan: 6 to add, 0 to change, 5 to destroy.", "keywords": ["change"]}, {"source": "Text", "text": "**Output snippet of terraform plan:** # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket must be replaced -/+ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" { + acceleration_status = (known after apply) + acl = \"private\" ~ arn = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) ~ bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement ~ bucket_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\" -> (known after apply) ~ bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\" -> (known after apply) + force_destroy = false ~ hosted_zone_id = \"Z3BJ6K6RIION7M\" -> (known after apply) ~ id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) ~ region = \"us-west-2\" -> (known after apply) ~ request_payer = \"BucketOwner\" -> (known after apply) tags = { \"intuit:finance:accountenvironment\" = \"xyz-stage\" \"intuit:finance:application\" = \"ab-platform\" \"intuit:finance:billablebusinessunit\" = \"my-dev\" \"name\" = \"Cloudtrail logging bucket\" } + website_domain = (known after apply) + website_endpoint = (known after apply) ~ lifecycle_rule { - abort_incomplete_multipart_upload_days = 0 -> null enabled = true ~ id = \"intu-lifecycle-s3-int-tier\" -> (known after apply) - tags = {} -> null transition { days = 32 storage_class = \"INTELLIGENT_TIERING\" } } - logging { - target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" -> null - target_prefix = \"logs/cloudtrail-logging/\" -> null } + logging { + target_bucket = (known after apply) + target_prefix = \"logs/cloudtrail-logging/\" } ~ versioning { ~ enabled = false -> (known after apply) ~ mfa_delete = false -> (known after apply) } } # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket must be replaced -/+ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" { ~ bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement ~ id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) ~ policy = jsonencode( { - Statement = [ - { - Action = \"s3:GetBucketAcl\" - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" - Sid = \"AWSCloudTrailAclCheck\" }, - { - Action = \"s3:PutObject\" - Condition = { - StringEquals = { - s3:x-amz-acl = \"bucket-owner-full-control\" } } - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\" - Sid = \"AWSCloudTrailWrite\" }, ] - Version = \"2012-10-17\" } ) -> (known after apply) } # module.buckets.random_id.cloudtrail_bucket_suffix must be replaced -/+ resource \"random_id\" \"cloudtrail_bucket_suffix\" { ~ b64 = \"cqLFzQ\" -> (known after apply) ~ b64_std = \"cqLFzQ==\" -> (known after apply) ~ b64_url = \"cqLFzQ\" -> (known after apply) byte_length = 4 ~ dec = \"1923270093\" -> (known after apply) ~ hex = \"72a2c5cd\" -> (known after apply) ~ id = \"cqLFzQ\" -> (known after apply) + keepers = { + \"aws_account_id\" = \"123412341234\" + \"env\" = \"xyz-stage\" } # forces replacement } I am not clear why so, am I missing something and not doing it right? ", "keywords": ["bill", "policy"]}, {"source": "Text", "text": "One difference that I see between this new region-scope tf state file from old account-scope one is: the new file does not have any `\"depends_on\"` block under any of the resources `resources[] > instances[]` **Environment:** Local machine: macOS v10.14.6 Terraform v0.12.29 + provider.aws v3.14.1 + provider.null v2.1.2 + provider.random v2.3.1 + provider.template v2.1.2 ---------- ---------- **EDIT 2:** **Here are my Imports and terraform plan:** terraform import module.buckets.random_id.cloudtrail_bucket_suffix cqLFzQ terraform import module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" terraform import module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" terraform import module.buckets.module.access_logging_bucket.aws_s3_bucket.default \"ab-xyz-stage-access-logging-9d8e94ff\" terraform import module.buckets.module.access_logging_bucket.random_id.bucket_suffix nY6U_w terraform import module.encryption.module.data_key.aws_iam_policy.decrypt \"arn:aws:iam::123412341234:policy/ab_data_key_mxs_stage_decrypt\" terraform import module.encryption.module.data_key.aws_iam_policy.encrypt \"arn:aws:iam::123412341234:policy/ab_data_key_mxs_stage_encrypt\" mymachine:xyz-region-scope kuldeepjain$ ../scripts/terraform.sh xyz-stage plan -no-color + set -o posix + IFS=' ' ++ blhome + BASH_LIB_HOME=/usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT + source /usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT/s3/bucket.sh + main xyz-stage plan -no-color + '[' 3 -lt 2 ']' + local env=xyz-stage + shift + local command=plan + shift ++ get_region xyz-stage ++ local env=xyz-stage ++ shift +++ aws --profile xyz-stage configure get region ++ local region=us-west-2 ++ '[' -z us-west-2 ']' ++ echo us-west-2 + local region=us-west-2 ++ _get_bucket xyz-stage xyz-stage-tfstate ++ local env=xyz-stage ++ shift ++ local name=xyz-stage-tfstate ++ shift +++ _get_bucket_list xyz-stage xyz-stage-tfstate +++ local env=xyz-stage +++ shift +++ local name=xyz-stage-tfstate +++ shift +++ aws --profile xyz-stage --output json s3api list-buckets --query 'Buckets[?contains(Name, `xyz-stage-tfstate`) == `true`].Name' ++ local 'bucket_list=[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ _count_buckets_in_json '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ local 'json=[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ shift +++ echo '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ jq '. | length' ++ local number_of_buckets=1 ++ '[' 1 == 0 ']' ++ '[' 1 -gt 1 ']' +++ echo '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ jq -r '.[0]' ++ local bucket_name=ab-xyz-stage-tfstate-5b8873b8 ++ echo ab-xyz-stage-tfstate-5b8873b8 + local tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 ++ get_config_file xyz-stage us-west-2 ++ local env=xyz-stage ++ shift ++ local region=us-west-2 ++ shift ++ local config_file=config/us-west-2/xyz-stage.tfvars ++ '[' '!' -f config/us-west-2/xyz-stage.tfvars ']' ++ config_file=config/us-west-2/default.tfvars ++ echo config/us-west-2/default.tfvars + local config_file=config/us-west-2/default.tfvars + export TF_DATA_DIR=state/xyz-stage/ + TF_DATA_DIR=state/xyz-stage/ + terraform get + terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color Refreshing Terraform state in-memory prior to plan... ", "keywords": ["provider", "policy"]}, {"source": "Text", "text": "The refreshed state will be used to calculate this plan, but will not be persisted to local or remote state storage. module.encryption.module.data_key.data.null_data_source.key: Refreshing state... module.buckets.data.template_file.dependencies: Refreshing state... module.buckets.module.access_logging_bucket.data.template_file.dependencies: Refreshing state... module.encryption.module.data_key.data.aws_region.current: Refreshing state... module.buckets.module.access_logging_bucket.data.aws_caller_identity.current: Refreshing state... data.aws_caller_identity.current: Refreshing state... module.buckets.module.access_logging_bucket.data.aws_kms_alias.encryption_key_alias: Refreshing state... module.buckets.data.aws_caller_identity.current: Refreshing state... module.encryption.module.data_key.data.aws_caller_identity.current: Refreshing state... module.encryption.module.data_key.data.aws_kms_alias.default: Refreshing state... module.buckets.module.access_logging_bucket.data.template_file.encryption_configuration: Refreshing state... module.encryption.module.data_key.data.aws_iam_policy_document.decrypt: Refreshing state... module.encryption.module.data_key.data.aws_iam_policy_document.encrypt: Refreshing state... module.buckets.module.access_logging_bucket.random_id.bucket_suffix: Refreshing state... [id=nY6U_w] module.encryption.module.data_key.aws_iam_policy.decrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt] module.encryption.module.data_key.aws_iam_policy.encrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt] module.buckets.module.access_logging_bucket.aws_s3_bucket.default: Refreshing state... [id=ab-xyz-stage-access-logging-9d8e94ff] module.buckets.random_id.cloudtrail_bucket_suffix: Refreshing state... [id=cqLFzQ] module.buckets.aws_s3_bucket.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd] module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail: Refreshing state... module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd] ------------------------------------------------------------------------ ", "keywords": ["storage", "policy"]}, {"source": "Text", "text": "Resource actions are indicated with the following symbols: + create -/+ destroy and then create replacement <= read (data resources) Terraform will perform the following actions: # module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply # (config refers to values not yet known) <= data \"aws_iam_policy_document\" \"restrict_access_cloudtrail\" { + id = (known after apply) + json = (known after apply) + statement { + actions = [ + \"s3:GetBucketAcl\", ] + effect = \"Allow\" + resources = [ + (known after apply), ] + sid = \"AWSCloudTrailAclCheck\" + principals { + identifiers = [ + \"cloudtrail.amazonaws.com\", ] + type = \"Service\" } } + statement { + actions = [ + \"s3:PutObject\", ] + effect = \"Allow\" + resources = [ + (known after apply), ] + sid = \"AWSCloudTrailWrite\" + condition { + test = \"StringEquals\" + values = [ + \"bucket-owner-full-control\", ] + variable = \"s3:x-amz-acl\" } + principals { + identifiers = [ + \"cloudtrail.amazonaws.com\", ] + type = \"Service\" } } } # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket must be replaced -/+ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" { + acceleration_status = (known after apply) + acl = \"private\" ~ arn = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) ~ bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement ~ bucket_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\" -> (known after apply) ~ bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\" -> (known after apply) + force_destroy = false ~ hosted_zone_id = \"Z3BJ6K6RIION7M\" -> (known after apply) ~ id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) ~ region = \"us-west-2\" -> (known after apply) ~ request_payer = \"BucketOwner\" -> (known after apply) tags = { \"mycompany:finance:accountenvironment\" = \"xyz-stage\" \"mycompany:finance:application\" = \"ab-platform\" \"mycompany:finance:billablebusinessunit\" = \"cto-dev\" \"name\" = \"Cloudtrail logging bucket\" } + website_domain = (known after apply) + website_endpoint = (known after apply) ~ lifecycle_rule { - abort_incomplete_multipart_upload_days = 0 -> null enabled = true ~ id = \"intu-lifecycle-s3-int-tier\" -> (known after apply) - tags = {} -> null transition { days = 32 storage_class = \"INTELLIGENT_TIERING\" } } - logging { - target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" -> null - target_prefix = \"logs/cloudtrail-logging/\" -> null } + logging { + target_bucket = (known after apply) + target_prefix = \"logs/cloudtrail-logging/\" } ~ versioning { ~ enabled = false -> (known after apply) ~ mfa_delete = false -> (known after apply) } } # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket must be replaced -/+ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" { ~ bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement ~ id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) ~ policy = jsonencode( { - Statement = [ - { - Action = \"s3:GetBucketAcl\" - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" - Sid = \"AWSCloudTrailAclCheck\" }, - { - Action = \"s3:PutObject\" - Condition = { - StringEquals = { - s3:x-amz-acl = \"bucket-owner-full-control\" } } - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\" - Sid = \"AWSCloudTrailWrite\" }, ] - Version = \"2012-10-17\" } ) -> (known after apply) } # module.buckets.random_id.cloudtrail_bucket_suffix must be replaced -/+ resource \"random_id\" \"cloudtrail_bucket_suffix\" { ~ b64 = \"cqLFzQ\" -> (known after apply) ~ b64_std = \"cqLFzQ==\" -> (known after apply) ~ b64_url = \"cqLFzQ\" -> (known after apply) byte_length = 4 ~ dec = \"1923270093\" -> (known after apply) ~ hex = \"72a2c5cd\" -> (known after apply) ~ id = \"cqLFzQ\" -> (known after apply) + keepers = { + \"aws_account_id\" = \"123412341234\" + \"env\" = \"xyz-stage\" } # forces replacement } # module.buckets.module.access_logging_bucket.aws_s3_bucket.default must be replaced -/+ resource \"aws_s3_bucket\" \"default\" { + acceleration_status = (known after apply) + acl = \"log-delivery-write\" ~ arn = \"arn:aws:s3:::ab-xyz-stage-access-logging-9d8e94ff\" -> (known after apply) ~ bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" -> (known after apply) # forces replacement ~ bucket_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.amazonaws.com\" -> (known after apply) ~ bucket_regional_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.us-west-2.amazonaws.com\" -> (known after apply) + force_destroy = false ~ hosted_zone_id = \"Z3BJ6K6RIION7M\" -> (known after apply) ~ id = \"ab-xyz-stage-access-logging-9d8e94ff\" -> (known after apply) ~ region = \"us-west-2\" -> (known after apply) ~ request_payer = \"BucketOwner\" -> (known after apply) tags = { \"mycompany:finance:accountenvironment\" = \"xyz-stage\" \"mycompany:finance:application\" = \"ab-platform\" \"mycompany:finance:billablebusinessunit\" = \"my-dev\" \"name\" = \"Access logging bucket\" } + website_domain = (known after apply) + website_endpoint = (known after apply) - grant { - permissions = [ - \"READ_ACP\", - \"WRITE\", ] -> null - type = \"Group\" -> null - uri = \"http://acs.amazonaws.com/groups/s3/LogDelivery\" -> null } - grant { - id = \"0343271a8c2f184152c171b223945b22ceaf5be5c9b78cf167660600747b5ad8\" -> null - permissions = [ - \"FULL_CONTROL\", ] -> null - type = \"CanonicalUser\" -> null } - lifecycle_rule { - abort_incomplete_multipart_upload_days = 0 -> null - enabled = true -> null - id = \"intu-lifecycle-s3-int-tier\" -> null - tags = {} -> null - transition { - days = 32 -> null - storage_class = \"INTELLIGENT_TIERING\" -> null } } + logging { + target_bucket = (known after apply) + target_prefix = \"logs/access-logging/\" } ~ versioning { ~ enabled = false -> (known after apply) ~ mfa_delete = false -> (known after apply) } } # module.buckets.module.access_logging_bucket.random_id.bucket_suffix must be replaced -/+ resource \"random_id\" \"bucket_suffix\" { ~ b64 = \"nY6U_w\" -> (known after apply) ~ b64_std = \"nY6U/w==\" -> (known after apply) ~ b64_url = \"nY6U_w\" -> (known after apply) byte_length = 4 ~ dec = \"2643367167\" -> (known after apply) ~ hex = \"9d8e94ff\" -> (known after apply) ~ id = \"nY6U_w\" -> (known after apply) + keepers = { + \"aws_account_id\" = \"123412341234\" + \"env\" = \"xyz-stage\" } # forces replacement } Plan: 6 to add, 0 to change, 5 to destroy", "keywords": ["bill", "policy", "change", "test"]}]}, {"Id": "234641813", "PostHistoryTypeId": "5", "PostId": "64758624", "RevisionGUID": "ba089aea-8db0-4769-a6cb-83ea4524af2a", "CreationDate": "2020-11-10T17:20:08.763", "UserId": "948268", "Comment": "added 9 characters in body", "Text": "**Some Background:**\r\nWe have terraform code to create various AWS resources. Some of these resources are created per AWS account and hence are structured to be stored in a `account-scope` folder in our project. This was when we were only having one AWS region. Now our application is made multi-region and hence these resources are to be created per region for each AWS account.\r\n\r\nIn order to do that we have now moved these TF scripts to `region-scope` folder which will be run per region. Since these resources are no longer part of *'account scope'* we have removed them from the account scope *Terraform state*.\r\nNow when I try to import these resources \r\n\r\n**Imported the resources by running this from `xyz-region-scope` directory:**\r\n\r\n    terraform import -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color <RESOURCE_NAME> <RESOURCE_ID>\r\n\r\nOne of the examples of a resource is:\r\n\r\n    RESOURCE_NAME=module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \r\n    RESOURCE_ID=\"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n\r\nI was expecting the imports would update the resources in the terraform state file on my local machine but the terraform state file created under `xyz-region-scope/state/xyz-stage/terraform.tfstate` is not updated.\r\n\r\n**Verified the Imports with:**\r\n\r\n    terraform show\r\n\r\n\r\n**Run terraform plan:**\r\n\r\n    terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color\r\n\r\nBut the terraform plan output shows `Plan: 6 to add, 0 to change, 5 to destroy.` that is those resources will be destroyed and recreated.\r\n\r\n**Output snippet of terraform plan:**\r\n\r\n      # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket must be replaced\r\n    -/+ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" {\r\n          + acceleration_status         = (known after apply)\r\n          + acl                         = \"private\"\r\n          ~ arn                         = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply)\r\n          ~ bucket                      = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement\r\n          ~ bucket_domain_name          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\" -> (known after apply)\r\n          ~ bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\" -> (known after apply)\r\n          + force_destroy               = false\r\n          ~ hosted_zone_id              = \"Z3BJ6K6RIION7M\" -> (known after apply)\r\n          ~ id                          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply)\r\n          ~ region                      = \"us-west-2\" -> (known after apply)\r\n          ~ request_payer               = \"BucketOwner\" -> (known after apply)\r\n            tags                        = {\r\n                \"mycompany:finance:accountenvironment\"   = \"xyz-stage\"\r\n                \"mycompany:finance:application\"          = \"ab-platform\"\r\n                \"mycompany:finance:billablebusinessunit\" = \"my-dev\"\r\n                \"name\"                                = \"Cloudtrail logging bucket\"\r\n            }\r\n          + website_domain              = (known after apply)\r\n          + website_endpoint            = (known after apply)\r\n    \r\n          ~ lifecycle_rule {\r\n              - abort_incomplete_multipart_upload_days = 0 -> null\r\n                enabled                                = true\r\n              ~ id                                     = \"intu-lifecycle-s3-int-tier\" -> (known after apply)\r\n              - tags                                   = {} -> null\r\n    \r\n                transition {\r\n                    days          = 32\r\n                    storage_class = \"INTELLIGENT_TIERING\"\r\n                }\r\n            }\r\n    \r\n          - logging {\r\n              - target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" -> null\r\n              - target_prefix = \"logs/cloudtrail-logging/\" -> null\r\n            }\r\n          + logging {\r\n              + target_bucket = (known after apply)\r\n              + target_prefix = \"logs/cloudtrail-logging/\"\r\n            }\r\n    \r\n          ~ versioning {\r\n              ~ enabled    = false -> (known after apply)\r\n              ~ mfa_delete = false -> (known after apply)\r\n            }\r\n        }\r\n    \r\n      # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket must be replaced\r\n    -/+ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" {\r\n          ~ bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement\r\n          ~ id     = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply)\r\n          ~ policy = jsonencode(\r\n                {\r\n                  - Statement = [\r\n                      - {\r\n                          - Action    = \"s3:GetBucketAcl\"\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n                          - Sid       = \"AWSCloudTrailAclCheck\"\r\n                        },\r\n                      - {\r\n                          - Action    = \"s3:PutObject\"\r\n                          - Condition = {\r\n                              - StringEquals = {\r\n                                  - s3:x-amz-acl = \"bucket-owner-full-control\"\r\n                                }\r\n                            }\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\"\r\n                          - Sid       = \"AWSCloudTrailWrite\"\r\n                        },\r\n                    ]\r\n                  - Version   = \"2012-10-17\"\r\n                }\r\n            ) -> (known after apply)\r\n        }\r\n    \r\n      # module.buckets.random_id.cloudtrail_bucket_suffix must be replaced\r\n    -/+ resource \"random_id\" \"cloudtrail_bucket_suffix\" {\r\n          ~ b64         = \"cqLFzQ\" -> (known after apply)\r\n          ~ b64_std     = \"cqLFzQ==\" -> (known after apply)\r\n          ~ b64_url     = \"cqLFzQ\" -> (known after apply)\r\n            byte_length = 4\r\n          ~ dec         = \"1923270093\" -> (known after apply)\r\n          ~ hex         = \"72a2c5cd\" -> (known after apply)\r\n          ~ id          = \"cqLFzQ\" -> (known after apply)\r\n          + keepers     = {\r\n              + \"aws_account_id\" = \"123412341234\"\r\n              + \"env\"            = \"xyz-stage\"\r\n            } # forces replacement\r\n        }\r\n\r\n\r\n\r\nI am not clear why so, am I missing something and not doing it right?\r\n\r\n\r\nPlease note we store the remote state in S3 bucket <s>but I currently do not have the remote TF state file created in S3 bucket for **region scope** (I do have one for *account scope* though). I was expecting that the `Import..Plan..Apply` process will create one for region scope as well.</s>\r\n\r\n**EDIT:** I see the remote TF state file created in the S3 for region scope after running imports. One difference that I see between this new region-scope tf state file from old account-scope one is: the new file does not have any `\"depends_on\"` block under any of the resources `resources[] > instances[]`\r\n\r\n**Environment:**\r\n\r\n    Local machine: macOS v10.14.6\r\n\r\n    Terraform v0.12.29\r\n    + provider.aws v3.14.1\r\n    + provider.null v2.1.2\r\n    + provider.random v2.3.1\r\n    + provider.template v2.1.2\r\n\r\n\r\n----------\r\n\r\n\r\n----------\r\n**EDIT 2:**\r\n\r\n**Here are my Imports and terraform plan:**\r\n\r\n    terraform import module.buckets.random_id.cloudtrail_bucket_suffix cqLFzQ\r\n    terraform import module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n    terraform import  module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n    terraform import  module.buckets.module.access_logging_bucket.aws_s3_bucket.default \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n    terraform import  module.buckets.module.access_logging_bucket.random_id.bucket_suffix  nY6U_w\r\n    terraform import module.encryption.module.data_key.aws_iam_policy.decrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt\"\r\n    terraform import module.encryption.module.data_key.aws_iam_policy.encrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt\"\r\n\r\n\r\n\r\n    mymachine:xyz-region-scope kuldeepjain$ ../scripts/terraform.sh xyz-stage plan -no-color\r\n    + set -o posix\r\n    + IFS='\r\n     '\r\n    ++ blhome\r\n    + BASH_LIB_HOME=/usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT\r\n    + source /usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT/s3/bucket.sh\r\n    + main xyz-stage plan -no-color\r\n    + '[' 3 -lt 2 ']'\r\n    + local env=xyz-stage\r\n    + shift\r\n    + local command=plan\r\n    + shift\r\n    ++ get_region xyz-stage\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    +++ aws --profile xyz-stage configure get region\r\n    ++ local region=us-west-2\r\n    ++ '[' -z us-west-2 ']'\r\n    ++ echo us-west-2\r\n    + local region=us-west-2\r\n    ++ _get_bucket xyz-stage xyz-stage-tfstate\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    ++ local name=xyz-stage-tfstate\r\n    ++ shift\r\n    +++ _get_bucket_list xyz-stage xyz-stage-tfstate\r\n    +++ local env=xyz-stage\r\n    +++ shift\r\n    +++ local name=xyz-stage-tfstate\r\n    +++ shift\r\n    +++ aws --profile xyz-stage --output json s3api list-buckets --query 'Buckets[?contains(Name, `xyz-stage-tfstate`) == `true`].Name'\r\n    ++ local 'bucket_list=[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ _count_buckets_in_json '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ local 'json=[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ shift\r\n    +++ echo '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ jq '. | length'\r\n    ++ local number_of_buckets=1\r\n    ++ '[' 1 == 0 ']'\r\n    ++ '[' 1 -gt 1 ']'\r\n    +++ echo '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ jq -r '.[0]'\r\n    ++ local bucket_name=ab-xyz-stage-tfstate-5b8873b8\r\n    ++ echo ab-xyz-stage-tfstate-5b8873b8\r\n    + local tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8\r\n    ++ get_config_file xyz-stage us-west-2\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    ++ local region=us-west-2\r\n    ++ shift\r\n    ++ local config_file=config/us-west-2/xyz-stage.tfvars\r\n    ++ '[' '!' -f config/us-west-2/xyz-stage.tfvars ']'\r\n    ++ config_file=config/us-west-2/default.tfvars\r\n    ++ echo config/us-west-2/default.tfvars\r\n    + local config_file=config/us-west-2/default.tfvars\r\n    + export TF_DATA_DIR=state/xyz-stage/\r\n    + TF_DATA_DIR=state/xyz-stage/\r\n    + terraform get\r\n    + terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color\r\n    Refreshing Terraform state in-memory prior to plan...\r\n    The refreshed state will be used to calculate this plan, but will not be\r\n    persisted to local or remote state storage.\r\n    \r\n    module.encryption.module.data_key.data.null_data_source.key: Refreshing state...\r\n    module.buckets.data.template_file.dependencies: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.template_file.dependencies: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_region.current: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.aws_caller_identity.current: Refreshing state...\r\n    data.aws_caller_identity.current: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.aws_kms_alias.encryption_key_alias: Refreshing state...\r\n    module.buckets.data.aws_caller_identity.current: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_caller_identity.current: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_kms_alias.default: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.template_file.encryption_configuration: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_iam_policy_document.decrypt: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_iam_policy_document.encrypt: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.random_id.bucket_suffix: Refreshing state... [id=nY6U_w]\r\n    module.encryption.module.data_key.aws_iam_policy.decrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt]\r\n    module.encryption.module.data_key.aws_iam_policy.encrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt]\r\n    module.buckets.module.access_logging_bucket.aws_s3_bucket.default: Refreshing state... [id=ab-xyz-stage-access-logging-9d8e94ff]\r\n    module.buckets.random_id.cloudtrail_bucket_suffix: Refreshing state... [id=cqLFzQ]\r\n    module.buckets.aws_s3_bucket.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd]\r\n    module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail: Refreshing state...\r\n    module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd]\r\n    \r\n    ------------------------------------------------------------------------\r\n    \r\n    An execution plan has been generated and is shown below.\r\n    Resource actions are indicated with the following symbols:\r\n      + create\r\n    -/+ destroy and then create replacement\r\n     <= read (data resources)\r\n    \r\n    Terraform will perform the following actions:\r\n    \r\n      # module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply\r\n      # (config refers to values not yet known)\r\n     <= data \"aws_iam_policy_document\" \"restrict_access_cloudtrail\"  {\r\n          + id   = (known after apply)\r\n          + json = (known after apply)\r\n    \r\n          + statement {\r\n              + actions   = [\r\n                  + \"s3:GetBucketAcl\",\r\n                ]\r\n              + effect    = \"Allow\"\r\n              + resources = [\r\n                  + (known after apply),\r\n                ]\r\n              + sid       = \"AWSCloudTrailAclCheck\"\r\n    \r\n              + principals {\r\n                  + identifiers = [\r\n                      + \"cloudtrail.amazonaws.com\",\r\n                    ]\r\n                  + type        = \"Service\"\r\n                }\r\n            }\r\n          + statement {\r\n              + actions   = [\r\n                  + \"s3:PutObject\",\r\n                ]\r\n              + effect    = \"Allow\"\r\n              + resources = [\r\n                  + (known after apply),\r\n                ]\r\n              + sid       = \"AWSCloudTrailWrite\"\r\n    \r\n              + condition {\r\n                  + test     = \"StringEquals\"\r\n                  + values   = [\r\n                      + \"bucket-owner-full-control\",\r\n                    ]\r\n                  + variable = \"s3:x-amz-acl\"\r\n                }\r\n    \r\n              + principals {\r\n                  + identifiers = [\r\n                      + \"cloudtrail.amazonaws.com\",\r\n                    ]\r\n                  + type        = \"Service\"\r\n                }\r\n            }\r\n        }\r\n    \r\n      # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket must be replaced\r\n    -/+ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" {\r\n          + acceleration_status         = (known after apply)\r\n          + acl                         = \"private\"\r\n          ~ arn                         = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply)\r\n          ~ bucket                      = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement\r\n          ~ bucket_domain_name          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\" -> (known after apply)\r\n          ~ bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\" -> (known after apply)\r\n          + force_destroy               = false\r\n          ~ hosted_zone_id              = \"Z3BJ6K6RIION7M\" -> (known after apply)\r\n          ~ id                          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply)\r\n          ~ region                      = \"us-west-2\" -> (known after apply)\r\n          ~ request_payer               = \"BucketOwner\" -> (known after apply)\r\n            tags                        = {\r\n                \"mycompany:finance:accountenvironment\"   = \"xyz-stage\"\r\n                \"mycompany:finance:application\"          = \"ab-platform\"\r\n                \"mycompany:finance:billablebusinessunit\" = \"my-dev\"\r\n                \"name\"                                = \"Cloudtrail logging bucket\"\r\n            }\r\n          + website_domain              = (known after apply)\r\n          + website_endpoint            = (known after apply)\r\n    \r\n          ~ lifecycle_rule {\r\n              - abort_incomplete_multipart_upload_days = 0 -> null\r\n                enabled                                = true\r\n              ~ id                                     = \"intu-lifecycle-s3-int-tier\" -> (known after apply)\r\n              - tags                                   = {} -> null\r\n    \r\n                transition {\r\n                    days          = 32\r\n                    storage_class = \"INTELLIGENT_TIERING\"\r\n                }\r\n            }\r\n    \r\n          - logging {\r\n              - target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" -> null\r\n              - target_prefix = \"logs/cloudtrail-logging/\" -> null\r\n            }\r\n          + logging {\r\n              + target_bucket = (known after apply)\r\n              + target_prefix = \"logs/cloudtrail-logging/\"\r\n            }\r\n    \r\n          ~ versioning {\r\n              ~ enabled    = false -> (known after apply)\r\n              ~ mfa_delete = false -> (known after apply)\r\n            }\r\n        }\r\n    \r\n      # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket must be replaced\r\n    -/+ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" {\r\n          ~ bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement\r\n          ~ id     = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply)\r\n          ~ policy = jsonencode(\r\n                {\r\n                  - Statement = [\r\n                      - {\r\n                          - Action    = \"s3:GetBucketAcl\"\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n                          - Sid       = \"AWSCloudTrailAclCheck\"\r\n                        },\r\n                      - {\r\n                          - Action    = \"s3:PutObject\"\r\n                          - Condition = {\r\n                              - StringEquals = {\r\n                                  - s3:x-amz-acl = \"bucket-owner-full-control\"\r\n                                }\r\n                            }\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\"\r\n                          - Sid       = \"AWSCloudTrailWrite\"\r\n                        },\r\n                    ]\r\n                  - Version   = \"2012-10-17\"\r\n                }\r\n            ) -> (known after apply)\r\n        }\r\n    \r\n      # module.buckets.random_id.cloudtrail_bucket_suffix must be replaced\r\n    -/+ resource \"random_id\" \"cloudtrail_bucket_suffix\" {\r\n          ~ b64         = \"cqLFzQ\" -> (known after apply)\r\n          ~ b64_std     = \"cqLFzQ==\" -> (known after apply)\r\n          ~ b64_url     = \"cqLFzQ\" -> (known after apply)\r\n            byte_length = 4\r\n          ~ dec         = \"1923270093\" -> (known after apply)\r\n          ~ hex         = \"72a2c5cd\" -> (known after apply)\r\n          ~ id          = \"cqLFzQ\" -> (known after apply)\r\n          + keepers     = {\r\n              + \"aws_account_id\" = \"123412341234\"\r\n              + \"env\"            = \"xyz-stage\"\r\n            } # forces replacement\r\n        }\r\n    \r\n      # module.buckets.module.access_logging_bucket.aws_s3_bucket.default must be replaced\r\n    -/+ resource \"aws_s3_bucket\" \"default\" {\r\n          + acceleration_status         = (known after apply)\r\n          + acl                         = \"log-delivery-write\"\r\n          ~ arn                         = \"arn:aws:s3:::ab-xyz-stage-access-logging-9d8e94ff\" -> (known after apply)\r\n          ~ bucket                      = \"ab-xyz-stage-access-logging-9d8e94ff\" -> (known after apply) # forces replacement\r\n          ~ bucket_domain_name          = \"ab-xyz-stage-access-logging-9d8e94ff.s3.amazonaws.com\" -> (known after apply)\r\n          ~ bucket_regional_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.us-west-2.amazonaws.com\" -> (known after apply)\r\n          + force_destroy               = false\r\n          ~ hosted_zone_id              = \"Z3BJ6K6RIION7M\" -> (known after apply)\r\n          ~ id                          = \"ab-xyz-stage-access-logging-9d8e94ff\" -> (known after apply)\r\n          ~ region                      = \"us-west-2\" -> (known after apply)\r\n          ~ request_payer               = \"BucketOwner\" -> (known after apply)\r\n            tags                        = {\r\n                \"mycompany:finance:accountenvironment\"   = \"xyz-stage\"\r\n                \"mycompany:finance:application\"          = \"ab-platform\"\r\n                \"mycompany:finance:billablebusinessunit\" = \"my-dev\"\r\n                \"name\"                                = \"Access logging bucket\"\r\n            }\r\n          + website_domain              = (known after apply)\r\n          + website_endpoint            = (known after apply)\r\n    \r\n          - grant {\r\n              - permissions = [\r\n                  - \"READ_ACP\",\r\n                  - \"WRITE\",\r\n                ] -> null\r\n              - type        = \"Group\" -> null\r\n              - uri         = \"http://acs.amazonaws.com/groups/s3/LogDelivery\" -> null\r\n            }\r\n          - grant {\r\n              - id          = \"0343271a8c2f184152c171b223945b22ceaf5be5c9b78cf167660600747b5ad8\" -> null\r\n              - permissions = [\r\n                  - \"FULL_CONTROL\",\r\n                ] -> null\r\n              - type        = \"CanonicalUser\" -> null\r\n            }\r\n    \r\n          - lifecycle_rule {\r\n              - abort_incomplete_multipart_upload_days = 0 -> null\r\n              - enabled                                = true -> null\r\n              - id                                     = \"intu-lifecycle-s3-int-tier\" -> null\r\n              - tags                                   = {} -> null\r\n    \r\n              - transition {\r\n                  - days          = 32 -> null\r\n                  - storage_class = \"INTELLIGENT_TIERING\" -> null\r\n                }\r\n            }\r\n    \r\n          + logging {\r\n              + target_bucket = (known after apply)\r\n              + target_prefix = \"logs/access-logging/\"\r\n            }\r\n    \r\n          ~ versioning {\r\n              ~ enabled    = false -> (known after apply)\r\n              ~ mfa_delete = false -> (known after apply)\r\n            }\r\n        }\r\n    \r\n      # module.buckets.module.access_logging_bucket.random_id.bucket_suffix must be replaced\r\n    -/+ resource \"random_id\" \"bucket_suffix\" {\r\n          ~ b64         = \"nY6U_w\" -> (known after apply)\r\n          ~ b64_std     = \"nY6U/w==\" -> (known after apply)\r\n          ~ b64_url     = \"nY6U_w\" -> (known after apply)\r\n            byte_length = 4\r\n          ~ dec         = \"2643367167\" -> (known after apply)\r\n          ~ hex         = \"9d8e94ff\" -> (known after apply)\r\n          ~ id          = \"nY6U_w\" -> (known after apply)\r\n          + keepers     = {\r\n              + \"aws_account_id\" = \"123412341234\"\r\n              + \"env\"            = \"xyz-stage\"\r\n            } # forces replacement\r\n        }\r\n    \r\n    Plan: 6 to add, 0 to change, 5 to destroy.\r\n\r\n\r\nSnippet of Diff of my current remote TF state(**LEFT**) vs old account-scope(**RIGHT**) for `cloudtrail_bucket_suffix`:\r\n\r\n[![Snippet of Diff of my current remote TF state(**LEFT**) vs old account-scope(**RIGHT**) for `cloudtrail_bucket_suffix`][1]][1]\r\n\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/NvnCx.png", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I was expecting the imports would update the resources in the terraform state file on my local machine but the terraform state file created under `xyz-region-scope/state/xyz-stage/terraform.tfstate` is not updated. **Verified the Imports with:** terraform show **Run terraform plan:** terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color But the terraform plan output shows `Plan: 6 to add, 0 to change, 5 to destroy.", "keywords": ["change"]}, {"source": "Text", "text": "**Output snippet of terraform plan:** # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket must be replaced -/+ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" { + acceleration_status = (known after apply) + acl = \"private\" ~ arn = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) ~ bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement ~ bucket_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\" -> (known after apply) ~ bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\" -> (known after apply) + force_destroy = false ~ hosted_zone_id = \"Z3BJ6K6RIION7M\" -> (known after apply) ~ id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) ~ region = \"us-west-2\" -> (known after apply) ~ request_payer = \"BucketOwner\" -> (known after apply) tags = { \"mycompany:finance:accountenvironment\" = \"xyz-stage\" \"mycompany:finance:application\" = \"ab-platform\" \"mycompany:finance:billablebusinessunit\" = \"my-dev\" \"name\" = \"Cloudtrail logging bucket\" } + website_domain = (known after apply) + website_endpoint = (known after apply) ~ lifecycle_rule { - abort_incomplete_multipart_upload_days = 0 -> null enabled = true ~ id = \"intu-lifecycle-s3-int-tier\" -> (known after apply) - tags = {} -> null transition { days = 32 storage_class = \"INTELLIGENT_TIERING\" } } - logging { - target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" -> null - target_prefix = \"logs/cloudtrail-logging/\" -> null } + logging { + target_bucket = (known after apply) + target_prefix = \"logs/cloudtrail-logging/\" } ~ versioning { ~ enabled = false -> (known after apply) ~ mfa_delete = false -> (known after apply) } } # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket must be replaced -/+ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" { ~ bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement ~ id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) ~ policy = jsonencode( { - Statement = [ - { - Action = \"s3:GetBucketAcl\" - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" - Sid = \"AWSCloudTrailAclCheck\" }, - { - Action = \"s3:PutObject\" - Condition = { - StringEquals = { - s3:x-amz-acl = \"bucket-owner-full-control\" } } - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\" - Sid = \"AWSCloudTrailWrite\" }, ] - Version = \"2012-10-17\" } ) -> (known after apply) } # module.buckets.random_id.cloudtrail_bucket_suffix must be replaced -/+ resource \"random_id\" \"cloudtrail_bucket_suffix\" { ~ b64 = \"cqLFzQ\" -> (known after apply) ~ b64_std = \"cqLFzQ==\" -> (known after apply) ~ b64_url = \"cqLFzQ\" -> (known after apply) byte_length = 4 ~ dec = \"1923270093\" -> (known after apply) ~ hex = \"72a2c5cd\" -> (known after apply) ~ id = \"cqLFzQ\" -> (known after apply) + keepers = { + \"aws_account_id\" = \"123412341234\" + \"env\" = \"xyz-stage\" } # forces replacement } I am not clear why so, am I missing something and not doing it right? ", "keywords": ["bill", "policy"]}, {"source": "Text", "text": "One difference that I see between this new region-scope tf state file from old account-scope one is: the new file does not have any `\"depends_on\"` block under any of the resources `resources[] > instances[]` **Environment:** Local machine: macOS v10.14.6 Terraform v0.12.29 + provider.aws v3.14.1 + provider.null v2.1.2 + provider.random v2.3.1 + provider.template v2.1.2 ---------- ---------- **EDIT 2:** **Here are my Imports and terraform plan:** terraform import module.buckets.random_id.cloudtrail_bucket_suffix cqLFzQ terraform import module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" terraform import module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" terraform import module.buckets.module.access_logging_bucket.aws_s3_bucket.default \"ab-xyz-stage-access-logging-9d8e94ff\" terraform import module.buckets.module.access_logging_bucket.random_id.bucket_suffix nY6U_w terraform import module.encryption.module.data_key.aws_iam_policy.decrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt\" terraform import module.encryption.module.data_key.aws_iam_policy.encrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt\" mymachine:xyz-region-scope kuldeepjain$ ../scripts/terraform.sh xyz-stage plan -no-color + set -o posix + IFS=' ' ++ blhome + BASH_LIB_HOME=/usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT + source /usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT/s3/bucket.sh + main xyz-stage plan -no-color + '[' 3 -lt 2 ']' + local env=xyz-stage + shift + local command=plan + shift ++ get_region xyz-stage ++ local env=xyz-stage ++ shift +++ aws --profile xyz-stage configure get region ++ local region=us-west-2 ++ '[' -z us-west-2 ']' ++ echo us-west-2 + local region=us-west-2 ++ _get_bucket xyz-stage xyz-stage-tfstate ++ local env=xyz-stage ++ shift ++ local name=xyz-stage-tfstate ++ shift +++ _get_bucket_list xyz-stage xyz-stage-tfstate +++ local env=xyz-stage +++ shift +++ local name=xyz-stage-tfstate +++ shift +++ aws --profile xyz-stage --output json s3api list-buckets --query 'Buckets[?contains(Name, `xyz-stage-tfstate`) == `true`].Name' ++ local 'bucket_list=[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ _count_buckets_in_json '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ local 'json=[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ shift +++ echo '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ jq '. | length' ++ local number_of_buckets=1 ++ '[' 1 == 0 ']' ++ '[' 1 -gt 1 ']' +++ echo '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ jq -r '.[0]' ++ local bucket_name=ab-xyz-stage-tfstate-5b8873b8 ++ echo ab-xyz-stage-tfstate-5b8873b8 + local tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 ++ get_config_file xyz-stage us-west-2 ++ local env=xyz-stage ++ shift ++ local region=us-west-2 ++ shift ++ local config_file=config/us-west-2/xyz-stage.tfvars ++ '[' '!' -f config/us-west-2/xyz-stage.tfvars ']' ++ config_file=config/us-west-2/default.tfvars ++ echo config/us-west-2/default.tfvars + local config_file=config/us-west-2/default.tfvars + export TF_DATA_DIR=state/xyz-stage/ + TF_DATA_DIR=state/xyz-stage/ + terraform get + terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color Refreshing Terraform state in-memory prior to plan... ", "keywords": ["provider", "policy"]}, {"source": "Text", "text": "The refreshed state will be used to calculate this plan, but will not be persisted to local or remote state storage. module.encryption.module.data_key.data.null_data_source.key: Refreshing state... module.buckets.data.template_file.dependencies: Refreshing state... module.buckets.module.access_logging_bucket.data.template_file.dependencies: Refreshing state... module.encryption.module.data_key.data.aws_region.current: Refreshing state... module.buckets.module.access_logging_bucket.data.aws_caller_identity.current: Refreshing state... data.aws_caller_identity.current: Refreshing state... module.buckets.module.access_logging_bucket.data.aws_kms_alias.encryption_key_alias: Refreshing state... module.buckets.data.aws_caller_identity.current: Refreshing state... module.encryption.module.data_key.data.aws_caller_identity.current: Refreshing state... module.encryption.module.data_key.data.aws_kms_alias.default: Refreshing state... module.buckets.module.access_logging_bucket.data.template_file.encryption_configuration: Refreshing state... module.encryption.module.data_key.data.aws_iam_policy_document.decrypt: Refreshing state... module.encryption.module.data_key.data.aws_iam_policy_document.encrypt: Refreshing state... module.buckets.module.access_logging_bucket.random_id.bucket_suffix: Refreshing state... [id=nY6U_w] module.encryption.module.data_key.aws_iam_policy.decrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt] module.encryption.module.data_key.aws_iam_policy.encrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt] module.buckets.module.access_logging_bucket.aws_s3_bucket.default: Refreshing state... [id=ab-xyz-stage-access-logging-9d8e94ff] module.buckets.random_id.cloudtrail_bucket_suffix: Refreshing state... [id=cqLFzQ] module.buckets.aws_s3_bucket.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd] module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail: Refreshing state... module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd] ------------------------------------------------------------------------ ", "keywords": ["storage", "policy"]}, {"source": "Text", "text": "Resource actions are indicated with the following symbols: + create -/+ destroy and then create replacement <= read (data resources) Terraform will perform the following actions: # module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply # (config refers to values not yet known) <= data \"aws_iam_policy_document\" \"restrict_access_cloudtrail\" { + id = (known after apply) + json = (known after apply) + statement { + actions = [ + \"s3:GetBucketAcl\", ] + effect = \"Allow\" + resources = [ + (known after apply), ] + sid = \"AWSCloudTrailAclCheck\" + principals { + identifiers = [ + \"cloudtrail.amazonaws.com\", ] + type = \"Service\" } } + statement { + actions = [ + \"s3:PutObject\", ] + effect = \"Allow\" + resources = [ + (known after apply), ] + sid = \"AWSCloudTrailWrite\" + condition { + test = \"StringEquals\" + values = [ + \"bucket-owner-full-control\", ] + variable = \"s3:x-amz-acl\" } + principals { + identifiers = [ + \"cloudtrail.amazonaws.com\", ] + type = \"Service\" } } } # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket must be replaced -/+ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" { + acceleration_status = (known after apply) + acl = \"private\" ~ arn = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) ~ bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement ~ bucket_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\" -> (known after apply) ~ bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\" -> (known after apply) + force_destroy = false ~ hosted_zone_id = \"Z3BJ6K6RIION7M\" -> (known after apply) ~ id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) ~ region = \"us-west-2\" -> (known after apply) ~ request_payer = \"BucketOwner\" -> (known after apply) tags = { \"mycompany:finance:accountenvironment\" = \"xyz-stage\" \"mycompany:finance:application\" = \"ab-platform\" \"mycompany:finance:billablebusinessunit\" = \"my-dev\" \"name\" = \"Cloudtrail logging bucket\" } + website_domain = (known after apply) + website_endpoint = (known after apply) ~ lifecycle_rule { - abort_incomplete_multipart_upload_days = 0 -> null enabled = true ~ id = \"intu-lifecycle-s3-int-tier\" -> (known after apply) - tags = {} -> null transition { days = 32 storage_class = \"INTELLIGENT_TIERING\" } } - logging { - target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" -> null - target_prefix = \"logs/cloudtrail-logging/\" -> null } + logging { + target_bucket = (known after apply) + target_prefix = \"logs/cloudtrail-logging/\" } ~ versioning { ~ enabled = false -> (known after apply) ~ mfa_delete = false -> (known after apply) } } # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket must be replaced -/+ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" { ~ bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement ~ id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) ~ policy = jsonencode( { - Statement = [ - { - Action = \"s3:GetBucketAcl\" - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" - Sid = \"AWSCloudTrailAclCheck\" }, - { - Action = \"s3:PutObject\" - Condition = { - StringEquals = { - s3:x-amz-acl = \"bucket-owner-full-control\" } } - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\" - Sid = \"AWSCloudTrailWrite\" }, ] - Version = \"2012-10-17\" } ) -> (known after apply) } # module.buckets.random_id.cloudtrail_bucket_suffix must be replaced -/+ resource \"random_id\" \"cloudtrail_bucket_suffix\" { ~ b64 = \"cqLFzQ\" -> (known after apply) ~ b64_std = \"cqLFzQ==\" -> (known after apply) ~ b64_url = \"cqLFzQ\" -> (known after apply) byte_length = 4 ~ dec = \"1923270093\" -> (known after apply) ~ hex = \"72a2c5cd\" -> (known after apply) ~ id = \"cqLFzQ\" -> (known after apply) + keepers = { + \"aws_account_id\" = \"123412341234\" + \"env\" = \"xyz-stage\" } # forces replacement } # module.buckets.module.access_logging_bucket.aws_s3_bucket.default must be replaced -/+ resource \"aws_s3_bucket\" \"default\" { + acceleration_status = (known after apply) + acl = \"log-delivery-write\" ~ arn = \"arn:aws:s3:::ab-xyz-stage-access-logging-9d8e94ff\" -> (known after apply) ~ bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" -> (known after apply) # forces replacement ~ bucket_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.amazonaws.com\" -> (known after apply) ~ bucket_regional_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.us-west-2.amazonaws.com\" -> (known after apply) + force_destroy = false ~ hosted_zone_id = \"Z3BJ6K6RIION7M\" -> (known after apply) ~ id = \"ab-xyz-stage-access-logging-9d8e94ff\" -> (known after apply) ~ region = \"us-west-2\" -> (known after apply) ~ request_payer = \"BucketOwner\" -> (known after apply) tags = { \"mycompany:finance:accountenvironment\" = \"xyz-stage\" \"mycompany:finance:application\" = \"ab-platform\" \"mycompany:finance:billablebusinessunit\" = \"my-dev\" \"name\" = \"Access logging bucket\" } + website_domain = (known after apply) + website_endpoint = (known after apply) - grant { - permissions = [ - \"READ_ACP\", - \"WRITE\", ] -> null - type = \"Group\" -> null - uri = \"http://acs.amazonaws.com/groups/s3/LogDelivery\" -> null } - grant { - id = \"0343271a8c2f184152c171b223945b22ceaf5be5c9b78cf167660600747b5ad8\" -> null - permissions = [ - \"FULL_CONTROL\", ] -> null - type = \"CanonicalUser\" -> null } - lifecycle_rule { - abort_incomplete_multipart_upload_days = 0 -> null - enabled = true -> null - id = \"intu-lifecycle-s3-int-tier\" -> null - tags = {} -> null - transition { - days = 32 -> null - storage_class = \"INTELLIGENT_TIERING\" -> null } } + logging { + target_bucket = (known after apply) + target_prefix = \"logs/access-logging/\" } ~ versioning { ~ enabled = false -> (known after apply) ~ mfa_delete = false -> (known after apply) } } # module.buckets.module.access_logging_bucket.random_id.bucket_suffix must be replaced -/+ resource \"random_id\" \"bucket_suffix\" { ~ b64 = \"nY6U_w\" -> (known after apply) ~ b64_std = \"nY6U/w==\" -> (known after apply) ~ b64_url = \"nY6U_w\" -> (known after apply) byte_length = 4 ~ dec = \"2643367167\" -> (known after apply) ~ hex = \"9d8e94ff\" -> (known after apply) ~ id = \"nY6U_w\" -> (known after apply) + keepers = { + \"aws_account_id\" = \"123412341234\" + \"env\" = \"xyz-stage\" } # forces replacement } Plan: 6 to add, 0 to change, 5 to destroy", "keywords": ["bill", "policy", "change", "test"]}]}, {"Id": "234643073", "PostHistoryTypeId": "5", "PostId": "64758624", "RevisionGUID": "5ded6e83-2b40-46e4-9b3e-5ccdb36bb922", "CreationDate": "2020-11-10T17:38:21.033", "UserId": "948268", "Comment": "Deleted redundant code snippet", "Text": "**Some Background:**\r\nWe have terraform code to create various AWS resources. Some of these resources are created per AWS account and hence are structured to be stored in a `account-scope` folder in our project. This was when we were only having one AWS region. Now our application is made multi-region and hence these resources are to be created per region for each AWS account.\r\n\r\nIn order to do that we have now moved these TF scripts to `region-scope` folder which will be run per region. Since these resources are no longer part of *'account scope'* we have removed them from the account scope *Terraform state*.\r\nNow when I try to import these resources \r\n\r\n**Imported the resources by running this from `xyz-region-scope` directory:**\r\n\r\n    terraform import -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color <RESOURCE_NAME> <RESOURCE_ID>\r\n\r\nOne of the examples of a resource is:\r\n\r\n    RESOURCE_NAME=module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \r\n    RESOURCE_ID=\"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n\r\nI was expecting the imports would update the resources in the terraform state file on my local machine but the terraform state file created under `xyz-region-scope/state/xyz-stage/terraform.tfstate` is not updated.\r\n\r\n**Verified the Imports with:**\r\n\r\n    terraform show\r\n\r\n\r\n**Run terraform plan:**\r\n\r\n    terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color\r\n\r\nBut the terraform plan output shows `Plan: 6 to add, 0 to change, 5 to destroy.` that is those resources will be destroyed and recreated.\r\n\r\n\r\nI am not clear why so, am I missing something and not doing it right?\r\n\r\n\r\nPlease note we store the remote state in S3 bucket <s>but I currently do not have the remote TF state file created in S3 bucket for **region scope** (I do have one for *account scope* though). I was expecting that the `Import..Plan..Apply` process will create one for region scope as well.</s>\r\n\r\n**EDIT:** I see the remote TF state file created in the S3 for region scope after running imports. One difference that I see between this new region-scope tf state file from old account-scope one is: the new file does not have any `\"depends_on\"` block under any of the resources `resources[] > instances[]`\r\n\r\n**Environment:**\r\n\r\n    Local machine: macOS v10.14.6\r\n\r\n    Terraform v0.12.29\r\n    + provider.aws v3.14.1\r\n    + provider.null v2.1.2\r\n    + provider.random v2.3.1\r\n    + provider.template v2.1.2\r\n\r\n\r\n----------\r\n\r\n\r\n----------\r\n**EDIT 2:**\r\n\r\n**Here are my Imports and terraform plan:**\r\n\r\n    terraform import module.buckets.random_id.cloudtrail_bucket_suffix cqLFzQ\r\n    terraform import module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n    terraform import  module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n    terraform import  module.buckets.module.access_logging_bucket.aws_s3_bucket.default \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n    terraform import  module.buckets.module.access_logging_bucket.random_id.bucket_suffix  nY6U_w\r\n    terraform import module.encryption.module.data_key.aws_iam_policy.decrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt\"\r\n    terraform import module.encryption.module.data_key.aws_iam_policy.encrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt\"\r\n\r\n\r\n\r\n    mymachine:xyz-region-scope kuldeepjain$ ../scripts/terraform.sh xyz-stage plan -no-color\r\n    + set -o posix\r\n    + IFS='\r\n     '\r\n    ++ blhome\r\n    + BASH_LIB_HOME=/usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT\r\n    + source /usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT/s3/bucket.sh\r\n    + main xyz-stage plan -no-color\r\n    + '[' 3 -lt 2 ']'\r\n    + local env=xyz-stage\r\n    + shift\r\n    + local command=plan\r\n    + shift\r\n    ++ get_region xyz-stage\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    +++ aws --profile xyz-stage configure get region\r\n    ++ local region=us-west-2\r\n    ++ '[' -z us-west-2 ']'\r\n    ++ echo us-west-2\r\n    + local region=us-west-2\r\n    ++ _get_bucket xyz-stage xyz-stage-tfstate\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    ++ local name=xyz-stage-tfstate\r\n    ++ shift\r\n    +++ _get_bucket_list xyz-stage xyz-stage-tfstate\r\n    +++ local env=xyz-stage\r\n    +++ shift\r\n    +++ local name=xyz-stage-tfstate\r\n    +++ shift\r\n    +++ aws --profile xyz-stage --output json s3api list-buckets --query 'Buckets[?contains(Name, `xyz-stage-tfstate`) == `true`].Name'\r\n    ++ local 'bucket_list=[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ _count_buckets_in_json '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ local 'json=[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ shift\r\n    +++ echo '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ jq '. | length'\r\n    ++ local number_of_buckets=1\r\n    ++ '[' 1 == 0 ']'\r\n    ++ '[' 1 -gt 1 ']'\r\n    +++ echo '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ jq -r '.[0]'\r\n    ++ local bucket_name=ab-xyz-stage-tfstate-5b8873b8\r\n    ++ echo ab-xyz-stage-tfstate-5b8873b8\r\n    + local tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8\r\n    ++ get_config_file xyz-stage us-west-2\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    ++ local region=us-west-2\r\n    ++ shift\r\n    ++ local config_file=config/us-west-2/xyz-stage.tfvars\r\n    ++ '[' '!' -f config/us-west-2/xyz-stage.tfvars ']'\r\n    ++ config_file=config/us-west-2/default.tfvars\r\n    ++ echo config/us-west-2/default.tfvars\r\n    + local config_file=config/us-west-2/default.tfvars\r\n    + export TF_DATA_DIR=state/xyz-stage/\r\n    + TF_DATA_DIR=state/xyz-stage/\r\n    + terraform get\r\n    + terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color\r\n    Refreshing Terraform state in-memory prior to plan...\r\n    The refreshed state will be used to calculate this plan, but will not be\r\n    persisted to local or remote state storage.\r\n    \r\n    module.encryption.module.data_key.data.null_data_source.key: Refreshing state...\r\n    module.buckets.data.template_file.dependencies: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.template_file.dependencies: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_region.current: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.aws_caller_identity.current: Refreshing state...\r\n    data.aws_caller_identity.current: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.aws_kms_alias.encryption_key_alias: Refreshing state...\r\n    module.buckets.data.aws_caller_identity.current: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_caller_identity.current: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_kms_alias.default: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.template_file.encryption_configuration: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_iam_policy_document.decrypt: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_iam_policy_document.encrypt: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.random_id.bucket_suffix: Refreshing state... [id=nY6U_w]\r\n    module.encryption.module.data_key.aws_iam_policy.decrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt]\r\n    module.encryption.module.data_key.aws_iam_policy.encrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt]\r\n    module.buckets.module.access_logging_bucket.aws_s3_bucket.default: Refreshing state... [id=ab-xyz-stage-access-logging-9d8e94ff]\r\n    module.buckets.random_id.cloudtrail_bucket_suffix: Refreshing state... [id=cqLFzQ]\r\n    module.buckets.aws_s3_bucket.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd]\r\n    module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail: Refreshing state...\r\n    module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd]\r\n    \r\n    ------------------------------------------------------------------------\r\n    \r\n    An execution plan has been generated and is shown below.\r\n    Resource actions are indicated with the following symbols:\r\n      + create\r\n    -/+ destroy and then create replacement\r\n     <= read (data resources)\r\n    \r\n    Terraform will perform the following actions:\r\n    \r\n      # module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply\r\n      # (config refers to values not yet known)\r\n     <= data \"aws_iam_policy_document\" \"restrict_access_cloudtrail\"  {\r\n          + id   = (known after apply)\r\n          + json = (known after apply)\r\n    \r\n          + statement {\r\n              + actions   = [\r\n                  + \"s3:GetBucketAcl\",\r\n                ]\r\n              + effect    = \"Allow\"\r\n              + resources = [\r\n                  + (known after apply),\r\n                ]\r\n              + sid       = \"AWSCloudTrailAclCheck\"\r\n    \r\n              + principals {\r\n                  + identifiers = [\r\n                      + \"cloudtrail.amazonaws.com\",\r\n                    ]\r\n                  + type        = \"Service\"\r\n                }\r\n            }\r\n          + statement {\r\n              + actions   = [\r\n                  + \"s3:PutObject\",\r\n                ]\r\n              + effect    = \"Allow\"\r\n              + resources = [\r\n                  + (known after apply),\r\n                ]\r\n              + sid       = \"AWSCloudTrailWrite\"\r\n    \r\n              + condition {\r\n                  + test     = \"StringEquals\"\r\n                  + values   = [\r\n                      + \"bucket-owner-full-control\",\r\n                    ]\r\n                  + variable = \"s3:x-amz-acl\"\r\n                }\r\n    \r\n              + principals {\r\n                  + identifiers = [\r\n                      + \"cloudtrail.amazonaws.com\",\r\n                    ]\r\n                  + type        = \"Service\"\r\n                }\r\n            }\r\n        }\r\n    \r\n      # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket must be replaced\r\n    -/+ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" {\r\n          + acceleration_status         = (known after apply)\r\n          + acl                         = \"private\"\r\n          ~ arn                         = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply)\r\n          ~ bucket                      = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement\r\n          ~ bucket_domain_name          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\" -> (known after apply)\r\n          ~ bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\" -> (known after apply)\r\n          + force_destroy               = false\r\n          ~ hosted_zone_id              = \"Z3BJ6K6RIION7M\" -> (known after apply)\r\n          ~ id                          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply)\r\n          ~ region                      = \"us-west-2\" -> (known after apply)\r\n          ~ request_payer               = \"BucketOwner\" -> (known after apply)\r\n            tags                        = {\r\n                \"mycompany:finance:accountenvironment\"   = \"xyz-stage\"\r\n                \"mycompany:finance:application\"          = \"ab-platform\"\r\n                \"mycompany:finance:billablebusinessunit\" = \"my-dev\"\r\n                \"name\"                                = \"Cloudtrail logging bucket\"\r\n            }\r\n          + website_domain              = (known after apply)\r\n          + website_endpoint            = (known after apply)\r\n    \r\n          ~ lifecycle_rule {\r\n              - abort_incomplete_multipart_upload_days = 0 -> null\r\n                enabled                                = true\r\n              ~ id                                     = \"intu-lifecycle-s3-int-tier\" -> (known after apply)\r\n              - tags                                   = {} -> null\r\n    \r\n                transition {\r\n                    days          = 32\r\n                    storage_class = \"INTELLIGENT_TIERING\"\r\n                }\r\n            }\r\n    \r\n          - logging {\r\n              - target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" -> null\r\n              - target_prefix = \"logs/cloudtrail-logging/\" -> null\r\n            }\r\n          + logging {\r\n              + target_bucket = (known after apply)\r\n              + target_prefix = \"logs/cloudtrail-logging/\"\r\n            }\r\n    \r\n          ~ versioning {\r\n              ~ enabled    = false -> (known after apply)\r\n              ~ mfa_delete = false -> (known after apply)\r\n            }\r\n        }\r\n    \r\n      # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket must be replaced\r\n    -/+ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" {\r\n          ~ bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement\r\n          ~ id     = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply)\r\n          ~ policy = jsonencode(\r\n                {\r\n                  - Statement = [\r\n                      - {\r\n                          - Action    = \"s3:GetBucketAcl\"\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n                          - Sid       = \"AWSCloudTrailAclCheck\"\r\n                        },\r\n                      - {\r\n                          - Action    = \"s3:PutObject\"\r\n                          - Condition = {\r\n                              - StringEquals = {\r\n                                  - s3:x-amz-acl = \"bucket-owner-full-control\"\r\n                                }\r\n                            }\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\"\r\n                          - Sid       = \"AWSCloudTrailWrite\"\r\n                        },\r\n                    ]\r\n                  - Version   = \"2012-10-17\"\r\n                }\r\n            ) -> (known after apply)\r\n        }\r\n    \r\n      # module.buckets.random_id.cloudtrail_bucket_suffix must be replaced\r\n    -/+ resource \"random_id\" \"cloudtrail_bucket_suffix\" {\r\n          ~ b64         = \"cqLFzQ\" -> (known after apply)\r\n          ~ b64_std     = \"cqLFzQ==\" -> (known after apply)\r\n          ~ b64_url     = \"cqLFzQ\" -> (known after apply)\r\n            byte_length = 4\r\n          ~ dec         = \"1923270093\" -> (known after apply)\r\n          ~ hex         = \"72a2c5cd\" -> (known after apply)\r\n          ~ id          = \"cqLFzQ\" -> (known after apply)\r\n          + keepers     = {\r\n              + \"aws_account_id\" = \"123412341234\"\r\n              + \"env\"            = \"xyz-stage\"\r\n            } # forces replacement\r\n        }\r\n    \r\n      # module.buckets.module.access_logging_bucket.aws_s3_bucket.default must be replaced\r\n    -/+ resource \"aws_s3_bucket\" \"default\" {\r\n          + acceleration_status         = (known after apply)\r\n          + acl                         = \"log-delivery-write\"\r\n          ~ arn                         = \"arn:aws:s3:::ab-xyz-stage-access-logging-9d8e94ff\" -> (known after apply)\r\n          ~ bucket                      = \"ab-xyz-stage-access-logging-9d8e94ff\" -> (known after apply) # forces replacement\r\n          ~ bucket_domain_name          = \"ab-xyz-stage-access-logging-9d8e94ff.s3.amazonaws.com\" -> (known after apply)\r\n          ~ bucket_regional_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.us-west-2.amazonaws.com\" -> (known after apply)\r\n          + force_destroy               = false\r\n          ~ hosted_zone_id              = \"Z3BJ6K6RIION7M\" -> (known after apply)\r\n          ~ id                          = \"ab-xyz-stage-access-logging-9d8e94ff\" -> (known after apply)\r\n          ~ region                      = \"us-west-2\" -> (known after apply)\r\n          ~ request_payer               = \"BucketOwner\" -> (known after apply)\r\n            tags                        = {\r\n                \"mycompany:finance:accountenvironment\"   = \"xyz-stage\"\r\n                \"mycompany:finance:application\"          = \"ab-platform\"\r\n                \"mycompany:finance:billablebusinessunit\" = \"my-dev\"\r\n                \"name\"                                = \"Access logging bucket\"\r\n            }\r\n          + website_domain              = (known after apply)\r\n          + website_endpoint            = (known after apply)\r\n    \r\n          - grant {\r\n              - permissions = [\r\n                  - \"READ_ACP\",\r\n                  - \"WRITE\",\r\n                ] -> null\r\n              - type        = \"Group\" -> null\r\n              - uri         = \"http://acs.amazonaws.com/groups/s3/LogDelivery\" -> null\r\n            }\r\n          - grant {\r\n              - id          = \"0343271a8c2f184152c171b223945b22ceaf5be5c9b78cf167660600747b5ad8\" -> null\r\n              - permissions = [\r\n                  - \"FULL_CONTROL\",\r\n                ] -> null\r\n              - type        = \"CanonicalUser\" -> null\r\n            }\r\n    \r\n          - lifecycle_rule {\r\n              - abort_incomplete_multipart_upload_days = 0 -> null\r\n              - enabled                                = true -> null\r\n              - id                                     = \"intu-lifecycle-s3-int-tier\" -> null\r\n              - tags                                   = {} -> null\r\n    \r\n              - transition {\r\n                  - days          = 32 -> null\r\n                  - storage_class = \"INTELLIGENT_TIERING\" -> null\r\n                }\r\n            }\r\n    \r\n          + logging {\r\n              + target_bucket = (known after apply)\r\n              + target_prefix = \"logs/access-logging/\"\r\n            }\r\n    \r\n          ~ versioning {\r\n              ~ enabled    = false -> (known after apply)\r\n              ~ mfa_delete = false -> (known after apply)\r\n            }\r\n        }\r\n    \r\n      # module.buckets.module.access_logging_bucket.random_id.bucket_suffix must be replaced\r\n    -/+ resource \"random_id\" \"bucket_suffix\" {\r\n          ~ b64         = \"nY6U_w\" -> (known after apply)\r\n          ~ b64_std     = \"nY6U/w==\" -> (known after apply)\r\n          ~ b64_url     = \"nY6U_w\" -> (known after apply)\r\n            byte_length = 4\r\n          ~ dec         = \"2643367167\" -> (known after apply)\r\n          ~ hex         = \"9d8e94ff\" -> (known after apply)\r\n          ~ id          = \"nY6U_w\" -> (known after apply)\r\n          + keepers     = {\r\n              + \"aws_account_id\" = \"123412341234\"\r\n              + \"env\"            = \"xyz-stage\"\r\n            } # forces replacement\r\n        }\r\n    \r\n    Plan: 6 to add, 0 to change, 5 to destroy.\r\n\r\n\r\nSnippet of Diff of my current remote TF state(**LEFT**) vs old account-scope(**RIGHT**) for `cloudtrail_bucket_suffix`:\r\n\r\n[![Snippet of Diff of my current remote TF state(**LEFT**) vs old account-scope(**RIGHT**) for `cloudtrail_bucket_suffix`][1]][1]\r\n\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/NvnCx.png", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "But the terraform plan output shows `Plan: 6 to add, 0 to change, 5 to destroy.", "keywords": ["change"]}, {"source": "Text", "text": "One difference that I see between this new region-scope tf state file from old account-scope one is: the new file does not have any `\"depends_on\"` block under any of the resources `resources[] > instances[]` **Environment:** Local machine: macOS v10.14.6 Terraform v0.12.29 + provider.aws v3.14.1 + provider.null v2.1.2 + provider.random v2.3.1 + provider.template v2.1.2 ---------- ---------- **EDIT 2:** **Here are my Imports and terraform plan:** terraform import module.buckets.random_id.cloudtrail_bucket_suffix cqLFzQ terraform import module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" terraform import module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" terraform import module.buckets.module.access_logging_bucket.aws_s3_bucket.default \"ab-xyz-stage-access-logging-9d8e94ff\" terraform import module.buckets.module.access_logging_bucket.random_id.bucket_suffix nY6U_w terraform import module.encryption.module.data_key.aws_iam_policy.decrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt\" terraform import module.encryption.module.data_key.aws_iam_policy.encrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt\" mymachine:xyz-region-scope kuldeepjain$ ../scripts/terraform.sh xyz-stage plan -no-color + set -o posix + IFS=' ' ++ blhome + BASH_LIB_HOME=/usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT + source /usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT/s3/bucket.sh + main xyz-stage plan -no-color + '[' 3 -lt 2 ']' + local env=xyz-stage + shift + local command=plan + shift ++ get_region xyz-stage ++ local env=xyz-stage ++ shift +++ aws --profile xyz-stage configure get region ++ local region=us-west-2 ++ '[' -z us-west-2 ']' ++ echo us-west-2 + local region=us-west-2 ++ _get_bucket xyz-stage xyz-stage-tfstate ++ local env=xyz-stage ++ shift ++ local name=xyz-stage-tfstate ++ shift +++ _get_bucket_list xyz-stage xyz-stage-tfstate +++ local env=xyz-stage +++ shift +++ local name=xyz-stage-tfstate +++ shift +++ aws --profile xyz-stage --output json s3api list-buckets --query 'Buckets[?contains(Name, `xyz-stage-tfstate`) == `true`].Name' ++ local 'bucket_list=[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ _count_buckets_in_json '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ local 'json=[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ shift +++ echo '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ jq '. | length' ++ local number_of_buckets=1 ++ '[' 1 == 0 ']' ++ '[' 1 -gt 1 ']' +++ echo '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ jq -r '.[0]' ++ local bucket_name=ab-xyz-stage-tfstate-5b8873b8 ++ echo ab-xyz-stage-tfstate-5b8873b8 + local tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 ++ get_config_file xyz-stage us-west-2 ++ local env=xyz-stage ++ shift ++ local region=us-west-2 ++ shift ++ local config_file=config/us-west-2/xyz-stage.tfvars ++ '[' '!' -f config/us-west-2/xyz-stage.tfvars ']' ++ config_file=config/us-west-2/default.tfvars ++ echo config/us-west-2/default.tfvars + local config_file=config/us-west-2/default.tfvars + export TF_DATA_DIR=state/xyz-stage/ + TF_DATA_DIR=state/xyz-stage/ + terraform get + terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color Refreshing Terraform state in-memory prior to plan... ", "keywords": ["provider", "policy"]}, {"source": "Text", "text": "The refreshed state will be used to calculate this plan, but will not be persisted to local or remote state storage. module.encryption.module.data_key.data.null_data_source.key: Refreshing state... module.buckets.data.template_file.dependencies: Refreshing state... module.buckets.module.access_logging_bucket.data.template_file.dependencies: Refreshing state... module.encryption.module.data_key.data.aws_region.current: Refreshing state... module.buckets.module.access_logging_bucket.data.aws_caller_identity.current: Refreshing state... data.aws_caller_identity.current: Refreshing state... module.buckets.module.access_logging_bucket.data.aws_kms_alias.encryption_key_alias: Refreshing state... module.buckets.data.aws_caller_identity.current: Refreshing state... module.encryption.module.data_key.data.aws_caller_identity.current: Refreshing state... module.encryption.module.data_key.data.aws_kms_alias.default: Refreshing state... module.buckets.module.access_logging_bucket.data.template_file.encryption_configuration: Refreshing state... module.encryption.module.data_key.data.aws_iam_policy_document.decrypt: Refreshing state... module.encryption.module.data_key.data.aws_iam_policy_document.encrypt: Refreshing state... module.buckets.module.access_logging_bucket.random_id.bucket_suffix: Refreshing state... [id=nY6U_w] module.encryption.module.data_key.aws_iam_policy.decrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt] module.encryption.module.data_key.aws_iam_policy.encrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt] module.buckets.module.access_logging_bucket.aws_s3_bucket.default: Refreshing state... [id=ab-xyz-stage-access-logging-9d8e94ff] module.buckets.random_id.cloudtrail_bucket_suffix: Refreshing state... [id=cqLFzQ] module.buckets.aws_s3_bucket.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd] module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail: Refreshing state... module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd] ------------------------------------------------------------------------ ", "keywords": ["storage", "policy"]}, {"source": "Text", "text": "Resource actions are indicated with the following symbols: + create -/+ destroy and then create replacement <= read (data resources) Terraform will perform the following actions: # module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply # (config refers to values not yet known) <= data \"aws_iam_policy_document\" \"restrict_access_cloudtrail\" { + id = (known after apply) + json = (known after apply) + statement { + actions = [ + \"s3:GetBucketAcl\", ] + effect = \"Allow\" + resources = [ + (known after apply), ] + sid = \"AWSCloudTrailAclCheck\" + principals { + identifiers = [ + \"cloudtrail.amazonaws.com\", ] + type = \"Service\" } } + statement { + actions = [ + \"s3:PutObject\", ] + effect = \"Allow\" + resources = [ + (known after apply), ] + sid = \"AWSCloudTrailWrite\" + condition { + test = \"StringEquals\" + values = [ + \"bucket-owner-full-control\", ] + variable = \"s3:x-amz-acl\" } + principals { + identifiers = [ + \"cloudtrail.amazonaws.com\", ] + type = \"Service\" } } } # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket must be replaced -/+ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" { + acceleration_status = (known after apply) + acl = \"private\" ~ arn = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) ~ bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement ~ bucket_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\" -> (known after apply) ~ bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\" -> (known after apply) + force_destroy = false ~ hosted_zone_id = \"Z3BJ6K6RIION7M\" -> (known after apply) ~ id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) ~ region = \"us-west-2\" -> (known after apply) ~ request_payer = \"BucketOwner\" -> (known after apply) tags = { \"mycompany:finance:accountenvironment\" = \"xyz-stage\" \"mycompany:finance:application\" = \"ab-platform\" \"mycompany:finance:billablebusinessunit\" = \"my-dev\" \"name\" = \"Cloudtrail logging bucket\" } + website_domain = (known after apply) + website_endpoint = (known after apply) ~ lifecycle_rule { - abort_incomplete_multipart_upload_days = 0 -> null enabled = true ~ id = \"intu-lifecycle-s3-int-tier\" -> (known after apply) - tags = {} -> null transition { days = 32 storage_class = \"INTELLIGENT_TIERING\" } } - logging { - target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" -> null - target_prefix = \"logs/cloudtrail-logging/\" -> null } + logging { + target_bucket = (known after apply) + target_prefix = \"logs/cloudtrail-logging/\" } ~ versioning { ~ enabled = false -> (known after apply) ~ mfa_delete = false -> (known after apply) } } # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket must be replaced -/+ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" { ~ bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) # forces replacement ~ id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" -> (known after apply) ~ policy = jsonencode( { - Statement = [ - { - Action = \"s3:GetBucketAcl\" - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" - Sid = \"AWSCloudTrailAclCheck\" }, - { - Action = \"s3:PutObject\" - Condition = { - StringEquals = { - s3:x-amz-acl = \"bucket-owner-full-control\" } } - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\" - Sid = \"AWSCloudTrailWrite\" }, ] - Version = \"2012-10-17\" } ) -> (known after apply) } # module.buckets.random_id.cloudtrail_bucket_suffix must be replaced -/+ resource \"random_id\" \"cloudtrail_bucket_suffix\" { ~ b64 = \"cqLFzQ\" -> (known after apply) ~ b64_std = \"cqLFzQ==\" -> (known after apply) ~ b64_url = \"cqLFzQ\" -> (known after apply) byte_length = 4 ~ dec = \"1923270093\" -> (known after apply) ~ hex = \"72a2c5cd\" -> (known after apply) ~ id = \"cqLFzQ\" -> (known after apply) + keepers = { + \"aws_account_id\" = \"123412341234\" + \"env\" = \"xyz-stage\" } # forces replacement } # module.buckets.module.access_logging_bucket.aws_s3_bucket.default must be replaced -/+ resource \"aws_s3_bucket\" \"default\" { + acceleration_status = (known after apply) + acl = \"log-delivery-write\" ~ arn = \"arn:aws:s3:::ab-xyz-stage-access-logging-9d8e94ff\" -> (known after apply) ~ bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" -> (known after apply) # forces replacement ~ bucket_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.amazonaws.com\" -> (known after apply) ~ bucket_regional_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.us-west-2.amazonaws.com\" -> (known after apply) + force_destroy = false ~ hosted_zone_id = \"Z3BJ6K6RIION7M\" -> (known after apply) ~ id = \"ab-xyz-stage-access-logging-9d8e94ff\" -> (known after apply) ~ region = \"us-west-2\" -> (known after apply) ~ request_payer = \"BucketOwner\" -> (known after apply) tags = { \"mycompany:finance:accountenvironment\" = \"xyz-stage\" \"mycompany:finance:application\" = \"ab-platform\" \"mycompany:finance:billablebusinessunit\" = \"my-dev\" \"name\" = \"Access logging bucket\" } + website_domain = (known after apply) + website_endpoint = (known after apply) - grant { - permissions = [ - \"READ_ACP\", - \"WRITE\", ] -> null - type = \"Group\" -> null - uri = \"http://acs.amazonaws.com/groups/s3/LogDelivery\" -> null } - grant { - id = \"0343271a8c2f184152c171b223945b22ceaf5be5c9b78cf167660600747b5ad8\" -> null - permissions = [ - \"FULL_CONTROL\", ] -> null - type = \"CanonicalUser\" -> null } - lifecycle_rule { - abort_incomplete_multipart_upload_days = 0 -> null - enabled = true -> null - id = \"intu-lifecycle-s3-int-tier\" -> null - tags = {} -> null - transition { - days = 32 -> null - storage_class = \"INTELLIGENT_TIERING\" -> null } } + logging { + target_bucket = (known after apply) + target_prefix = \"logs/access-logging/\" } ~ versioning { ~ enabled = false -> (known after apply) ~ mfa_delete = false -> (known after apply) } } # module.buckets.module.access_logging_bucket.random_id.bucket_suffix must be replaced -/+ resource \"random_id\" \"bucket_suffix\" { ~ b64 = \"nY6U_w\" -> (known after apply) ~ b64_std = \"nY6U/w==\" -> (known after apply) ~ b64_url = \"nY6U_w\" -> (known after apply) byte_length = 4 ~ dec = \"2643367167\" -> (known after apply) ~ hex = \"9d8e94ff\" -> (known after apply) ~ id = \"nY6U_w\" -> (known after apply) + keepers = { + \"aws_account_id\" = \"123412341234\" + \"env\" = \"xyz-stage\" } # forces replacement } Plan: 6 to add, 0 to change, 5 to destroy", "keywords": ["bill", "policy", "change", "test"]}]}], "answers": [{"Id": "64771162", "PostTypeId": "2", "ParentId": "64758624", "CreationDate": "2020-11-10T14:47:40.450", "Score": "2", "Body": "<p>The plan shows a difference in the name of the bucket (<code>bucket</code> forces replacement).</p>\n<p>This triggers recreation of the bucket itself and dependent resources.</p>\n<p>You need to get the bucket name to a stable state, then the rest will be stable as well. As you are using a random suffix for the bucket name, I suspect you forget to import this. The <code>random_id</code> resource allows imports like this:</p>\n<pre><code>terraform import module.buckets.random_id.cloudtrail_bucket_suffix cqLFzQ\n</code></pre>\n<h3>Edit:</h3>\n<p>However, you will need to remove the <code>keepers</code> as they trigger the replacement of the <code>random_id</code> resource. <code>keepers</code> are used to trigger the recreation of dependent resources whenever other resources change.</p>\n<p>I assume this is not what you want for your buckets as the keepers you defined seem to be stable/static: <code>account_id</code> and <code>env</code> are both unlikely to change for this deployment. If you really need them you can try to manipulate the state either manually.</p>\n", "OwnerUserId": "2157547", "LastEditorUserId": "2157547", "LastEditDate": "2020-11-10T23:01:04.773", "LastActivityDate": "2020-11-10T23:01:04.773", "CommentCount": "10", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "114524055", "PostId": "64771162", "Score": "0", "Text": "Thanks Mariux. Yes, we are using random_id and I have already imported that. It is this: `terraform import module.buckets.random_id.cloudtrail_bucket_suffix cqLFzQ`", "CreationDate": "2020-11-10T16:27:25.800", "UserId": "948268", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "114524656", "PostId": "64771162", "Score": "1", "Text": "I added full `terraform import` and `terraform plan` output for reference. Pls see my updated question.", "CreationDate": "2020-11-10T16:50:24.850", "UserId": "948268", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "114524709", "PostId": "64771162", "Score": "0", "Text": "sorry.. yes missed this... see my updated version.. the keepers shoudl be removed.. if you really need them, i could try out a trick we once used for a customer... never tried it with random_id though...", "CreationDate": "2020-11-10T16:52:01.120", "UserId": "2157547", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "114525405", "PostId": "64771162", "Score": "0", "Text": "I want to keep the `keepers`. When you say trick do you mean updating the current remote TF state file to have `keeepers` etc.? I added a diff of current remote state vs what it was when this resource was part of **account-scope**. Pls check", "CreationDate": "2020-11-10T17:15:26.560", "UserId": "948268", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "114533075", "PostId": "64771162", "Score": "0", "Text": "Due to the nature of the resource being random our import sequence for another resource did not work. So the only way i see here is to manipulate the state manually and open an issue in the repository of the provider to support importing keepers.\nsorry for not having better options here.", "CreationDate": "2020-11-10T23:00:40.113", "UserId": "2157547", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "So the only way i see here is to manipulate the state manually and open an issue in the repository of the provider to support importing keepers. ", "keywords": ["provider"]}]}, {"Id": "114533495", "PostId": "64771162", "Score": "0", "Text": "When you say update the state manually, you mean updating the remote state file in S3 (adding the keepers)? And then run `terraform plan`?", "CreationDate": "2020-11-10T23:27:38.797", "UserId": "948268", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "114535374", "PostId": "64771162", "Score": "0", "Text": "yes... do manually what the import should have done.. pull the state, add the keepers, push the state back.. as this is risky, be sure to not break anything and put your infrastructure at rsik.. personally i would just remove the keepers. But open an issue in the provider to add support for importing keepers which would be the desired functionality..", "CreationDate": "2020-11-11T01:57:46.680", "UserId": "2157547", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "But open an issue in the provider to add support for importing keepers which would be the desired functionality..", "keywords": ["provider"]}]}, {"Id": "114536249", "PostId": "64771162", "Score": "0", "Text": "Sounds good, Yes I modified the remote state to include the `keepers` and now I am down to `Plan: 1 to add, 3 to change, 0 to destroy.` Will check those for differences.\nBut ideally it should not show any change, right?\nAnd once I have that state I should go ahead and run `terraform apply` (sorry I am quite new to terraform, so asking these basic things)", "CreationDate": "2020-11-11T03:14:19.877", "UserId": "948268", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Sounds good, Yes I modified the remote state to include the `keepers` and now I am down to `Plan: 1 to add, 3 to change, 0 to destroy.", "keywords": ["change"]}, {"source": "Text", "text": "But ideally it should not show any change, right? ", "keywords": ["change"]}]}, {"Id": "114719225", "PostId": "64771162", "Score": "0", "Text": "Does the issue (import not working as expected due to random nature of resource) lies with provider `aws` or `random`. Where should I open the issue?", "CreationDate": "2020-11-18T02:14:37.780", "UserId": "948268", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Does the issue (import not working as expected due to random nature of resource) lies with provider `aws` or `random`. ", "keywords": ["provider"]}]}, {"Id": "114748448", "PostId": "64771162", "Score": "0", "Text": "https://github.com/hashicorp/terraform-provider-random/issues/106 seems to be like your issue... maybe you can add a comment there and clarify that this is needed... also search for other related issues there.. happy coding ;)", "CreationDate": "2020-11-18T23:25:32.423", "UserId": "2157547", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "https://github.com/hashicorp/terraform-provider-random/issues/106 seems to be like your issue... ", "keywords": ["provider"]}]}], "history": [{"Id": "234631311", "PostHistoryTypeId": "2", "PostId": "64771162", "RevisionGUID": "44ec7821-0c30-494e-ac3d-307aad098c98", "CreationDate": "2020-11-10T14:47:40.450", "UserId": "2157547", "Text": "The plan shows a difference in the name of the bucket (`bucket` forces replacement).\r\n\r\nThis triggers recreation of the bucket itself and dependent resources.\r\n\r\nYou need to get the bucket name to a stable state, then the rest will be stable as well. As you are using a random suffix for the bucket name, I suspect you forget to import this. The `random_id` resource allows imports like this: \r\n\r\n```\r\nterraform import module.buckets.random_id.cloudtrail_bucket_suffix 72a2c5cd\r\n```\r\n\r\nI assumed `72a2c5cd` being the real suffix you are using. Adjust if this is not the case.\r\n\r\n\r\nI hope this fixes your issue and brings your config to a stable state.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "234640000", "PostHistoryTypeId": "5", "PostId": "64771162", "RevisionGUID": "e08d0b89-ca81-4e4e-8c8e-b37f82d0dac0", "CreationDate": "2020-11-10T16:51:06.173", "UserId": "2157547", "Comment": "Added remove keepers notes", "Text": "The plan shows a difference in the name of the bucket (`bucket` forces replacement).\r\n\r\nThis triggers recreation of the bucket itself and dependent resources.\r\n\r\nYou need to get the bucket name to a stable state, then the rest will be stable as well. As you are using a random suffix for the bucket name, I suspect you forget to import this. The `random_id` resource allows imports like this: \r\n\r\n```\r\nterraform import module.buckets.random_id.cloudtrail_bucket_suffix cqLFzQ\r\n```\r\n\r\n### Edit:\r\nHowever, you will need to remove the `keepers` as they trigger the replacement of the `random_id` resource. `keepers` are used to trigger the recreation of dependent resources whenever other resources change.\r\n\r\nI assume this is not what you want for your buckets as the keepers you defined seem to be stable/static: `account_id` and `env` are both unlikely to change for this deployment. If you really need them you can try to manipulate the state either manually or try trick it.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "`keepers` are used to trigger the recreation of dependent resources whenever other resources change. ", "keywords": ["change"]}, {"source": "Text", "text": "I assume this is not what you want for your buckets as the keepers you defined seem to be stable/static: `account_id` and `env` are both unlikely to change for this deployment. ", "keywords": ["change"]}]}, {"Id": "234660045", "PostHistoryTypeId": "5", "PostId": "64771162", "RevisionGUID": "ad85d3e5-5286-4049-9588-14779267fe82", "CreationDate": "2020-11-10T23:01:04.773", "UserId": "2157547", "Comment": "remove trick idea", "Text": "The plan shows a difference in the name of the bucket (`bucket` forces replacement).\r\n\r\nThis triggers recreation of the bucket itself and dependent resources.\r\n\r\nYou need to get the bucket name to a stable state, then the rest will be stable as well. As you are using a random suffix for the bucket name, I suspect you forget to import this. The `random_id` resource allows imports like this: \r\n\r\n```\r\nterraform import module.buckets.random_id.cloudtrail_bucket_suffix cqLFzQ\r\n```\r\n\r\n### Edit:\r\nHowever, you will need to remove the `keepers` as they trigger the replacement of the `random_id` resource. `keepers` are used to trigger the recreation of dependent resources whenever other resources change.\r\n\r\nI assume this is not what you want for your buckets as the keepers you defined seem to be stable/static: `account_id` and `env` are both unlikely to change for this deployment. If you really need them you can try to manipulate the state either manually.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "`keepers` are used to trigger the recreation of dependent resources whenever other resources change. ", "keywords": ["change"]}, {"source": "Text", "text": "I assume this is not what you want for your buckets as the keepers you defined seem to be stable/static: `account_id` and `env` are both unlikely to change for this deployment. ", "keywords": ["change"]}]}], "filtered-sentences": [{"source": "Body", "text": "keepers are used to trigger the recreation of dependent resources whenever other resources change. ", "keywords": ["change"]}, {"source": "Body", "text": "I assume this is not what you want for your buckets as the keepers you defined seem to be stable/static: account_id and env are both unlikely to change for this deployment. ", "keywords": ["change"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "Verified the Imports with: Run terraform plan: But the terraform plan output shows Plan: 6 to add, 0 to change, 5 to destroy. that is those resources will be destroyed and recreated. ", "keywords": ["change"]}]}