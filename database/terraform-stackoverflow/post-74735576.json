{"Id": "74735576", "PostTypeId": "1", "CreationDate": "2022-12-08T19:49:17.127", "Score": "1", "ViewCount": "376", "Body": "<p>In our organiztion we have a team which manages central azure services like vpn gateway, firewall, bastion etc. It should also provision subscriptions for our software development teams, which involves managing users and groups, creating a vnet and peering it with the hub etc. The development teams manage all other relevant resources in their subscriptions.</p>\n<p>I couldn't find an efficient way to build the IaC around the subscription management process. It seems to me, that you have to run terraform for each subscription separately, since you have to provide a subscription id in the terraform azure provider. This seems a bit complicated to me, I would rather define all subscriptions in a single file and let terraform manage them in a single run, like this:</p>\n<pre><code>subscriptions = {\n    &quot;my-subscription-1&quot; = {\n        vnet_address_space    = [&quot;10.0.4.0/27&quot;],\n        snet_address_prefixes = [&quot;10.0.4.0/27&quot;],\n        users = [\n            &quot;abc@example.com&quot;,\n            &quot;def@example.com&quot;,\n        ],\n        groups = [\n            &quot;MyAD-Group&quot;,\n        ]\n    },\n    &quot;my-subscription-2&quot; = {\n        vnet_address_space    = [&quot;10.0.4.32/27&quot;],\n        snet_address_prefixes = [&quot;10.0.4.32/27&quot;],\n        users = [\n            &quot;efg@example.com&quot;,\n            &quot;hij@example.com&quot;,\n        ],\n        groups = [\n            &quot;AnotherAD-Group&quot;,\n        ]\n    }\n}\n</code></pre>\n<p>I know that you can define multiple providers in terraform and assign alias names, but this only works until you have 5-6 subscriptions. In my case I need to manage 50 subscriptions.</p>\n<p>Did I miss something? How do you manage your subscriptions?</p>\n", "OwnerUserId": "12816408", "LastEditorUserId": "12816408", "LastEditDate": "2022-12-09T05:40:11.077", "LastActivityDate": "2022-12-09T13:14:40.387", "Title": "Managing many azure subscriptions with terraform", "Tags": "<azure><terraform><terraform-provider-azure>", "AnswerCount": "1", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "283909698", "PostHistoryTypeId": "2", "PostId": "74735576", "RevisionGUID": "be0a4c8b-75cb-4ab2-9787-2233cd97e3e4", "CreationDate": "2022-12-08T19:49:17.127", "UserId": "12816408", "Text": "In our organiztion we have a team which manages central azure services like vpn gateway, firewall, bastion etc. It should also provision subscriptions for our software development teams, which involves managing users and groups, creating a vnet and peering it with the hub etc. The development teams manage all other relevant resources in their subscriptions.\r\n\r\nI couldn't find an efficient way to build the IaC around the subscription management process. It seems to me, that you have to run terraform for each subscription separately, since you have to provide a subscription id in the terraform azure provider. This seems a bit complicated to me, I would rather define all subscriptions in a single file and let terraform manage them in a single run.\r\n\r\nI know that you can define multiple providers in terraform and assign alias names, but this only works until you have 5-6 subscriptions. In my case I need to manage 50 subscriptions.\r\n\r\nDid I miss something? How do you manage your subscriptions?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "In our organiztion we have a team which manages central azure services like vpn gateway, firewall, bastion etc. ", "keywords": ["vpn"]}, {"source": "Text", "text": "I couldn't find an efficient way to build the IaC around the subscription management process. ", "keywords": ["efficient"]}, {"source": "Text", "text": "It seems to me, that you have to run terraform for each subscription separately, since you have to provide a subscription id in the terraform azure provider. ", "keywords": ["provider"]}]}, {"Id": "283909700", "PostHistoryTypeId": "1", "PostId": "74735576", "RevisionGUID": "be0a4c8b-75cb-4ab2-9787-2233cd97e3e4", "CreationDate": "2022-12-08T19:49:17.127", "UserId": "12816408", "Text": "Managing many azure subscriptions with terraform", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "283909701", "PostHistoryTypeId": "3", "PostId": "74735576", "RevisionGUID": "be0a4c8b-75cb-4ab2-9787-2233cd97e3e4", "CreationDate": "2022-12-08T19:49:17.127", "UserId": "12816408", "Text": "<azure><terraform><terraform-provider-azure>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "283910150", "PostHistoryTypeId": "5", "PostId": "74735576", "RevisionGUID": "da1f9614-a593-4d7d-97d7-f2ac6a2c15df", "CreationDate": "2022-12-08T19:56:53.867", "UserId": "12816408", "Comment": "added 779 characters in body", "Text": "In our organiztion we have a team which manages central azure services like vpn gateway, firewall, bastion etc. It should also provision subscriptions for our software development teams, which involves managing users and groups, creating a vnet and peering it with the hub etc. The development teams manage all other relevant resources in their subscriptions.\r\n\r\nI couldn't find an efficient way to build the IaC around the subscription management process. It seems to me, that you have to run terraform for each subscription separately, since you have to provide a subscription id in the terraform azure provider. This seems a bit complicated to me, I would rather define all subscriptions in a single file and let terraform manage them in a single run, like this:\r\n\r\n```\r\nsubscriptions = {\r\n    \"my-subscription-1\" = {\r\n        id                    = \"525663630-be93-545d-9900-99db65567998\"\r\n        vnet_address_space    = [\"10.0.4.0/27\"],\r\n        snet_address_prefixes = [\"10.0.4.0/27\"],\r\n        users = [\r\n            \"abc@example.com\",\r\n            \"def@example.com\",\r\n        ],\r\n        groups = [\r\n            \"MyAD-Group\",\r\n        ]\r\n    },\r\n    \"my-subscription-2\" = {\r\n        id                    = \"525663630-be93-545d-9900-99db3f944345\"\r\n        vnet_address_space    = [\"10.0.4.32/27\"],\r\n        snet_address_prefixes = [\"10.0.4.32/27\"],\r\n        users = [\r\n            \"efg@example.com\",\r\n            \"hij@example.com\",\r\n        ],\r\n        groups = [\r\n            \"AnotherAD-Group\",\r\n        ]\r\n    }\r\n}\r\n```\r\n\r\nI know that you can define multiple providers in terraform and assign alias names, but this only works until you have 5-6 subscriptions. In my case I need to manage 50 subscriptions.\r\n\r\n\r\nDid I miss something? How do you manage your subscriptions?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "In our organiztion we have a team which manages central azure services like vpn gateway, firewall, bastion etc. ", "keywords": ["vpn"]}, {"source": "Text", "text": "I couldn't find an efficient way to build the IaC around the subscription management process. ", "keywords": ["efficient"]}, {"source": "Text", "text": "It seems to me, that you have to run terraform for each subscription separately, since you have to provide a subscription id in the terraform azure provider. ", "keywords": ["provider"]}]}, {"Id": "283931636", "PostHistoryTypeId": "5", "PostId": "74735576", "RevisionGUID": "ad112688-a4e5-42f6-9541-8c7d21b8e038", "CreationDate": "2022-12-09T05:40:11.077", "UserId": "12816408", "Comment": "deleted 146 characters in body", "Text": "In our organiztion we have a team which manages central azure services like vpn gateway, firewall, bastion etc. It should also provision subscriptions for our software development teams, which involves managing users and groups, creating a vnet and peering it with the hub etc. The development teams manage all other relevant resources in their subscriptions.\r\n\r\nI couldn't find an efficient way to build the IaC around the subscription management process. It seems to me, that you have to run terraform for each subscription separately, since you have to provide a subscription id in the terraform azure provider. This seems a bit complicated to me, I would rather define all subscriptions in a single file and let terraform manage them in a single run, like this:\r\n\r\n```\r\nsubscriptions = {\r\n    \"my-subscription-1\" = {\r\n        vnet_address_space    = [\"10.0.4.0/27\"],\r\n        snet_address_prefixes = [\"10.0.4.0/27\"],\r\n        users = [\r\n            \"abc@example.com\",\r\n            \"def@example.com\",\r\n        ],\r\n        groups = [\r\n            \"MyAD-Group\",\r\n        ]\r\n    },\r\n    \"my-subscription-2\" = {\r\n        vnet_address_space    = [\"10.0.4.32/27\"],\r\n        snet_address_prefixes = [\"10.0.4.32/27\"],\r\n        users = [\r\n            \"efg@example.com\",\r\n            \"hij@example.com\",\r\n        ],\r\n        groups = [\r\n            \"AnotherAD-Group\",\r\n        ]\r\n    }\r\n}\r\n```\r\n\r\nI know that you can define multiple providers in terraform and assign alias names, but this only works until you have 5-6 subscriptions. In my case I need to manage 50 subscriptions.\r\n\r\n\r\nDid I miss something? How do you manage your subscriptions?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "In our organiztion we have a team which manages central azure services like vpn gateway, firewall, bastion etc. ", "keywords": ["vpn"]}, {"source": "Text", "text": "I couldn't find an efficient way to build the IaC around the subscription management process. ", "keywords": ["efficient"]}, {"source": "Text", "text": "It seems to me, that you have to run terraform for each subscription separately, since you have to provide a subscription id in the terraform azure provider. ", "keywords": ["provider"]}]}], "answers": [{"Id": "74743657", "PostTypeId": "2", "ParentId": "74735576", "CreationDate": "2022-12-09T13:14:40.387", "Score": "0", "Body": "<p>You must set <strong><a href=\"https://developer.hashicorp.com/terraform/language/providers/configuration#alias-multiple-provider-configurations\" rel=\"nofollow noreferrer\">Multiple Provider Configurations</a></strong></p>\n<pre><code>provider &quot;azurerm&quot; {\n    subscription_id = &quot;SUBSCRIPTION 1 ID&quot;\n    features {}\n}\n\nprovider &quot;azurerm&quot; {\n    alias           = &quot;subscription2&quot;\n    subscription_id = &quot;SUBSCRIPTION 2 ID&quot;\n    features {}\n}\n</code></pre>\n<p>Then, when you will run a module, you must set the alias, for example:</p>\n<pre><code># Create a Resource Group in subscription 1\nresource &quot;azurerm_resource_group&quot; &quot;rg1&quot; {\n    name     = &quot;RG-subscription-1&quot;\n    location = &quot;eastus&quot;\n}\n\n\n# Create a Resource Group in subscription 2\nresource &quot;azurerm_resource_group&quot; &quot;rg2&quot; {\n    provider = azurerm.subscription2 # this is the alias previously defined \n    name     = &quot;RG-subscription-2&quot;\n    location = &quot;eastus&quot;\n}\n</code></pre>\n<p>Hope this helps!</p>\n", "OwnerUserId": "2620025", "LastActivityDate": "2022-12-09T13:14:40.387", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "283955917", "PostHistoryTypeId": "2", "PostId": "74743657", "RevisionGUID": "f87a7bdb-e50c-4579-94b0-e21dc8def9fd", "CreationDate": "2022-12-09T13:14:40.387", "UserId": "2620025", "Text": "You must set **[Multiple Provider Configurations][1]**\r\n\r\n    provider \"azurerm\" {\r\n        subscription_id = \"SUBSCRIPTION 1 ID\"\r\n        features {}\r\n    }\r\n    \r\n    provider \"azurerm\" {\r\n        alias           = \"subscription2\"\r\n        subscription_id = \"SUBSCRIPTION 2 ID\"\r\n        features {}\r\n    }\r\n\r\nThen, when you will run a module, you must set the alias, for example:\r\n\r\n    # Create a Resource Group in subscription 1\r\n    resource \"azurerm_resource_group\" \"rg1\" {\r\n        name     = \"RG-subscription-1\"\r\n        location = \"eastus\"\r\n    }\r\n    \r\n    \r\n    # Create a Resource Group in subscription 2\r\n    resource \"azurerm_resource_group\" \"rg2\" {\r\n        provider = azurerm.subscription2 # this is the alias previously defined \r\n        name     = \"RG-subscription-2\"\r\n        location = \"eastus\"\r\n    }\r\n\r\nHope this helps!\r\n\r\n  [1]: https://developer.hashicorp.com/terraform/language/providers/configuration#alias-multiple-provider-configurations", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "You must set **[Multiple Provider Configurations][1]** provider \"azurerm\" { subscription_id = \"SUBSCRIPTION 1 ID\" features {} } provider \"azurerm\" { alias = \"subscription2\" subscription_id = \"SUBSCRIPTION 2 ID\" features {} } Then, when you will run a module, you must set the alias, for example: # Create a Resource Group in subscription 1 resource \"azurerm_resource_group\" \"rg1\" { name = \"RG-subscription-1\" location = \"eastus\" } # Create a Resource Group in subscription 2 resource \"azurerm_resource_group\" \"rg2\" { provider = azurerm.subscription2 # this is the alias previously defined name = \"RG-subscription-2\" location = \"eastus\" } Hope this helps! [1]: https://developer.hashicorp.com/terraform/language/providers/configuration#alias-multiple-provider-configurations", "keywords": ["provider"]}]}], "filtered-sentences": [{"source": "Body", "text": "You must set Multiple Provider Configurations ", "keywords": ["provider"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "In our organiztion we have a team which manages central azure services like vpn gateway, firewall, bastion etc. ", "keywords": ["vpn"]}, {"source": "Body", "text": "I couldn't find an efficient way to build the IaC around the subscription management process. ", "keywords": ["efficient"]}, {"source": "Body", "text": "It seems to me, that you have to run terraform for each subscription separately, since you have to provide a subscription id in the terraform azure provider. ", "keywords": ["provider"]}]}