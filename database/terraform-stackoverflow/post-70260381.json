{"Id": "70260381", "PostTypeId": "1", "AcceptedAnswerId": "70261617", "CreationDate": "2021-12-07T12:45:32.633", "Score": "2", "ViewCount": "7059", "Body": "<p>I'm trying to use terraform to create an AnomalySubscription with AWS Cloudformation.\nBased on: <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html\" rel=\"nofollow noreferrer\">https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html</a></p>\n<p>When I tested Terraform plan, I'm receiving:</p>\n<blockquote>\n<pre class=\"lang-none prettyprint-override\"><code>\u2502 Error: Invalid template interpolation value\n\n\n\u2502     \u2502 each.value.NotificationsEmail is tuple with 1 element\n\u2502\n\u2502 Cannot include the given value in a string template: string required.\n</code></pre>\n</blockquote>\n<p><em>resource.tf</em></p>\n<pre><code>resource &quot;aws_cloudformation_stack&quot; &quot;anomaly_detection&quot; {\n  name = &quot;${var.StackName}${each.value.Key}&quot;\n\n  for_each = { for i in local.anomalies : &quot;${i.Key}&quot; =&gt; i }\n\n  template_body = &lt;&lt;EOF\n  AWSTemplateFormatVersion: &quot;2010-09-09&quot;\n  Description: Cost Anomaly Detection\n  Resources:\n    CostExplorer:\n      Type: AWS::CE::AnomalySubscription\n      Properties:\n        Frequency: DAILY\n        MonitorArnList: [!Ref CostExplorerServiceAnomalyMonitor]\n        Subscribers: ${each.value.NotificationsEmail}\n        SubscriptionName: DailyAnomalySubscription\n        Threshold: ${each.value.Threshold}\n\nEOF\n}\n</code></pre>\n<pre><code>locals {\n  anomalies = flatten([\n    for k, v in var.Anomalies : [\n        {\n          Key                    = k\n          Type                   = v.Type\n          NotificationsEmail     = v.NotificationsEmail\n          Threshold              = v.Threshold\n        }\n    ]\n  ])\n}\n</code></pre>\n<pre><code>Anomalies = {\n  Subscription = {\n    Type  = &quot;Daily&quot;\n    Threshold = 500\n    NotificationsEmail = [\n      {\n        Type = &quot;EMAIL&quot;\n        Address = &quot;test@xyz.com&quot;\n      },\n      {\n        Type = &quot;EMAIL&quot;\n        Address = &quot;test2@xyz.com&quot;\n      }]\n  }\n}\n</code></pre>\n<p>Based on:\n<a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ce-anomalysubscription-subscriber.html\" rel=\"nofollow noreferrer\">https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ce-anomalysubscription-subscriber.html</a></p>\n<pre><code>    NotificationsEmail = [\n      {\n        Type = &quot;EMAIL&quot;\n        Address = &quot;test@xyz.com&quot;\n      },\n      {\n        Type = &quot;EMAIL&quot;\n        Address = &quot;test2@xyz.com&quot;\n      }]\n</code></pre>\n", "OwnerUserId": "7450826", "LastEditorUserId": "2123530", "LastEditDate": "2021-12-07T14:07:17.717", "LastActivityDate": "2021-12-07T14:22:52.633", "Title": "Terraform - Invalid template interpolation value", "Tags": "<amazon-web-services><terraform><aws-cloudformation>", "AnswerCount": "1", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "259551394", "PostHistoryTypeId": "2", "PostId": "70260381", "RevisionGUID": "56134225-0a1e-460e-9c59-e0720bac2894", "CreationDate": "2021-12-07T12:45:32.633", "UserId": "7450826", "Text": "I'm trying to use terraform to create an AnomalySubscription with AWS Cloudformation. \r\nBased on: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html\r\n\r\nWhen I tested Terraform plan, I'm receiving:\r\n\r\n\r\n\u2502 Error: Invalid template interpolation value\r\n\r\n\r\n\u2502     \u2502 each.value.NotificationsEmail is tuple with 1 element\r\n\u2502\r\n\u2502 Cannot include the given value in a string template: string required.\r\n\r\n\r\n```\r\nresource.tf\r\nresource \"aws_cloudformation_stack\" \"anomaly_detection\" {\r\n  name = \"${var.StackName}${each.value.Key}\"\r\n\r\n  for_each = { for i in local.anomalies : \"${i.Key}\" => i }\r\n\r\n  template_body = <<EOF\r\n  AWSTemplateFormatVersion: \"2010-09-09\"\r\n  Description: Cost Anomaly Detection\r\n  Resources:\r\n    CostExplorer:\r\n      Type: AWS::CE::AnomalySubscription\r\n      Properties:\r\n        Frequency: DAILY\r\n        MonitorArnList: [!Ref CostExplorerServiceAnomalyMonitor]\r\n        Subscribers: ${each.value.NotificationsEmail}\r\n        SubscriptionName: DailyAnomalySubscription\r\n        Threshold: ${each.value.Threshold}\r\n\r\nEOF\r\n}\r\n```\r\n\r\n```\r\nlocals {\r\n  anomalies = flatten([\r\n    for k, v in var.Anomalies : [\r\n        {\r\n          Key                    = k\r\n          Type                   = v.Type\r\n          NotificationsEmail     = v.NotificationsEmail\r\n          Threshold              = v.Threshold\r\n        }\r\n    ]\r\n  ])\r\n}\r\n```\r\n\r\n```\r\nAnomalies = {\r\n  Subscription = {\r\n    Type  = \"Daily\"\r\n    Threshold = 500\r\n    NotificationsEmail = [\r\n      {\r\n        Type = \"EMAIL\"\r\n        Address = \"test@xyz.com\"\r\n      },\r\n      {\r\n        Type = \"EMAIL\"\r\n        Address = \"test2@xyz.com\"\r\n      }]\r\n  }\r\n}\r\n```\r\n\r\nBased on:\r\nhttps://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ce-anomalysubscription-subscriber.html\r\n\r\n```\r\n    NotificationsEmail = [\r\n      {\r\n        Type = \"EMAIL\"\r\n        Address = \"test@xyz.com\"\r\n      },\r\n      {\r\n        Type = \"EMAIL\"\r\n        Address = \"test2@xyz.com\"\r\n      }]\r\n```\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Based on: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html When I tested Terraform plan, I'm receiving: \u2502 Error: Invalid template interpolation value \u2502 \u2502 each.value.NotificationsEmail is tuple with 1 element \u2502 \u2502 Cannot include the given value in a string template: string required. ", "keywords": ["test"]}, {"source": "Text", "text": "``` resource.tf resource \"aws_cloudformation_stack\" \"anomaly_detection\" { name = \"${var.StackName}${each.value.Key}\" for_each = { for i in local.anomalies : \"${i.Key}\" => i } template_body = <<EOF AWSTemplateFormatVersion: \"2010-09-09\" Description: Cost Anomaly Detection Resources: CostExplorer: Type: AWS::CE::AnomalySubscription Properties: Frequency: DAILY MonitorArnList: [!Ref CostExplorerServiceAnomalyMonitor] Subscribers: ${each.value.NotificationsEmail} SubscriptionName: DailyAnomalySubscription Threshold: ${each.value.Threshold} EOF } ``` ``` locals { anomalies = flatten([ for k, v in var.Anomalies : [ { Key = k Type = v.Type NotificationsEmail = v.NotificationsEmail Threshold = v.Threshold } ] ]) } ``` ``` Anomalies = { Subscription = { Type = \"Daily\" Threshold = 500 NotificationsEmail = [ { Type = \"EMAIL\" Address = \"test@xyz.com\" }, { Type = \"EMAIL\" Address = \"test2@xyz.com\" ", "keywords": ["cost", "test"]}, {"source": "Text", "text": "}] } } ``` Based on: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ce-anomalysubscription-subscriber.html ``` NotificationsEmail = [ { Type = \"EMAIL\" Address = \"test@xyz.com\" ", "keywords": ["test"]}, {"source": "Text", "text": "}, { Type = \"EMAIL\" Address = \"test2@xyz.com\" ", "keywords": ["test"]}]}, {"Id": "259551396", "PostHistoryTypeId": "1", "PostId": "70260381", "RevisionGUID": "56134225-0a1e-460e-9c59-e0720bac2894", "CreationDate": "2021-12-07T12:45:32.633", "UserId": "7450826", "Text": "Terraform - Invalid template interpolation value", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "259551397", "PostHistoryTypeId": "3", "PostId": "70260381", "RevisionGUID": "56134225-0a1e-460e-9c59-e0720bac2894", "CreationDate": "2021-12-07T12:45:32.633", "UserId": "7450826", "Text": "<amazon-web-services><terraform><aws-cloudformation>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "259557142", "PostHistoryTypeId": "5", "PostId": "70260381", "RevisionGUID": "4c428572-df70-45cf-b721-f510763a7896", "CreationDate": "2021-12-07T14:00:23.500", "UserId": "2123530", "Comment": "added 10 characters in body", "Text": "I'm trying to use terraform to create an AnomalySubscription with AWS Cloudformation. \r\nBased on: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html\r\n\r\nWhen I tested Terraform plan, I'm receiving:\r\n\r\n> ```none\r\n> \u2502 Error: Invalid template interpolation value\r\n>\r\n>\r\n> \u2502     \u2502 each.value.NotificationsEmail is tuple with 1 element\r\n> \u2502\r\n> \u2502 Cannot include the given value in a string template: string required.\r\n> ```\r\n\r\n\r\n```\r\nresource.tf\r\nresource \"aws_cloudformation_stack\" \"anomaly_detection\" {\r\n  name = \"${var.StackName}${each.value.Key}\"\r\n\r\n  for_each = { for i in local.anomalies : \"${i.Key}\" => i }\r\n\r\n  template_body = <<EOF\r\n  AWSTemplateFormatVersion: \"2010-09-09\"\r\n  Description: Cost Anomaly Detection\r\n  Resources:\r\n    CostExplorer:\r\n      Type: AWS::CE::AnomalySubscription\r\n      Properties:\r\n        Frequency: DAILY\r\n        MonitorArnList: [!Ref CostExplorerServiceAnomalyMonitor]\r\n        Subscribers: ${each.value.NotificationsEmail}\r\n        SubscriptionName: DailyAnomalySubscription\r\n        Threshold: ${each.value.Threshold}\r\n\r\nEOF\r\n}\r\n```\r\n\r\n```\r\nlocals {\r\n  anomalies = flatten([\r\n    for k, v in var.Anomalies : [\r\n        {\r\n          Key                    = k\r\n          Type                   = v.Type\r\n          NotificationsEmail     = v.NotificationsEmail\r\n          Threshold              = v.Threshold\r\n        }\r\n    ]\r\n  ])\r\n}\r\n```\r\n\r\n```\r\nAnomalies = {\r\n  Subscription = {\r\n    Type  = \"Daily\"\r\n    Threshold = 500\r\n    NotificationsEmail = [\r\n      {\r\n        Type = \"EMAIL\"\r\n        Address = \"test@xyz.com\"\r\n      },\r\n      {\r\n        Type = \"EMAIL\"\r\n        Address = \"test2@xyz.com\"\r\n      }]\r\n  }\r\n}\r\n```\r\n\r\nBased on:\r\nhttps://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ce-anomalysubscription-subscriber.html\r\n\r\n```\r\n    NotificationsEmail = [\r\n      {\r\n        Type = \"EMAIL\"\r\n        Address = \"test@xyz.com\"\r\n      },\r\n      {\r\n        Type = \"EMAIL\"\r\n        Address = \"test2@xyz.com\"\r\n      }]\r\n```\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Based on: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html When I tested Terraform plan, I'm receiving: > ```none > \u2502 Error: Invalid template interpolation value > > > \u2502 \u2502 each.value.NotificationsEmail is tuple with 1 element > \u2502 > \u2502 Cannot include the given value in a string template: string required. > ``` ``` resource.tf resource \"aws_cloudformation_stack\" \"anomaly_detection\" { name = \"${var.StackName}${each.value.Key}\" for_each = { for i in local.anomalies : \"${i.Key}\" => i } template_body = <<EOF AWSTemplateFormatVersion: \"2010-09-09\" Description: Cost Anomaly Detection Resources: CostExplorer: Type: AWS::CE::AnomalySubscription Properties: Frequency: DAILY MonitorArnList: [!Ref CostExplorerServiceAnomalyMonitor] Subscribers: ${each.value.NotificationsEmail} SubscriptionName: DailyAnomalySubscription Threshold: ${each.value.Threshold} EOF } ``` ``` locals { anomalies = flatten([ for k, v in var.Anomalies : [ { Key = k Type = v.Type NotificationsEmail = v.NotificationsEmail Threshold = v.Threshold } ] ]) } ``` ``` Anomalies = { Subscription = { Type = \"Daily\" Threshold = 500 NotificationsEmail = [ { Type = \"EMAIL\" Address = \"test@xyz.com\" }, { Type = \"EMAIL\" Address = \"test2@xyz.com\" ", "keywords": ["cost", "test"]}, {"source": "Text", "text": "}] } } ``` Based on: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ce-anomalysubscription-subscriber.html ``` NotificationsEmail = [ { Type = \"EMAIL\" Address = \"test@xyz.com\" ", "keywords": ["test"]}, {"source": "Text", "text": "}, { Type = \"EMAIL\" Address = \"test2@xyz.com\" ", "keywords": ["test"]}]}, {"Id": "259557761", "PostHistoryTypeId": "5", "PostId": "70260381", "RevisionGUID": "8a64f9c6-ef18-4bed-b4ec-164ecb0dd728", "CreationDate": "2021-12-07T14:07:17.717", "UserId": "2123530", "Comment": "edited body", "Text": "I'm trying to use terraform to create an AnomalySubscription with AWS Cloudformation. \r\nBased on: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html\r\n\r\nWhen I tested Terraform plan, I'm receiving:\r\n\r\n> ```none\r\n> \u2502 Error: Invalid template interpolation value\r\n>\r\n>\r\n> \u2502     \u2502 each.value.NotificationsEmail is tuple with 1 element\r\n> \u2502\r\n> \u2502 Cannot include the given value in a string template: string required.\r\n> ```\r\n\r\n_resource.tf_\r\n```\r\nresource \"aws_cloudformation_stack\" \"anomaly_detection\" {\r\n  name = \"${var.StackName}${each.value.Key}\"\r\n\r\n  for_each = { for i in local.anomalies : \"${i.Key}\" => i }\r\n\r\n  template_body = <<EOF\r\n  AWSTemplateFormatVersion: \"2010-09-09\"\r\n  Description: Cost Anomaly Detection\r\n  Resources:\r\n    CostExplorer:\r\n      Type: AWS::CE::AnomalySubscription\r\n      Properties:\r\n        Frequency: DAILY\r\n        MonitorArnList: [!Ref CostExplorerServiceAnomalyMonitor]\r\n        Subscribers: ${each.value.NotificationsEmail}\r\n        SubscriptionName: DailyAnomalySubscription\r\n        Threshold: ${each.value.Threshold}\r\n\r\nEOF\r\n}\r\n```\r\n\r\n```\r\nlocals {\r\n  anomalies = flatten([\r\n    for k, v in var.Anomalies : [\r\n        {\r\n          Key                    = k\r\n          Type                   = v.Type\r\n          NotificationsEmail     = v.NotificationsEmail\r\n          Threshold              = v.Threshold\r\n        }\r\n    ]\r\n  ])\r\n}\r\n```\r\n\r\n```\r\nAnomalies = {\r\n  Subscription = {\r\n    Type  = \"Daily\"\r\n    Threshold = 500\r\n    NotificationsEmail = [\r\n      {\r\n        Type = \"EMAIL\"\r\n        Address = \"test@xyz.com\"\r\n      },\r\n      {\r\n        Type = \"EMAIL\"\r\n        Address = \"test2@xyz.com\"\r\n      }]\r\n  }\r\n}\r\n```\r\n\r\nBased on:\r\nhttps://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ce-anomalysubscription-subscriber.html\r\n\r\n```\r\n    NotificationsEmail = [\r\n      {\r\n        Type = \"EMAIL\"\r\n        Address = \"test@xyz.com\"\r\n      },\r\n      {\r\n        Type = \"EMAIL\"\r\n        Address = \"test2@xyz.com\"\r\n      }]\r\n```\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Based on: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html When I tested Terraform plan, I'm receiving: > ```none > \u2502 Error: Invalid template interpolation value > > > \u2502 \u2502 each.value.NotificationsEmail is tuple with 1 element > \u2502 > \u2502 Cannot include the given value in a string template: string required. > ``` _resource.tf_ ``` resource \"aws_cloudformation_stack\" \"anomaly_detection\" { name = \"${var.StackName}${each.value.Key}\" for_each = { for i in local.anomalies : \"${i.Key}\" => i } template_body = <<EOF AWSTemplateFormatVersion: \"2010-09-09\" Description: Cost Anomaly Detection Resources: CostExplorer: Type: AWS::CE::AnomalySubscription Properties: Frequency: DAILY MonitorArnList: [!Ref CostExplorerServiceAnomalyMonitor] Subscribers: ${each.value.NotificationsEmail} SubscriptionName: DailyAnomalySubscription Threshold: ${each.value.Threshold} EOF } ``` ``` locals { anomalies = flatten([ for k, v in var.Anomalies : [ { Key = k Type = v.Type NotificationsEmail = v.NotificationsEmail Threshold = v.Threshold } ] ]) } ``` ``` Anomalies = { Subscription = { Type = \"Daily\" Threshold = 500 NotificationsEmail = [ { Type = \"EMAIL\" Address = \"test@xyz.com\" }, { Type = \"EMAIL\" Address = \"test2@xyz.com\" ", "keywords": ["cost", "test"]}, {"source": "Text", "text": "}] } } ``` Based on: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ce-anomalysubscription-subscriber.html ``` NotificationsEmail = [ { Type = \"EMAIL\" Address = \"test@xyz.com\" ", "keywords": ["test"]}, {"source": "Text", "text": "}, { Type = \"EMAIL\" Address = \"test2@xyz.com\" ", "keywords": ["test"]}]}], "answers": [{"Id": "70261617", "PostTypeId": "2", "ParentId": "70260381", "CreationDate": "2021-12-07T14:06:58.733", "Score": "3", "Body": "<p>An heredoc structure is always a string, this is why terraform complains that it cannot interpolate your tuple.</p>\n<p>Since what you are actually feeding in the heredoc is YAML document, you can encode your tuple to YAML using <a href=\"https://www.terraform.io/docs/language/functions/jsonencode.html\" rel=\"nofollow noreferrer\"><code>jsonencode</code></a>.</p>\n<p>Why JSON encode? As pointed in the documentation, YAML is just a superset of JSON:</p>\n<blockquote>\n<p><code>yamlencode</code> always uses YAML's &quot;block style&quot; for mappings and sequences, unless the mapping or sequence is empty. To generate flow-style YAML, use <a href=\"https://www.terraform.io/docs/language/functions/jsonencode.html\" rel=\"nofollow noreferrer\"><code>jsonencode</code></a> instead: YAML flow-style is a superset of JSON syntax.</p>\n</blockquote>\n<p><em><sup>Source: <a href=\"https://www.terraform.io/docs/language/functions/yamlencode.html\" rel=\"nofollow noreferrer\">https://www.terraform.io/docs/language/functions/yamlencode.html</a></sup></em></p>\n<hr />\n<p>Given a simplified:</p>\n<pre class=\"lang-hcl prettyprint-override\"><code>variable &quot;NotificationsEmail&quot; {\n  default = {\n    Type = &quot;EMAIL&quot;\n    Address = &quot;test2@xyz.com&quot;\n  }\n}\n\noutput &quot;test&quot; {\n  value = &lt;&lt;EOF\n  AWSTemplateFormatVersion: &quot;2010-09-09&quot;\n  Description: Cost Anomaly Detection\n  Resources:\n    CostExplorer:\n      Type: AWS::CE::AnomalySubscription\n      Properties:\n        Frequency: DAILY\n        MonitorArnList: [!Ref CostExplorerServiceAnomalyMonitor]\n        Subscribers: ${jsonencode(var.NotificationsEmail)}\n        SubscriptionName: DailyAnomalySubscription\n  EOF\n}\n</code></pre>\n<p>This yields the expected:</p>\n<pre class=\"lang-yaml prettyprint-override\"><code>AWSTemplateFormatVersion: &quot;2010-09-09&quot;\nDescription: Cost Anomaly Detection\nResources:\n  CostExplorer:\n    Type: AWS::CE::AnomalySubscription\n    Properties:\n      Frequency: DAILY\n      MonitorArnList: [!Ref CostExplorerServiceAnomalyMonitor]\n      Subscribers: {&quot;Address&quot;:&quot;test2@xyz.com&quot;,&quot;Type&quot;:&quot;EMAIL&quot;}\n      SubscriptionName: DailyAnomalySubscription\n</code></pre>\n<p>Which is a perfectly valid YAML document.</p>\n", "OwnerUserId": "2123530", "LastEditorUserId": "2123530", "LastEditDate": "2021-12-07T14:22:52.633", "LastActivityDate": "2021-12-07T14:22:52.633", "CommentCount": "8", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "124206670", "PostId": "70261617", "Score": "0", "Text": "Thanks! It works perfectly with the template.", "CreationDate": "2021-12-07T16:31:53.293", "UserId": "7450826", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "124206681", "PostId": "70261617", "Score": "0", "Text": "How to pass the value by the parameters?   \nparameters = {\n    NotificationsEmail = \"${jsonencode(each.value.NotificationsEmail)}\"\n    Threshold          = each.value.Threshold\n  } is getting jsonencode as a string", "CreationDate": "2021-12-07T16:32:26.500", "UserId": "7450826", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "124210638", "PostId": "70261617", "Score": "0", "Text": "Well, yes, here you are back in a `.tf` file with variable and tuples from the look of your structure, so you do not need to `jsonencode` anymore. `parameters = { NotificationsEmail = each.value.NotificationsEmail Threshold = each.value.Threshold }`", "CreationDate": "2021-12-07T19:23:54.240", "UserId": "2123530", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "124213877", "PostId": "70261617", "Score": "1", "Text": "@headincl0ud If it worked, then the answer should be accepted.", "CreationDate": "2021-12-07T22:02:56.867", "UserId": "248823", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "124215918", "PostId": "70261617", "Score": "1", "Text": "Jasne @Marcin, I was pretty sure that you will be first in this topic, best wishes for you from Wroclaw :)", "CreationDate": "2021-12-08T00:33:59.287", "UserId": "7450826", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "124215922", "PostId": "70261617", "Score": "0", "Text": "@\u03b2.\u03b5\u03b7\u03bf\u03b9\u03c4.\u03b2\u03b5 thanks for your help in this case!", "CreationDate": "2021-12-08T00:34:03.737", "UserId": "7450826", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "124215944", "PostId": "70261617", "Score": "1", "Text": "@headincl0ud 10 hours too late:-) Pozdrawiam.", "CreationDate": "2021-12-08T00:35:18.463", "UserId": "248823", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "134599536", "PostId": "70261617", "Score": "0", "Text": "so if you want only \"Address\" for example, is this going to work? `Subscribers: ${jsonencode(var.NotificationsEmail)}[Address]`", "CreationDate": "2023-05-25T06:28:10.890", "UserId": "5937757", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "259557738", "PostHistoryTypeId": "2", "PostId": "70261617", "RevisionGUID": "d13c5d15-0775-4c9f-9522-fb56a7ecb921", "CreationDate": "2021-12-07T14:06:58.733", "UserId": "2123530", "Text": "An heredoc structure is always a string, this is why terraform complains that it cannot interpolate your tuple.\r\n\r\nSince what you are actually feeding in the heredoc is YAML document, you can encode your tuple to YAML using [`yamlencode`](https://www.terraform.io/docs/language/functions/yamlencode.html).\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "259558319", "PostHistoryTypeId": "5", "PostId": "70261617", "RevisionGUID": "108bf0ab-3d32-4459-981d-9999309faace", "CreationDate": "2021-12-07T14:14:54.547", "UserId": "2123530", "Comment": "added 467 characters in body", "Text": "An heredoc structure is always a string, this is why terraform complains that it cannot interpolate your tuple.\r\n\r\nSince what you are actually feeding in the heredoc is YAML document, you can encode your tuple to YAML using [`jsonencode`](https://www.terraform.io/docs/language/functions/jsonencode.html).\r\n\r\nWhy JSON encode? As pointed in the documentation, YAML is just a superset of JSON\r\n\r\n> `yamlencode` always uses YAML's \"block style\" for mappings and sequences, unless the mapping or sequence is empty. To generate flow-style YAML, use [`jsonencode`](https://www.terraform.io/docs/language/functions/jsonencode.html) instead: YAML flow-style is a superset of JSON syntax.\r\n\r\n_<sup>Source: https://www.terraform.io/docs/language/functions/yamlencode.html</sup>_\r\n\r\n---\r\n\r\nGiven a simplified:\r\n```lang-hcl\r\nvariable \"NotificationsEmail\" {\r\n  default = {\r\n    Type = \"EMAIL\"\r\n    Address = \"test2@xyz.com\"\r\n  }\r\n}\r\n\r\noutput \"test\" {\r\n  value = <<EOF\r\n  AWSTemplateFormatVersion: \"2010-09-09\"\r\n  Description: Cost Anomaly Detection\r\n  Resources:\r\n    CostExplorer:\r\n      Type: AWS::CE::AnomalySubscription\r\n      Properties:\r\n        Frequency: DAILY\r\n        MonitorArnList: [!Ref CostExplorerServiceAnomalyMonitor]\r\n        Subscribers: ${jsonencode(var.NotificationsEmail)}\r\n        SubscriptionName: DailyAnomalySubscription\r\n  EOF\r\n}\r\n```\r\nThis yields the expected:\r\n```yaml\r\nAWSTemplateFormatVersion: \"2010-09-09\"\r\nDescription: Cost Anomaly Detection\r\nResources:\r\n  CostExplorer:\r\n    Type: AWS::CE::AnomalySubscription\r\n    Properties:\r\n      Frequency: DAILY\r\n      MonitorArnList: [!Ref CostExplorerServiceAnomalyMonitor]\r\n      Subscribers: {\"Address\":\"test2@xyz.com\",\"Type\":\"EMAIL\"}\r\n      SubscriptionName: DailyAnomalySubscription\r\n```\r\n\r\nWhich is a perfectly valid YAML document.\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "To generate flow-style YAML, use [`jsonencode`](https://www.terraform.io/docs/language/functions/jsonencode.html) instead: YAML flow-style is a superset of JSON syntax. _Source: https://www.terraform.io/docs/language/functions/yamlencode.html_ --- Given a simplified: ```lang-hcl variable \"NotificationsEmail\" { default = { Type = \"EMAIL\" Address = \"test2@xyz.com\" } } output \"test\" { value = <<EOF AWSTemplateFormatVersion: \"2010-09-09\" Description: Cost Anomaly Detection Resources: CostExplorer: Type: AWS::CE::AnomalySubscription Properties: Frequency: DAILY MonitorArnList: [!Ref CostExplorerServiceAnomalyMonitor] Subscribers: ${jsonencode(var.NotificationsEmail)} SubscriptionName: DailyAnomalySubscription EOF } ``` This yields the expected: ```yaml AWSTemplateFormatVersion: \"2010-09-09\" Description: Cost Anomaly Detection Resources: CostExplorer: Type: AWS::CE::AnomalySubscription Properties: Frequency: DAILY MonitorArnList: [!Ref CostExplorerServiceAnomalyMonitor] Subscribers: {\"Address\":\"test2@xyz.com\",\"Type\":\"EMAIL\"} SubscriptionName: DailyAnomalySubscription ``` Which is a perfectly valid YAML document.", "keywords": ["cost", "test"]}]}, {"Id": "259558958", "PostHistoryTypeId": "5", "PostId": "70261617", "RevisionGUID": "c24fdd68-db06-41fd-b0e5-704f41e1e762", "CreationDate": "2021-12-07T14:22:52.633", "UserId": "2123530", "Comment": "added 1 character in body", "Text": "An heredoc structure is always a string, this is why terraform complains that it cannot interpolate your tuple.\r\n\r\nSince what you are actually feeding in the heredoc is YAML document, you can encode your tuple to YAML using [`jsonencode`](https://www.terraform.io/docs/language/functions/jsonencode.html).\r\n\r\nWhy JSON encode? As pointed in the documentation, YAML is just a superset of JSON:\r\n\r\n> `yamlencode` always uses YAML's \"block style\" for mappings and sequences, unless the mapping or sequence is empty. To generate flow-style YAML, use [`jsonencode`](https://www.terraform.io/docs/language/functions/jsonencode.html) instead: YAML flow-style is a superset of JSON syntax.\r\n\r\n_<sup>Source: https://www.terraform.io/docs/language/functions/yamlencode.html</sup>_\r\n\r\n---\r\n\r\nGiven a simplified:\r\n```lang-hcl\r\nvariable \"NotificationsEmail\" {\r\n  default = {\r\n    Type = \"EMAIL\"\r\n    Address = \"test2@xyz.com\"\r\n  }\r\n}\r\n\r\noutput \"test\" {\r\n  value = <<EOF\r\n  AWSTemplateFormatVersion: \"2010-09-09\"\r\n  Description: Cost Anomaly Detection\r\n  Resources:\r\n    CostExplorer:\r\n      Type: AWS::CE::AnomalySubscription\r\n      Properties:\r\n        Frequency: DAILY\r\n        MonitorArnList: [!Ref CostExplorerServiceAnomalyMonitor]\r\n        Subscribers: ${jsonencode(var.NotificationsEmail)}\r\n        SubscriptionName: DailyAnomalySubscription\r\n  EOF\r\n}\r\n```\r\nThis yields the expected:\r\n```yaml\r\nAWSTemplateFormatVersion: \"2010-09-09\"\r\nDescription: Cost Anomaly Detection\r\nResources:\r\n  CostExplorer:\r\n    Type: AWS::CE::AnomalySubscription\r\n    Properties:\r\n      Frequency: DAILY\r\n      MonitorArnList: [!Ref CostExplorerServiceAnomalyMonitor]\r\n      Subscribers: {\"Address\":\"test2@xyz.com\",\"Type\":\"EMAIL\"}\r\n      SubscriptionName: DailyAnomalySubscription\r\n```\r\n\r\nWhich is a perfectly valid YAML document.\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "To generate flow-style YAML, use [`jsonencode`](https://www.terraform.io/docs/language/functions/jsonencode.html) instead: YAML flow-style is a superset of JSON syntax. _Source: https://www.terraform.io/docs/language/functions/yamlencode.html_ --- Given a simplified: ```lang-hcl variable \"NotificationsEmail\" { default = { Type = \"EMAIL\" Address = \"test2@xyz.com\" } } output \"test\" { value = <<EOF AWSTemplateFormatVersion: \"2010-09-09\" Description: Cost Anomaly Detection Resources: CostExplorer: Type: AWS::CE::AnomalySubscription Properties: Frequency: DAILY MonitorArnList: [!Ref CostExplorerServiceAnomalyMonitor] Subscribers: ${jsonencode(var.NotificationsEmail)} SubscriptionName: DailyAnomalySubscription EOF } ``` This yields the expected: ```yaml AWSTemplateFormatVersion: \"2010-09-09\" Description: Cost Anomaly Detection Resources: CostExplorer: Type: AWS::CE::AnomalySubscription Properties: Frequency: DAILY MonitorArnList: [!Ref CostExplorerServiceAnomalyMonitor] Subscribers: {\"Address\":\"test2@xyz.com\",\"Type\":\"EMAIL\"} SubscriptionName: DailyAnomalySubscription ``` Which is a perfectly valid YAML document.", "keywords": ["cost", "test"]}]}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "Based on: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html When I tested Terraform plan, I'm receiving: resource.tf Based on: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ce-anomalysubscription-subscriber.html", "keywords": ["test"]}]}