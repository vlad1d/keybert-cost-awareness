{"Id": "77005460", "PostTypeId": "1", "AcceptedAnswerId": "77007592", "CreationDate": "2023-08-30T06:33:25.537", "Score": "0", "ViewCount": "58", "Body": "<p>I want to create an Azure PolicyDefinition and I am using the code below:</p>\n<pre><code>resource &quot;azurerm_policy_definition&quot; &quot;name-caf-alz-policy-sandbox-denyvnetpeering&quot; {\n  name                = &quot;Audit-AzureHybridBenefit&quot;\n  display_name        = &quot;Unused resources driving cost should be avoided&quot;\n  description         = &quot;Optimize cost by enabling Azure Hybrid Benefit. Leverage this Policy definition as a cost control to reveal Virtual Machines not using AHUB.&quot;\n  mode                = &quot;All&quot;\n  policy_type         = &quot;Custom&quot;                                           \n  policy_rule         = file(&quot;${path.module}/lib/policy_definitions/policy_definition_es_deny_vnet_peer_cross_sub.json&quot;)\n  management_group_id = data.azurerm_management_group.namemgmtgroup.id\n}\n</code></pre>\n<p>When I run this command via Azure DevOps, Terraform Validate, Init, and Plan are working but when I do Terraform Apply I get this error:</p>\n<p><strong>creating/updating Policy Definition &quot;Audit-AzureHybridBenefit&quot;: policy.DefinitionsClient#CreateOrUpdateAtManagementGroup: Failure responding to request: StatusCode=400 -- Original Error: autorest/azure: Service returned an error. Status=400 Code=&quot;InvalidPolicyRule&quot; Message=&quot;Failed to parse policy rule: 'Could not find member 'apiVersion' on object of type 'PolicyRuleDefinition'. Path 'apiVersion'.'.&quot;</strong></p>\n<p>When I change the <code>policy_rule</code> to</p>\n<p><code>jsonencode(file(&quot;${path.module}/lib/policy_definitions/policy_definition_es_deny_vnet_peer_cross_sub.json&quot;))</code></p>\n<p><strong>Error: expanding JSON for policy_rule: JSON: cannot unmarshal string into Go value of type map[string]interface {}</strong></p>\n<p>The JSON-file itself works succesfully when creating it via the GUI.</p>\n<p>JSON-file itself can be found at</p>\n<p><a href=\"https://github.com/Azure/Enterprise-Scale/blob/main/src/resources/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub.json\" rel=\"nofollow noreferrer\">https://github.com/Azure/Enterprise-Scale/blob/main/src/resources/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub.json</a></p>\n", "OwnerUserId": "9717474", "LastEditorUserId": "9717474", "LastEditDate": "2023-08-30T06:54:53.557", "LastActivityDate": "2023-08-30T11:32:01.997", "Title": "How to create in Terraform Azure PolicyDefinition with local JSON-file?", "Tags": "<azure><terraform><terraform-provider-azure>", "AnswerCount": "1", "CommentCount": "8", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "135750852", "PostId": "77005460", "Score": "0", "Text": "Why do you extra parenthesis around the `file`? This is probably not the cause of the issue, but they are unnecessary.", "CreationDate": "2023-08-30T06:41:44.467", "UserId": "248823", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135750863", "PostId": "77005460", "Score": "0", "Text": "Because it said so in the Terraform Wiki\nhttps://developer.hashicorp.com/terraform/language/functions/file", "CreationDate": "2023-08-30T06:43:36.157", "UserId": "9717474", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135750909", "PostId": "77005460", "Score": "1", "Text": "The docs do not say about any extra parenthesis.", "CreationDate": "2023-08-30T06:49:40.457", "UserId": "248823", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135750965", "PostId": "77005460", "Score": "0", "Text": "I see what you mean. It should be only one time. This was a typo since I was also experimenting with the jsonencode function.", "CreationDate": "2023-08-30T06:54:37.053", "UserId": "9717474", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135754055", "PostId": "77005460", "Score": "0", "Text": "If it is failing continuously in the above way, you can pass the raw `json` context to the policy rule in the `main.tf` file itself. I tried in that way and worked for me. @Xyltic", "CreationDate": "2023-08-30T11:04:21.257", "UserId": "19785512", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "If it is failing continuously in the above way, you can pass the raw `json` context to the policy rule in the `main.tf` file itself. ", "keywords": ["policy"]}]}, {"Id": "135754127", "PostId": "77005460", "Score": "0", "Text": "Could you elaborate further with what you're saying @Jahnavi ? Do you mean that I copy the JSON-content and paste it inside the main.tf file and then rerun the code?", "CreationDate": "2023-08-30T11:10:27.313", "UserId": "9717474", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135754382", "PostId": "77005460", "Score": "1", "Text": "I've given clearly in the answer. Can you please check. @Xyltic", "CreationDate": "2023-08-30T11:32:35.567", "UserId": "19785512", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135755142", "PostId": "77005460", "Score": "0", "Text": "Yes you need to copy the Json policy rule content and give directly in the `main.tf` file. @Xyltic", "CreationDate": "2023-08-30T12:29:03.773", "UserId": "19785512", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Yes you need to copy the Json policy rule content and give directly in the `main.tf` file. ", "keywords": ["policy"]}]}], "history": [{"Id": "297269440", "PostHistoryTypeId": "2", "PostId": "77005460", "RevisionGUID": "eebc51cd-730f-48ed-9a7a-044da258cb14", "CreationDate": "2023-08-30T06:33:25.537", "UserId": "9717474", "Text": "I want to create an Azure PolicyDefinition and I am using the code below:\r\n\r\n\r\n    resource \"azurerm_policy_definition\" \"name-caf-alz-policy-sandbox-denyvnetpeering\" {\r\n      name                = \"Audit-AzureHybridBenefit\"\r\n      display_name        = \"Unused resources driving cost should be avoided\"\r\n      description         = \"Optimize cost by enabling Azure Hybrid Benefit. Leverage this Policy definition as a cost control to reveal Virtual Machines not using AHUB.\"\r\n      mode                = \"All\"\r\n      policy_type         = \"Custom\"                                           \r\n      policy_rule         = (file(\"${path.module}/lib/policy_definitions/policy_definition_es_deny_vnet_peer_cross_sub.json\"))\r\n      management_group_id = data.azurerm_management_group.namemgmtgroup.id\r\n    }\r\n\r\nWhen I run this command via Azure DevOps, Terraform Validate, Init, and Plan are working but when I do Terraform Apply I get this error:\r\n\r\n**creating/updating Policy Definition \"Audit-AzureHybridBenefit\": policy.DefinitionsClient#CreateOrUpdateAtManagementGroup: Failure responding to request: StatusCode=400 -- Original Error: autorest/azure: Service returned an error. Status=400 Code=\"InvalidPolicyRule\" Message=\"Failed to parse policy rule: 'Could not find member 'apiVersion' on object of type 'PolicyRuleDefinition'. Path 'apiVersion'.'.\"**\r\n\r\nWhen I change the policyrule to \r\n\r\n`jsonencode(file(\"${path.module}/lib/policy_definitions/policy_definition_es_deny_vnet_peer_cross_sub.json\"))`\r\n\r\n**Error: expanding JSON for policy_rule: JSON: cannot unmarshal string into Go value of type map[string]interface {}**\r\n\r\nThe JSON-file itself works succesfully when creating it via the GUI.\r\n\r\nJSON-file itself can be find at\r\n\r\nhttps://github.com/Azure/Enterprise-Scale/blob/main/src/resources/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub.json", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I want to create an Azure PolicyDefinition and I am using the code below: resource \"azurerm_policy_definition\" \"name-caf-alz-policy-sandbox-denyvnetpeering\" { name = \"Audit-AzureHybridBenefit\" display_name = \"Unused resources driving cost should be avoided\" description = \"Optimize cost by enabling Azure Hybrid Benefit. ", "keywords": ["cost", "policy"]}, {"source": "Text", "text": "Leverage this Policy definition as a cost control to reveal Virtual Machines not using AHUB.\" mode = \"All\" policy_type = \"Custom\" policy_rule = (file(\"${path.module}/lib/policy_definitions/policy_definition_es_deny_vnet_peer_cross_sub.json\")) management_group_id = data.azurerm_management_group.namemgmtgroup.id } When I run this command via Azure DevOps, Terraform Validate, Init, and Plan are working but when I do Terraform Apply I get this error: **creating/updating Policy Definition \"Audit-AzureHybridBenefit\": policy.DefinitionsClient#CreateOrUpdateAtManagementGroup: Failure responding to request: StatusCode=400 -- Original Error: autorest/azure: Service returned an error. ", "keywords": ["cost", "billing mode", "policy"]}, {"source": "Text", "text": "Status=400 Code=\"InvalidPolicyRule\" Message=\"Failed to parse policy rule: 'Could not find member 'apiVersion' on object of type 'PolicyRuleDefinition'. ", "keywords": ["policy"]}, {"source": "Text", "text": "Path 'apiVersion'.'.\"** When I change the policyrule to `jsonencode(file(\"${path.module}/lib/policy_definitions/policy_definition_es_deny_vnet_peer_cross_sub.json\"))` ", "keywords": ["change"]}]}, {"Id": "297269442", "PostHistoryTypeId": "1", "PostId": "77005460", "RevisionGUID": "eebc51cd-730f-48ed-9a7a-044da258cb14", "CreationDate": "2023-08-30T06:33:25.537", "UserId": "9717474", "Text": "How to create in Terraform Azure PolicyDefinition with local JSON-file?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "297269443", "PostHistoryTypeId": "3", "PostId": "77005460", "RevisionGUID": "eebc51cd-730f-48ed-9a7a-044da258cb14", "CreationDate": "2023-08-30T06:33:25.537", "UserId": "9717474", "Text": "<azure><terraform><terraform-provider-azure>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "297269713", "PostHistoryTypeId": "5", "PostId": "77005460", "RevisionGUID": "b6307e17-114e-4734-b892-43a51efe4f94", "CreationDate": "2023-08-30T06:44:30.613", "UserId": "9717474", "Comment": "added 4 characters in body", "Text": "I want to create an Azure PolicyDefinition and I am using the code below:\r\n\r\n\r\n    resource \"azurerm_policy_definition\" \"name-caf-alz-policy-sandbox-denyvnetpeering\" {\r\n      name                = \"Audit-AzureHybridBenefit\"\r\n      display_name        = \"Unused resources driving cost should be avoided\"\r\n      description         = \"Optimize cost by enabling Azure Hybrid Benefit. Leverage this Policy definition as a cost control to reveal Virtual Machines not using AHUB.\"\r\n      mode                = \"All\"\r\n      policy_type         = \"Custom\"                                           \r\n      policy_rule         = (file(\"${path.module}/lib/policy_definitions/policy_definition_es_deny_vnet_peer_cross_sub.json\"))\r\n      management_group_id = data.azurerm_management_group.namemgmtgroup.id\r\n    }\r\n\r\nWhen I run this command via Azure DevOps, Terraform Validate, Init, and Plan are working but when I do Terraform Apply I get this error:\r\n\r\n**creating/updating Policy Definition \"Audit-AzureHybridBenefit\": policy.DefinitionsClient#CreateOrUpdateAtManagementGroup: Failure responding to request: StatusCode=400 -- Original Error: autorest/azure: Service returned an error. Status=400 Code=\"InvalidPolicyRule\" Message=\"Failed to parse policy rule: 'Could not find member 'apiVersion' on object of type 'PolicyRuleDefinition'. Path 'apiVersion'.'.\"**\r\n\r\nWhen I change the `policy_rule` to \r\n\r\n`jsonencode(file(\"${path.module}/lib/policy_definitions/policy_definition_es_deny_vnet_peer_cross_sub.json\"))`\r\n\r\n**Error: expanding JSON for policy_rule: JSON: cannot unmarshal string into Go value of type map[string]interface {}**\r\n\r\nThe JSON-file itself works succesfully when creating it via the GUI.\r\n\r\nJSON-file itself can be found at\r\n\r\nhttps://github.com/Azure/Enterprise-Scale/blob/main/src/resources/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub.json", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I want to create an Azure PolicyDefinition and I am using the code below: resource \"azurerm_policy_definition\" \"name-caf-alz-policy-sandbox-denyvnetpeering\" { name = \"Audit-AzureHybridBenefit\" display_name = \"Unused resources driving cost should be avoided\" description = \"Optimize cost by enabling Azure Hybrid Benefit. ", "keywords": ["cost", "policy"]}, {"source": "Text", "text": "Leverage this Policy definition as a cost control to reveal Virtual Machines not using AHUB.\" mode = \"All\" policy_type = \"Custom\" policy_rule = (file(\"${path.module}/lib/policy_definitions/policy_definition_es_deny_vnet_peer_cross_sub.json\")) management_group_id = data.azurerm_management_group.namemgmtgroup.id } When I run this command via Azure DevOps, Terraform Validate, Init, and Plan are working but when I do Terraform Apply I get this error: **creating/updating Policy Definition \"Audit-AzureHybridBenefit\": policy.DefinitionsClient#CreateOrUpdateAtManagementGroup: Failure responding to request: StatusCode=400 -- Original Error: autorest/azure: Service returned an error. ", "keywords": ["cost", "billing mode", "policy"]}, {"source": "Text", "text": "Status=400 Code=\"InvalidPolicyRule\" Message=\"Failed to parse policy rule: 'Could not find member 'apiVersion' on object of type 'PolicyRuleDefinition'. ", "keywords": ["policy"]}, {"source": "Text", "text": "Path 'apiVersion'.'.\"** When I change the `policy_rule` to `jsonencode(file(\"${path.module}/lib/policy_definitions/policy_definition_es_deny_vnet_peer_cross_sub.json\"))` ", "keywords": ["change"]}]}, {"Id": "297270096", "PostHistoryTypeId": "5", "PostId": "77005460", "RevisionGUID": "8c5a7a94-553f-4a87-97ba-561307cb8474", "CreationDate": "2023-08-30T06:54:53.557", "UserId": "9717474", "Comment": "deleted 2 characters in body", "Text": "I want to create an Azure PolicyDefinition and I am using the code below:\r\n\r\n\r\n    resource \"azurerm_policy_definition\" \"name-caf-alz-policy-sandbox-denyvnetpeering\" {\r\n      name                = \"Audit-AzureHybridBenefit\"\r\n      display_name        = \"Unused resources driving cost should be avoided\"\r\n      description         = \"Optimize cost by enabling Azure Hybrid Benefit. Leverage this Policy definition as a cost control to reveal Virtual Machines not using AHUB.\"\r\n      mode                = \"All\"\r\n      policy_type         = \"Custom\"                                           \r\n      policy_rule         = file(\"${path.module}/lib/policy_definitions/policy_definition_es_deny_vnet_peer_cross_sub.json\")\r\n      management_group_id = data.azurerm_management_group.namemgmtgroup.id\r\n    }\r\n\r\nWhen I run this command via Azure DevOps, Terraform Validate, Init, and Plan are working but when I do Terraform Apply I get this error:\r\n\r\n**creating/updating Policy Definition \"Audit-AzureHybridBenefit\": policy.DefinitionsClient#CreateOrUpdateAtManagementGroup: Failure responding to request: StatusCode=400 -- Original Error: autorest/azure: Service returned an error. Status=400 Code=\"InvalidPolicyRule\" Message=\"Failed to parse policy rule: 'Could not find member 'apiVersion' on object of type 'PolicyRuleDefinition'. Path 'apiVersion'.'.\"**\r\n\r\nWhen I change the `policy_rule` to \r\n\r\n`jsonencode(file(\"${path.module}/lib/policy_definitions/policy_definition_es_deny_vnet_peer_cross_sub.json\"))`\r\n\r\n**Error: expanding JSON for policy_rule: JSON: cannot unmarshal string into Go value of type map[string]interface {}**\r\n\r\nThe JSON-file itself works succesfully when creating it via the GUI.\r\n\r\nJSON-file itself can be found at\r\n\r\nhttps://github.com/Azure/Enterprise-Scale/blob/main/src/resources/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub.json", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I want to create an Azure PolicyDefinition and I am using the code below: resource \"azurerm_policy_definition\" \"name-caf-alz-policy-sandbox-denyvnetpeering\" { name = \"Audit-AzureHybridBenefit\" display_name = \"Unused resources driving cost should be avoided\" description = \"Optimize cost by enabling Azure Hybrid Benefit. ", "keywords": ["cost", "policy"]}, {"source": "Text", "text": "Leverage this Policy definition as a cost control to reveal Virtual Machines not using AHUB.\" mode = \"All\" policy_type = \"Custom\" policy_rule = file(\"${path.module}/lib/policy_definitions/policy_definition_es_deny_vnet_peer_cross_sub.json\") management_group_id = data.azurerm_management_group.namemgmtgroup.id } When I run this command via Azure DevOps, Terraform Validate, Init, and Plan are working but when I do Terraform Apply I get this error: **creating/updating Policy Definition \"Audit-AzureHybridBenefit\": policy.DefinitionsClient#CreateOrUpdateAtManagementGroup: Failure responding to request: StatusCode=400 -- Original Error: autorest/azure: Service returned an error. ", "keywords": ["cost", "billing mode", "policy"]}, {"source": "Text", "text": "Status=400 Code=\"InvalidPolicyRule\" Message=\"Failed to parse policy rule: 'Could not find member 'apiVersion' on object of type 'PolicyRuleDefinition'. ", "keywords": ["policy"]}, {"source": "Text", "text": "Path 'apiVersion'.'.\"** When I change the `policy_rule` to `jsonencode(file(\"${path.module}/lib/policy_definitions/policy_definition_es_deny_vnet_peer_cross_sub.json\"))` ", "keywords": ["change"]}]}], "answers": [{"Id": "77007592", "PostTypeId": "2", "ParentId": "77005460", "CreationDate": "2023-08-30T11:32:01.997", "Score": "1", "Body": "<p>The issue indicates that the <code>Apiversion</code> property, which is present in the <code>Json file</code> path you provided, is incompatible. The <a href=\"https://github.com/MicrosoftDocs/azure-docs/blob/main/articles/governance/policy/concepts/definition-structure.md\" rel=\"nofollow noreferrer\">Structure of Policy defintion Json</a> as specified in this Doc should not always include the <code>apiversion</code> property.</p>\n<p>To verify the issue properly, I've tried adding the <code>Json</code> policy in the <code>policy rule</code> of <code>.tf</code> file and it worked as expected as shown.</p>\n<pre class=\"lang-bash prettyprint-override\"><code>provider &quot;azurerm&quot;{\nfeatures{}\n}\nresource &quot;azurerm_policy_definition&quot; &quot;name-caf-alz-policy-sandbox-denyvnetpeering&quot; {\n  name                = &quot;Audit-AzureHybridBenefit&quot;\n  display_name        = &quot;Unused resources driving cost should be avoided&quot;\n  description         = &quot;Optimize cost by enabling Azure Hybrid Benefit. Leverage this Policy definition as a cost control to reveal Virtual Machines not using AHUB.&quot;\n  mode                = &quot;All&quot;\n  policy_type         = &quot;Custom&quot;                                           \n  policy_rule         = &lt;&lt;POLICY_RULE\n  {\n      &quot;if&quot;: {\n        &quot;allOf&quot;: [\n          {\n            &quot;field&quot;: &quot;type&quot;,\n            &quot;equals&quot;: &quot;Microsoft.Network/virtualNetworks/virtualNetworkPeerings&quot;\n          },\n          {\n            &quot;field&quot;: &quot;Microsoft.Network/virtualNetworks/virtualNetworkPeerings/remoteVirtualNetwork.id&quot;,\n            &quot;notcontains&quot;: &quot;[[subscription().id]&quot;\n          }\n        ]\n      },\n      &quot;then&quot;: {\n        &quot;effect&quot;: &quot;[[parameters('effect')]&quot;\n      }\n    }\n    POLICY_RULE   \n  }\n</code></pre>\n<p>As you are not using <code>parameters</code> in the Policy, I have not included the <code>parameters</code> block below. If required, you may add it to the <code>policyrule</code> with the following structure to make it work.</p>\n<pre class=\"lang-bash prettyprint-override\"><code>parameters =  &lt;&lt;PARAMETERS\n     {\n     &quot;effect&quot;: {\n        &quot;type&quot;: &quot;String&quot;,\n        &quot;metadata&quot;: {\n          &quot;displayName&quot;: &quot;Effect&quot;,\n          &quot;description&quot;: &quot;Enable or disable the execution of the policy&quot;\n        },\n        &quot;allowedValues&quot;: [\n          &quot;Audit&quot;,\n          &quot;Deny&quot;,\n          &quot;Disabled&quot;\n        ],\n        &quot;defaultValue&quot;: &quot;Deny&quot;\n      }\n    }\n    PARAMETERS\n</code></pre>\n<p><em><strong>Executed</strong></em> <code>terraform init</code> <em><strong>and validated the configuration using</strong></em> <code>terraform validate</code>:</p>\n<p><img src=\"https://i.imgur.com/a2Uot9C.png\" alt=\"enter image description here\" /></p>\n<p><em><strong>Executed</strong></em> <code>terraform apply</code>:</p>\n<p><img src=\"https://i.imgur.com/w9l3R2w.png\" alt=\"enter image description here\" /></p>\n<p><em><strong>Created policy definition successfully in the Portal:</strong></em></p>\n<p><img src=\"https://i.imgur.com/R7IZKja.png\" alt=\"enter image description here\" /></p>\n<p><em>Or</em></p>\n<p>if you only want to work with <code>file(path)</code> function, you don't need to include <code>jsonencode</code> function because the <code>policy_rule</code> input to the <code>azurerm_policy_definition</code> resource should be a <code>map</code> representing the <code>JSON</code> structure, not a <code>string</code>. Make sure the syntax and path has correctly given.</p>\n", "OwnerUserId": "19785512", "LastActivityDate": "2023-08-30T11:32:01.997", "CommentCount": "5", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "135755667", "PostId": "77007592", "Score": "0", "Text": "Thank you for the good explanation. I've tried it myself and it works. I just did not understand it very well with the official documentation: https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/policy_definition\n\nJust from your expert knowledge: Let say that you have to create multiple policy definitions in Terraform. Each of these terraform code will have approxmatiely 80+ lines of codes which is not nice to see. What do you suggest to do this much cleaner?\n\nCreate a JSON-file with only policy_rule / parameters / metadata code and refer it all in 1 file?", "CreationDate": "2023-08-30T13:04:46.767", "UserId": "9717474", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Just from your expert knowledge: Let say that you have to create multiple policy definitions in Terraform. ", "keywords": ["policy"]}]}, {"Id": "135764376", "PostId": "77007592", "Score": "1", "Text": "Yep exactly. Just create a file which contains only policy rule and parameters if required. @Xyltic", "CreationDate": "2023-08-31T05:40:59.903", "UserId": "19785512", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Just create a file which contains only policy rule and parameters if required. ", "keywords": ["policy"]}]}, {"Id": "135764775", "PostId": "77007592", "Score": "0", "Text": "Do you have an example how this should be done? What needs to be filled in the JSON-file specifically and should I fill the map command as here below:\n\n`policy_rule = map(file(\"${path.module}/lib/policy_definitions/policy_definition_es_deny_vnet_peer_cross_sub.json\"))`  Because from an infra-engineer like myself, I've tried this by myself but it's not working. I am also willing to donate a cup of coffee to you for your appreciation and work.", "CreationDate": "2023-08-31T06:28:22.893", "UserId": "9717474", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135766041", "PostId": "77007592", "Score": "1", "Text": "By following the schema structure which I've already provided you in the above answer, you can achieve that. And no need to use any `map ()` or something. Just pass `jsondecode(file(..))`. @Xyltic", "CreationDate": "2023-08-31T08:20:33.313", "UserId": "19785512", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "135766150", "PostId": "77007592", "Score": "1", "Text": "Cheers fo the explanation.", "CreationDate": "2023-08-31T08:29:40.113", "UserId": "9717474", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "297281557", "PostHistoryTypeId": "2", "PostId": "77007592", "RevisionGUID": "64fb6ad2-232c-4a0c-a78c-1faffc900af2", "CreationDate": "2023-08-30T11:32:01.997", "UserId": "19785512", "Text": "The issue indicates that the `Apiversion` property, which is present in the `Json file` path you provided, is incompatible. The [Structure of Policy defintion Json](https://github.com/MicrosoftDocs/azure-docs/blob/main/articles/governance/policy/concepts/definition-structure.md) as specified in this Doc should not always include the `apiversion` property. \r\n\r\nTo verify the issue properly, I've tried adding the `Json` policy in the `policy rule` of `.tf` file and it worked as expected as shown.\r\n\r\n```bash\r\nprovider \"azurerm\"{\r\nfeatures{}\r\n}\r\nresource \"azurerm_policy_definition\" \"name-caf-alz-policy-sandbox-denyvnetpeering\" {\r\n  name                = \"Audit-AzureHybridBenefit\"\r\n  display_name        = \"Unused resources driving cost should be avoided\"\r\n  description         = \"Optimize cost by enabling Azure Hybrid Benefit. Leverage this Policy definition as a cost control to reveal Virtual Machines not using AHUB.\"\r\n  mode                = \"All\"\r\n  policy_type         = \"Custom\"                                           \r\n  policy_rule         = <<POLICY_RULE\r\n  {\r\n      \"if\": {\r\n        \"allOf\": [\r\n          {\r\n            \"field\": \"type\",\r\n            \"equals\": \"Microsoft.Network/virtualNetworks/virtualNetworkPeerings\"\r\n          },\r\n          {\r\n            \"field\": \"Microsoft.Network/virtualNetworks/virtualNetworkPeerings/remoteVirtualNetwork.id\",\r\n            \"notcontains\": \"[[subscription().id]\"\r\n          }\r\n        ]\r\n      },\r\n      \"then\": {\r\n        \"effect\": \"[[parameters('effect')]\"\r\n      }\r\n    }\r\n POLICY_RULE   \r\n  }\r\n  ```\r\n \r\nAs you are not using `parameters` in the Policy, I have not included the `parameters` block below. If required, you may add it to the `policyrule` with the following structure to make it work.  \r\n\r\n```bash\r\nparameters =  <<PARAMETERS\r\n     {\r\n  \"effect\": {\r\n        \"type\": \"String\",\r\n        \"metadata\": {\r\n          \"displayName\": \"Effect\",\r\n          \"description\": \"Enable or disable the execution of the policy\"\r\n        },\r\n        \"allowedValues\": [\r\n          \"Audit\",\r\n          \"Deny\",\r\n          \"Disabled\"\r\n        ],\r\n        \"defaultValue\": \"Deny\"\r\n      }\r\n    }\r\n PARAMETERS\r\n```\r\n\r\n***Executed*** `terraform init` ***and validated the configuration using*** `terraform validate`:\r\n\r\n![enter image description here](https://i.imgur.com/a2Uot9C.png)\r\n\r\n\r\n\r\n***Executed*** `terraform apply`:\r\n\r\n\r\n![enter image description here](https://i.imgur.com/w9l3R2w.png)\r\n\r\n\r\n\r\n***Created policy definition successfully in the Portal:***\r\n\r\n\r\n![enter image description here](https://i.imgur.com/R7IZKja.png)\r\n\r\n*Or*\r\n\r\n if you only want to work with `file(path)` function, you don't need to include `jsonencode` function because the `policy_rule` input to the `azurerm_policy_definition` resource should be a `map` representing the `JSON` structure, not a `string`. Make sure the syntax and path has correctly given. ", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "The [Structure of Policy defintion Json](https://github.com/MicrosoftDocs/azure-docs/blob/main/articles/governance/policy/concepts/definition-structure.md) as specified in this Doc should not always include the `apiversion` property. ", "keywords": ["policy"]}, {"source": "Text", "text": "To verify the issue properly, I've tried adding the `Json` policy in the `policy rule` of `.tf` file and it worked as expected as shown. ", "keywords": ["policy"]}, {"source": "Text", "text": "```bash provider \"azurerm\"{ features{} } resource \"azurerm_policy_definition\" \"name-caf-alz-policy-sandbox-denyvnetpeering\" { name = \"Audit-AzureHybridBenefit\" display_name = \"Unused resources driving cost should be avoided\" description = \"Optimize cost by enabling Azure Hybrid Benefit. ", "keywords": ["cost", "provider", "policy"]}, {"source": "Text", "text": "Leverage this Policy definition as a cost control to reveal Virtual Machines not using AHUB.\" mode = \"All\" policy_type = \"Custom\" policy_rule = <<POLICY_RULE { \"if\": { \"allOf\": [ { \"field\": \"type\", \"equals\": \"Microsoft.Network/virtualNetworks/virtualNetworkPeerings\" }, { \"field\": \"Microsoft.Network/virtualNetworks/virtualNetworkPeerings/remoteVirtualNetwork.id\", \"notcontains\": \"[[subscription().id]\" } ] }, \"then\": { \"effect\": \"[[parameters('effect')]\" } } POLICY_RULE } ``` ", "keywords": ["cost", "billing mode", "policy"]}, {"source": "Text", "text": "As you are not using `parameters` in the Policy, I have not included the `parameters` block below. ", "keywords": ["policy"]}, {"source": "Text", "text": "```bash parameters = <<PARAMETERS { \"effect\": { \"type\": \"String\", \"metadata\": { \"displayName\": \"Effect\", \"description\": \"Enable or disable the execution of the policy\" }, \"allowedValues\": [ \"Audit\", \"Deny\", \"Disabled\" ], \"defaultValue\": \"Deny\" } } PARAMETERS ``` ***Executed*** `terraform init` ***and validated the configuration using*** `terraform validate`: ![enter image description here](https://i.imgur.com/a2Uot9C.png) ***Executed*** `terraform apply`: ![enter image description here](https://i.imgur.com/w9l3R2w.png) ***Created policy definition successfully in the Portal:*** ![enter image description here](https://i.imgur.com/R7IZKja.png) *Or* if you only want to work with `file(path)` function, you don't need to include `jsonencode` function because the `policy_rule` input to the `azurerm_policy_definition` resource should be a `map` representing the `JSON` structure, not a `string`", "keywords": ["policy"]}]}, {"Id": "297281559", "PostHistoryTypeId": "33", "PostId": "77007592", "RevisionGUID": "3a8c4d8f-35eb-4fec-9b93-91f73cc59ffe", "CreationDate": "2023-08-30T11:32:01.997", "UserId": "-1010", "Comment": "336018", "filtered-sentences": []}], "filtered-sentences": [{"source": "Body", "text": "The Structure of Policy defintion Json as specified in this Doc should not always include the apiversion property. ", "keywords": ["policy"]}, {"source": "Body", "text": "To verify the issue properly, I've tried adding the Json policy in the policy rule of .tf file and it worked as expected as shown. ", "keywords": ["policy"]}, {"source": "Body", "text": "As you are not using parameters in the Policy, I have not included the parameters block below. ", "keywords": ["policy"]}, {"source": "Body", "text": "Executed terraform apply: Created policy definition successfully in the Portal: ", "keywords": ["policy"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I want to create an Azure PolicyDefinition and I am using the code below: When I run this command via Azure DevOps, Terraform Validate, Init, and Plan are working but when I do Terraform Apply I get this error: creating/updating Policy Definition \"Audit-AzureHybridBenefit\": policy.DefinitionsClient#CreateOrUpdateAtManagementGroup: Failure responding to request: StatusCode=400 -- Original Error: autorest/azure: Service returned an error. ", "keywords": ["policy"]}, {"source": "Body", "text": "Status=400 Code=\"InvalidPolicyRule\" Message=\"Failed to parse policy rule: 'Could not find member 'apiVersion' on object of type 'PolicyRuleDefinition'. ", "keywords": ["policy"]}, {"source": "Body", "text": "Path 'apiVersion'.'.\" When I change the policy_rule to jsonencode(file(\"${path.module}/lib/policy_definitions/policy_definition_es_deny_vnet_peer_cross_sub.json\")) Error: expanding JSON for policy_rule: JSON: cannot unmarshal string into Go value of type map[string]interface {} ", "keywords": ["change"]}]}