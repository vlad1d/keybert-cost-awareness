{"Id": "74197840", "PostTypeId": "1", "AcceptedAnswerId": "74197931", "CreationDate": "2022-10-25T17:10:54.103", "Score": "0", "ViewCount": "89", "Body": "<p>I want to use Terraform to temporarily spin up a site on AWS from time to time (no need to pay for resources when they're not being used). I'd like Terraform to manage the DNS.</p>\n<p>The domain is not hosted in Route 53, therefore the nameservers need to be manually configured. After <code>terraform destroy</code>, everything is removed (including the Route 53 zones which list the nameservers).</p>\n<p>The next time everything is brought back up with <code>terraform apply</code>, I want the same Route 53 nameservers so that they don't need to be manually configured each time. Is there a recommended way to achieve this?</p>\n<p>I've seen <a href=\"https://stackoverflow.com/questions/55265203/terraform-delete-all-resources-except-one\">this question</a>, which is similar, but wanted to avoid prescribing an approach and describe the problem instead.</p>\n", "OwnerUserId": "365950", "LastActivityDate": "2022-10-26T15:09:16.203", "Title": "Is it possible for Route 53 nameservers to survive terraform destroy so that they work when reapplied?", "Tags": "<terraform><terraform-provider-aws><amazon-route53>", "AnswerCount": "1", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "links": [{"Id": "2010085953", "CreationDate": "2022-10-25T17:10:54.103", "PostId": "74197840", "RelatedPostId": "55265203", "LinkTypeId": "1"}], "history": [{"Id": "280824284", "PostHistoryTypeId": "2", "PostId": "74197840", "RevisionGUID": "4889daea-24da-4dad-a7ac-e259e368ca24", "CreationDate": "2022-10-25T17:10:54.103", "UserId": "365950", "Text": "I want to use Terraform to temporarily spin up a site on AWS from time to time (no need to pay for resources when they're not being used). I'd like Terraform to manage the DNS. \r\n\r\nThe domain is not hosted in Route 53, therefore the nameservers need to be manually configured. After `terraform destroy`, everything is removed (including the Route 53 zones which list the nameservers). \r\n\r\nThe next time everything is brought back up with `terraform apply`, I want the same Route 53 nameservers so that they don't need to be manually configured each time. Is there a recommended way to achieve this? \r\n\r\nI've seen [this question](https://stackoverflow.com/questions/55265203/terraform-delete-all-resources-except-one), which is similar, but wanted to avoid prescribing an approach and describe the problem instead. ", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I want to use Terraform to temporarily spin up a site on AWS from time to time (no need to pay for resources when they're not being used). ", "keywords": ["pay"]}, {"source": "Text", "text": "The domain is not hosted in Route 53, therefore the nameservers need to be manually configured. ", "keywords": ["domain"]}]}, {"Id": "280824286", "PostHistoryTypeId": "1", "PostId": "74197840", "RevisionGUID": "4889daea-24da-4dad-a7ac-e259e368ca24", "CreationDate": "2022-10-25T17:10:54.103", "UserId": "365950", "Text": "Is it possible for Route 53 nameservers to survive terraform destroy so that they work when reapplied?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "280824287", "PostHistoryTypeId": "3", "PostId": "74197840", "RevisionGUID": "4889daea-24da-4dad-a7ac-e259e368ca24", "CreationDate": "2022-10-25T17:10:54.103", "UserId": "365950", "Text": "<terraform><terraform-provider-aws><amazon-route53>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "74197931", "PostTypeId": "2", "ParentId": "74197840", "CreationDate": "2022-10-25T17:19:45.873", "Score": "2", "Body": "<p>Create a <a href=\"https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/create-reusable-delegation-set.html\" rel=\"nofollow noreferrer\">Route53 delegation set</a> outside of terraform; this is a re-usable set of four nameservers that can be used by multiple zones without the usual randomly rotating set of selections.</p>\n<p>Once you've done so, you can provide its ID as a string when provisioning Terraform Route53 resources...</p>\n<pre><code>resource &quot;aws_route53_zone&quot; &quot;primary&quot; {\n  name              = &quot;example.com&quot;\n  delegation_set_id = &quot;SET-ID&quot;\n}\n</code></pre>\n", "OwnerUserId": "1902010", "LastEditorUserId": "1902010", "LastEditDate": "2022-10-26T15:09:16.203", "LastActivityDate": "2022-10-26T15:09:16.203", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "280824816", "PostHistoryTypeId": "2", "PostId": "74197931", "RevisionGUID": "8151b097-cc09-4359-a398-27c95ffea4ba", "CreationDate": "2022-10-25T17:19:45.873", "UserId": "1902010", "Text": "Create a [Route53 delegation set](https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/create-reusable-delegation-set.html) outside of terraform; this is a re-usable set of four nameservers that can be used by multiple zones without the usual randomly rotating set of selections.\r\n\r\nOnce you've done so, you can provided its ID as a string when provisioning Terraform Route53 resources...\r\n\r\n    resource \"aws_route53_zone\" \"primary\" {\r\n      name              = \"example.com\"\r\n      delegation_set_id = \"SET-ID\"\r\n    }", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "280892737", "PostHistoryTypeId": "5", "PostId": "74197931", "RevisionGUID": "9ee18827-0527-45fd-9b80-26d99b29e65d", "CreationDate": "2022-10-26T15:09:16.203", "UserId": "1902010", "Comment": "deleted 1 character in body", "Text": "Create a [Route53 delegation set](https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/create-reusable-delegation-set.html) outside of terraform; this is a re-usable set of four nameservers that can be used by multiple zones without the usual randomly rotating set of selections.\r\n\r\nOnce you've done so, you can provide its ID as a string when provisioning Terraform Route53 resources...\r\n\r\n    resource \"aws_route53_zone\" \"primary\" {\r\n      name              = \"example.com\"\r\n      delegation_set_id = \"SET-ID\"\r\n    }", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I want to use Terraform to temporarily spin up a site on AWS from time to time (no need to pay for resources when they're not being used). ", "keywords": ["pay"]}, {"source": "Body", "text": "The domain is not hosted in Route 53, therefore the nameservers need to be manually configured. ", "keywords": ["domain"]}]}