{"Id": "64795148", "PostTypeId": "1", "AcceptedAnswerId": "64795537", "CreationDate": "2020-11-11T22:29:54.453", "Score": "3", "ViewCount": "938", "Body": "<p>This is a follow-up question to my original question: <a href=\"https://stackoverflow.com/q/64758624/948268\">Terraform (0.12.29) import not working as expected; import succeeded but plan shows destroy &amp; recreate</a></p>\n<p><strong>Some Background:</strong> We have terraform code to create various AWS resources. Some of these resources are created per AWS account and hence are structured to be stored in a account-scope folder in our project. This was when we were only having one AWS region. Now our application is made multi-region and hence these resources are to be created per region for each AWS account.</p>\n<p>In order to do that we have now moved these TF scripts to region-scope folder which will be run per region. Since these resources are no longer part of 'account scope' we have removed them from the account scope Terraform state. Now when I try to import these resources to <code>region scope</code></p>\n<p><strong>My Imports (running from xyz-region-scope directory) and terraform plan:</strong></p>\n<pre><code>terraform import module.buckets.random_id.cloudtrail_bucket_suffix cqLFzQ\nterraform import module.buckets.aws_s3_bucket.cloudtrail_logging_bucket &quot;ab-xyz-stage-cloudtrail-logging-72a2c5cd&quot;\nterraform import module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket &quot;ab-xyz-stage-cloudtrail-logging-72a2c5cd&quot;\nterraform import module.buckets.module.access_logging_bucket.aws_s3_bucket.default &quot;ab-xyz-stage-access-logging-9d8e94ff&quot;\nterraform import module.buckets.module.access_logging_bucket.random_id.bucket_suffix  nY6U_w\nterraform import module.encryption.module.data_key.aws_iam_policy.decrypt &quot;arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt&quot;\nterraform import module.encryption.module.data_key.aws_iam_policy.encrypt &quot;arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt&quot;\n\n\nmycompanymachine:xyz-region-scope kuldeepjain$ ../scripts/terraform.sh xyz-stage plan -no-color\n+ set -o posix\n+ IFS='\n    '\n++ blhome\n+ BASH_LIB_HOME=/usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT\n+ source /usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT/s3/bucket.sh\n+ main xyz-stage plan -no-color\n+ '[' 3 -lt 2 ']'\n+ local env=xyz-stage\n+ shift\n+ local command=plan\n+ shift\n++ get_region xyz-stage\n++ local env=xyz-stage\n++ shift\n+++ aws --profile xyz-stage configure get region\n++ local region=us-west-2\n++ '[' -z us-west-2 ']'\n++ echo us-west-2\n+ local region=us-west-2\n++ _get_bucket xyz-stage xyz-stage-tfstate\n++ local env=xyz-stage\n++ shift\n++ local name=xyz-stage-tfstate\n++ shift\n+++ _get_bucket_list xyz-stage xyz-stage-tfstate\n+++ local env=xyz-stage\n+++ shift\n+++ local name=xyz-stage-tfstate\n+++ shift\n+++ aws --profile xyz-stage --output json s3api list-buckets --query 'Buckets[?contains(Name, `xyz-stage-tfstate`) == `true`].Name'\n++ local 'bucket_list=[\n    &quot;ab-xyz-stage-tfstate-5b8873b8&quot;\n]'\n+++ _count_buckets_in_json '[\n    &quot;ab-xyz-stage-tfstate-5b8873b8&quot;\n]'\n+++ local 'json=[\n    &quot;ab-xyz-stage-tfstate-5b8873b8&quot;\n]'\n+++ shift\n+++ echo '[\n    &quot;ab-xyz-stage-tfstate-5b8873b8&quot;\n]'\n+++ jq '. | length'\n++ local number_of_buckets=1\n++ '[' 1 == 0 ']'\n++ '[' 1 -gt 1 ']'\n+++ echo '[\n    &quot;ab-xyz-stage-tfstate-5b8873b8&quot;\n]'\n+++ jq -r '.[0]'\n++ local bucket_name=ab-xyz-stage-tfstate-5b8873b8\n++ echo ab-xyz-stage-tfstate-5b8873b8\n+ local tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8\n++ get_config_file xyz-stage us-west-2\n++ local env=xyz-stage\n++ shift\n++ local region=us-west-2\n++ shift\n++ local config_file=config/us-west-2/xyz-stage.tfvars\n++ '[' '!' -f config/us-west-2/xyz-stage.tfvars ']'\n++ config_file=config/us-west-2/default.tfvars\n++ echo config/us-west-2/default.tfvars\n+ local config_file=config/us-west-2/default.tfvars\n+ export TF_DATA_DIR=state/xyz-stage/\n+ TF_DATA_DIR=state/xyz-stage/\n+ terraform get\n+ terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color\nRefreshing Terraform state in-memory prior to plan...\nThe refreshed state will be used to calculate this plan, but will not be\npersisted to local or remote state storage.\n\nmodule.encryption.module.data_key.data.null_data_source.key: Refreshing state...\nmodule.buckets.module.access_logging_bucket.data.template_file.dependencies: Refreshing state...\nmodule.buckets.data.template_file.dependencies: Refreshing state...\ndata.aws_caller_identity.current: Refreshing state...\nmodule.buckets.module.access_logging_bucket.data.aws_caller_identity.current: Refreshing state...\nmodule.encryption.module.data_key.data.aws_kms_alias.default: Refreshing state...\nmodule.buckets.data.aws_caller_identity.current: Refreshing state...\nmodule.encryption.module.data_key.data.aws_region.current: Refreshing state...\nmodule.encryption.module.data_key.data.aws_caller_identity.current: Refreshing state...\nmodule.buckets.module.access_logging_bucket.data.aws_kms_alias.encryption_key_alias: Refreshing state...\nmodule.buckets.module.access_logging_bucket.random_id.bucket_suffix: Refreshing state... [id=nY6U_w]\nmodule.buckets.module.access_logging_bucket.aws_s3_bucket.default: Refreshing state... [id=ab-xyz-stage-access-logging-9d8e94ff]\nmodule.buckets.random_id.cloudtrail_bucket_suffix: Refreshing state... [id=cqLFzQ]\nmodule.buckets.module.access_logging_bucket.data.template_file.encryption_configuration: Refreshing state...\nmodule.encryption.module.data_key.data.aws_iam_policy_document.encrypt: Refreshing state...\nmodule.encryption.module.data_key.data.aws_iam_policy_document.decrypt: Refreshing state...\nmodule.encryption.module.data_key.aws_iam_policy.decrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt]\nmodule.encryption.module.data_key.aws_iam_policy.encrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt]\nmodule.buckets.aws_s3_bucket.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd]\nmodule.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail: Refreshing state...\nmodule.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd]\n\n------------------------------------------------------------------------\n\nAn execution plan has been generated and is shown below.\nResource actions are indicated with the following symbols:\n  + create\n  ~ update in-place\n &lt;= read (data resources)\n\nTerraform will perform the following actions:\n\n\n  # module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply\n  # (config refers to values not yet known)\n &lt;= data &quot;aws_iam_policy_document&quot; &quot;restrict_access_cloudtrail&quot;  {\n      + id   = (known after apply)\n      + json = (known after apply)\n\n      + statement {\n          + actions   = [\n              + &quot;s3:GetBucketAcl&quot;,\n            ]\n          + effect    = &quot;Allow&quot;\n          + resources = [\n              + &quot;arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd&quot;,\n            ]\n          + sid       = &quot;AWSCloudTrailAclCheck&quot;\n\n          + principals {\n              + identifiers = [\n                  + &quot;cloudtrail.amazonaws.com&quot;,\n                ]\n              + type        = &quot;Service&quot;\n            }\n        }\n      + statement {\n          + actions   = [\n              + &quot;s3:PutObject&quot;,\n            ]\n          + effect    = &quot;Allow&quot;\n          + resources = [\n              + &quot;arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*&quot;,\n            ]\n          + sid       = &quot;AWSCloudTrailWrite&quot;\n\n          + condition {\n              + test     = &quot;StringEquals&quot;\n              + values   = [\n                  + &quot;bucket-owner-full-control&quot;,\n                ]\n              + variable = &quot;s3:x-amz-acl&quot;\n            }\n\n          + principals {\n              + identifiers = [\n                  + &quot;cloudtrail.amazonaws.com&quot;,\n                ]\n              + type        = &quot;Service&quot;\n            }\n        }\n    }\n\n  # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket will be updated in-place\n  ~ resource &quot;aws_s3_bucket&quot; &quot;cloudtrail_logging_bucket&quot; {\n      + acl                         = &quot;private&quot;\n        arn                         = &quot;arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd&quot;\n        bucket                      = &quot;ab-xyz-stage-cloudtrail-logging-72a2c5cd&quot;\n        bucket_domain_name          = &quot;ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com&quot;\n        bucket_regional_domain_name = &quot;ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com&quot;\n      + force_destroy               = false\n        hosted_zone_id              = &quot;Z3BJ6K6RIION7M&quot;\n        id                          = &quot;ab-xyz-stage-cloudtrail-logging-72a2c5cd&quot;\n        region                      = &quot;us-west-2&quot;\n        request_payer               = &quot;BucketOwner&quot;\n        tags                        = {\n            &quot;mycompany:finance:accountenvironment&quot;   = &quot;xyz-stage&quot;\n            &quot;mycompany:finance:application&quot;          = &quot;ab-platform&quot;\n            &quot;mycompany:finance:billablebusinessunit&quot; = &quot;my-dev&quot;\n            &quot;name&quot;                                = &quot;Cloudtrail logging bucket&quot;\n        }\n\n        lifecycle_rule {\n            abort_incomplete_multipart_upload_days = 0\n            enabled                                = true\n            id                                     = &quot;intu-lifecycle-s3-int-tier&quot;\n            tags                                   = {}\n\n            transition {\n                days          = 32\n                storage_class = &quot;INTELLIGENT_TIERING&quot;\n            }\n        }\n\n        logging {\n            target_bucket = &quot;ab-xyz-stage-access-logging-9d8e94ff&quot;\n            target_prefix = &quot;logs/cloudtrail-logging/&quot;\n        }\n\n        versioning {\n            enabled    = false\n            mfa_delete = false\n        }\n    }\n\n  # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket will be updated in-place\n  ~ resource &quot;aws_s3_bucket_policy&quot; &quot;cloudtrail_logging_bucket&quot; {\n        bucket = &quot;ab-xyz-stage-cloudtrail-logging-72a2c5cd&quot;\n        id     = &quot;ab-xyz-stage-cloudtrail-logging-72a2c5cd&quot;\n      ~ policy = jsonencode(\n            {\n              - Statement = [\n                  - {\n                      - Action    = &quot;s3:GetBucketAcl&quot;\n                      - Effect    = &quot;Allow&quot;\n                      - Principal = {\n                          - Service = &quot;cloudtrail.amazonaws.com&quot;\n                        }\n                      - Resource  = &quot;arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd&quot;\n                      - Sid       = &quot;AWSCloudTrailAclCheck&quot;\n                    },\n                  - {\n                      - Action    = &quot;s3:PutObject&quot;\n                      - Condition = {\n                          - StringEquals = {\n                              - s3:x-amz-acl = &quot;bucket-owner-full-control&quot;\n                            }\n                        }\n                      - Effect    = &quot;Allow&quot;\n                      - Principal = {\n                          - Service = &quot;cloudtrail.amazonaws.com&quot;\n                        }\n                      - Resource  = &quot;arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*&quot;\n                      - Sid       = &quot;AWSCloudTrailWrite&quot;\n                    },\n                ]\n              - Version   = &quot;2012-10-17&quot;\n            }\n        ) -&gt; (known after apply)\n    }\n\n  # module.buckets.module.access_logging_bucket.aws_s3_bucket.default will be updated in-place\n  ~ resource &quot;aws_s3_bucket&quot; &quot;default&quot; {\n      + acl                         = &quot;log-delivery-write&quot;\n        arn                         = &quot;arn:aws:s3:::ab-xyz-stage-access-logging-9d8e94ff&quot;\n        bucket                      = &quot;ab-xyz-stage-access-logging-9d8e94ff&quot;\n        bucket_domain_name          = &quot;ab-xyz-stage-access-logging-9d8e94ff.s3.amazonaws.com&quot;\n        bucket_regional_domain_name = &quot;ab-xyz-stage-access-logging-9d8e94ff.s3.us-west-2.amazonaws.com&quot;\n      + force_destroy               = false\n        hosted_zone_id              = &quot;Z3BJ6K6RIION7M&quot;\n        id                          = &quot;ab-xyz-stage-access-logging-9d8e94ff&quot;\n        region                      = &quot;us-west-2&quot;\n        request_payer               = &quot;BucketOwner&quot;\n        tags                        = {\n            &quot;mycompany:finance:accountenvironment&quot;   = &quot;xyz-stage&quot;\n            &quot;mycompany:finance:application&quot;          = &quot;ab-platform&quot;\n            &quot;mycompany:finance:billablebusinessunit&quot; = &quot;my-dev&quot;\n            &quot;name&quot;                                = &quot;Access logging bucket&quot;\n        }\n\n      - grant {\n          - permissions = [\n              - &quot;READ_ACP&quot;,\n              - &quot;WRITE&quot;,\n            ] -&gt; null\n          - type        = &quot;Group&quot; -&gt; null\n          - uri         = &quot;http://acs.amazonaws.com/groups/s3/LogDelivery&quot; -&gt; null\n        }\n      - grant {\n          - id          = &quot;0343271a8c2f184152c171b223945b22ceaf5be5c9b78cf167660600747b5ad8&quot; -&gt; null\n          - permissions = [\n              - &quot;FULL_CONTROL&quot;,\n            ] -&gt; null\n          - type        = &quot;CanonicalUser&quot; -&gt; null\n        }\n\n      - lifecycle_rule {\n          - abort_incomplete_multipart_upload_days = 0 -&gt; null\n          - enabled                                = true -&gt; null\n          - id                                     = &quot;intu-lifecycle-s3-int-tier&quot; -&gt; null\n          - tags                                   = {} -&gt; null\n\n          - transition {\n              - days          = 32 -&gt; null\n              - storage_class = &quot;INTELLIGENT_TIERING&quot; -&gt; null\n            }\n        }\n\n        versioning {\n            enabled    = false\n            mfa_delete = false\n        }\n    }\n\nPlan: 0 to add, 3 to change, 0 to destroy.\n</code></pre>\n<p>As you can see terraform plan output shows Plan: 0 to add, 3 to change, 0 to destroy.</p>\n<p><strong>My Questions are:</strong></p>\n<ol>\n<li>Why does it try to remove new <code>aws_s3_bucket_policy</code> for <code>cloudtrail_logging_bucket</code> even when there is no change in the policy. Pls see the screenshot and TF-code <em>cloudtrail_bucket.tf</em> below.\nSnippet of Diff of old account-scope (<strong>LEFT</strong>) vs my current remote TF state (<strong>RIGHT</strong>) for cloudtrail_bucket_suffix:<a href=\"https://i.stack.imgur.com/ZMTVR.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/ZMTVR.png\" alt=\"enter image description here\" /></a></li>\n<li>For the resource where it says <code>module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply</code>. It shows <code>+</code> sign, does that mean it will modify something here or will just read it as it says.</li>\n<li>Why does it show this <code>module.buckets.module.access_logging_bucket.aws_s3_bucket.default will be updated in-place ~ resource &quot;aws_s3_bucket&quot; &quot;default&quot;</code> where it removes the <code>grant</code> and <code>lifecycle_rule</code>. See below <code>s3_bucket.tf</code></li>\n</ol>\n<p><strong>TF Code:</strong></p>\n<p><strong>cloudtrail_bucket.tf:</strong></p>\n<pre><code>data &quot;aws_caller_identity&quot; &quot;current&quot; {}\n\nresource &quot;random_id&quot; &quot;cloudtrail_bucket_suffix&quot; {\n  keepers = {\n    # Keep the suffix per account id / environment\n    aws_account_id = &quot;${data.aws_caller_identity.current.account_id}&quot;\n    env = &quot;${var.environment}&quot;\n  }\n\n  byte_length = &quot;4&quot;\n}\n\n\nresource &quot;aws_s3_bucket&quot; &quot;cloudtrail_logging_bucket&quot; {\n  bucket = &quot;ab-${var.environment}-cloudtrail-logging-${random_id.cloudtrail_bucket_suffix.hex}&quot;\n  acl = &quot;private&quot;\n\n  depends_on = [data.template_file.dependencies]\n\n  tags = {\n    name = &quot;Cloudtrail logging bucket&quot;\n    &quot;mycompany:finance:accountenvironment&quot; = &quot;${var.environment}&quot;\n    &quot;mycompany:finance:application&quot; = &quot;${module.constants.finance_application}&quot;\n    &quot;mycompany:finance:billablebusinessunit&quot; = &quot;${module.constants.finance_billablebusinessunit}&quot;\n  }\n\n  lifecycle {\n    ignore_changes = [ &quot;server_side_encryption_configuration&quot; ]\n  }\n\n  logging {\n    target_bucket =  &quot;${module.access_logging_bucket.name}&quot;\n    target_prefix = &quot;logs/cloudtrail-logging/&quot;\n  }\n\n  lifecycle_rule {\n    enabled = &quot;true&quot;\n\n    transition {\n      days          = 32\n      storage_class = &quot;INTELLIGENT_TIERING&quot;\n    }\n  }\n\n}\n\nresource &quot;aws_s3_bucket_policy&quot; &quot;cloudtrail_logging_bucket&quot; {\n  bucket = &quot;${aws_s3_bucket.cloudtrail_logging_bucket.id}&quot;\n  policy = &quot;${data.aws_iam_policy_document.restrict_access_cloudtrail.json}&quot;\n}\n\n\ndata aws_iam_policy_document &quot;restrict_access_cloudtrail&quot; {\n\n  statement {\n    sid = &quot;AWSCloudTrailAclCheck&quot;\n    effect = &quot;Allow&quot;\n    actions = [&quot;s3:GetBucketAcl&quot;]\n    resources = [ &quot;${aws_s3_bucket.cloudtrail_logging_bucket.arn}&quot; ]\n    principals {\n      identifiers = [&quot;cloudtrail.amazonaws.com&quot;]\n      type = &quot;Service&quot;\n    }\n\n  }\n\n  statement {\n    sid = &quot;AWSCloudTrailWrite&quot;\n    effect = &quot;Allow&quot;\n    actions = [&quot;s3:PutObject&quot;]\n    resources = [ &quot;${aws_s3_bucket.cloudtrail_logging_bucket.arn}/*&quot; ]\n    principals {\n      identifiers = [&quot;cloudtrail.amazonaws.com&quot;]\n      type = &quot;Service&quot;\n    }\n    condition {\n      test = &quot;StringEquals&quot;\n      values = [&quot;bucket-owner-full-control&quot;]\n      variable = &quot;s3:x-amz-acl&quot;\n    }\n\n  }\n}\n</code></pre>\n<p><strong>s3_bucket.tf</strong></p>\n<pre><code>resource &quot;random_id&quot; &quot;bucket_suffix&quot; {\n    keepers = {\n        # Keep the suffix per account id / environment\n        aws_account_id = &quot;${data.aws_caller_identity.current.account_id}&quot;\n        env = &quot;${var.environment}&quot;\n    }\n\n    byte_length = &quot;${var.byte_length}&quot;\n}\n\nresource &quot;aws_s3_bucket&quot; &quot;default&quot; {\n    bucket = &quot;ab-${var.environment}-${var.name}-${random_id.bucket_suffix.hex}&quot;\n    acl = &quot;${var.acl}&quot;\n\n    depends_on = [data.template_file.dependencies]\n\n    tags = {\n        name = &quot;${var.name_tag}&quot;\n        &quot;mycompany:finance:accountenvironment&quot; = &quot;${var.environment}&quot;\n        &quot;mycompany:finance:application&quot; = &quot;${module.constants.finance_application}&quot;\n        &quot;mycompany:finance:billablebusinessunit&quot; = &quot;${module.constants.finance_billablebusinessunit}&quot;\n    }\n\n    lifecycle {\n        ignore_changes = [ &quot;server_side_encryption_configuration&quot; ]\n    }\n\n    logging {\n        target_bucket = &quot;${lookup(var.logging, &quot;target_bucket&quot;, &quot;ab-${var.environment}-${var.name}-${random_id.bucket_suffix.hex}&quot;)}&quot;\n        target_prefix = &quot;logs/${lookup(var.logging, &quot;target_folder_name&quot;, &quot;access-logging&quot;)}/&quot;\n    }\n}\n</code></pre>\n<p><strong>My Environment:</strong></p>\n<pre><code>Local machine: macOS v10.14.6\n\nTerraform v0.12.29\n+ provider.aws v3.14.1\n+ provider.null v2.1.2\n+ provider.random v2.3.1\n+ provider.template v2.1.2\n</code></pre>\n", "OwnerUserId": "948268", "LastEditorUserId": "948268", "LastEditDate": "2020-11-18T02:27:16.403", "LastActivityDate": "2020-12-14T00:46:29.387", "Title": "Terraform plan shows differences after importing the aws resources", "Tags": "<amazon-web-services><import><terraform><terraform-provider-aws><terraform0.12+>", "AnswerCount": "2", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "114719305", "PostId": "64795148", "Score": "0", "Text": "For my `3rd question above` asked it in a separate SO thread here: https://stackoverflow.com/q/64830489/948268 and went ahead with the solution I mentioned in the answer there.", "CreationDate": "2020-11-18T02:21:41.377", "UserId": "948268", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "114719333", "PostId": "64795148", "Score": "0", "Text": "For the `2nd question above` it does not modify anything with `terraform apply` and simply reads it as it says in the message.", "CreationDate": "2020-11-18T02:24:10.720", "UserId": "948268", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "links": [{"Id": "1785975702", "CreationDate": "2020-11-11T22:29:54.453", "PostId": "64795148", "RelatedPostId": "64758624", "LinkTypeId": "1"}, {"Id": "1786491168", "CreationDate": "2020-11-18T02:21:41.377", "PostId": "64795148", "RelatedPostId": "64830489", "LinkTypeId": "1"}], "history": [{"Id": "234732964", "PostHistoryTypeId": "2", "PostId": "64795148", "RevisionGUID": "becde39b-0aeb-436d-b3c4-83e9f33c9418", "CreationDate": "2020-11-11T22:29:54.453", "UserId": "948268", "Text": "This is a follow-up question to my original question: https://stackoverflow.com/q/64758624/948268\r\n\r\n**Some Background:** We have terraform code to create various AWS resources. Some of these resources are created per AWS account and hence are structured to be stored in a account-scope folder in our project. This was when we were only having one AWS region. Now our application is made multi-region and hence these resources are to be created per region for each AWS account.\r\n\r\nIn order to do that we have now moved these TF scripts to region-scope folder which will be run per region. Since these resources are no longer part of 'account scope' we have removed them from the account scope Terraform state. Now when I try to import these resources to `region scope`\r\n\r\n\r\n**My Imports (running from xyz-region-scope directory) and terraform plan:**\r\n\r\n\r\n    terraform import module.buckets.random_id.cloudtrail_bucket_suffix cqLFzQ\r\n    terraform import module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n    terraform import module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n    terraform import module.buckets.module.access_logging_bucket.aws_s3_bucket.default \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n    terraform import module.buckets.module.access_logging_bucket.random_id.bucket_suffix  nY6U_w\r\n    terraform import module.encryption.module.data_key.aws_iam_policy.decrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt\"\r\n    terraform import module.encryption.module.data_key.aws_iam_policy.encrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt\"\r\n    \r\n    \r\n    mycompanymachine:xyz-region-scope kuldeepjain$ ../scripts/terraform.sh xyz-stage plan -no-color\r\n    + set -o posix\r\n    + IFS='\r\n     '\r\n    ++ blhome\r\n    + BASH_LIB_HOME=/usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT\r\n    + source /usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT/s3/bucket.sh\r\n    + main xyz-stage plan -no-color\r\n    + '[' 3 -lt 2 ']'\r\n    + local env=xyz-stage\r\n    + shift\r\n    + local command=plan\r\n    + shift\r\n    ++ get_region xyz-stage\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    +++ aws --profile xyz-stage configure get region\r\n    ++ local region=us-west-2\r\n    ++ '[' -z us-west-2 ']'\r\n    ++ echo us-west-2\r\n    + local region=us-west-2\r\n    ++ _get_bucket xyz-stage xyz-stage-tfstate\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    ++ local name=xyz-stage-tfstate\r\n    ++ shift\r\n    +++ _get_bucket_list xyz-stage xyz-stage-tfstate\r\n    +++ local env=xyz-stage\r\n    +++ shift\r\n    +++ local name=xyz-stage-tfstate\r\n    +++ shift\r\n    +++ aws --profile xyz-stage --output json s3api list-buckets --query 'Buckets[?contains(Name, `xyz-stage-tfstate`) == `true`].Name'\r\n    ++ local 'bucket_list=[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ _count_buckets_in_json '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ local 'json=[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ shift\r\n    +++ echo '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ jq '. | length'\r\n    ++ local number_of_buckets=1\r\n    ++ '[' 1 == 0 ']'\r\n    ++ '[' 1 -gt 1 ']'\r\n    +++ echo '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ jq -r '.[0]'\r\n    ++ local bucket_name=ab-xyz-stage-tfstate-5b8873b8\r\n    ++ echo ab-xyz-stage-tfstate-5b8873b8\r\n    + local tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8\r\n    ++ get_config_file xyz-stage us-west-2\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    ++ local region=us-west-2\r\n    ++ shift\r\n    ++ local config_file=config/us-west-2/xyz-stage.tfvars\r\n    ++ '[' '!' -f config/us-west-2/xyz-stage.tfvars ']'\r\n    ++ config_file=config/us-west-2/default.tfvars\r\n    ++ echo config/us-west-2/default.tfvars\r\n    + local config_file=config/us-west-2/default.tfvars\r\n    + export TF_DATA_DIR=state/xyz-stage/\r\n    + TF_DATA_DIR=state/xyz-stage/\r\n    + terraform get\r\n    + terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color\r\n    Refreshing Terraform state in-memory prior to plan...\r\n    The refreshed state will be used to calculate this plan, but will not be\r\n    persisted to local or remote state storage.\r\n    \r\n    module.encryption.module.data_key.data.null_data_source.key: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.template_file.dependencies: Refreshing state...\r\n    module.buckets.data.template_file.dependencies: Refreshing state...\r\n    data.aws_caller_identity.current: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.aws_caller_identity.current: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_kms_alias.default: Refreshing state...\r\n    module.buckets.data.aws_caller_identity.current: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_region.current: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_caller_identity.current: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.aws_kms_alias.encryption_key_alias: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.random_id.bucket_suffix: Refreshing state... [id=nY6U_w]\r\n    module.buckets.module.access_logging_bucket.aws_s3_bucket.default: Refreshing state... [id=ab-xyz-stage-access-logging-9d8e94ff]\r\n    module.buckets.random_id.cloudtrail_bucket_suffix: Refreshing state... [id=cqLFzQ]\r\n    module.buckets.module.access_logging_bucket.data.template_file.encryption_configuration: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_iam_policy_document.encrypt: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_iam_policy_document.decrypt: Refreshing state...\r\n    module.encryption.module.data_key.aws_iam_policy.decrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt]\r\n    module.encryption.module.data_key.aws_iam_policy.encrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt]\r\n    module.buckets.aws_s3_bucket.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd]\r\n    module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail: Refreshing state...\r\n    module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd]\r\n    \r\n    ------------------------------------------------------------------------\r\n    \r\n    An execution plan has been generated and is shown below.\r\n    Resource actions are indicated with the following symbols:\r\n      + create\r\n      ~ update in-place\r\n     <= read (data resources)\r\n    \r\n    Terraform will perform the following actions:\r\n    \r\n    \r\n      # module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply\r\n      # (config refers to values not yet known)\r\n     <= data \"aws_iam_policy_document\" \"restrict_access_cloudtrail\"  {\r\n          + id   = (known after apply)\r\n          + json = (known after apply)\r\n    \r\n          + statement {\r\n              + actions   = [\r\n                  + \"s3:GetBucketAcl\",\r\n                ]\r\n              + effect    = \"Allow\"\r\n              + resources = [\r\n                  + \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\",\r\n                ]\r\n              + sid       = \"AWSCloudTrailAclCheck\"\r\n    \r\n              + principals {\r\n                  + identifiers = [\r\n                      + \"cloudtrail.amazonaws.com\",\r\n                    ]\r\n                  + type        = \"Service\"\r\n                }\r\n            }\r\n          + statement {\r\n              + actions   = [\r\n                  + \"s3:PutObject\",\r\n                ]\r\n              + effect    = \"Allow\"\r\n              + resources = [\r\n                  + \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\",\r\n                ]\r\n              + sid       = \"AWSCloudTrailWrite\"\r\n    \r\n              + condition {\r\n                  + test     = \"StringEquals\"\r\n                  + values   = [\r\n                      + \"bucket-owner-full-control\",\r\n                    ]\r\n                  + variable = \"s3:x-amz-acl\"\r\n                }\r\n    \r\n              + principals {\r\n                  + identifiers = [\r\n                      + \"cloudtrail.amazonaws.com\",\r\n                    ]\r\n                  + type        = \"Service\"\r\n                }\r\n            }\r\n        }\r\n    \r\n      # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket will be updated in-place\r\n      ~ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" {\r\n          + acl                         = \"private\"\r\n            arn                         = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n            bucket                      = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n            bucket_domain_name          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\"\r\n            bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\"\r\n          + force_destroy               = false\r\n            hosted_zone_id              = \"Z3BJ6K6RIION7M\"\r\n            id                          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n            region                      = \"us-west-2\"\r\n            request_payer               = \"BucketOwner\"\r\n            tags                        = {\r\n                \"mycompany:finance:accountenvironment\"   = \"xyz-stage\"\r\n                \"mycompany:finance:application\"          = \"ab-platform\"\r\n                \"mycompany:finance:billablebusinessunit\" = \"my-dev\"\r\n                \"name\"                                = \"Cloudtrail logging bucket\"\r\n            }\r\n    \r\n            lifecycle_rule {\r\n                abort_incomplete_multipart_upload_days = 0\r\n                enabled                                = true\r\n                id                                     = \"intu-lifecycle-s3-int-tier\"\r\n                tags                                   = {}\r\n    \r\n                transition {\r\n                    days          = 32\r\n                    storage_class = \"INTELLIGENT_TIERING\"\r\n                }\r\n            }\r\n    \r\n            logging {\r\n                target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n                target_prefix = \"logs/cloudtrail-logging/\"\r\n            }\r\n    \r\n            versioning {\r\n                enabled    = false\r\n                mfa_delete = false\r\n            }\r\n        }\r\n    \r\n      # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket will be updated in-place\r\n      ~ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" {\r\n            bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n            id     = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n          ~ policy = jsonencode(\r\n                {\r\n                  - Statement = [\r\n                      - {\r\n                          - Action    = \"s3:GetBucketAcl\"\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n                          - Sid       = \"AWSCloudTrailAclCheck\"\r\n                        },\r\n                      - {\r\n                          - Action    = \"s3:PutObject\"\r\n                          - Condition = {\r\n                              - StringEquals = {\r\n                                  - s3:x-amz-acl = \"bucket-owner-full-control\"\r\n                                }\r\n                            }\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\"\r\n                          - Sid       = \"AWSCloudTrailWrite\"\r\n                        },\r\n                    ]\r\n                  - Version   = \"2012-10-17\"\r\n                }\r\n            ) -> (known after apply)\r\n        }\r\n    \r\n      # module.buckets.module.access_logging_bucket.aws_s3_bucket.default will be updated in-place\r\n      ~ resource \"aws_s3_bucket\" \"default\" {\r\n          + acl                         = \"log-delivery-write\"\r\n            arn                         = \"arn:aws:s3:::ab-xyz-stage-access-logging-9d8e94ff\"\r\n            bucket                      = \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n            bucket_domain_name          = \"ab-xyz-stage-access-logging-9d8e94ff.s3.amazonaws.com\"\r\n            bucket_regional_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.us-west-2.amazonaws.com\"\r\n          + force_destroy               = false\r\n            hosted_zone_id              = \"Z3BJ6K6RIION7M\"\r\n            id                          = \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n            region                      = \"us-west-2\"\r\n            request_payer               = \"BucketOwner\"\r\n            tags                        = {\r\n                \"mycompany:finance:accountenvironment\"   = \"xyz-stage\"\r\n                \"mycompany:finance:application\"          = \"ab-platform\"\r\n                \"mycompany:finance:billablebusinessunit\" = \"my-dev\"\r\n                \"name\"                                = \"Access logging bucket\"\r\n            }\r\n    \r\n          - grant {\r\n              - permissions = [\r\n                  - \"READ_ACP\",\r\n                  - \"WRITE\",\r\n                ] -> null\r\n              - type        = \"Group\" -> null\r\n              - uri         = \"http://acs.amazonaws.com/groups/s3/LogDelivery\" -> null\r\n            }\r\n          - grant {\r\n              - id          = \"0343271a8c2f184152c171b223945b22ceaf5be5c9b78cf167660600747b5ad8\" -> null\r\n              - permissions = [\r\n                  - \"FULL_CONTROL\",\r\n                ] -> null\r\n              - type        = \"CanonicalUser\" -> null\r\n            }\r\n    \r\n          - lifecycle_rule {\r\n              - abort_incomplete_multipart_upload_days = 0 -> null\r\n              - enabled                                = true -> null\r\n              - id                                     = \"intu-lifecycle-s3-int-tier\" -> null\r\n              - tags                                   = {} -> null\r\n    \r\n              - transition {\r\n                  - days          = 32 -> null\r\n                  - storage_class = \"INTELLIGENT_TIERING\" -> null\r\n                }\r\n            }\r\n    \r\n          + logging {\r\n              + target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n              + target_prefix = \"logs/access-logging/\"\r\n            }\r\n    \r\n            versioning {\r\n                enabled    = false\r\n                mfa_delete = false\r\n            }\r\n        }\r\n    \r\n    Plan: 0 to add, 3 to change, 0 to destroy.\r\n\r\n\r\nAs you can seee terraform plan output shows Plan: 0 to add, 3 to change, 0 to destroy.\r\n\r\n**My Questions are:**\r\n\r\n 1. Why does tries to remove new `aws_s3_bucket_policy` for `cloudtrail_logging_bucket` even when there is not change in the policy. Pls see screenshot:[![enter image description here][1]][1]\r\n 2. For the resource where it says `module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply`. It shows `+` sign, does that mean it will modify something here or will just read it as it says.\r\n 3. Why does it show this `module.buckets.module.access_logging_bucket.aws_s3_bucket.default will be updated in-place ~ resource \"aws_s3_bucket\" \"default\"` where it removes the `grant` and `lifecycle_rule`.\r\n\r\n**My Environment:**\r\n\r\n    Local machine: macOS v10.14.6\r\n    \r\n    Terraform v0.12.29\r\n    + provider.aws v3.14.1\r\n    + provider.null v2.1.2\r\n    + provider.random v2.3.1\r\n    + provider.template v2.1.2\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/ZMTVR.png", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "**My Imports (running from xyz-region-scope directory) and terraform plan:** terraform import module.buckets.random_id.cloudtrail_bucket_suffix cqLFzQ terraform import module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" terraform import module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" terraform import module.buckets.module.access_logging_bucket.aws_s3_bucket.default \"ab-xyz-stage-access-logging-9d8e94ff\" terraform import module.buckets.module.access_logging_bucket.random_id.bucket_suffix nY6U_w terraform import module.encryption.module.data_key.aws_iam_policy.decrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt\" terraform import module.encryption.module.data_key.aws_iam_policy.encrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt\" mycompanymachine:xyz-region-scope kuldeepjain$ ../scripts/terraform.sh xyz-stage plan -no-color + set -o posix + IFS=' ' ++ blhome + BASH_LIB_HOME=/usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT + source /usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT/s3/bucket.sh + main xyz-stage plan -no-color + '[' 3 -lt 2 ']' + local env=xyz-stage + shift + local command=plan + shift ++ get_region xyz-stage ++ local env=xyz-stage ++ shift +++ aws --profile xyz-stage configure get region ++ local region=us-west-2 ++ '[' -z us-west-2 ']' ++ echo us-west-2 + local region=us-west-2 ++ _get_bucket xyz-stage xyz-stage-tfstate ++ local env=xyz-stage ++ shift ++ local name=xyz-stage-tfstate ++ shift +++ _get_bucket_list xyz-stage xyz-stage-tfstate +++ local env=xyz-stage +++ shift +++ local name=xyz-stage-tfstate +++ shift +++ aws --profile xyz-stage --output json s3api list-buckets --query 'Buckets[?contains(Name, `xyz-stage-tfstate`) == `true`].Name' ++ local 'bucket_list=[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ _count_buckets_in_json '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ local 'json=[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ shift +++ echo '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ jq '. | length' ++ local number_of_buckets=1 ++ '[' 1 == 0 ']' ++ '[' 1 -gt 1 ']' +++ echo '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ jq -r '.[0]' ++ local bucket_name=ab-xyz-stage-tfstate-5b8873b8 ++ echo ab-xyz-stage-tfstate-5b8873b8 + local tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 ++ get_config_file xyz-stage us-west-2 ++ local env=xyz-stage ++ shift ++ local region=us-west-2 ++ shift ++ local config_file=config/us-west-2/xyz-stage.tfvars ++ '[' '!' -f config/us-west-2/xyz-stage.tfvars ']' ++ config_file=config/us-west-2/default.tfvars ++ echo config/us-west-2/default.tfvars + local config_file=config/us-west-2/default.tfvars + export TF_DATA_DIR=state/xyz-stage/ + TF_DATA_DIR=state/xyz-stage/ + terraform get + terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color Refreshing Terraform state in-memory prior to plan... ", "keywords": ["policy"]}, {"source": "Text", "text": "The refreshed state will be used to calculate this plan, but will not be persisted to local or remote state storage. module.encryption.module.data_key.data.null_data_source.key: Refreshing state... module.buckets.module.access_logging_bucket.data.template_file.dependencies: Refreshing state... module.buckets.data.template_file.dependencies: Refreshing state... data.aws_caller_identity.current: Refreshing state... module.buckets.module.access_logging_bucket.data.aws_caller_identity.current: Refreshing state... module.encryption.module.data_key.data.aws_kms_alias.default: Refreshing state... module.buckets.data.aws_caller_identity.current: Refreshing state... module.encryption.module.data_key.data.aws_region.current: Refreshing state... module.encryption.module.data_key.data.aws_caller_identity.current: Refreshing state... module.buckets.module.access_logging_bucket.data.aws_kms_alias.encryption_key_alias: Refreshing state... module.buckets.module.access_logging_bucket.random_id.bucket_suffix: Refreshing state... [id=nY6U_w] module.buckets.module.access_logging_bucket.aws_s3_bucket.default: Refreshing state... [id=ab-xyz-stage-access-logging-9d8e94ff] module.buckets.random_id.cloudtrail_bucket_suffix: Refreshing state... [id=cqLFzQ] module.buckets.module.access_logging_bucket.data.template_file.encryption_configuration: Refreshing state... module.encryption.module.data_key.data.aws_iam_policy_document.encrypt: Refreshing state... module.encryption.module.data_key.data.aws_iam_policy_document.decrypt: Refreshing state... module.encryption.module.data_key.aws_iam_policy.decrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt] module.encryption.module.data_key.aws_iam_policy.encrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt] module.buckets.aws_s3_bucket.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd] module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail: Refreshing state... module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd] ------------------------------------------------------------------------ ", "keywords": ["storage", "policy"]}, {"source": "Text", "text": "Resource actions are indicated with the following symbols: + create ~ update in-place <= read (data resources) Terraform will perform the following actions: # module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply # (config refers to values not yet known) <= data \"aws_iam_policy_document\" \"restrict_access_cloudtrail\" { + id = (known after apply) + json = (known after apply) + statement { + actions = [ + \"s3:GetBucketAcl\", ] + effect = \"Allow\" + resources = [ + \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\", ] + sid = \"AWSCloudTrailAclCheck\" + principals { + identifiers = [ + \"cloudtrail.amazonaws.com\", ] + type = \"Service\" } } + statement { + actions = [ + \"s3:PutObject\", ] + effect = \"Allow\" + resources = [ + \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\", ] + sid = \"AWSCloudTrailWrite\" + condition { + test = \"StringEquals\" + values = [ + \"bucket-owner-full-control\", ] + variable = \"s3:x-amz-acl\" } + principals { + identifiers = [ + \"cloudtrail.amazonaws.com\", ] + type = \"Service\" } } } # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket will be updated in-place ~ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" { + acl = \"private\" arn = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" bucket_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\" bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\" + force_destroy = false hosted_zone_id = \"Z3BJ6K6RIION7M\" id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" region = \"us-west-2\" request_payer = \"BucketOwner\" tags = { \"mycompany:finance:accountenvironment\" = \"xyz-stage\" \"mycompany:finance:application\" = \"ab-platform\" \"mycompany:finance:billablebusinessunit\" = \"my-dev\" \"name\" = \"Cloudtrail logging bucket\" } lifecycle_rule { abort_incomplete_multipart_upload_days = 0 enabled = true id = \"intu-lifecycle-s3-int-tier\" tags = {} transition { days = 32 storage_class = \"INTELLIGENT_TIERING\" } } logging { target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" target_prefix = \"logs/cloudtrail-logging/\" } versioning { enabled = false mfa_delete = false } } # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket will be updated in-place ~ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" { bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" ~ policy = jsonencode( { - Statement = [ - { - Action = \"s3:GetBucketAcl\" - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" - Sid = \"AWSCloudTrailAclCheck\" }, - { - Action = \"s3:PutObject\" - Condition = { - StringEquals = { - s3:x-amz-acl = \"bucket-owner-full-control\" } } - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\" - Sid = \"AWSCloudTrailWrite\" }, ] - Version = \"2012-10-17\" } ) -> (known after apply) } # module.buckets.module.access_logging_bucket.aws_s3_bucket.default will be updated in-place ~ resource \"aws_s3_bucket\" \"default\" { + acl = \"log-delivery-write\" arn = \"arn:aws:s3:::ab-xyz-stage-access-logging-9d8e94ff\" bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" bucket_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.amazonaws.com\" bucket_regional_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.us-west-2.amazonaws.com\" + force_destroy = false hosted_zone_id = \"Z3BJ6K6RIION7M\" id = \"ab-xyz-stage-access-logging-9d8e94ff\" region = \"us-west-2\" request_payer = \"BucketOwner\" tags = { \"mycompany:finance:accountenvironment\" = \"xyz-stage\" \"mycompany:finance:application\" = \"ab-platform\" \"mycompany:finance:billablebusinessunit\" = \"my-dev\" \"name\" = \"Access logging bucket\" } - grant { - permissions = [ - \"READ_ACP\", - \"WRITE\", ] -> null - type = \"Group\" -> null - uri = \"http://acs.amazonaws.com/groups/s3/LogDelivery\" -> null } - grant { - id = \"0343271a8c2f184152c171b223945b22ceaf5be5c9b78cf167660600747b5ad8\" -> null - permissions = [ - \"FULL_CONTROL\", ] -> null - type = \"CanonicalUser\" -> null } - lifecycle_rule { - abort_incomplete_multipart_upload_days = 0 -> null - enabled = true -> null - id = \"intu-lifecycle-s3-int-tier\" -> null - tags = {} -> null - transition { - days = 32 -> null - storage_class = \"INTELLIGENT_TIERING\" -> null } } + logging { + target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" + target_prefix = \"logs/access-logging/\" } versioning { enabled = false mfa_delete = false } } Plan: 0 to add, 3 to change, 0 to destroy. ", "keywords": ["bill", "policy", "change", "test"]}, {"source": "Text", "text": "As you can seee terraform plan output shows Plan: 0 to add, 3 to change, 0 to destroy. ", "keywords": ["change"]}, {"source": "Text", "text": "Why does tries to remove new `aws_s3_bucket_policy` for `cloudtrail_logging_bucket` even when there is not change in the policy. ", "keywords": ["policy", "change"]}, {"source": "Text", "text": "**My Environment:** Local machine: macOS v10.14.6 Terraform v0.12.29 + provider.aws v3.14.1 + provider.null v2.1.2 + provider.random v2.3.1 + provider.template v2.1.2 [1]: https://i.stack.imgur.com/ZMTVR.png", "keywords": ["provider"]}]}, {"Id": "234732965", "PostHistoryTypeId": "1", "PostId": "64795148", "RevisionGUID": "becde39b-0aeb-436d-b3c4-83e9f33c9418", "CreationDate": "2020-11-11T22:29:54.453", "UserId": "948268", "Text": "Terraform plan shows differences after importing the aws resources", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "234732966", "PostHistoryTypeId": "3", "PostId": "64795148", "RevisionGUID": "becde39b-0aeb-436d-b3c4-83e9f33c9418", "CreationDate": "2020-11-11T22:29:54.453", "UserId": "948268", "Text": "<amazon-web-services><import><terraform><terraform-provider-aws><terraform0.12+>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "234737687", "PostHistoryTypeId": "5", "PostId": "64795148", "RevisionGUID": "4e1314eb-5664-4c56-ba6c-3afe6d282371", "CreationDate": "2020-11-12T00:42:02.977", "UserId": "948268", "Comment": "Removed unwanted plan diff", "Text": "This is a follow-up question to my original question: https://stackoverflow.com/q/64758624/948268\r\n\r\n**Some Background:** We have terraform code to create various AWS resources. Some of these resources are created per AWS account and hence are structured to be stored in a account-scope folder in our project. This was when we were only having one AWS region. Now our application is made multi-region and hence these resources are to be created per region for each AWS account.\r\n\r\nIn order to do that we have now moved these TF scripts to region-scope folder which will be run per region. Since these resources are no longer part of 'account scope' we have removed them from the account scope Terraform state. Now when I try to import these resources to `region scope`\r\n\r\n\r\n**My Imports (running from xyz-region-scope directory) and terraform plan:**\r\n\r\n\r\n    terraform import module.buckets.random_id.cloudtrail_bucket_suffix cqLFzQ\r\n    terraform import module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n    terraform import module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n    terraform import module.buckets.module.access_logging_bucket.aws_s3_bucket.default \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n    terraform import module.buckets.module.access_logging_bucket.random_id.bucket_suffix  nY6U_w\r\n    terraform import module.encryption.module.data_key.aws_iam_policy.decrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt\"\r\n    terraform import module.encryption.module.data_key.aws_iam_policy.encrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt\"\r\n    \r\n    \r\n    mycompanymachine:xyz-region-scope kuldeepjain$ ../scripts/terraform.sh xyz-stage plan -no-color\r\n    + set -o posix\r\n    + IFS='\r\n     '\r\n    ++ blhome\r\n    + BASH_LIB_HOME=/usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT\r\n    + source /usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT/s3/bucket.sh\r\n    + main xyz-stage plan -no-color\r\n    + '[' 3 -lt 2 ']'\r\n    + local env=xyz-stage\r\n    + shift\r\n    + local command=plan\r\n    + shift\r\n    ++ get_region xyz-stage\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    +++ aws --profile xyz-stage configure get region\r\n    ++ local region=us-west-2\r\n    ++ '[' -z us-west-2 ']'\r\n    ++ echo us-west-2\r\n    + local region=us-west-2\r\n    ++ _get_bucket xyz-stage xyz-stage-tfstate\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    ++ local name=xyz-stage-tfstate\r\n    ++ shift\r\n    +++ _get_bucket_list xyz-stage xyz-stage-tfstate\r\n    +++ local env=xyz-stage\r\n    +++ shift\r\n    +++ local name=xyz-stage-tfstate\r\n    +++ shift\r\n    +++ aws --profile xyz-stage --output json s3api list-buckets --query 'Buckets[?contains(Name, `xyz-stage-tfstate`) == `true`].Name'\r\n    ++ local 'bucket_list=[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ _count_buckets_in_json '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ local 'json=[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ shift\r\n    +++ echo '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ jq '. | length'\r\n    ++ local number_of_buckets=1\r\n    ++ '[' 1 == 0 ']'\r\n    ++ '[' 1 -gt 1 ']'\r\n    +++ echo '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ jq -r '.[0]'\r\n    ++ local bucket_name=ab-xyz-stage-tfstate-5b8873b8\r\n    ++ echo ab-xyz-stage-tfstate-5b8873b8\r\n    + local tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8\r\n    ++ get_config_file xyz-stage us-west-2\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    ++ local region=us-west-2\r\n    ++ shift\r\n    ++ local config_file=config/us-west-2/xyz-stage.tfvars\r\n    ++ '[' '!' -f config/us-west-2/xyz-stage.tfvars ']'\r\n    ++ config_file=config/us-west-2/default.tfvars\r\n    ++ echo config/us-west-2/default.tfvars\r\n    + local config_file=config/us-west-2/default.tfvars\r\n    + export TF_DATA_DIR=state/xyz-stage/\r\n    + TF_DATA_DIR=state/xyz-stage/\r\n    + terraform get\r\n    + terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color\r\n    Refreshing Terraform state in-memory prior to plan...\r\n    The refreshed state will be used to calculate this plan, but will not be\r\n    persisted to local or remote state storage.\r\n    \r\n    module.encryption.module.data_key.data.null_data_source.key: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.template_file.dependencies: Refreshing state...\r\n    module.buckets.data.template_file.dependencies: Refreshing state...\r\n    data.aws_caller_identity.current: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.aws_caller_identity.current: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_kms_alias.default: Refreshing state...\r\n    module.buckets.data.aws_caller_identity.current: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_region.current: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_caller_identity.current: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.aws_kms_alias.encryption_key_alias: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.random_id.bucket_suffix: Refreshing state... [id=nY6U_w]\r\n    module.buckets.module.access_logging_bucket.aws_s3_bucket.default: Refreshing state... [id=ab-xyz-stage-access-logging-9d8e94ff]\r\n    module.buckets.random_id.cloudtrail_bucket_suffix: Refreshing state... [id=cqLFzQ]\r\n    module.buckets.module.access_logging_bucket.data.template_file.encryption_configuration: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_iam_policy_document.encrypt: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_iam_policy_document.decrypt: Refreshing state...\r\n    module.encryption.module.data_key.aws_iam_policy.decrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt]\r\n    module.encryption.module.data_key.aws_iam_policy.encrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt]\r\n    module.buckets.aws_s3_bucket.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd]\r\n    module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail: Refreshing state...\r\n    module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd]\r\n    \r\n    ------------------------------------------------------------------------\r\n    \r\n    An execution plan has been generated and is shown below.\r\n    Resource actions are indicated with the following symbols:\r\n      + create\r\n      ~ update in-place\r\n     <= read (data resources)\r\n    \r\n    Terraform will perform the following actions:\r\n    \r\n    \r\n      # module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply\r\n      # (config refers to values not yet known)\r\n     <= data \"aws_iam_policy_document\" \"restrict_access_cloudtrail\"  {\r\n          + id   = (known after apply)\r\n          + json = (known after apply)\r\n    \r\n          + statement {\r\n              + actions   = [\r\n                  + \"s3:GetBucketAcl\",\r\n                ]\r\n              + effect    = \"Allow\"\r\n              + resources = [\r\n                  + \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\",\r\n                ]\r\n              + sid       = \"AWSCloudTrailAclCheck\"\r\n    \r\n              + principals {\r\n                  + identifiers = [\r\n                      + \"cloudtrail.amazonaws.com\",\r\n                    ]\r\n                  + type        = \"Service\"\r\n                }\r\n            }\r\n          + statement {\r\n              + actions   = [\r\n                  + \"s3:PutObject\",\r\n                ]\r\n              + effect    = \"Allow\"\r\n              + resources = [\r\n                  + \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\",\r\n                ]\r\n              + sid       = \"AWSCloudTrailWrite\"\r\n    \r\n              + condition {\r\n                  + test     = \"StringEquals\"\r\n                  + values   = [\r\n                      + \"bucket-owner-full-control\",\r\n                    ]\r\n                  + variable = \"s3:x-amz-acl\"\r\n                }\r\n    \r\n              + principals {\r\n                  + identifiers = [\r\n                      + \"cloudtrail.amazonaws.com\",\r\n                    ]\r\n                  + type        = \"Service\"\r\n                }\r\n            }\r\n        }\r\n    \r\n      # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket will be updated in-place\r\n      ~ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" {\r\n          + acl                         = \"private\"\r\n            arn                         = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n            bucket                      = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n            bucket_domain_name          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\"\r\n            bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\"\r\n          + force_destroy               = false\r\n            hosted_zone_id              = \"Z3BJ6K6RIION7M\"\r\n            id                          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n            region                      = \"us-west-2\"\r\n            request_payer               = \"BucketOwner\"\r\n            tags                        = {\r\n                \"mycompany:finance:accountenvironment\"   = \"xyz-stage\"\r\n                \"mycompany:finance:application\"          = \"ab-platform\"\r\n                \"mycompany:finance:billablebusinessunit\" = \"my-dev\"\r\n                \"name\"                                = \"Cloudtrail logging bucket\"\r\n            }\r\n    \r\n            lifecycle_rule {\r\n                abort_incomplete_multipart_upload_days = 0\r\n                enabled                                = true\r\n                id                                     = \"intu-lifecycle-s3-int-tier\"\r\n                tags                                   = {}\r\n    \r\n                transition {\r\n                    days          = 32\r\n                    storage_class = \"INTELLIGENT_TIERING\"\r\n                }\r\n            }\r\n    \r\n            logging {\r\n                target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n                target_prefix = \"logs/cloudtrail-logging/\"\r\n            }\r\n    \r\n            versioning {\r\n                enabled    = false\r\n                mfa_delete = false\r\n            }\r\n        }\r\n    \r\n      # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket will be updated in-place\r\n      ~ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" {\r\n            bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n            id     = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n          ~ policy = jsonencode(\r\n                {\r\n                  - Statement = [\r\n                      - {\r\n                          - Action    = \"s3:GetBucketAcl\"\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n                          - Sid       = \"AWSCloudTrailAclCheck\"\r\n                        },\r\n                      - {\r\n                          - Action    = \"s3:PutObject\"\r\n                          - Condition = {\r\n                              - StringEquals = {\r\n                                  - s3:x-amz-acl = \"bucket-owner-full-control\"\r\n                                }\r\n                            }\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\"\r\n                          - Sid       = \"AWSCloudTrailWrite\"\r\n                        },\r\n                    ]\r\n                  - Version   = \"2012-10-17\"\r\n                }\r\n            ) -> (known after apply)\r\n        }\r\n    \r\n      # module.buckets.module.access_logging_bucket.aws_s3_bucket.default will be updated in-place\r\n      ~ resource \"aws_s3_bucket\" \"default\" {\r\n          + acl                         = \"log-delivery-write\"\r\n            arn                         = \"arn:aws:s3:::ab-xyz-stage-access-logging-9d8e94ff\"\r\n            bucket                      = \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n            bucket_domain_name          = \"ab-xyz-stage-access-logging-9d8e94ff.s3.amazonaws.com\"\r\n            bucket_regional_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.us-west-2.amazonaws.com\"\r\n          + force_destroy               = false\r\n            hosted_zone_id              = \"Z3BJ6K6RIION7M\"\r\n            id                          = \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n            region                      = \"us-west-2\"\r\n            request_payer               = \"BucketOwner\"\r\n            tags                        = {\r\n                \"mycompany:finance:accountenvironment\"   = \"xyz-stage\"\r\n                \"mycompany:finance:application\"          = \"ab-platform\"\r\n                \"mycompany:finance:billablebusinessunit\" = \"my-dev\"\r\n                \"name\"                                = \"Access logging bucket\"\r\n            }\r\n    \r\n          - grant {\r\n              - permissions = [\r\n                  - \"READ_ACP\",\r\n                  - \"WRITE\",\r\n                ] -> null\r\n              - type        = \"Group\" -> null\r\n              - uri         = \"http://acs.amazonaws.com/groups/s3/LogDelivery\" -> null\r\n            }\r\n          - grant {\r\n              - id          = \"0343271a8c2f184152c171b223945b22ceaf5be5c9b78cf167660600747b5ad8\" -> null\r\n              - permissions = [\r\n                  - \"FULL_CONTROL\",\r\n                ] -> null\r\n              - type        = \"CanonicalUser\" -> null\r\n            }\r\n    \r\n          - lifecycle_rule {\r\n              - abort_incomplete_multipart_upload_days = 0 -> null\r\n              - enabled                                = true -> null\r\n              - id                                     = \"intu-lifecycle-s3-int-tier\" -> null\r\n              - tags                                   = {} -> null\r\n    \r\n              - transition {\r\n                  - days          = 32 -> null\r\n                  - storage_class = \"INTELLIGENT_TIERING\" -> null\r\n                }\r\n            }\r\n    \r\n            versioning {\r\n                enabled    = false\r\n                mfa_delete = false\r\n            }\r\n        }\r\n    \r\n    Plan: 0 to add, 3 to change, 0 to destroy.\r\n\r\n\r\nAs you can seee terraform plan output shows Plan: 0 to add, 3 to change, 0 to destroy.\r\n\r\n**My Questions are:**\r\n\r\n 1. Why does tries to remove new `aws_s3_bucket_policy` for `cloudtrail_logging_bucket` even when there is not change in the policy. Pls see screenshot:[![enter image description here][1]][1]\r\n 2. For the resource where it says `module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply`. It shows `+` sign, does that mean it will modify something here or will just read it as it says.\r\n 3. Why does it show this `module.buckets.module.access_logging_bucket.aws_s3_bucket.default will be updated in-place ~ resource \"aws_s3_bucket\" \"default\"` where it removes the `grant` and `lifecycle_rule`.\r\n\r\n**My Environment:**\r\n\r\n    Local machine: macOS v10.14.6\r\n    \r\n    Terraform v0.12.29\r\n    + provider.aws v3.14.1\r\n    + provider.null v2.1.2\r\n    + provider.random v2.3.1\r\n    + provider.template v2.1.2\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/ZMTVR.png", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "**My Imports (running from xyz-region-scope directory) and terraform plan:** terraform import module.buckets.random_id.cloudtrail_bucket_suffix cqLFzQ terraform import module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" terraform import module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" terraform import module.buckets.module.access_logging_bucket.aws_s3_bucket.default \"ab-xyz-stage-access-logging-9d8e94ff\" terraform import module.buckets.module.access_logging_bucket.random_id.bucket_suffix nY6U_w terraform import module.encryption.module.data_key.aws_iam_policy.decrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt\" terraform import module.encryption.module.data_key.aws_iam_policy.encrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt\" mycompanymachine:xyz-region-scope kuldeepjain$ ../scripts/terraform.sh xyz-stage plan -no-color + set -o posix + IFS=' ' ++ blhome + BASH_LIB_HOME=/usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT + source /usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT/s3/bucket.sh + main xyz-stage plan -no-color + '[' 3 -lt 2 ']' + local env=xyz-stage + shift + local command=plan + shift ++ get_region xyz-stage ++ local env=xyz-stage ++ shift +++ aws --profile xyz-stage configure get region ++ local region=us-west-2 ++ '[' -z us-west-2 ']' ++ echo us-west-2 + local region=us-west-2 ++ _get_bucket xyz-stage xyz-stage-tfstate ++ local env=xyz-stage ++ shift ++ local name=xyz-stage-tfstate ++ shift +++ _get_bucket_list xyz-stage xyz-stage-tfstate +++ local env=xyz-stage +++ shift +++ local name=xyz-stage-tfstate +++ shift +++ aws --profile xyz-stage --output json s3api list-buckets --query 'Buckets[?contains(Name, `xyz-stage-tfstate`) == `true`].Name' ++ local 'bucket_list=[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ _count_buckets_in_json '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ local 'json=[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ shift +++ echo '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ jq '. | length' ++ local number_of_buckets=1 ++ '[' 1 == 0 ']' ++ '[' 1 -gt 1 ']' +++ echo '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ jq -r '.[0]' ++ local bucket_name=ab-xyz-stage-tfstate-5b8873b8 ++ echo ab-xyz-stage-tfstate-5b8873b8 + local tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 ++ get_config_file xyz-stage us-west-2 ++ local env=xyz-stage ++ shift ++ local region=us-west-2 ++ shift ++ local config_file=config/us-west-2/xyz-stage.tfvars ++ '[' '!' -f config/us-west-2/xyz-stage.tfvars ']' ++ config_file=config/us-west-2/default.tfvars ++ echo config/us-west-2/default.tfvars + local config_file=config/us-west-2/default.tfvars + export TF_DATA_DIR=state/xyz-stage/ + TF_DATA_DIR=state/xyz-stage/ + terraform get + terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color Refreshing Terraform state in-memory prior to plan... ", "keywords": ["policy"]}, {"source": "Text", "text": "The refreshed state will be used to calculate this plan, but will not be persisted to local or remote state storage. module.encryption.module.data_key.data.null_data_source.key: Refreshing state... module.buckets.module.access_logging_bucket.data.template_file.dependencies: Refreshing state... module.buckets.data.template_file.dependencies: Refreshing state... data.aws_caller_identity.current: Refreshing state... module.buckets.module.access_logging_bucket.data.aws_caller_identity.current: Refreshing state... module.encryption.module.data_key.data.aws_kms_alias.default: Refreshing state... module.buckets.data.aws_caller_identity.current: Refreshing state... module.encryption.module.data_key.data.aws_region.current: Refreshing state... module.encryption.module.data_key.data.aws_caller_identity.current: Refreshing state... module.buckets.module.access_logging_bucket.data.aws_kms_alias.encryption_key_alias: Refreshing state... module.buckets.module.access_logging_bucket.random_id.bucket_suffix: Refreshing state... [id=nY6U_w] module.buckets.module.access_logging_bucket.aws_s3_bucket.default: Refreshing state... [id=ab-xyz-stage-access-logging-9d8e94ff] module.buckets.random_id.cloudtrail_bucket_suffix: Refreshing state... [id=cqLFzQ] module.buckets.module.access_logging_bucket.data.template_file.encryption_configuration: Refreshing state... module.encryption.module.data_key.data.aws_iam_policy_document.encrypt: Refreshing state... module.encryption.module.data_key.data.aws_iam_policy_document.decrypt: Refreshing state... module.encryption.module.data_key.aws_iam_policy.decrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt] module.encryption.module.data_key.aws_iam_policy.encrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt] module.buckets.aws_s3_bucket.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd] module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail: Refreshing state... module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd] ------------------------------------------------------------------------ ", "keywords": ["storage", "policy"]}, {"source": "Text", "text": "Resource actions are indicated with the following symbols: + create ~ update in-place <= read (data resources) Terraform will perform the following actions: # module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply # (config refers to values not yet known) <= data \"aws_iam_policy_document\" \"restrict_access_cloudtrail\" { + id = (known after apply) + json = (known after apply) + statement { + actions = [ + \"s3:GetBucketAcl\", ] + effect = \"Allow\" + resources = [ + \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\", ] + sid = \"AWSCloudTrailAclCheck\" + principals { + identifiers = [ + \"cloudtrail.amazonaws.com\", ] + type = \"Service\" } } + statement { + actions = [ + \"s3:PutObject\", ] + effect = \"Allow\" + resources = [ + \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\", ] + sid = \"AWSCloudTrailWrite\" + condition { + test = \"StringEquals\" + values = [ + \"bucket-owner-full-control\", ] + variable = \"s3:x-amz-acl\" } + principals { + identifiers = [ + \"cloudtrail.amazonaws.com\", ] + type = \"Service\" } } } # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket will be updated in-place ~ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" { + acl = \"private\" arn = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" bucket_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\" bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\" + force_destroy = false hosted_zone_id = \"Z3BJ6K6RIION7M\" id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" region = \"us-west-2\" request_payer = \"BucketOwner\" tags = { \"mycompany:finance:accountenvironment\" = \"xyz-stage\" \"mycompany:finance:application\" = \"ab-platform\" \"mycompany:finance:billablebusinessunit\" = \"my-dev\" \"name\" = \"Cloudtrail logging bucket\" } lifecycle_rule { abort_incomplete_multipart_upload_days = 0 enabled = true id = \"intu-lifecycle-s3-int-tier\" tags = {} transition { days = 32 storage_class = \"INTELLIGENT_TIERING\" } } logging { target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" target_prefix = \"logs/cloudtrail-logging/\" } versioning { enabled = false mfa_delete = false } } # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket will be updated in-place ~ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" { bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" ~ policy = jsonencode( { - Statement = [ - { - Action = \"s3:GetBucketAcl\" - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" - Sid = \"AWSCloudTrailAclCheck\" }, - { - Action = \"s3:PutObject\" - Condition = { - StringEquals = { - s3:x-amz-acl = \"bucket-owner-full-control\" } } - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\" - Sid = \"AWSCloudTrailWrite\" }, ] - Version = \"2012-10-17\" } ) -> (known after apply) } # module.buckets.module.access_logging_bucket.aws_s3_bucket.default will be updated in-place ~ resource \"aws_s3_bucket\" \"default\" { + acl = \"log-delivery-write\" arn = \"arn:aws:s3:::ab-xyz-stage-access-logging-9d8e94ff\" bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" bucket_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.amazonaws.com\" bucket_regional_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.us-west-2.amazonaws.com\" + force_destroy = false hosted_zone_id = \"Z3BJ6K6RIION7M\" id = \"ab-xyz-stage-access-logging-9d8e94ff\" region = \"us-west-2\" request_payer = \"BucketOwner\" tags = { \"mycompany:finance:accountenvironment\" = \"xyz-stage\" \"mycompany:finance:application\" = \"ab-platform\" \"mycompany:finance:billablebusinessunit\" = \"my-dev\" \"name\" = \"Access logging bucket\" } - grant { - permissions = [ - \"READ_ACP\", - \"WRITE\", ] -> null - type = \"Group\" -> null - uri = \"http://acs.amazonaws.com/groups/s3/LogDelivery\" -> null } - grant { - id = \"0343271a8c2f184152c171b223945b22ceaf5be5c9b78cf167660600747b5ad8\" -> null - permissions = [ - \"FULL_CONTROL\", ] -> null - type = \"CanonicalUser\" -> null } - lifecycle_rule { - abort_incomplete_multipart_upload_days = 0 -> null - enabled = true -> null - id = \"intu-lifecycle-s3-int-tier\" -> null - tags = {} -> null - transition { - days = 32 -> null - storage_class = \"INTELLIGENT_TIERING\" -> null } } versioning { enabled = false mfa_delete = false } } Plan: 0 to add, 3 to change, 0 to destroy. ", "keywords": ["bill", "policy", "change", "test"]}, {"source": "Text", "text": "As you can seee terraform plan output shows Plan: 0 to add, 3 to change, 0 to destroy. ", "keywords": ["change"]}, {"source": "Text", "text": "Why does tries to remove new `aws_s3_bucket_policy` for `cloudtrail_logging_bucket` even when there is not change in the policy. ", "keywords": ["policy", "change"]}, {"source": "Text", "text": "**My Environment:** Local machine: macOS v10.14.6 Terraform v0.12.29 + provider.aws v3.14.1 + provider.null v2.1.2 + provider.random v2.3.1 + provider.template v2.1.2 [1]: https://i.stack.imgur.com/ZMTVR.png", "keywords": ["provider"]}]}, {"Id": "234739932", "PostHistoryTypeId": "5", "PostId": "64795148", "RevisionGUID": "fefcafcf-fda3-411a-ad60-3fad0e18813e", "CreationDate": "2020-11-12T02:00:12.087", "UserId": "948268", "Comment": "added 2583 characters in body", "Text": "This is a follow-up question to my original question: https://stackoverflow.com/q/64758624/948268\r\n\r\n**Some Background:** We have terraform code to create various AWS resources. Some of these resources are created per AWS account and hence are structured to be stored in a account-scope folder in our project. This was when we were only having one AWS region. Now our application is made multi-region and hence these resources are to be created per region for each AWS account.\r\n\r\nIn order to do that we have now moved these TF scripts to region-scope folder which will be run per region. Since these resources are no longer part of 'account scope' we have removed them from the account scope Terraform state. Now when I try to import these resources to `region scope`\r\n\r\n\r\n**My Imports (running from xyz-region-scope directory) and terraform plan:**\r\n\r\n\r\n    terraform import module.buckets.random_id.cloudtrail_bucket_suffix cqLFzQ\r\n    terraform import module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n    terraform import module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n    terraform import module.buckets.module.access_logging_bucket.aws_s3_bucket.default \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n    terraform import module.buckets.module.access_logging_bucket.random_id.bucket_suffix  nY6U_w\r\n    terraform import module.encryption.module.data_key.aws_iam_policy.decrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt\"\r\n    terraform import module.encryption.module.data_key.aws_iam_policy.encrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt\"\r\n    \r\n    \r\n    mycompanymachine:xyz-region-scope kuldeepjain$ ../scripts/terraform.sh xyz-stage plan -no-color\r\n    + set -o posix\r\n    + IFS='\r\n     '\r\n    ++ blhome\r\n    + BASH_LIB_HOME=/usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT\r\n    + source /usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT/s3/bucket.sh\r\n    + main xyz-stage plan -no-color\r\n    + '[' 3 -lt 2 ']'\r\n    + local env=xyz-stage\r\n    + shift\r\n    + local command=plan\r\n    + shift\r\n    ++ get_region xyz-stage\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    +++ aws --profile xyz-stage configure get region\r\n    ++ local region=us-west-2\r\n    ++ '[' -z us-west-2 ']'\r\n    ++ echo us-west-2\r\n    + local region=us-west-2\r\n    ++ _get_bucket xyz-stage xyz-stage-tfstate\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    ++ local name=xyz-stage-tfstate\r\n    ++ shift\r\n    +++ _get_bucket_list xyz-stage xyz-stage-tfstate\r\n    +++ local env=xyz-stage\r\n    +++ shift\r\n    +++ local name=xyz-stage-tfstate\r\n    +++ shift\r\n    +++ aws --profile xyz-stage --output json s3api list-buckets --query 'Buckets[?contains(Name, `xyz-stage-tfstate`) == `true`].Name'\r\n    ++ local 'bucket_list=[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ _count_buckets_in_json '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ local 'json=[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ shift\r\n    +++ echo '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ jq '. | length'\r\n    ++ local number_of_buckets=1\r\n    ++ '[' 1 == 0 ']'\r\n    ++ '[' 1 -gt 1 ']'\r\n    +++ echo '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ jq -r '.[0]'\r\n    ++ local bucket_name=ab-xyz-stage-tfstate-5b8873b8\r\n    ++ echo ab-xyz-stage-tfstate-5b8873b8\r\n    + local tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8\r\n    ++ get_config_file xyz-stage us-west-2\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    ++ local region=us-west-2\r\n    ++ shift\r\n    ++ local config_file=config/us-west-2/xyz-stage.tfvars\r\n    ++ '[' '!' -f config/us-west-2/xyz-stage.tfvars ']'\r\n    ++ config_file=config/us-west-2/default.tfvars\r\n    ++ echo config/us-west-2/default.tfvars\r\n    + local config_file=config/us-west-2/default.tfvars\r\n    + export TF_DATA_DIR=state/xyz-stage/\r\n    + TF_DATA_DIR=state/xyz-stage/\r\n    + terraform get\r\n    + terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color\r\n    Refreshing Terraform state in-memory prior to plan...\r\n    The refreshed state will be used to calculate this plan, but will not be\r\n    persisted to local or remote state storage.\r\n    \r\n    module.encryption.module.data_key.data.null_data_source.key: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.template_file.dependencies: Refreshing state...\r\n    module.buckets.data.template_file.dependencies: Refreshing state...\r\n    data.aws_caller_identity.current: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.aws_caller_identity.current: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_kms_alias.default: Refreshing state...\r\n    module.buckets.data.aws_caller_identity.current: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_region.current: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_caller_identity.current: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.aws_kms_alias.encryption_key_alias: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.random_id.bucket_suffix: Refreshing state... [id=nY6U_w]\r\n    module.buckets.module.access_logging_bucket.aws_s3_bucket.default: Refreshing state... [id=ab-xyz-stage-access-logging-9d8e94ff]\r\n    module.buckets.random_id.cloudtrail_bucket_suffix: Refreshing state... [id=cqLFzQ]\r\n    module.buckets.module.access_logging_bucket.data.template_file.encryption_configuration: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_iam_policy_document.encrypt: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_iam_policy_document.decrypt: Refreshing state...\r\n    module.encryption.module.data_key.aws_iam_policy.decrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt]\r\n    module.encryption.module.data_key.aws_iam_policy.encrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt]\r\n    module.buckets.aws_s3_bucket.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd]\r\n    module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail: Refreshing state...\r\n    module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd]\r\n    \r\n    ------------------------------------------------------------------------\r\n    \r\n    An execution plan has been generated and is shown below.\r\n    Resource actions are indicated with the following symbols:\r\n      + create\r\n      ~ update in-place\r\n     <= read (data resources)\r\n    \r\n    Terraform will perform the following actions:\r\n    \r\n    \r\n      # module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply\r\n      # (config refers to values not yet known)\r\n     <= data \"aws_iam_policy_document\" \"restrict_access_cloudtrail\"  {\r\n          + id   = (known after apply)\r\n          + json = (known after apply)\r\n    \r\n          + statement {\r\n              + actions   = [\r\n                  + \"s3:GetBucketAcl\",\r\n                ]\r\n              + effect    = \"Allow\"\r\n              + resources = [\r\n                  + \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\",\r\n                ]\r\n              + sid       = \"AWSCloudTrailAclCheck\"\r\n    \r\n              + principals {\r\n                  + identifiers = [\r\n                      + \"cloudtrail.amazonaws.com\",\r\n                    ]\r\n                  + type        = \"Service\"\r\n                }\r\n            }\r\n          + statement {\r\n              + actions   = [\r\n                  + \"s3:PutObject\",\r\n                ]\r\n              + effect    = \"Allow\"\r\n              + resources = [\r\n                  + \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\",\r\n                ]\r\n              + sid       = \"AWSCloudTrailWrite\"\r\n    \r\n              + condition {\r\n                  + test     = \"StringEquals\"\r\n                  + values   = [\r\n                      + \"bucket-owner-full-control\",\r\n                    ]\r\n                  + variable = \"s3:x-amz-acl\"\r\n                }\r\n    \r\n              + principals {\r\n                  + identifiers = [\r\n                      + \"cloudtrail.amazonaws.com\",\r\n                    ]\r\n                  + type        = \"Service\"\r\n                }\r\n            }\r\n        }\r\n    \r\n      # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket will be updated in-place\r\n      ~ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" {\r\n          + acl                         = \"private\"\r\n            arn                         = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n            bucket                      = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n            bucket_domain_name          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\"\r\n            bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\"\r\n          + force_destroy               = false\r\n            hosted_zone_id              = \"Z3BJ6K6RIION7M\"\r\n            id                          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n            region                      = \"us-west-2\"\r\n            request_payer               = \"BucketOwner\"\r\n            tags                        = {\r\n                \"mycompany:finance:accountenvironment\"   = \"xyz-stage\"\r\n                \"mycompany:finance:application\"          = \"ab-platform\"\r\n                \"mycompany:finance:billablebusinessunit\" = \"my-dev\"\r\n                \"name\"                                = \"Cloudtrail logging bucket\"\r\n            }\r\n    \r\n            lifecycle_rule {\r\n                abort_incomplete_multipart_upload_days = 0\r\n                enabled                                = true\r\n                id                                     = \"intu-lifecycle-s3-int-tier\"\r\n                tags                                   = {}\r\n    \r\n                transition {\r\n                    days          = 32\r\n                    storage_class = \"INTELLIGENT_TIERING\"\r\n                }\r\n            }\r\n    \r\n            logging {\r\n                target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n                target_prefix = \"logs/cloudtrail-logging/\"\r\n            }\r\n    \r\n            versioning {\r\n                enabled    = false\r\n                mfa_delete = false\r\n            }\r\n        }\r\n    \r\n      # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket will be updated in-place\r\n      ~ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" {\r\n            bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n            id     = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n          ~ policy = jsonencode(\r\n                {\r\n                  - Statement = [\r\n                      - {\r\n                          - Action    = \"s3:GetBucketAcl\"\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n                          - Sid       = \"AWSCloudTrailAclCheck\"\r\n                        },\r\n                      - {\r\n                          - Action    = \"s3:PutObject\"\r\n                          - Condition = {\r\n                              - StringEquals = {\r\n                                  - s3:x-amz-acl = \"bucket-owner-full-control\"\r\n                                }\r\n                            }\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\"\r\n                          - Sid       = \"AWSCloudTrailWrite\"\r\n                        },\r\n                    ]\r\n                  - Version   = \"2012-10-17\"\r\n                }\r\n            ) -> (known after apply)\r\n        }\r\n    \r\n      # module.buckets.module.access_logging_bucket.aws_s3_bucket.default will be updated in-place\r\n      ~ resource \"aws_s3_bucket\" \"default\" {\r\n          + acl                         = \"log-delivery-write\"\r\n            arn                         = \"arn:aws:s3:::ab-xyz-stage-access-logging-9d8e94ff\"\r\n            bucket                      = \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n            bucket_domain_name          = \"ab-xyz-stage-access-logging-9d8e94ff.s3.amazonaws.com\"\r\n            bucket_regional_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.us-west-2.amazonaws.com\"\r\n          + force_destroy               = false\r\n            hosted_zone_id              = \"Z3BJ6K6RIION7M\"\r\n            id                          = \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n            region                      = \"us-west-2\"\r\n            request_payer               = \"BucketOwner\"\r\n            tags                        = {\r\n                \"mycompany:finance:accountenvironment\"   = \"xyz-stage\"\r\n                \"mycompany:finance:application\"          = \"ab-platform\"\r\n                \"mycompany:finance:billablebusinessunit\" = \"my-dev\"\r\n                \"name\"                                = \"Access logging bucket\"\r\n            }\r\n    \r\n          - grant {\r\n              - permissions = [\r\n                  - \"READ_ACP\",\r\n                  - \"WRITE\",\r\n                ] -> null\r\n              - type        = \"Group\" -> null\r\n              - uri         = \"http://acs.amazonaws.com/groups/s3/LogDelivery\" -> null\r\n            }\r\n          - grant {\r\n              - id          = \"0343271a8c2f184152c171b223945b22ceaf5be5c9b78cf167660600747b5ad8\" -> null\r\n              - permissions = [\r\n                  - \"FULL_CONTROL\",\r\n                ] -> null\r\n              - type        = \"CanonicalUser\" -> null\r\n            }\r\n    \r\n          - lifecycle_rule {\r\n              - abort_incomplete_multipart_upload_days = 0 -> null\r\n              - enabled                                = true -> null\r\n              - id                                     = \"intu-lifecycle-s3-int-tier\" -> null\r\n              - tags                                   = {} -> null\r\n    \r\n              - transition {\r\n                  - days          = 32 -> null\r\n                  - storage_class = \"INTELLIGENT_TIERING\" -> null\r\n                }\r\n            }\r\n    \r\n            versioning {\r\n                enabled    = false\r\n                mfa_delete = false\r\n            }\r\n        }\r\n    \r\n    Plan: 0 to add, 3 to change, 0 to destroy.\r\n\r\n\r\nAs you can see terraform plan output shows Plan: 0 to add, 3 to change, 0 to destroy.\r\n\r\n**My Questions are:**\r\n\r\n 1. Why does it try to remove new `aws_s3_bucket_policy` for `cloudtrail_logging_bucket` even when there is not change in the policy. Pls see the screenshot and TF-code *cloudtrail_bucket.tf* below[![enter image description here][1]][1]\r\n 2. For the resource where it says `module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply`. It shows `+` sign, does that mean it will modify something here or will just read it as it says.\r\n 3. Why does it show this `module.buckets.module.access_logging_bucket.aws_s3_bucket.default will be updated in-place ~ resource \"aws_s3_bucket\" \"default\"` where it removes the `grant` and `lifecycle_rule`.\r\n\r\n**TF Code:**\r\n\r\ncloudtrail_bucket.tf:\r\n\r\n    data \"aws_caller_identity\" \"current\" {}\r\n    \r\n    resource \"random_id\" \"cloudtrail_bucket_suffix\" {\r\n      keepers = {\r\n        # Keep the suffix per account id / environment\r\n        aws_account_id = \"${data.aws_caller_identity.current.account_id}\"\r\n        env = \"${var.environment}\"\r\n      }\r\n    \r\n      byte_length = \"4\"\r\n    }\r\n    \r\n    \r\n    resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" {\r\n      bucket = \"ml-${var.environment}-cloudtrail-logging-${random_id.cloudtrail_bucket_suffix.hex}\"\r\n      acl = \"private\"\r\n    \r\n      depends_on = [data.template_file.dependencies]\r\n    \r\n      tags = {\r\n        name = \"Cloudtrail logging bucket\"\r\n        \"intuit:finance:accountenvironment\" = \"${var.environment}\"\r\n        \"intuit:finance:application\" = \"${module.constants.finance_application}\"\r\n        \"intuit:finance:billablebusinessunit\" = \"${module.constants.finance_billablebusinessunit}\"\r\n      }\r\n    \r\n      lifecycle {\r\n        ignore_changes = [ \"server_side_encryption_configuration\" ]\r\n      }\r\n    \r\n      logging {\r\n        target_bucket =  \"${module.access_logging_bucket.name}\"\r\n        target_prefix = \"logs/cloudtrail-logging/\"\r\n      }\r\n    \r\n      lifecycle_rule {\r\n        enabled = \"true\"\r\n    \r\n        transition {\r\n          days          = 32\r\n          storage_class = \"INTELLIGENT_TIERING\"\r\n        }\r\n      }\r\n    \r\n    }\r\n    \r\n    resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" {\r\n      bucket = \"${aws_s3_bucket.cloudtrail_logging_bucket.id}\"\r\n      policy = \"${data.aws_iam_policy_document.restrict_access_cloudtrail.json}\"\r\n    }\r\n    \r\n    \r\n    data aws_iam_policy_document \"restrict_access_cloudtrail\" {\r\n    \r\n      statement {\r\n        sid = \"AWSCloudTrailAclCheck\"\r\n        effect = \"Allow\"\r\n        actions = [\"s3:GetBucketAcl\"]\r\n        resources = [ \"${aws_s3_bucket.cloudtrail_logging_bucket.arn}\" ]\r\n        principals {\r\n          identifiers = [\"cloudtrail.amazonaws.com\"]\r\n          type = \"Service\"\r\n        }\r\n    \r\n      }\r\n    \r\n      statement {\r\n        sid = \"AWSCloudTrailWrite\"\r\n        effect = \"Allow\"\r\n        actions = [\"s3:PutObject\"]\r\n        resources = [ \"${aws_s3_bucket.cloudtrail_logging_bucket.arn}/*\" ]\r\n        principals {\r\n          identifiers = [\"cloudtrail.amazonaws.com\"]\r\n          type = \"Service\"\r\n        }\r\n        condition {\r\n          test = \"StringEquals\"\r\n          values = [\"bucket-owner-full-control\"]\r\n          variable = \"s3:x-amz-acl\"\r\n        }\r\n    \r\n      }\r\n    }\r\n\r\n\r\n**My Environment:**\r\n\r\n    Local machine: macOS v10.14.6\r\n    \r\n    Terraform v0.12.29\r\n    + provider.aws v3.14.1\r\n    + provider.null v2.1.2\r\n    + provider.random v2.3.1\r\n    + provider.template v2.1.2\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/ZMTVR.png\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "**My Imports (running from xyz-region-scope directory) and terraform plan:** terraform import module.buckets.random_id.cloudtrail_bucket_suffix cqLFzQ terraform import module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" terraform import module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" terraform import module.buckets.module.access_logging_bucket.aws_s3_bucket.default \"ab-xyz-stage-access-logging-9d8e94ff\" terraform import module.buckets.module.access_logging_bucket.random_id.bucket_suffix nY6U_w terraform import module.encryption.module.data_key.aws_iam_policy.decrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt\" terraform import module.encryption.module.data_key.aws_iam_policy.encrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt\" mycompanymachine:xyz-region-scope kuldeepjain$ ../scripts/terraform.sh xyz-stage plan -no-color + set -o posix + IFS=' ' ++ blhome + BASH_LIB_HOME=/usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT + source /usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT/s3/bucket.sh + main xyz-stage plan -no-color + '[' 3 -lt 2 ']' + local env=xyz-stage + shift + local command=plan + shift ++ get_region xyz-stage ++ local env=xyz-stage ++ shift +++ aws --profile xyz-stage configure get region ++ local region=us-west-2 ++ '[' -z us-west-2 ']' ++ echo us-west-2 + local region=us-west-2 ++ _get_bucket xyz-stage xyz-stage-tfstate ++ local env=xyz-stage ++ shift ++ local name=xyz-stage-tfstate ++ shift +++ _get_bucket_list xyz-stage xyz-stage-tfstate +++ local env=xyz-stage +++ shift +++ local name=xyz-stage-tfstate +++ shift +++ aws --profile xyz-stage --output json s3api list-buckets --query 'Buckets[?contains(Name, `xyz-stage-tfstate`) == `true`].Name' ++ local 'bucket_list=[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ _count_buckets_in_json '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ local 'json=[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ shift +++ echo '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ jq '. | length' ++ local number_of_buckets=1 ++ '[' 1 == 0 ']' ++ '[' 1 -gt 1 ']' +++ echo '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ jq -r '.[0]' ++ local bucket_name=ab-xyz-stage-tfstate-5b8873b8 ++ echo ab-xyz-stage-tfstate-5b8873b8 + local tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 ++ get_config_file xyz-stage us-west-2 ++ local env=xyz-stage ++ shift ++ local region=us-west-2 ++ shift ++ local config_file=config/us-west-2/xyz-stage.tfvars ++ '[' '!' -f config/us-west-2/xyz-stage.tfvars ']' ++ config_file=config/us-west-2/default.tfvars ++ echo config/us-west-2/default.tfvars + local config_file=config/us-west-2/default.tfvars + export TF_DATA_DIR=state/xyz-stage/ + TF_DATA_DIR=state/xyz-stage/ + terraform get + terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color Refreshing Terraform state in-memory prior to plan... ", "keywords": ["policy"]}, {"source": "Text", "text": "The refreshed state will be used to calculate this plan, but will not be persisted to local or remote state storage. module.encryption.module.data_key.data.null_data_source.key: Refreshing state... module.buckets.module.access_logging_bucket.data.template_file.dependencies: Refreshing state... module.buckets.data.template_file.dependencies: Refreshing state... data.aws_caller_identity.current: Refreshing state... module.buckets.module.access_logging_bucket.data.aws_caller_identity.current: Refreshing state... module.encryption.module.data_key.data.aws_kms_alias.default: Refreshing state... module.buckets.data.aws_caller_identity.current: Refreshing state... module.encryption.module.data_key.data.aws_region.current: Refreshing state... module.encryption.module.data_key.data.aws_caller_identity.current: Refreshing state... module.buckets.module.access_logging_bucket.data.aws_kms_alias.encryption_key_alias: Refreshing state... module.buckets.module.access_logging_bucket.random_id.bucket_suffix: Refreshing state... [id=nY6U_w] module.buckets.module.access_logging_bucket.aws_s3_bucket.default: Refreshing state... [id=ab-xyz-stage-access-logging-9d8e94ff] module.buckets.random_id.cloudtrail_bucket_suffix: Refreshing state... [id=cqLFzQ] module.buckets.module.access_logging_bucket.data.template_file.encryption_configuration: Refreshing state... module.encryption.module.data_key.data.aws_iam_policy_document.encrypt: Refreshing state... module.encryption.module.data_key.data.aws_iam_policy_document.decrypt: Refreshing state... module.encryption.module.data_key.aws_iam_policy.decrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt] module.encryption.module.data_key.aws_iam_policy.encrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt] module.buckets.aws_s3_bucket.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd] module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail: Refreshing state... module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd] ------------------------------------------------------------------------ ", "keywords": ["storage", "policy"]}, {"source": "Text", "text": "Resource actions are indicated with the following symbols: + create ~ update in-place <= read (data resources) Terraform will perform the following actions: # module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply # (config refers to values not yet known) <= data \"aws_iam_policy_document\" \"restrict_access_cloudtrail\" { + id = (known after apply) + json = (known after apply) + statement { + actions = [ + \"s3:GetBucketAcl\", ] + effect = \"Allow\" + resources = [ + \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\", ] + sid = \"AWSCloudTrailAclCheck\" + principals { + identifiers = [ + \"cloudtrail.amazonaws.com\", ] + type = \"Service\" } } + statement { + actions = [ + \"s3:PutObject\", ] + effect = \"Allow\" + resources = [ + \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\", ] + sid = \"AWSCloudTrailWrite\" + condition { + test = \"StringEquals\" + values = [ + \"bucket-owner-full-control\", ] + variable = \"s3:x-amz-acl\" } + principals { + identifiers = [ + \"cloudtrail.amazonaws.com\", ] + type = \"Service\" } } } # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket will be updated in-place ~ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" { + acl = \"private\" arn = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" bucket_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\" bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\" + force_destroy = false hosted_zone_id = \"Z3BJ6K6RIION7M\" id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" region = \"us-west-2\" request_payer = \"BucketOwner\" tags = { \"mycompany:finance:accountenvironment\" = \"xyz-stage\" \"mycompany:finance:application\" = \"ab-platform\" \"mycompany:finance:billablebusinessunit\" = \"my-dev\" \"name\" = \"Cloudtrail logging bucket\" } lifecycle_rule { abort_incomplete_multipart_upload_days = 0 enabled = true id = \"intu-lifecycle-s3-int-tier\" tags = {} transition { days = 32 storage_class = \"INTELLIGENT_TIERING\" } } logging { target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" target_prefix = \"logs/cloudtrail-logging/\" } versioning { enabled = false mfa_delete = false } } # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket will be updated in-place ~ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" { bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" ~ policy = jsonencode( { - Statement = [ - { - Action = \"s3:GetBucketAcl\" - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" - Sid = \"AWSCloudTrailAclCheck\" }, - { - Action = \"s3:PutObject\" - Condition = { - StringEquals = { - s3:x-amz-acl = \"bucket-owner-full-control\" } } - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\" - Sid = \"AWSCloudTrailWrite\" }, ] - Version = \"2012-10-17\" } ) -> (known after apply) } # module.buckets.module.access_logging_bucket.aws_s3_bucket.default will be updated in-place ~ resource \"aws_s3_bucket\" \"default\" { + acl = \"log-delivery-write\" arn = \"arn:aws:s3:::ab-xyz-stage-access-logging-9d8e94ff\" bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" bucket_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.amazonaws.com\" bucket_regional_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.us-west-2.amazonaws.com\" + force_destroy = false hosted_zone_id = \"Z3BJ6K6RIION7M\" id = \"ab-xyz-stage-access-logging-9d8e94ff\" region = \"us-west-2\" request_payer = \"BucketOwner\" tags = { \"mycompany:finance:accountenvironment\" = \"xyz-stage\" \"mycompany:finance:application\" = \"ab-platform\" \"mycompany:finance:billablebusinessunit\" = \"my-dev\" \"name\" = \"Access logging bucket\" } - grant { - permissions = [ - \"READ_ACP\", - \"WRITE\", ] -> null - type = \"Group\" -> null - uri = \"http://acs.amazonaws.com/groups/s3/LogDelivery\" -> null } - grant { - id = \"0343271a8c2f184152c171b223945b22ceaf5be5c9b78cf167660600747b5ad8\" -> null - permissions = [ - \"FULL_CONTROL\", ] -> null - type = \"CanonicalUser\" -> null } - lifecycle_rule { - abort_incomplete_multipart_upload_days = 0 -> null - enabled = true -> null - id = \"intu-lifecycle-s3-int-tier\" -> null - tags = {} -> null - transition { - days = 32 -> null - storage_class = \"INTELLIGENT_TIERING\" -> null } } versioning { enabled = false mfa_delete = false } } Plan: 0 to add, 3 to change, 0 to destroy. ", "keywords": ["bill", "policy", "change", "test"]}, {"source": "Text", "text": "As you can see terraform plan output shows Plan: 0 to add, 3 to change, 0 to destroy. **My Questions are:** 1. ", "keywords": ["change"]}, {"source": "Text", "text": "Why does it try to remove new `aws_s3_bucket_policy` for `cloudtrail_logging_bucket` even when there is not change in the policy. ", "keywords": ["policy", "change"]}, {"source": "Text", "text": "**TF Code:** cloudtrail_bucket.tf: data \"aws_caller_identity\" \"current\" {} resource \"random_id\" \"cloudtrail_bucket_suffix\" { keepers = { # Keep the suffix per account id / environment aws_account_id = \"${data.aws_caller_identity.current.account_id}\" env = \"${var.environment}\" } byte_length = \"4\" } resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" { bucket = \"ml-${var.environment}-cloudtrail-logging-${random_id.cloudtrail_bucket_suffix.hex}\" acl = \"private\" depends_on = [data.template_file.dependencies] tags = { name = \"Cloudtrail logging bucket\" \"intuit:finance:accountenvironment\" = \"${var.environment}\" \"intuit:finance:application\" = \"${module.constants.finance_application}\" \"intuit:finance:billablebusinessunit\" = \"${module.constants.finance_billablebusinessunit}\" } lifecycle { ignore_changes = [ \"server_side_encryption_configuration\" ] } logging { target_bucket = \"${module.access_logging_bucket.name}\" target_prefix = \"logs/cloudtrail-logging/\" } lifecycle_rule { enabled = \"true\" transition { days = 32 storage_class = \"INTELLIGENT_TIERING\" } } } resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" { bucket = \"${aws_s3_bucket.cloudtrail_logging_bucket.id}\" policy = \"${data.aws_iam_policy_document.restrict_access_cloudtrail.json}\" } data aws_iam_policy_document \"restrict_access_cloudtrail\" { statement { sid = \"AWSCloudTrailAclCheck\" effect = \"Allow\" actions = [\"s3:GetBucketAcl\"] resources = [ \"${aws_s3_bucket.cloudtrail_logging_bucket.arn}\" ] principals { identifiers = [\"cloudtrail.amazonaws.com\"] type = \"Service\" } } statement { sid = \"AWSCloudTrailWrite\" effect = \"Allow\" actions = [\"s3:PutObject\"] resources = [ \"${aws_s3_bucket.cloudtrail_logging_bucket.arn}/*\" ] principals { identifiers = [\"cloudtrail.amazonaws.com\"] type = \"Service\" ", "keywords": ["bill", "policy"]}, {"source": "Text", "text": "} condition { test = \"StringEquals\" values = [\"bucket-owner-full-control\"] variable = \"s3:x-amz-acl\" ", "keywords": ["test"]}, {"source": "Text", "text": "} } } **My Environment:** Local machine: macOS v10.14.6 Terraform v0.12.29 + provider.aws v3.14.1 + provider.null v2.1.2 + provider.random v2.3.1 + provider.template v2.1.2 [1]: https://i.stack.imgur.com/ZMTVR.png", "keywords": ["provider"]}]}, {"Id": "234740373", "PostHistoryTypeId": "5", "PostId": "64795148", "RevisionGUID": "d9019ea4-ad2e-4dcf-a712-2e34ff9075e2", "CreationDate": "2020-11-12T02:14:27.523", "UserId": "948268", "Comment": "Added TF-code to get better context", "Text": "This is a follow-up question to my original question: https://stackoverflow.com/q/64758624/948268\r\n\r\n**Some Background:** We have terraform code to create various AWS resources. Some of these resources are created per AWS account and hence are structured to be stored in a account-scope folder in our project. This was when we were only having one AWS region. Now our application is made multi-region and hence these resources are to be created per region for each AWS account.\r\n\r\nIn order to do that we have now moved these TF scripts to region-scope folder which will be run per region. Since these resources are no longer part of 'account scope' we have removed them from the account scope Terraform state. Now when I try to import these resources to `region scope`\r\n\r\n\r\n**My Imports (running from xyz-region-scope directory) and terraform plan:**\r\n\r\n\r\n    terraform import module.buckets.random_id.cloudtrail_bucket_suffix cqLFzQ\r\n    terraform import module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n    terraform import module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n    terraform import module.buckets.module.access_logging_bucket.aws_s3_bucket.default \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n    terraform import module.buckets.module.access_logging_bucket.random_id.bucket_suffix  nY6U_w\r\n    terraform import module.encryption.module.data_key.aws_iam_policy.decrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt\"\r\n    terraform import module.encryption.module.data_key.aws_iam_policy.encrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt\"\r\n    \r\n    \r\n    mycompanymachine:xyz-region-scope kuldeepjain$ ../scripts/terraform.sh xyz-stage plan -no-color\r\n    + set -o posix\r\n    + IFS='\r\n     '\r\n    ++ blhome\r\n    + BASH_LIB_HOME=/usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT\r\n    + source /usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT/s3/bucket.sh\r\n    + main xyz-stage plan -no-color\r\n    + '[' 3 -lt 2 ']'\r\n    + local env=xyz-stage\r\n    + shift\r\n    + local command=plan\r\n    + shift\r\n    ++ get_region xyz-stage\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    +++ aws --profile xyz-stage configure get region\r\n    ++ local region=us-west-2\r\n    ++ '[' -z us-west-2 ']'\r\n    ++ echo us-west-2\r\n    + local region=us-west-2\r\n    ++ _get_bucket xyz-stage xyz-stage-tfstate\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    ++ local name=xyz-stage-tfstate\r\n    ++ shift\r\n    +++ _get_bucket_list xyz-stage xyz-stage-tfstate\r\n    +++ local env=xyz-stage\r\n    +++ shift\r\n    +++ local name=xyz-stage-tfstate\r\n    +++ shift\r\n    +++ aws --profile xyz-stage --output json s3api list-buckets --query 'Buckets[?contains(Name, `xyz-stage-tfstate`) == `true`].Name'\r\n    ++ local 'bucket_list=[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ _count_buckets_in_json '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ local 'json=[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ shift\r\n    +++ echo '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ jq '. | length'\r\n    ++ local number_of_buckets=1\r\n    ++ '[' 1 == 0 ']'\r\n    ++ '[' 1 -gt 1 ']'\r\n    +++ echo '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ jq -r '.[0]'\r\n    ++ local bucket_name=ab-xyz-stage-tfstate-5b8873b8\r\n    ++ echo ab-xyz-stage-tfstate-5b8873b8\r\n    + local tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8\r\n    ++ get_config_file xyz-stage us-west-2\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    ++ local region=us-west-2\r\n    ++ shift\r\n    ++ local config_file=config/us-west-2/xyz-stage.tfvars\r\n    ++ '[' '!' -f config/us-west-2/xyz-stage.tfvars ']'\r\n    ++ config_file=config/us-west-2/default.tfvars\r\n    ++ echo config/us-west-2/default.tfvars\r\n    + local config_file=config/us-west-2/default.tfvars\r\n    + export TF_DATA_DIR=state/xyz-stage/\r\n    + TF_DATA_DIR=state/xyz-stage/\r\n    + terraform get\r\n    + terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color\r\n    Refreshing Terraform state in-memory prior to plan...\r\n    The refreshed state will be used to calculate this plan, but will not be\r\n    persisted to local or remote state storage.\r\n    \r\n    module.encryption.module.data_key.data.null_data_source.key: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.template_file.dependencies: Refreshing state...\r\n    module.buckets.data.template_file.dependencies: Refreshing state...\r\n    data.aws_caller_identity.current: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.aws_caller_identity.current: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_kms_alias.default: Refreshing state...\r\n    module.buckets.data.aws_caller_identity.current: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_region.current: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_caller_identity.current: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.aws_kms_alias.encryption_key_alias: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.random_id.bucket_suffix: Refreshing state... [id=nY6U_w]\r\n    module.buckets.module.access_logging_bucket.aws_s3_bucket.default: Refreshing state... [id=ab-xyz-stage-access-logging-9d8e94ff]\r\n    module.buckets.random_id.cloudtrail_bucket_suffix: Refreshing state... [id=cqLFzQ]\r\n    module.buckets.module.access_logging_bucket.data.template_file.encryption_configuration: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_iam_policy_document.encrypt: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_iam_policy_document.decrypt: Refreshing state...\r\n    module.encryption.module.data_key.aws_iam_policy.decrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt]\r\n    module.encryption.module.data_key.aws_iam_policy.encrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt]\r\n    module.buckets.aws_s3_bucket.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd]\r\n    module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail: Refreshing state...\r\n    module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd]\r\n    \r\n    ------------------------------------------------------------------------\r\n    \r\n    An execution plan has been generated and is shown below.\r\n    Resource actions are indicated with the following symbols:\r\n      + create\r\n      ~ update in-place\r\n     <= read (data resources)\r\n    \r\n    Terraform will perform the following actions:\r\n    \r\n    \r\n      # module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply\r\n      # (config refers to values not yet known)\r\n     <= data \"aws_iam_policy_document\" \"restrict_access_cloudtrail\"  {\r\n          + id   = (known after apply)\r\n          + json = (known after apply)\r\n    \r\n          + statement {\r\n              + actions   = [\r\n                  + \"s3:GetBucketAcl\",\r\n                ]\r\n              + effect    = \"Allow\"\r\n              + resources = [\r\n                  + \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\",\r\n                ]\r\n              + sid       = \"AWSCloudTrailAclCheck\"\r\n    \r\n              + principals {\r\n                  + identifiers = [\r\n                      + \"cloudtrail.amazonaws.com\",\r\n                    ]\r\n                  + type        = \"Service\"\r\n                }\r\n            }\r\n          + statement {\r\n              + actions   = [\r\n                  + \"s3:PutObject\",\r\n                ]\r\n              + effect    = \"Allow\"\r\n              + resources = [\r\n                  + \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\",\r\n                ]\r\n              + sid       = \"AWSCloudTrailWrite\"\r\n    \r\n              + condition {\r\n                  + test     = \"StringEquals\"\r\n                  + values   = [\r\n                      + \"bucket-owner-full-control\",\r\n                    ]\r\n                  + variable = \"s3:x-amz-acl\"\r\n                }\r\n    \r\n              + principals {\r\n                  + identifiers = [\r\n                      + \"cloudtrail.amazonaws.com\",\r\n                    ]\r\n                  + type        = \"Service\"\r\n                }\r\n            }\r\n        }\r\n    \r\n      # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket will be updated in-place\r\n      ~ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" {\r\n          + acl                         = \"private\"\r\n            arn                         = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n            bucket                      = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n            bucket_domain_name          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\"\r\n            bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\"\r\n          + force_destroy               = false\r\n            hosted_zone_id              = \"Z3BJ6K6RIION7M\"\r\n            id                          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n            region                      = \"us-west-2\"\r\n            request_payer               = \"BucketOwner\"\r\n            tags                        = {\r\n                \"mycompany:finance:accountenvironment\"   = \"xyz-stage\"\r\n                \"mycompany:finance:application\"          = \"ab-platform\"\r\n                \"mycompany:finance:billablebusinessunit\" = \"my-dev\"\r\n                \"name\"                                = \"Cloudtrail logging bucket\"\r\n            }\r\n    \r\n            lifecycle_rule {\r\n                abort_incomplete_multipart_upload_days = 0\r\n                enabled                                = true\r\n                id                                     = \"intu-lifecycle-s3-int-tier\"\r\n                tags                                   = {}\r\n    \r\n                transition {\r\n                    days          = 32\r\n                    storage_class = \"INTELLIGENT_TIERING\"\r\n                }\r\n            }\r\n    \r\n            logging {\r\n                target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n                target_prefix = \"logs/cloudtrail-logging/\"\r\n            }\r\n    \r\n            versioning {\r\n                enabled    = false\r\n                mfa_delete = false\r\n            }\r\n        }\r\n    \r\n      # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket will be updated in-place\r\n      ~ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" {\r\n            bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n            id     = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n          ~ policy = jsonencode(\r\n                {\r\n                  - Statement = [\r\n                      - {\r\n                          - Action    = \"s3:GetBucketAcl\"\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n                          - Sid       = \"AWSCloudTrailAclCheck\"\r\n                        },\r\n                      - {\r\n                          - Action    = \"s3:PutObject\"\r\n                          - Condition = {\r\n                              - StringEquals = {\r\n                                  - s3:x-amz-acl = \"bucket-owner-full-control\"\r\n                                }\r\n                            }\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\"\r\n                          - Sid       = \"AWSCloudTrailWrite\"\r\n                        },\r\n                    ]\r\n                  - Version   = \"2012-10-17\"\r\n                }\r\n            ) -> (known after apply)\r\n        }\r\n    \r\n      # module.buckets.module.access_logging_bucket.aws_s3_bucket.default will be updated in-place\r\n      ~ resource \"aws_s3_bucket\" \"default\" {\r\n          + acl                         = \"log-delivery-write\"\r\n            arn                         = \"arn:aws:s3:::ab-xyz-stage-access-logging-9d8e94ff\"\r\n            bucket                      = \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n            bucket_domain_name          = \"ab-xyz-stage-access-logging-9d8e94ff.s3.amazonaws.com\"\r\n            bucket_regional_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.us-west-2.amazonaws.com\"\r\n          + force_destroy               = false\r\n            hosted_zone_id              = \"Z3BJ6K6RIION7M\"\r\n            id                          = \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n            region                      = \"us-west-2\"\r\n            request_payer               = \"BucketOwner\"\r\n            tags                        = {\r\n                \"mycompany:finance:accountenvironment\"   = \"xyz-stage\"\r\n                \"mycompany:finance:application\"          = \"ab-platform\"\r\n                \"mycompany:finance:billablebusinessunit\" = \"my-dev\"\r\n                \"name\"                                = \"Access logging bucket\"\r\n            }\r\n    \r\n          - grant {\r\n              - permissions = [\r\n                  - \"READ_ACP\",\r\n                  - \"WRITE\",\r\n                ] -> null\r\n              - type        = \"Group\" -> null\r\n              - uri         = \"http://acs.amazonaws.com/groups/s3/LogDelivery\" -> null\r\n            }\r\n          - grant {\r\n              - id          = \"0343271a8c2f184152c171b223945b22ceaf5be5c9b78cf167660600747b5ad8\" -> null\r\n              - permissions = [\r\n                  - \"FULL_CONTROL\",\r\n                ] -> null\r\n              - type        = \"CanonicalUser\" -> null\r\n            }\r\n    \r\n          - lifecycle_rule {\r\n              - abort_incomplete_multipart_upload_days = 0 -> null\r\n              - enabled                                = true -> null\r\n              - id                                     = \"intu-lifecycle-s3-int-tier\" -> null\r\n              - tags                                   = {} -> null\r\n    \r\n              - transition {\r\n                  - days          = 32 -> null\r\n                  - storage_class = \"INTELLIGENT_TIERING\" -> null\r\n                }\r\n            }\r\n    \r\n            versioning {\r\n                enabled    = false\r\n                mfa_delete = false\r\n            }\r\n        }\r\n    \r\n    Plan: 0 to add, 3 to change, 0 to destroy.\r\n\r\n\r\nAs you can see terraform plan output shows Plan: 0 to add, 3 to change, 0 to destroy.\r\n\r\n**My Questions are:**\r\n\r\n 1. Why does it try to remove new `aws_s3_bucket_policy` for `cloudtrail_logging_bucket` even when there is not change in the policy. Pls see the screenshot and TF-code *cloudtrail_bucket.tf* below[![enter image description here][1]][1]\r\n 2. For the resource where it says `module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply`. It shows `+` sign, does that mean it will modify something here or will just read it as it says.\r\n 3. Why does it show this `module.buckets.module.access_logging_bucket.aws_s3_bucket.default will be updated in-place ~ resource \"aws_s3_bucket\" \"default\"` where it removes the `grant` and `lifecycle_rule`. See below `s3_bucket.tf`\r\n\r\n**TF Code:**\r\n\r\n**cloudtrail_bucket.tf:**\r\n\r\n    data \"aws_caller_identity\" \"current\" {}\r\n    \r\n    resource \"random_id\" \"cloudtrail_bucket_suffix\" {\r\n      keepers = {\r\n        # Keep the suffix per account id / environment\r\n        aws_account_id = \"${data.aws_caller_identity.current.account_id}\"\r\n        env = \"${var.environment}\"\r\n      }\r\n    \r\n      byte_length = \"4\"\r\n    }\r\n    \r\n    \r\n    resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" {\r\n      bucket = \"ml-${var.environment}-cloudtrail-logging-${random_id.cloudtrail_bucket_suffix.hex}\"\r\n      acl = \"private\"\r\n    \r\n      depends_on = [data.template_file.dependencies]\r\n    \r\n      tags = {\r\n        name = \"Cloudtrail logging bucket\"\r\n        \"intuit:finance:accountenvironment\" = \"${var.environment}\"\r\n        \"intuit:finance:application\" = \"${module.constants.finance_application}\"\r\n        \"intuit:finance:billablebusinessunit\" = \"${module.constants.finance_billablebusinessunit}\"\r\n      }\r\n    \r\n      lifecycle {\r\n        ignore_changes = [ \"server_side_encryption_configuration\" ]\r\n      }\r\n    \r\n      logging {\r\n        target_bucket =  \"${module.access_logging_bucket.name}\"\r\n        target_prefix = \"logs/cloudtrail-logging/\"\r\n      }\r\n    \r\n      lifecycle_rule {\r\n        enabled = \"true\"\r\n    \r\n        transition {\r\n          days          = 32\r\n          storage_class = \"INTELLIGENT_TIERING\"\r\n        }\r\n      }\r\n    \r\n    }\r\n    \r\n    resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" {\r\n      bucket = \"${aws_s3_bucket.cloudtrail_logging_bucket.id}\"\r\n      policy = \"${data.aws_iam_policy_document.restrict_access_cloudtrail.json}\"\r\n    }\r\n    \r\n    \r\n    data aws_iam_policy_document \"restrict_access_cloudtrail\" {\r\n    \r\n      statement {\r\n        sid = \"AWSCloudTrailAclCheck\"\r\n        effect = \"Allow\"\r\n        actions = [\"s3:GetBucketAcl\"]\r\n        resources = [ \"${aws_s3_bucket.cloudtrail_logging_bucket.arn}\" ]\r\n        principals {\r\n          identifiers = [\"cloudtrail.amazonaws.com\"]\r\n          type = \"Service\"\r\n        }\r\n    \r\n      }\r\n    \r\n      statement {\r\n        sid = \"AWSCloudTrailWrite\"\r\n        effect = \"Allow\"\r\n        actions = [\"s3:PutObject\"]\r\n        resources = [ \"${aws_s3_bucket.cloudtrail_logging_bucket.arn}/*\" ]\r\n        principals {\r\n          identifiers = [\"cloudtrail.amazonaws.com\"]\r\n          type = \"Service\"\r\n        }\r\n        condition {\r\n          test = \"StringEquals\"\r\n          values = [\"bucket-owner-full-control\"]\r\n          variable = \"s3:x-amz-acl\"\r\n        }\r\n    \r\n      }\r\n    }\r\n\r\n\r\n**s3_bucket.tf**\r\n\r\n    resource \"random_id\" \"bucket_suffix\" {\r\n        keepers = {\r\n            # Keep the suffix per account id / environment\r\n            aws_account_id = \"${data.aws_caller_identity.current.account_id}\"\r\n            env = \"${var.environment}\"\r\n        }\r\n    \r\n        byte_length = \"${var.byte_length}\"\r\n    }\r\n    \r\n    resource \"aws_s3_bucket\" \"default\" {\r\n        bucket = \"ml-${var.environment}-${var.name}-${random_id.bucket_suffix.hex}\"\r\n        acl = \"${var.acl}\"\r\n    \r\n        depends_on = [data.template_file.dependencies]\r\n    \r\n        tags = {\r\n            name = \"${var.name_tag}\"\r\n            \"intuit:finance:accountenvironment\" = \"${var.environment}\"\r\n            \"intuit:finance:application\" = \"${module.constants.finance_application}\"\r\n            \"intuit:finance:billablebusinessunit\" = \"${module.constants.finance_billablebusinessunit}\"\r\n        }\r\n    \r\n        lifecycle {\r\n            ignore_changes = [ \"server_side_encryption_configuration\" ]\r\n        }\r\n    \r\n        logging {\r\n            target_bucket = \"${lookup(var.logging, \"target_bucket\", \"ml-${var.environment}-${var.name}-${random_id.bucket_suffix.hex}\")}\"\r\n            target_prefix = \"logs/${lookup(var.logging, \"target_folder_name\", \"access-logging\")}/\"\r\n        }\r\n    }\r\n\r\n\r\n**My Environment:**\r\n\r\n    Local machine: macOS v10.14.6\r\n    \r\n    Terraform v0.12.29\r\n    + provider.aws v3.14.1\r\n    + provider.null v2.1.2\r\n    + provider.random v2.3.1\r\n    + provider.template v2.1.2\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/ZMTVR.png\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "**My Imports (running from xyz-region-scope directory) and terraform plan:** terraform import module.buckets.random_id.cloudtrail_bucket_suffix cqLFzQ terraform import module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" terraform import module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" terraform import module.buckets.module.access_logging_bucket.aws_s3_bucket.default \"ab-xyz-stage-access-logging-9d8e94ff\" terraform import module.buckets.module.access_logging_bucket.random_id.bucket_suffix nY6U_w terraform import module.encryption.module.data_key.aws_iam_policy.decrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt\" terraform import module.encryption.module.data_key.aws_iam_policy.encrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt\" mycompanymachine:xyz-region-scope kuldeepjain$ ../scripts/terraform.sh xyz-stage plan -no-color + set -o posix + IFS=' ' ++ blhome + BASH_LIB_HOME=/usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT + source /usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT/s3/bucket.sh + main xyz-stage plan -no-color + '[' 3 -lt 2 ']' + local env=xyz-stage + shift + local command=plan + shift ++ get_region xyz-stage ++ local env=xyz-stage ++ shift +++ aws --profile xyz-stage configure get region ++ local region=us-west-2 ++ '[' -z us-west-2 ']' ++ echo us-west-2 + local region=us-west-2 ++ _get_bucket xyz-stage xyz-stage-tfstate ++ local env=xyz-stage ++ shift ++ local name=xyz-stage-tfstate ++ shift +++ _get_bucket_list xyz-stage xyz-stage-tfstate +++ local env=xyz-stage +++ shift +++ local name=xyz-stage-tfstate +++ shift +++ aws --profile xyz-stage --output json s3api list-buckets --query 'Buckets[?contains(Name, `xyz-stage-tfstate`) == `true`].Name' ++ local 'bucket_list=[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ _count_buckets_in_json '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ local 'json=[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ shift +++ echo '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ jq '. | length' ++ local number_of_buckets=1 ++ '[' 1 == 0 ']' ++ '[' 1 -gt 1 ']' +++ echo '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ jq -r '.[0]' ++ local bucket_name=ab-xyz-stage-tfstate-5b8873b8 ++ echo ab-xyz-stage-tfstate-5b8873b8 + local tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 ++ get_config_file xyz-stage us-west-2 ++ local env=xyz-stage ++ shift ++ local region=us-west-2 ++ shift ++ local config_file=config/us-west-2/xyz-stage.tfvars ++ '[' '!' -f config/us-west-2/xyz-stage.tfvars ']' ++ config_file=config/us-west-2/default.tfvars ++ echo config/us-west-2/default.tfvars + local config_file=config/us-west-2/default.tfvars + export TF_DATA_DIR=state/xyz-stage/ + TF_DATA_DIR=state/xyz-stage/ + terraform get + terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color Refreshing Terraform state in-memory prior to plan... ", "keywords": ["policy"]}, {"source": "Text", "text": "The refreshed state will be used to calculate this plan, but will not be persisted to local or remote state storage. module.encryption.module.data_key.data.null_data_source.key: Refreshing state... module.buckets.module.access_logging_bucket.data.template_file.dependencies: Refreshing state... module.buckets.data.template_file.dependencies: Refreshing state... data.aws_caller_identity.current: Refreshing state... module.buckets.module.access_logging_bucket.data.aws_caller_identity.current: Refreshing state... module.encryption.module.data_key.data.aws_kms_alias.default: Refreshing state... module.buckets.data.aws_caller_identity.current: Refreshing state... module.encryption.module.data_key.data.aws_region.current: Refreshing state... module.encryption.module.data_key.data.aws_caller_identity.current: Refreshing state... module.buckets.module.access_logging_bucket.data.aws_kms_alias.encryption_key_alias: Refreshing state... module.buckets.module.access_logging_bucket.random_id.bucket_suffix: Refreshing state... [id=nY6U_w] module.buckets.module.access_logging_bucket.aws_s3_bucket.default: Refreshing state... [id=ab-xyz-stage-access-logging-9d8e94ff] module.buckets.random_id.cloudtrail_bucket_suffix: Refreshing state... [id=cqLFzQ] module.buckets.module.access_logging_bucket.data.template_file.encryption_configuration: Refreshing state... module.encryption.module.data_key.data.aws_iam_policy_document.encrypt: Refreshing state... module.encryption.module.data_key.data.aws_iam_policy_document.decrypt: Refreshing state... module.encryption.module.data_key.aws_iam_policy.decrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt] module.encryption.module.data_key.aws_iam_policy.encrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt] module.buckets.aws_s3_bucket.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd] module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail: Refreshing state... module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd] ------------------------------------------------------------------------ ", "keywords": ["storage", "policy"]}, {"source": "Text", "text": "Resource actions are indicated with the following symbols: + create ~ update in-place <= read (data resources) Terraform will perform the following actions: # module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply # (config refers to values not yet known) <= data \"aws_iam_policy_document\" \"restrict_access_cloudtrail\" { + id = (known after apply) + json = (known after apply) + statement { + actions = [ + \"s3:GetBucketAcl\", ] + effect = \"Allow\" + resources = [ + \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\", ] + sid = \"AWSCloudTrailAclCheck\" + principals { + identifiers = [ + \"cloudtrail.amazonaws.com\", ] + type = \"Service\" } } + statement { + actions = [ + \"s3:PutObject\", ] + effect = \"Allow\" + resources = [ + \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\", ] + sid = \"AWSCloudTrailWrite\" + condition { + test = \"StringEquals\" + values = [ + \"bucket-owner-full-control\", ] + variable = \"s3:x-amz-acl\" } + principals { + identifiers = [ + \"cloudtrail.amazonaws.com\", ] + type = \"Service\" } } } # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket will be updated in-place ~ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" { + acl = \"private\" arn = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" bucket_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\" bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\" + force_destroy = false hosted_zone_id = \"Z3BJ6K6RIION7M\" id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" region = \"us-west-2\" request_payer = \"BucketOwner\" tags = { \"mycompany:finance:accountenvironment\" = \"xyz-stage\" \"mycompany:finance:application\" = \"ab-platform\" \"mycompany:finance:billablebusinessunit\" = \"my-dev\" \"name\" = \"Cloudtrail logging bucket\" } lifecycle_rule { abort_incomplete_multipart_upload_days = 0 enabled = true id = \"intu-lifecycle-s3-int-tier\" tags = {} transition { days = 32 storage_class = \"INTELLIGENT_TIERING\" } } logging { target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" target_prefix = \"logs/cloudtrail-logging/\" } versioning { enabled = false mfa_delete = false } } # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket will be updated in-place ~ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" { bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" ~ policy = jsonencode( { - Statement = [ - { - Action = \"s3:GetBucketAcl\" - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" - Sid = \"AWSCloudTrailAclCheck\" }, - { - Action = \"s3:PutObject\" - Condition = { - StringEquals = { - s3:x-amz-acl = \"bucket-owner-full-control\" } } - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\" - Sid = \"AWSCloudTrailWrite\" }, ] - Version = \"2012-10-17\" } ) -> (known after apply) } # module.buckets.module.access_logging_bucket.aws_s3_bucket.default will be updated in-place ~ resource \"aws_s3_bucket\" \"default\" { + acl = \"log-delivery-write\" arn = \"arn:aws:s3:::ab-xyz-stage-access-logging-9d8e94ff\" bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" bucket_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.amazonaws.com\" bucket_regional_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.us-west-2.amazonaws.com\" + force_destroy = false hosted_zone_id = \"Z3BJ6K6RIION7M\" id = \"ab-xyz-stage-access-logging-9d8e94ff\" region = \"us-west-2\" request_payer = \"BucketOwner\" tags = { \"mycompany:finance:accountenvironment\" = \"xyz-stage\" \"mycompany:finance:application\" = \"ab-platform\" \"mycompany:finance:billablebusinessunit\" = \"my-dev\" \"name\" = \"Access logging bucket\" } - grant { - permissions = [ - \"READ_ACP\", - \"WRITE\", ] -> null - type = \"Group\" -> null - uri = \"http://acs.amazonaws.com/groups/s3/LogDelivery\" -> null } - grant { - id = \"0343271a8c2f184152c171b223945b22ceaf5be5c9b78cf167660600747b5ad8\" -> null - permissions = [ - \"FULL_CONTROL\", ] -> null - type = \"CanonicalUser\" -> null } - lifecycle_rule { - abort_incomplete_multipart_upload_days = 0 -> null - enabled = true -> null - id = \"intu-lifecycle-s3-int-tier\" -> null - tags = {} -> null - transition { - days = 32 -> null - storage_class = \"INTELLIGENT_TIERING\" -> null } } versioning { enabled = false mfa_delete = false } } Plan: 0 to add, 3 to change, 0 to destroy. ", "keywords": ["bill", "policy", "change", "test"]}, {"source": "Text", "text": "As you can see terraform plan output shows Plan: 0 to add, 3 to change, 0 to destroy. **My Questions are:** 1. ", "keywords": ["change"]}, {"source": "Text", "text": "Why does it try to remove new `aws_s3_bucket_policy` for `cloudtrail_logging_bucket` even when there is not change in the policy. ", "keywords": ["policy", "change"]}, {"source": "Text", "text": "See below `s3_bucket.tf` **TF Code:** **cloudtrail_bucket.tf:** data \"aws_caller_identity\" \"current\" {} resource \"random_id\" \"cloudtrail_bucket_suffix\" { keepers = { # Keep the suffix per account id / environment aws_account_id = \"${data.aws_caller_identity.current.account_id}\" env = \"${var.environment}\" } byte_length = \"4\" } resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" { bucket = \"ml-${var.environment}-cloudtrail-logging-${random_id.cloudtrail_bucket_suffix.hex}\" acl = \"private\" depends_on = [data.template_file.dependencies] tags = { name = \"Cloudtrail logging bucket\" \"intuit:finance:accountenvironment\" = \"${var.environment}\" \"intuit:finance:application\" = \"${module.constants.finance_application}\" \"intuit:finance:billablebusinessunit\" = \"${module.constants.finance_billablebusinessunit}\" } lifecycle { ignore_changes = [ \"server_side_encryption_configuration\" ] } logging { target_bucket = \"${module.access_logging_bucket.name}\" target_prefix = \"logs/cloudtrail-logging/\" } lifecycle_rule { enabled = \"true\" transition { days = 32 storage_class = \"INTELLIGENT_TIERING\" } } } resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" { bucket = \"${aws_s3_bucket.cloudtrail_logging_bucket.id}\" policy = \"${data.aws_iam_policy_document.restrict_access_cloudtrail.json}\" } data aws_iam_policy_document \"restrict_access_cloudtrail\" { statement { sid = \"AWSCloudTrailAclCheck\" effect = \"Allow\" actions = [\"s3:GetBucketAcl\"] resources = [ \"${aws_s3_bucket.cloudtrail_logging_bucket.arn}\" ] principals { identifiers = [\"cloudtrail.amazonaws.com\"] type = \"Service\" } } statement { sid = \"AWSCloudTrailWrite\" effect = \"Allow\" actions = [\"s3:PutObject\"] resources = [ \"${aws_s3_bucket.cloudtrail_logging_bucket.arn}/*\" ] principals { identifiers = [\"cloudtrail.amazonaws.com\"] type = \"Service\" } condition { test = \"StringEquals\" values = [\"bucket-owner-full-control\"] variable = \"s3:x-amz-acl\" } } } **s3_bucket.tf** resource \"random_id\" \"bucket_suffix\" { keepers = { # Keep the suffix per account id / environment aws_account_id = \"${data.aws_caller_identity.current.account_id}\" env = \"${var.environment}\" } byte_length = \"${var.byte_length}\" } resource \"aws_s3_bucket\" \"default\" { bucket = \"ml-${var.environment}-${var.name}-${random_id.bucket_suffix.hex}\" acl = \"${var.acl}\" depends_on = [data.template_file.dependencies] tags = { name = \"${var.name_tag}\" \"intuit:finance:accountenvironment\" = \"${var.environment}\" \"intuit:finance:application\" = \"${module.constants.finance_application}\" \"intuit:finance:billablebusinessunit\" = \"${module.constants.finance_billablebusinessunit}\" } lifecycle { ignore_changes = [ \"server_side_encryption_configuration\" ] } logging { target_bucket = \"${lookup(var.logging, \"target_bucket\", \"ml-${var.environment}-${var.name}-${random_id.bucket_suffix.hex}\")}\" target_prefix = \"logs/${lookup(var.logging, \"target_folder_name\", \"access-logging\")}/\" } } **My Environment:** Local machine: macOS v10.14.6 Terraform v0.12.29 + provider.aws v3.14.1 + provider.null v2.1.2 + provider.random v2.3.1 + provider.template v2.1.2 [1]: https://i.stack.imgur.com/ZMTVR.png", "keywords": ["bill", "provider", "policy", "test"]}]}, {"Id": "234800355", "PostHistoryTypeId": "5", "PostId": "64795148", "RevisionGUID": "7a33bf45-a2da-4149-ac4e-f0647730c244", "CreationDate": "2020-11-12T20:19:07.013", "UserId": "948268", "Comment": "Updated naming", "Text": "This is a follow-up question to my original question: https://stackoverflow.com/q/64758624/948268\r\n\r\n**Some Background:** We have terraform code to create various AWS resources. Some of these resources are created per AWS account and hence are structured to be stored in a account-scope folder in our project. This was when we were only having one AWS region. Now our application is made multi-region and hence these resources are to be created per region for each AWS account.\r\n\r\nIn order to do that we have now moved these TF scripts to region-scope folder which will be run per region. Since these resources are no longer part of 'account scope' we have removed them from the account scope Terraform state. Now when I try to import these resources to `region scope`\r\n\r\n\r\n**My Imports (running from xyz-region-scope directory) and terraform plan:**\r\n\r\n\r\n    terraform import module.buckets.random_id.cloudtrail_bucket_suffix cqLFzQ\r\n    terraform import module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n    terraform import module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n    terraform import module.buckets.module.access_logging_bucket.aws_s3_bucket.default \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n    terraform import module.buckets.module.access_logging_bucket.random_id.bucket_suffix  nY6U_w\r\n    terraform import module.encryption.module.data_key.aws_iam_policy.decrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt\"\r\n    terraform import module.encryption.module.data_key.aws_iam_policy.encrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt\"\r\n    \r\n    \r\n    mycompanymachine:xyz-region-scope kuldeepjain$ ../scripts/terraform.sh xyz-stage plan -no-color\r\n    + set -o posix\r\n    + IFS='\r\n     '\r\n    ++ blhome\r\n    + BASH_LIB_HOME=/usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT\r\n    + source /usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT/s3/bucket.sh\r\n    + main xyz-stage plan -no-color\r\n    + '[' 3 -lt 2 ']'\r\n    + local env=xyz-stage\r\n    + shift\r\n    + local command=plan\r\n    + shift\r\n    ++ get_region xyz-stage\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    +++ aws --profile xyz-stage configure get region\r\n    ++ local region=us-west-2\r\n    ++ '[' -z us-west-2 ']'\r\n    ++ echo us-west-2\r\n    + local region=us-west-2\r\n    ++ _get_bucket xyz-stage xyz-stage-tfstate\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    ++ local name=xyz-stage-tfstate\r\n    ++ shift\r\n    +++ _get_bucket_list xyz-stage xyz-stage-tfstate\r\n    +++ local env=xyz-stage\r\n    +++ shift\r\n    +++ local name=xyz-stage-tfstate\r\n    +++ shift\r\n    +++ aws --profile xyz-stage --output json s3api list-buckets --query 'Buckets[?contains(Name, `xyz-stage-tfstate`) == `true`].Name'\r\n    ++ local 'bucket_list=[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ _count_buckets_in_json '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ local 'json=[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ shift\r\n    +++ echo '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ jq '. | length'\r\n    ++ local number_of_buckets=1\r\n    ++ '[' 1 == 0 ']'\r\n    ++ '[' 1 -gt 1 ']'\r\n    +++ echo '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ jq -r '.[0]'\r\n    ++ local bucket_name=ab-xyz-stage-tfstate-5b8873b8\r\n    ++ echo ab-xyz-stage-tfstate-5b8873b8\r\n    + local tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8\r\n    ++ get_config_file xyz-stage us-west-2\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    ++ local region=us-west-2\r\n    ++ shift\r\n    ++ local config_file=config/us-west-2/xyz-stage.tfvars\r\n    ++ '[' '!' -f config/us-west-2/xyz-stage.tfvars ']'\r\n    ++ config_file=config/us-west-2/default.tfvars\r\n    ++ echo config/us-west-2/default.tfvars\r\n    + local config_file=config/us-west-2/default.tfvars\r\n    + export TF_DATA_DIR=state/xyz-stage/\r\n    + TF_DATA_DIR=state/xyz-stage/\r\n    + terraform get\r\n    + terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color\r\n    Refreshing Terraform state in-memory prior to plan...\r\n    The refreshed state will be used to calculate this plan, but will not be\r\n    persisted to local or remote state storage.\r\n    \r\n    module.encryption.module.data_key.data.null_data_source.key: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.template_file.dependencies: Refreshing state...\r\n    module.buckets.data.template_file.dependencies: Refreshing state...\r\n    data.aws_caller_identity.current: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.aws_caller_identity.current: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_kms_alias.default: Refreshing state...\r\n    module.buckets.data.aws_caller_identity.current: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_region.current: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_caller_identity.current: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.aws_kms_alias.encryption_key_alias: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.random_id.bucket_suffix: Refreshing state... [id=nY6U_w]\r\n    module.buckets.module.access_logging_bucket.aws_s3_bucket.default: Refreshing state... [id=ab-xyz-stage-access-logging-9d8e94ff]\r\n    module.buckets.random_id.cloudtrail_bucket_suffix: Refreshing state... [id=cqLFzQ]\r\n    module.buckets.module.access_logging_bucket.data.template_file.encryption_configuration: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_iam_policy_document.encrypt: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_iam_policy_document.decrypt: Refreshing state...\r\n    module.encryption.module.data_key.aws_iam_policy.decrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt]\r\n    module.encryption.module.data_key.aws_iam_policy.encrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt]\r\n    module.buckets.aws_s3_bucket.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd]\r\n    module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail: Refreshing state...\r\n    module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd]\r\n    \r\n    ------------------------------------------------------------------------\r\n    \r\n    An execution plan has been generated and is shown below.\r\n    Resource actions are indicated with the following symbols:\r\n      + create\r\n      ~ update in-place\r\n     <= read (data resources)\r\n    \r\n    Terraform will perform the following actions:\r\n    \r\n    \r\n      # module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply\r\n      # (config refers to values not yet known)\r\n     <= data \"aws_iam_policy_document\" \"restrict_access_cloudtrail\"  {\r\n          + id   = (known after apply)\r\n          + json = (known after apply)\r\n    \r\n          + statement {\r\n              + actions   = [\r\n                  + \"s3:GetBucketAcl\",\r\n                ]\r\n              + effect    = \"Allow\"\r\n              + resources = [\r\n                  + \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\",\r\n                ]\r\n              + sid       = \"AWSCloudTrailAclCheck\"\r\n    \r\n              + principals {\r\n                  + identifiers = [\r\n                      + \"cloudtrail.amazonaws.com\",\r\n                    ]\r\n                  + type        = \"Service\"\r\n                }\r\n            }\r\n          + statement {\r\n              + actions   = [\r\n                  + \"s3:PutObject\",\r\n                ]\r\n              + effect    = \"Allow\"\r\n              + resources = [\r\n                  + \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\",\r\n                ]\r\n              + sid       = \"AWSCloudTrailWrite\"\r\n    \r\n              + condition {\r\n                  + test     = \"StringEquals\"\r\n                  + values   = [\r\n                      + \"bucket-owner-full-control\",\r\n                    ]\r\n                  + variable = \"s3:x-amz-acl\"\r\n                }\r\n    \r\n              + principals {\r\n                  + identifiers = [\r\n                      + \"cloudtrail.amazonaws.com\",\r\n                    ]\r\n                  + type        = \"Service\"\r\n                }\r\n            }\r\n        }\r\n    \r\n      # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket will be updated in-place\r\n      ~ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" {\r\n          + acl                         = \"private\"\r\n            arn                         = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n            bucket                      = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n            bucket_domain_name          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\"\r\n            bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\"\r\n          + force_destroy               = false\r\n            hosted_zone_id              = \"Z3BJ6K6RIION7M\"\r\n            id                          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n            region                      = \"us-west-2\"\r\n            request_payer               = \"BucketOwner\"\r\n            tags                        = {\r\n                \"mycompany:finance:accountenvironment\"   = \"xyz-stage\"\r\n                \"mycompany:finance:application\"          = \"ab-platform\"\r\n                \"mycompany:finance:billablebusinessunit\" = \"my-dev\"\r\n                \"name\"                                = \"Cloudtrail logging bucket\"\r\n            }\r\n    \r\n            lifecycle_rule {\r\n                abort_incomplete_multipart_upload_days = 0\r\n                enabled                                = true\r\n                id                                     = \"intu-lifecycle-s3-int-tier\"\r\n                tags                                   = {}\r\n    \r\n                transition {\r\n                    days          = 32\r\n                    storage_class = \"INTELLIGENT_TIERING\"\r\n                }\r\n            }\r\n    \r\n            logging {\r\n                target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n                target_prefix = \"logs/cloudtrail-logging/\"\r\n            }\r\n    \r\n            versioning {\r\n                enabled    = false\r\n                mfa_delete = false\r\n            }\r\n        }\r\n    \r\n      # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket will be updated in-place\r\n      ~ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" {\r\n            bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n            id     = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n          ~ policy = jsonencode(\r\n                {\r\n                  - Statement = [\r\n                      - {\r\n                          - Action    = \"s3:GetBucketAcl\"\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n                          - Sid       = \"AWSCloudTrailAclCheck\"\r\n                        },\r\n                      - {\r\n                          - Action    = \"s3:PutObject\"\r\n                          - Condition = {\r\n                              - StringEquals = {\r\n                                  - s3:x-amz-acl = \"bucket-owner-full-control\"\r\n                                }\r\n                            }\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\"\r\n                          - Sid       = \"AWSCloudTrailWrite\"\r\n                        },\r\n                    ]\r\n                  - Version   = \"2012-10-17\"\r\n                }\r\n            ) -> (known after apply)\r\n        }\r\n    \r\n      # module.buckets.module.access_logging_bucket.aws_s3_bucket.default will be updated in-place\r\n      ~ resource \"aws_s3_bucket\" \"default\" {\r\n          + acl                         = \"log-delivery-write\"\r\n            arn                         = \"arn:aws:s3:::ab-xyz-stage-access-logging-9d8e94ff\"\r\n            bucket                      = \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n            bucket_domain_name          = \"ab-xyz-stage-access-logging-9d8e94ff.s3.amazonaws.com\"\r\n            bucket_regional_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.us-west-2.amazonaws.com\"\r\n          + force_destroy               = false\r\n            hosted_zone_id              = \"Z3BJ6K6RIION7M\"\r\n            id                          = \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n            region                      = \"us-west-2\"\r\n            request_payer               = \"BucketOwner\"\r\n            tags                        = {\r\n                \"mycompany:finance:accountenvironment\"   = \"xyz-stage\"\r\n                \"mycompany:finance:application\"          = \"ab-platform\"\r\n                \"mycompany:finance:billablebusinessunit\" = \"my-dev\"\r\n                \"name\"                                = \"Access logging bucket\"\r\n            }\r\n    \r\n          - grant {\r\n              - permissions = [\r\n                  - \"READ_ACP\",\r\n                  - \"WRITE\",\r\n                ] -> null\r\n              - type        = \"Group\" -> null\r\n              - uri         = \"http://acs.amazonaws.com/groups/s3/LogDelivery\" -> null\r\n            }\r\n          - grant {\r\n              - id          = \"0343271a8c2f184152c171b223945b22ceaf5be5c9b78cf167660600747b5ad8\" -> null\r\n              - permissions = [\r\n                  - \"FULL_CONTROL\",\r\n                ] -> null\r\n              - type        = \"CanonicalUser\" -> null\r\n            }\r\n    \r\n          - lifecycle_rule {\r\n              - abort_incomplete_multipart_upload_days = 0 -> null\r\n              - enabled                                = true -> null\r\n              - id                                     = \"intu-lifecycle-s3-int-tier\" -> null\r\n              - tags                                   = {} -> null\r\n    \r\n              - transition {\r\n                  - days          = 32 -> null\r\n                  - storage_class = \"INTELLIGENT_TIERING\" -> null\r\n                }\r\n            }\r\n    \r\n            versioning {\r\n                enabled    = false\r\n                mfa_delete = false\r\n            }\r\n        }\r\n    \r\n    Plan: 0 to add, 3 to change, 0 to destroy.\r\n\r\n\r\nAs you can see terraform plan output shows Plan: 0 to add, 3 to change, 0 to destroy.\r\n\r\n**My Questions are:**\r\n\r\n 1. Why does it try to remove new `aws_s3_bucket_policy` for `cloudtrail_logging_bucket` even when there is not change in the policy. Pls see the screenshot and TF-code *cloudtrail_bucket.tf* below.\r\nSnippet of Diff of old account-scope (**LEFT**) vs my current remote TF state (**RIGHT**) for cloudtrail_bucket_suffix:[![enter image description here][1]][1]\r\n 2. For the resource where it says `module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply`. It shows `+` sign, does that mean it will modify something here or will just read it as it says.\r\n 3. Why does it show this `module.buckets.module.access_logging_bucket.aws_s3_bucket.default will be updated in-place ~ resource \"aws_s3_bucket\" \"default\"` where it removes the `grant` and `lifecycle_rule`. See below `s3_bucket.tf`\r\n\r\n**TF Code:**\r\n\r\n**cloudtrail_bucket.tf:**\r\n\r\n    data \"aws_caller_identity\" \"current\" {}\r\n    \r\n    resource \"random_id\" \"cloudtrail_bucket_suffix\" {\r\n      keepers = {\r\n        # Keep the suffix per account id / environment\r\n        aws_account_id = \"${data.aws_caller_identity.current.account_id}\"\r\n        env = \"${var.environment}\"\r\n      }\r\n    \r\n      byte_length = \"4\"\r\n    }\r\n    \r\n    \r\n    resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" {\r\n      bucket = \"ab-${var.environment}-cloudtrail-logging-${random_id.cloudtrail_bucket_suffix.hex}\"\r\n      acl = \"private\"\r\n    \r\n      depends_on = [data.template_file.dependencies]\r\n    \r\n      tags = {\r\n        name = \"Cloudtrail logging bucket\"\r\n        \"mycompany:finance:accountenvironment\" = \"${var.environment}\"\r\n        \"mycompany:finance:application\" = \"${module.constants.finance_application}\"\r\n        \"mycompany:finance:billablebusinessunit\" = \"${module.constants.finance_billablebusinessunit}\"\r\n      }\r\n    \r\n      lifecycle {\r\n        ignore_changes = [ \"server_side_encryption_configuration\" ]\r\n      }\r\n    \r\n      logging {\r\n        target_bucket =  \"${module.access_logging_bucket.name}\"\r\n        target_prefix = \"logs/cloudtrail-logging/\"\r\n      }\r\n    \r\n      lifecycle_rule {\r\n        enabled = \"true\"\r\n    \r\n        transition {\r\n          days          = 32\r\n          storage_class = \"INTELLIGENT_TIERING\"\r\n        }\r\n      }\r\n    \r\n    }\r\n    \r\n    resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" {\r\n      bucket = \"${aws_s3_bucket.cloudtrail_logging_bucket.id}\"\r\n      policy = \"${data.aws_iam_policy_document.restrict_access_cloudtrail.json}\"\r\n    }\r\n    \r\n    \r\n    data aws_iam_policy_document \"restrict_access_cloudtrail\" {\r\n    \r\n      statement {\r\n        sid = \"AWSCloudTrailAclCheck\"\r\n        effect = \"Allow\"\r\n        actions = [\"s3:GetBucketAcl\"]\r\n        resources = [ \"${aws_s3_bucket.cloudtrail_logging_bucket.arn}\" ]\r\n        principals {\r\n          identifiers = [\"cloudtrail.amazonaws.com\"]\r\n          type = \"Service\"\r\n        }\r\n    \r\n      }\r\n    \r\n      statement {\r\n        sid = \"AWSCloudTrailWrite\"\r\n        effect = \"Allow\"\r\n        actions = [\"s3:PutObject\"]\r\n        resources = [ \"${aws_s3_bucket.cloudtrail_logging_bucket.arn}/*\" ]\r\n        principals {\r\n          identifiers = [\"cloudtrail.amazonaws.com\"]\r\n          type = \"Service\"\r\n        }\r\n        condition {\r\n          test = \"StringEquals\"\r\n          values = [\"bucket-owner-full-control\"]\r\n          variable = \"s3:x-amz-acl\"\r\n        }\r\n    \r\n      }\r\n    }\r\n\r\n\r\n**s3_bucket.tf**\r\n\r\n    resource \"random_id\" \"bucket_suffix\" {\r\n        keepers = {\r\n            # Keep the suffix per account id / environment\r\n            aws_account_id = \"${data.aws_caller_identity.current.account_id}\"\r\n            env = \"${var.environment}\"\r\n        }\r\n    \r\n        byte_length = \"${var.byte_length}\"\r\n    }\r\n    \r\n    resource \"aws_s3_bucket\" \"default\" {\r\n        bucket = \"ab-${var.environment}-${var.name}-${random_id.bucket_suffix.hex}\"\r\n        acl = \"${var.acl}\"\r\n    \r\n        depends_on = [data.template_file.dependencies]\r\n    \r\n        tags = {\r\n            name = \"${var.name_tag}\"\r\n            \"mycompany:finance:accountenvironment\" = \"${var.environment}\"\r\n            \"mycompany:finance:application\" = \"${module.constants.finance_application}\"\r\n            \"mycompany:finance:billablebusinessunit\" = \"${module.constants.finance_billablebusinessunit}\"\r\n        }\r\n    \r\n        lifecycle {\r\n            ignore_changes = [ \"server_side_encryption_configuration\" ]\r\n        }\r\n    \r\n        logging {\r\n            target_bucket = \"${lookup(var.logging, \"target_bucket\", \"ab-${var.environment}-${var.name}-${random_id.bucket_suffix.hex}\")}\"\r\n            target_prefix = \"logs/${lookup(var.logging, \"target_folder_name\", \"access-logging\")}/\"\r\n        }\r\n    }\r\n\r\n\r\n**My Environment:**\r\n\r\n    Local machine: macOS v10.14.6\r\n    \r\n    Terraform v0.12.29\r\n    + provider.aws v3.14.1\r\n    + provider.null v2.1.2\r\n    + provider.random v2.3.1\r\n    + provider.template v2.1.2\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/ZMTVR.png\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "**My Imports (running from xyz-region-scope directory) and terraform plan:** terraform import module.buckets.random_id.cloudtrail_bucket_suffix cqLFzQ terraform import module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" terraform import module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" terraform import module.buckets.module.access_logging_bucket.aws_s3_bucket.default \"ab-xyz-stage-access-logging-9d8e94ff\" terraform import module.buckets.module.access_logging_bucket.random_id.bucket_suffix nY6U_w terraform import module.encryption.module.data_key.aws_iam_policy.decrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt\" terraform import module.encryption.module.data_key.aws_iam_policy.encrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt\" mycompanymachine:xyz-region-scope kuldeepjain$ ../scripts/terraform.sh xyz-stage plan -no-color + set -o posix + IFS=' ' ++ blhome + BASH_LIB_HOME=/usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT + source /usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT/s3/bucket.sh + main xyz-stage plan -no-color + '[' 3 -lt 2 ']' + local env=xyz-stage + shift + local command=plan + shift ++ get_region xyz-stage ++ local env=xyz-stage ++ shift +++ aws --profile xyz-stage configure get region ++ local region=us-west-2 ++ '[' -z us-west-2 ']' ++ echo us-west-2 + local region=us-west-2 ++ _get_bucket xyz-stage xyz-stage-tfstate ++ local env=xyz-stage ++ shift ++ local name=xyz-stage-tfstate ++ shift +++ _get_bucket_list xyz-stage xyz-stage-tfstate +++ local env=xyz-stage +++ shift +++ local name=xyz-stage-tfstate +++ shift +++ aws --profile xyz-stage --output json s3api list-buckets --query 'Buckets[?contains(Name, `xyz-stage-tfstate`) == `true`].Name' ++ local 'bucket_list=[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ _count_buckets_in_json '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ local 'json=[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ shift +++ echo '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ jq '. | length' ++ local number_of_buckets=1 ++ '[' 1 == 0 ']' ++ '[' 1 -gt 1 ']' +++ echo '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ jq -r '.[0]' ++ local bucket_name=ab-xyz-stage-tfstate-5b8873b8 ++ echo ab-xyz-stage-tfstate-5b8873b8 + local tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 ++ get_config_file xyz-stage us-west-2 ++ local env=xyz-stage ++ shift ++ local region=us-west-2 ++ shift ++ local config_file=config/us-west-2/xyz-stage.tfvars ++ '[' '!' -f config/us-west-2/xyz-stage.tfvars ']' ++ config_file=config/us-west-2/default.tfvars ++ echo config/us-west-2/default.tfvars + local config_file=config/us-west-2/default.tfvars + export TF_DATA_DIR=state/xyz-stage/ + TF_DATA_DIR=state/xyz-stage/ + terraform get + terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color Refreshing Terraform state in-memory prior to plan... ", "keywords": ["policy"]}, {"source": "Text", "text": "The refreshed state will be used to calculate this plan, but will not be persisted to local or remote state storage. module.encryption.module.data_key.data.null_data_source.key: Refreshing state... module.buckets.module.access_logging_bucket.data.template_file.dependencies: Refreshing state... module.buckets.data.template_file.dependencies: Refreshing state... data.aws_caller_identity.current: Refreshing state... module.buckets.module.access_logging_bucket.data.aws_caller_identity.current: Refreshing state... module.encryption.module.data_key.data.aws_kms_alias.default: Refreshing state... module.buckets.data.aws_caller_identity.current: Refreshing state... module.encryption.module.data_key.data.aws_region.current: Refreshing state... module.encryption.module.data_key.data.aws_caller_identity.current: Refreshing state... module.buckets.module.access_logging_bucket.data.aws_kms_alias.encryption_key_alias: Refreshing state... module.buckets.module.access_logging_bucket.random_id.bucket_suffix: Refreshing state... [id=nY6U_w] module.buckets.module.access_logging_bucket.aws_s3_bucket.default: Refreshing state... [id=ab-xyz-stage-access-logging-9d8e94ff] module.buckets.random_id.cloudtrail_bucket_suffix: Refreshing state... [id=cqLFzQ] module.buckets.module.access_logging_bucket.data.template_file.encryption_configuration: Refreshing state... module.encryption.module.data_key.data.aws_iam_policy_document.encrypt: Refreshing state... module.encryption.module.data_key.data.aws_iam_policy_document.decrypt: Refreshing state... module.encryption.module.data_key.aws_iam_policy.decrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt] module.encryption.module.data_key.aws_iam_policy.encrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt] module.buckets.aws_s3_bucket.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd] module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail: Refreshing state... module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd] ------------------------------------------------------------------------ ", "keywords": ["storage", "policy"]}, {"source": "Text", "text": "Resource actions are indicated with the following symbols: + create ~ update in-place <= read (data resources) Terraform will perform the following actions: # module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply # (config refers to values not yet known) <= data \"aws_iam_policy_document\" \"restrict_access_cloudtrail\" { + id = (known after apply) + json = (known after apply) + statement { + actions = [ + \"s3:GetBucketAcl\", ] + effect = \"Allow\" + resources = [ + \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\", ] + sid = \"AWSCloudTrailAclCheck\" + principals { + identifiers = [ + \"cloudtrail.amazonaws.com\", ] + type = \"Service\" } } + statement { + actions = [ + \"s3:PutObject\", ] + effect = \"Allow\" + resources = [ + \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\", ] + sid = \"AWSCloudTrailWrite\" + condition { + test = \"StringEquals\" + values = [ + \"bucket-owner-full-control\", ] + variable = \"s3:x-amz-acl\" } + principals { + identifiers = [ + \"cloudtrail.amazonaws.com\", ] + type = \"Service\" } } } # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket will be updated in-place ~ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" { + acl = \"private\" arn = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" bucket_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\" bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\" + force_destroy = false hosted_zone_id = \"Z3BJ6K6RIION7M\" id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" region = \"us-west-2\" request_payer = \"BucketOwner\" tags = { \"mycompany:finance:accountenvironment\" = \"xyz-stage\" \"mycompany:finance:application\" = \"ab-platform\" \"mycompany:finance:billablebusinessunit\" = \"my-dev\" \"name\" = \"Cloudtrail logging bucket\" } lifecycle_rule { abort_incomplete_multipart_upload_days = 0 enabled = true id = \"intu-lifecycle-s3-int-tier\" tags = {} transition { days = 32 storage_class = \"INTELLIGENT_TIERING\" } } logging { target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" target_prefix = \"logs/cloudtrail-logging/\" } versioning { enabled = false mfa_delete = false } } # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket will be updated in-place ~ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" { bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" ~ policy = jsonencode( { - Statement = [ - { - Action = \"s3:GetBucketAcl\" - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" - Sid = \"AWSCloudTrailAclCheck\" }, - { - Action = \"s3:PutObject\" - Condition = { - StringEquals = { - s3:x-amz-acl = \"bucket-owner-full-control\" } } - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\" - Sid = \"AWSCloudTrailWrite\" }, ] - Version = \"2012-10-17\" } ) -> (known after apply) } # module.buckets.module.access_logging_bucket.aws_s3_bucket.default will be updated in-place ~ resource \"aws_s3_bucket\" \"default\" { + acl = \"log-delivery-write\" arn = \"arn:aws:s3:::ab-xyz-stage-access-logging-9d8e94ff\" bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" bucket_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.amazonaws.com\" bucket_regional_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.us-west-2.amazonaws.com\" + force_destroy = false hosted_zone_id = \"Z3BJ6K6RIION7M\" id = \"ab-xyz-stage-access-logging-9d8e94ff\" region = \"us-west-2\" request_payer = \"BucketOwner\" tags = { \"mycompany:finance:accountenvironment\" = \"xyz-stage\" \"mycompany:finance:application\" = \"ab-platform\" \"mycompany:finance:billablebusinessunit\" = \"my-dev\" \"name\" = \"Access logging bucket\" } - grant { - permissions = [ - \"READ_ACP\", - \"WRITE\", ] -> null - type = \"Group\" -> null - uri = \"http://acs.amazonaws.com/groups/s3/LogDelivery\" -> null } - grant { - id = \"0343271a8c2f184152c171b223945b22ceaf5be5c9b78cf167660600747b5ad8\" -> null - permissions = [ - \"FULL_CONTROL\", ] -> null - type = \"CanonicalUser\" -> null } - lifecycle_rule { - abort_incomplete_multipart_upload_days = 0 -> null - enabled = true -> null - id = \"intu-lifecycle-s3-int-tier\" -> null - tags = {} -> null - transition { - days = 32 -> null - storage_class = \"INTELLIGENT_TIERING\" -> null } } versioning { enabled = false mfa_delete = false } } Plan: 0 to add, 3 to change, 0 to destroy. ", "keywords": ["bill", "policy", "change", "test"]}, {"source": "Text", "text": "As you can see terraform plan output shows Plan: 0 to add, 3 to change, 0 to destroy. **My Questions are:** 1. ", "keywords": ["change"]}, {"source": "Text", "text": "Why does it try to remove new `aws_s3_bucket_policy` for `cloudtrail_logging_bucket` even when there is not change in the policy. ", "keywords": ["policy", "change"]}, {"source": "Text", "text": "See below `s3_bucket.tf` **TF Code:** **cloudtrail_bucket.tf:** data \"aws_caller_identity\" \"current\" {} resource \"random_id\" \"cloudtrail_bucket_suffix\" { keepers = { # Keep the suffix per account id / environment aws_account_id = \"${data.aws_caller_identity.current.account_id}\" env = \"${var.environment}\" } byte_length = \"4\" } resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" { bucket = \"ab-${var.environment}-cloudtrail-logging-${random_id.cloudtrail_bucket_suffix.hex}\" acl = \"private\" depends_on = [data.template_file.dependencies] tags = { name = \"Cloudtrail logging bucket\" \"mycompany:finance:accountenvironment\" = \"${var.environment}\" \"mycompany:finance:application\" = \"${module.constants.finance_application}\" \"mycompany:finance:billablebusinessunit\" = \"${module.constants.finance_billablebusinessunit}\" } lifecycle { ignore_changes = [ \"server_side_encryption_configuration\" ] } logging { target_bucket = \"${module.access_logging_bucket.name}\" target_prefix = \"logs/cloudtrail-logging/\" } lifecycle_rule { enabled = \"true\" transition { days = 32 storage_class = \"INTELLIGENT_TIERING\" } } } resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" { bucket = \"${aws_s3_bucket.cloudtrail_logging_bucket.id}\" policy = \"${data.aws_iam_policy_document.restrict_access_cloudtrail.json}\" } data aws_iam_policy_document \"restrict_access_cloudtrail\" { statement { sid = \"AWSCloudTrailAclCheck\" effect = \"Allow\" actions = [\"s3:GetBucketAcl\"] resources = [ \"${aws_s3_bucket.cloudtrail_logging_bucket.arn}\" ] principals { identifiers = [\"cloudtrail.amazonaws.com\"] type = \"Service\" } } statement { sid = \"AWSCloudTrailWrite\" effect = \"Allow\" actions = [\"s3:PutObject\"] resources = [ \"${aws_s3_bucket.cloudtrail_logging_bucket.arn}/*\" ] principals { identifiers = [\"cloudtrail.amazonaws.com\"] type = \"Service\" } condition { test = \"StringEquals\" values = [\"bucket-owner-full-control\"] variable = \"s3:x-amz-acl\" } } } **s3_bucket.tf** resource \"random_id\" \"bucket_suffix\" { keepers = { # Keep the suffix per account id / environment aws_account_id = \"${data.aws_caller_identity.current.account_id}\" env = \"${var.environment}\" } byte_length = \"${var.byte_length}\" } resource \"aws_s3_bucket\" \"default\" { bucket = \"ab-${var.environment}-${var.name}-${random_id.bucket_suffix.hex}\" acl = \"${var.acl}\" depends_on = [data.template_file.dependencies] tags = { name = \"${var.name_tag}\" \"mycompany:finance:accountenvironment\" = \"${var.environment}\" \"mycompany:finance:application\" = \"${module.constants.finance_application}\" \"mycompany:finance:billablebusinessunit\" = \"${module.constants.finance_billablebusinessunit}\" } lifecycle { ignore_changes = [ \"server_side_encryption_configuration\" ] } logging { target_bucket = \"${lookup(var.logging, \"target_bucket\", \"ab-${var.environment}-${var.name}-${random_id.bucket_suffix.hex}\")}\" target_prefix = \"logs/${lookup(var.logging, \"target_folder_name\", \"access-logging\")}/\" } } **My Environment:** Local machine: macOS v10.14.6 Terraform v0.12.29 + provider.aws v3.14.1 + provider.null v2.1.2 + provider.random v2.3.1 + provider.template v2.1.2 [1]: https://i.stack.imgur.com/ZMTVR.png", "keywords": ["bill", "provider", "policy", "test"]}]}, {"Id": "235129833", "PostHistoryTypeId": "5", "PostId": "64795148", "RevisionGUID": "3b10f3c9-270a-4c66-8c19-7ca11fe3292b", "CreationDate": "2020-11-18T02:27:16.403", "UserId": "948268", "Comment": "fixed type", "Text": "This is a follow-up question to my original question: https://stackoverflow.com/q/64758624/948268\r\n\r\n**Some Background:** We have terraform code to create various AWS resources. Some of these resources are created per AWS account and hence are structured to be stored in a account-scope folder in our project. This was when we were only having one AWS region. Now our application is made multi-region and hence these resources are to be created per region for each AWS account.\r\n\r\nIn order to do that we have now moved these TF scripts to region-scope folder which will be run per region. Since these resources are no longer part of 'account scope' we have removed them from the account scope Terraform state. Now when I try to import these resources to `region scope`\r\n\r\n\r\n**My Imports (running from xyz-region-scope directory) and terraform plan:**\r\n\r\n\r\n    terraform import module.buckets.random_id.cloudtrail_bucket_suffix cqLFzQ\r\n    terraform import module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n    terraform import module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n    terraform import module.buckets.module.access_logging_bucket.aws_s3_bucket.default \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n    terraform import module.buckets.module.access_logging_bucket.random_id.bucket_suffix  nY6U_w\r\n    terraform import module.encryption.module.data_key.aws_iam_policy.decrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt\"\r\n    terraform import module.encryption.module.data_key.aws_iam_policy.encrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt\"\r\n    \r\n    \r\n    mycompanymachine:xyz-region-scope kuldeepjain$ ../scripts/terraform.sh xyz-stage plan -no-color\r\n    + set -o posix\r\n    + IFS='\r\n     '\r\n    ++ blhome\r\n    + BASH_LIB_HOME=/usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT\r\n    + source /usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT/s3/bucket.sh\r\n    + main xyz-stage plan -no-color\r\n    + '[' 3 -lt 2 ']'\r\n    + local env=xyz-stage\r\n    + shift\r\n    + local command=plan\r\n    + shift\r\n    ++ get_region xyz-stage\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    +++ aws --profile xyz-stage configure get region\r\n    ++ local region=us-west-2\r\n    ++ '[' -z us-west-2 ']'\r\n    ++ echo us-west-2\r\n    + local region=us-west-2\r\n    ++ _get_bucket xyz-stage xyz-stage-tfstate\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    ++ local name=xyz-stage-tfstate\r\n    ++ shift\r\n    +++ _get_bucket_list xyz-stage xyz-stage-tfstate\r\n    +++ local env=xyz-stage\r\n    +++ shift\r\n    +++ local name=xyz-stage-tfstate\r\n    +++ shift\r\n    +++ aws --profile xyz-stage --output json s3api list-buckets --query 'Buckets[?contains(Name, `xyz-stage-tfstate`) == `true`].Name'\r\n    ++ local 'bucket_list=[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ _count_buckets_in_json '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ local 'json=[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ shift\r\n    +++ echo '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ jq '. | length'\r\n    ++ local number_of_buckets=1\r\n    ++ '[' 1 == 0 ']'\r\n    ++ '[' 1 -gt 1 ']'\r\n    +++ echo '[\r\n        \"ab-xyz-stage-tfstate-5b8873b8\"\r\n    ]'\r\n    +++ jq -r '.[0]'\r\n    ++ local bucket_name=ab-xyz-stage-tfstate-5b8873b8\r\n    ++ echo ab-xyz-stage-tfstate-5b8873b8\r\n    + local tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8\r\n    ++ get_config_file xyz-stage us-west-2\r\n    ++ local env=xyz-stage\r\n    ++ shift\r\n    ++ local region=us-west-2\r\n    ++ shift\r\n    ++ local config_file=config/us-west-2/xyz-stage.tfvars\r\n    ++ '[' '!' -f config/us-west-2/xyz-stage.tfvars ']'\r\n    ++ config_file=config/us-west-2/default.tfvars\r\n    ++ echo config/us-west-2/default.tfvars\r\n    + local config_file=config/us-west-2/default.tfvars\r\n    + export TF_DATA_DIR=state/xyz-stage/\r\n    + TF_DATA_DIR=state/xyz-stage/\r\n    + terraform get\r\n    + terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color\r\n    Refreshing Terraform state in-memory prior to plan...\r\n    The refreshed state will be used to calculate this plan, but will not be\r\n    persisted to local or remote state storage.\r\n    \r\n    module.encryption.module.data_key.data.null_data_source.key: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.template_file.dependencies: Refreshing state...\r\n    module.buckets.data.template_file.dependencies: Refreshing state...\r\n    data.aws_caller_identity.current: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.aws_caller_identity.current: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_kms_alias.default: Refreshing state...\r\n    module.buckets.data.aws_caller_identity.current: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_region.current: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_caller_identity.current: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.data.aws_kms_alias.encryption_key_alias: Refreshing state...\r\n    module.buckets.module.access_logging_bucket.random_id.bucket_suffix: Refreshing state... [id=nY6U_w]\r\n    module.buckets.module.access_logging_bucket.aws_s3_bucket.default: Refreshing state... [id=ab-xyz-stage-access-logging-9d8e94ff]\r\n    module.buckets.random_id.cloudtrail_bucket_suffix: Refreshing state... [id=cqLFzQ]\r\n    module.buckets.module.access_logging_bucket.data.template_file.encryption_configuration: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_iam_policy_document.encrypt: Refreshing state...\r\n    module.encryption.module.data_key.data.aws_iam_policy_document.decrypt: Refreshing state...\r\n    module.encryption.module.data_key.aws_iam_policy.decrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt]\r\n    module.encryption.module.data_key.aws_iam_policy.encrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt]\r\n    module.buckets.aws_s3_bucket.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd]\r\n    module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail: Refreshing state...\r\n    module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd]\r\n    \r\n    ------------------------------------------------------------------------\r\n    \r\n    An execution plan has been generated and is shown below.\r\n    Resource actions are indicated with the following symbols:\r\n      + create\r\n      ~ update in-place\r\n     <= read (data resources)\r\n    \r\n    Terraform will perform the following actions:\r\n    \r\n    \r\n      # module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply\r\n      # (config refers to values not yet known)\r\n     <= data \"aws_iam_policy_document\" \"restrict_access_cloudtrail\"  {\r\n          + id   = (known after apply)\r\n          + json = (known after apply)\r\n    \r\n          + statement {\r\n              + actions   = [\r\n                  + \"s3:GetBucketAcl\",\r\n                ]\r\n              + effect    = \"Allow\"\r\n              + resources = [\r\n                  + \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\",\r\n                ]\r\n              + sid       = \"AWSCloudTrailAclCheck\"\r\n    \r\n              + principals {\r\n                  + identifiers = [\r\n                      + \"cloudtrail.amazonaws.com\",\r\n                    ]\r\n                  + type        = \"Service\"\r\n                }\r\n            }\r\n          + statement {\r\n              + actions   = [\r\n                  + \"s3:PutObject\",\r\n                ]\r\n              + effect    = \"Allow\"\r\n              + resources = [\r\n                  + \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\",\r\n                ]\r\n              + sid       = \"AWSCloudTrailWrite\"\r\n    \r\n              + condition {\r\n                  + test     = \"StringEquals\"\r\n                  + values   = [\r\n                      + \"bucket-owner-full-control\",\r\n                    ]\r\n                  + variable = \"s3:x-amz-acl\"\r\n                }\r\n    \r\n              + principals {\r\n                  + identifiers = [\r\n                      + \"cloudtrail.amazonaws.com\",\r\n                    ]\r\n                  + type        = \"Service\"\r\n                }\r\n            }\r\n        }\r\n    \r\n      # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket will be updated in-place\r\n      ~ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" {\r\n          + acl                         = \"private\"\r\n            arn                         = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n            bucket                      = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n            bucket_domain_name          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\"\r\n            bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\"\r\n          + force_destroy               = false\r\n            hosted_zone_id              = \"Z3BJ6K6RIION7M\"\r\n            id                          = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n            region                      = \"us-west-2\"\r\n            request_payer               = \"BucketOwner\"\r\n            tags                        = {\r\n                \"mycompany:finance:accountenvironment\"   = \"xyz-stage\"\r\n                \"mycompany:finance:application\"          = \"ab-platform\"\r\n                \"mycompany:finance:billablebusinessunit\" = \"my-dev\"\r\n                \"name\"                                = \"Cloudtrail logging bucket\"\r\n            }\r\n    \r\n            lifecycle_rule {\r\n                abort_incomplete_multipart_upload_days = 0\r\n                enabled                                = true\r\n                id                                     = \"intu-lifecycle-s3-int-tier\"\r\n                tags                                   = {}\r\n    \r\n                transition {\r\n                    days          = 32\r\n                    storage_class = \"INTELLIGENT_TIERING\"\r\n                }\r\n            }\r\n    \r\n            logging {\r\n                target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n                target_prefix = \"logs/cloudtrail-logging/\"\r\n            }\r\n    \r\n            versioning {\r\n                enabled    = false\r\n                mfa_delete = false\r\n            }\r\n        }\r\n    \r\n      # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket will be updated in-place\r\n      ~ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" {\r\n            bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n            id     = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n          ~ policy = jsonencode(\r\n                {\r\n                  - Statement = [\r\n                      - {\r\n                          - Action    = \"s3:GetBucketAcl\"\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\"\r\n                          - Sid       = \"AWSCloudTrailAclCheck\"\r\n                        },\r\n                      - {\r\n                          - Action    = \"s3:PutObject\"\r\n                          - Condition = {\r\n                              - StringEquals = {\r\n                                  - s3:x-amz-acl = \"bucket-owner-full-control\"\r\n                                }\r\n                            }\r\n                          - Effect    = \"Allow\"\r\n                          - Principal = {\r\n                              - Service = \"cloudtrail.amazonaws.com\"\r\n                            }\r\n                          - Resource  = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\"\r\n                          - Sid       = \"AWSCloudTrailWrite\"\r\n                        },\r\n                    ]\r\n                  - Version   = \"2012-10-17\"\r\n                }\r\n            ) -> (known after apply)\r\n        }\r\n    \r\n      # module.buckets.module.access_logging_bucket.aws_s3_bucket.default will be updated in-place\r\n      ~ resource \"aws_s3_bucket\" \"default\" {\r\n          + acl                         = \"log-delivery-write\"\r\n            arn                         = \"arn:aws:s3:::ab-xyz-stage-access-logging-9d8e94ff\"\r\n            bucket                      = \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n            bucket_domain_name          = \"ab-xyz-stage-access-logging-9d8e94ff.s3.amazonaws.com\"\r\n            bucket_regional_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.us-west-2.amazonaws.com\"\r\n          + force_destroy               = false\r\n            hosted_zone_id              = \"Z3BJ6K6RIION7M\"\r\n            id                          = \"ab-xyz-stage-access-logging-9d8e94ff\"\r\n            region                      = \"us-west-2\"\r\n            request_payer               = \"BucketOwner\"\r\n            tags                        = {\r\n                \"mycompany:finance:accountenvironment\"   = \"xyz-stage\"\r\n                \"mycompany:finance:application\"          = \"ab-platform\"\r\n                \"mycompany:finance:billablebusinessunit\" = \"my-dev\"\r\n                \"name\"                                = \"Access logging bucket\"\r\n            }\r\n    \r\n          - grant {\r\n              - permissions = [\r\n                  - \"READ_ACP\",\r\n                  - \"WRITE\",\r\n                ] -> null\r\n              - type        = \"Group\" -> null\r\n              - uri         = \"http://acs.amazonaws.com/groups/s3/LogDelivery\" -> null\r\n            }\r\n          - grant {\r\n              - id          = \"0343271a8c2f184152c171b223945b22ceaf5be5c9b78cf167660600747b5ad8\" -> null\r\n              - permissions = [\r\n                  - \"FULL_CONTROL\",\r\n                ] -> null\r\n              - type        = \"CanonicalUser\" -> null\r\n            }\r\n    \r\n          - lifecycle_rule {\r\n              - abort_incomplete_multipart_upload_days = 0 -> null\r\n              - enabled                                = true -> null\r\n              - id                                     = \"intu-lifecycle-s3-int-tier\" -> null\r\n              - tags                                   = {} -> null\r\n    \r\n              - transition {\r\n                  - days          = 32 -> null\r\n                  - storage_class = \"INTELLIGENT_TIERING\" -> null\r\n                }\r\n            }\r\n    \r\n            versioning {\r\n                enabled    = false\r\n                mfa_delete = false\r\n            }\r\n        }\r\n    \r\n    Plan: 0 to add, 3 to change, 0 to destroy.\r\n\r\n\r\nAs you can see terraform plan output shows Plan: 0 to add, 3 to change, 0 to destroy.\r\n\r\n**My Questions are:**\r\n\r\n 1. Why does it try to remove new `aws_s3_bucket_policy` for `cloudtrail_logging_bucket` even when there is no change in the policy. Pls see the screenshot and TF-code *cloudtrail_bucket.tf* below.\r\nSnippet of Diff of old account-scope (**LEFT**) vs my current remote TF state (**RIGHT**) for cloudtrail_bucket_suffix:[![enter image description here][1]][1]\r\n 2. For the resource where it says `module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply`. It shows `+` sign, does that mean it will modify something here or will just read it as it says.\r\n 3. Why does it show this `module.buckets.module.access_logging_bucket.aws_s3_bucket.default will be updated in-place ~ resource \"aws_s3_bucket\" \"default\"` where it removes the `grant` and `lifecycle_rule`. See below `s3_bucket.tf`\r\n\r\n**TF Code:**\r\n\r\n**cloudtrail_bucket.tf:**\r\n\r\n    data \"aws_caller_identity\" \"current\" {}\r\n    \r\n    resource \"random_id\" \"cloudtrail_bucket_suffix\" {\r\n      keepers = {\r\n        # Keep the suffix per account id / environment\r\n        aws_account_id = \"${data.aws_caller_identity.current.account_id}\"\r\n        env = \"${var.environment}\"\r\n      }\r\n    \r\n      byte_length = \"4\"\r\n    }\r\n    \r\n    \r\n    resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" {\r\n      bucket = \"ab-${var.environment}-cloudtrail-logging-${random_id.cloudtrail_bucket_suffix.hex}\"\r\n      acl = \"private\"\r\n    \r\n      depends_on = [data.template_file.dependencies]\r\n    \r\n      tags = {\r\n        name = \"Cloudtrail logging bucket\"\r\n        \"mycompany:finance:accountenvironment\" = \"${var.environment}\"\r\n        \"mycompany:finance:application\" = \"${module.constants.finance_application}\"\r\n        \"mycompany:finance:billablebusinessunit\" = \"${module.constants.finance_billablebusinessunit}\"\r\n      }\r\n    \r\n      lifecycle {\r\n        ignore_changes = [ \"server_side_encryption_configuration\" ]\r\n      }\r\n    \r\n      logging {\r\n        target_bucket =  \"${module.access_logging_bucket.name}\"\r\n        target_prefix = \"logs/cloudtrail-logging/\"\r\n      }\r\n    \r\n      lifecycle_rule {\r\n        enabled = \"true\"\r\n    \r\n        transition {\r\n          days          = 32\r\n          storage_class = \"INTELLIGENT_TIERING\"\r\n        }\r\n      }\r\n    \r\n    }\r\n    \r\n    resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" {\r\n      bucket = \"${aws_s3_bucket.cloudtrail_logging_bucket.id}\"\r\n      policy = \"${data.aws_iam_policy_document.restrict_access_cloudtrail.json}\"\r\n    }\r\n    \r\n    \r\n    data aws_iam_policy_document \"restrict_access_cloudtrail\" {\r\n    \r\n      statement {\r\n        sid = \"AWSCloudTrailAclCheck\"\r\n        effect = \"Allow\"\r\n        actions = [\"s3:GetBucketAcl\"]\r\n        resources = [ \"${aws_s3_bucket.cloudtrail_logging_bucket.arn}\" ]\r\n        principals {\r\n          identifiers = [\"cloudtrail.amazonaws.com\"]\r\n          type = \"Service\"\r\n        }\r\n    \r\n      }\r\n    \r\n      statement {\r\n        sid = \"AWSCloudTrailWrite\"\r\n        effect = \"Allow\"\r\n        actions = [\"s3:PutObject\"]\r\n        resources = [ \"${aws_s3_bucket.cloudtrail_logging_bucket.arn}/*\" ]\r\n        principals {\r\n          identifiers = [\"cloudtrail.amazonaws.com\"]\r\n          type = \"Service\"\r\n        }\r\n        condition {\r\n          test = \"StringEquals\"\r\n          values = [\"bucket-owner-full-control\"]\r\n          variable = \"s3:x-amz-acl\"\r\n        }\r\n    \r\n      }\r\n    }\r\n\r\n\r\n**s3_bucket.tf**\r\n\r\n    resource \"random_id\" \"bucket_suffix\" {\r\n        keepers = {\r\n            # Keep the suffix per account id / environment\r\n            aws_account_id = \"${data.aws_caller_identity.current.account_id}\"\r\n            env = \"${var.environment}\"\r\n        }\r\n    \r\n        byte_length = \"${var.byte_length}\"\r\n    }\r\n    \r\n    resource \"aws_s3_bucket\" \"default\" {\r\n        bucket = \"ab-${var.environment}-${var.name}-${random_id.bucket_suffix.hex}\"\r\n        acl = \"${var.acl}\"\r\n    \r\n        depends_on = [data.template_file.dependencies]\r\n    \r\n        tags = {\r\n            name = \"${var.name_tag}\"\r\n            \"mycompany:finance:accountenvironment\" = \"${var.environment}\"\r\n            \"mycompany:finance:application\" = \"${module.constants.finance_application}\"\r\n            \"mycompany:finance:billablebusinessunit\" = \"${module.constants.finance_billablebusinessunit}\"\r\n        }\r\n    \r\n        lifecycle {\r\n            ignore_changes = [ \"server_side_encryption_configuration\" ]\r\n        }\r\n    \r\n        logging {\r\n            target_bucket = \"${lookup(var.logging, \"target_bucket\", \"ab-${var.environment}-${var.name}-${random_id.bucket_suffix.hex}\")}\"\r\n            target_prefix = \"logs/${lookup(var.logging, \"target_folder_name\", \"access-logging\")}/\"\r\n        }\r\n    }\r\n\r\n\r\n**My Environment:**\r\n\r\n    Local machine: macOS v10.14.6\r\n    \r\n    Terraform v0.12.29\r\n    + provider.aws v3.14.1\r\n    + provider.null v2.1.2\r\n    + provider.random v2.3.1\r\n    + provider.template v2.1.2\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/ZMTVR.png\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "**My Imports (running from xyz-region-scope directory) and terraform plan:** terraform import module.buckets.random_id.cloudtrail_bucket_suffix cqLFzQ terraform import module.buckets.aws_s3_bucket.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" terraform import module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" terraform import module.buckets.module.access_logging_bucket.aws_s3_bucket.default \"ab-xyz-stage-access-logging-9d8e94ff\" terraform import module.buckets.module.access_logging_bucket.random_id.bucket_suffix nY6U_w terraform import module.encryption.module.data_key.aws_iam_policy.decrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt\" terraform import module.encryption.module.data_key.aws_iam_policy.encrypt \"arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt\" mycompanymachine:xyz-region-scope kuldeepjain$ ../scripts/terraform.sh xyz-stage plan -no-color + set -o posix + IFS=' ' ++ blhome + BASH_LIB_HOME=/usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT + source /usr/local/lib/mycompany/ab/bash_library/0.0.1-SNAPSHOT/s3/bucket.sh + main xyz-stage plan -no-color + '[' 3 -lt 2 ']' + local env=xyz-stage + shift + local command=plan + shift ++ get_region xyz-stage ++ local env=xyz-stage ++ shift +++ aws --profile xyz-stage configure get region ++ local region=us-west-2 ++ '[' -z us-west-2 ']' ++ echo us-west-2 + local region=us-west-2 ++ _get_bucket xyz-stage xyz-stage-tfstate ++ local env=xyz-stage ++ shift ++ local name=xyz-stage-tfstate ++ shift +++ _get_bucket_list xyz-stage xyz-stage-tfstate +++ local env=xyz-stage +++ shift +++ local name=xyz-stage-tfstate +++ shift +++ aws --profile xyz-stage --output json s3api list-buckets --query 'Buckets[?contains(Name, `xyz-stage-tfstate`) == `true`].Name' ++ local 'bucket_list=[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ _count_buckets_in_json '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ local 'json=[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ shift +++ echo '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ jq '. | length' ++ local number_of_buckets=1 ++ '[' 1 == 0 ']' ++ '[' 1 -gt 1 ']' +++ echo '[ \"ab-xyz-stage-tfstate-5b8873b8\" ]' +++ jq -r '.[0]' ++ local bucket_name=ab-xyz-stage-tfstate-5b8873b8 ++ echo ab-xyz-stage-tfstate-5b8873b8 + local tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 ++ get_config_file xyz-stage us-west-2 ++ local env=xyz-stage ++ shift ++ local region=us-west-2 ++ shift ++ local config_file=config/us-west-2/xyz-stage.tfvars ++ '[' '!' -f config/us-west-2/xyz-stage.tfvars ']' ++ config_file=config/us-west-2/default.tfvars ++ echo config/us-west-2/default.tfvars + local config_file=config/us-west-2/default.tfvars + export TF_DATA_DIR=state/xyz-stage/ + TF_DATA_DIR=state/xyz-stage/ + terraform get + terraform plan -var-file=config/us-west-2/default.tfvars -var-file=variables.tfvars -var-file=../globals.tfvars -var profile=xyz-stage -var region=us-west-2 -var tfstate_bucket=ab-xyz-stage-tfstate-5b8873b8 -no-color Refreshing Terraform state in-memory prior to plan... ", "keywords": ["policy"]}, {"source": "Text", "text": "The refreshed state will be used to calculate this plan, but will not be persisted to local or remote state storage. module.encryption.module.data_key.data.null_data_source.key: Refreshing state... module.buckets.module.access_logging_bucket.data.template_file.dependencies: Refreshing state... module.buckets.data.template_file.dependencies: Refreshing state... data.aws_caller_identity.current: Refreshing state... module.buckets.module.access_logging_bucket.data.aws_caller_identity.current: Refreshing state... module.encryption.module.data_key.data.aws_kms_alias.default: Refreshing state... module.buckets.data.aws_caller_identity.current: Refreshing state... module.encryption.module.data_key.data.aws_region.current: Refreshing state... module.encryption.module.data_key.data.aws_caller_identity.current: Refreshing state... module.buckets.module.access_logging_bucket.data.aws_kms_alias.encryption_key_alias: Refreshing state... module.buckets.module.access_logging_bucket.random_id.bucket_suffix: Refreshing state... [id=nY6U_w] module.buckets.module.access_logging_bucket.aws_s3_bucket.default: Refreshing state... [id=ab-xyz-stage-access-logging-9d8e94ff] module.buckets.random_id.cloudtrail_bucket_suffix: Refreshing state... [id=cqLFzQ] module.buckets.module.access_logging_bucket.data.template_file.encryption_configuration: Refreshing state... module.encryption.module.data_key.data.aws_iam_policy_document.encrypt: Refreshing state... module.encryption.module.data_key.data.aws_iam_policy_document.decrypt: Refreshing state... module.encryption.module.data_key.aws_iam_policy.decrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_decrypt] module.encryption.module.data_key.aws_iam_policy.encrypt: Refreshing state... [id=arn:aws:iam::123412341234:policy/ab_data_key_xyz_stage_encrypt] module.buckets.aws_s3_bucket.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd] module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail: Refreshing state... module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket: Refreshing state... [id=ab-xyz-stage-cloudtrail-logging-72a2c5cd] ------------------------------------------------------------------------ ", "keywords": ["storage", "policy"]}, {"source": "Text", "text": "Resource actions are indicated with the following symbols: + create ~ update in-place <= read (data resources) Terraform will perform the following actions: # module.buckets.data.aws_iam_policy_document.restrict_access_cloudtrail will be read during apply # (config refers to values not yet known) <= data \"aws_iam_policy_document\" \"restrict_access_cloudtrail\" { + id = (known after apply) + json = (known after apply) + statement { + actions = [ + \"s3:GetBucketAcl\", ] + effect = \"Allow\" + resources = [ + \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\", ] + sid = \"AWSCloudTrailAclCheck\" + principals { + identifiers = [ + \"cloudtrail.amazonaws.com\", ] + type = \"Service\" } } + statement { + actions = [ + \"s3:PutObject\", ] + effect = \"Allow\" + resources = [ + \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\", ] + sid = \"AWSCloudTrailWrite\" + condition { + test = \"StringEquals\" + values = [ + \"bucket-owner-full-control\", ] + variable = \"s3:x-amz-acl\" } + principals { + identifiers = [ + \"cloudtrail.amazonaws.com\", ] + type = \"Service\" } } } # module.buckets.aws_s3_bucket.cloudtrail_logging_bucket will be updated in-place ~ resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" { + acl = \"private\" arn = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" bucket_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.amazonaws.com\" bucket_regional_domain_name = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd.s3.us-west-2.amazonaws.com\" + force_destroy = false hosted_zone_id = \"Z3BJ6K6RIION7M\" id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" region = \"us-west-2\" request_payer = \"BucketOwner\" tags = { \"mycompany:finance:accountenvironment\" = \"xyz-stage\" \"mycompany:finance:application\" = \"ab-platform\" \"mycompany:finance:billablebusinessunit\" = \"my-dev\" \"name\" = \"Cloudtrail logging bucket\" } lifecycle_rule { abort_incomplete_multipart_upload_days = 0 enabled = true id = \"intu-lifecycle-s3-int-tier\" tags = {} transition { days = 32 storage_class = \"INTELLIGENT_TIERING\" } } logging { target_bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" target_prefix = \"logs/cloudtrail-logging/\" } versioning { enabled = false mfa_delete = false } } # module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket will be updated in-place ~ resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" { bucket = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" id = \"ab-xyz-stage-cloudtrail-logging-72a2c5cd\" ~ policy = jsonencode( { - Statement = [ - { - Action = \"s3:GetBucketAcl\" - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd\" - Sid = \"AWSCloudTrailAclCheck\" }, - { - Action = \"s3:PutObject\" - Condition = { - StringEquals = { - s3:x-amz-acl = \"bucket-owner-full-control\" } } - Effect = \"Allow\" - Principal = { - Service = \"cloudtrail.amazonaws.com\" } - Resource = \"arn:aws:s3:::ab-xyz-stage-cloudtrail-logging-72a2c5cd/*\" - Sid = \"AWSCloudTrailWrite\" }, ] - Version = \"2012-10-17\" } ) -> (known after apply) } # module.buckets.module.access_logging_bucket.aws_s3_bucket.default will be updated in-place ~ resource \"aws_s3_bucket\" \"default\" { + acl = \"log-delivery-write\" arn = \"arn:aws:s3:::ab-xyz-stage-access-logging-9d8e94ff\" bucket = \"ab-xyz-stage-access-logging-9d8e94ff\" bucket_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.amazonaws.com\" bucket_regional_domain_name = \"ab-xyz-stage-access-logging-9d8e94ff.s3.us-west-2.amazonaws.com\" + force_destroy = false hosted_zone_id = \"Z3BJ6K6RIION7M\" id = \"ab-xyz-stage-access-logging-9d8e94ff\" region = \"us-west-2\" request_payer = \"BucketOwner\" tags = { \"mycompany:finance:accountenvironment\" = \"xyz-stage\" \"mycompany:finance:application\" = \"ab-platform\" \"mycompany:finance:billablebusinessunit\" = \"my-dev\" \"name\" = \"Access logging bucket\" } - grant { - permissions = [ - \"READ_ACP\", - \"WRITE\", ] -> null - type = \"Group\" -> null - uri = \"http://acs.amazonaws.com/groups/s3/LogDelivery\" -> null } - grant { - id = \"0343271a8c2f184152c171b223945b22ceaf5be5c9b78cf167660600747b5ad8\" -> null - permissions = [ - \"FULL_CONTROL\", ] -> null - type = \"CanonicalUser\" -> null } - lifecycle_rule { - abort_incomplete_multipart_upload_days = 0 -> null - enabled = true -> null - id = \"intu-lifecycle-s3-int-tier\" -> null - tags = {} -> null - transition { - days = 32 -> null - storage_class = \"INTELLIGENT_TIERING\" -> null } } versioning { enabled = false mfa_delete = false } } Plan: 0 to add, 3 to change, 0 to destroy. ", "keywords": ["bill", "policy", "change", "test"]}, {"source": "Text", "text": "As you can see terraform plan output shows Plan: 0 to add, 3 to change, 0 to destroy. **My Questions are:** 1. ", "keywords": ["change"]}, {"source": "Text", "text": "Why does it try to remove new `aws_s3_bucket_policy` for `cloudtrail_logging_bucket` even when there is no change in the policy. ", "keywords": ["policy", "change"]}, {"source": "Text", "text": "See below `s3_bucket.tf` **TF Code:** **cloudtrail_bucket.tf:** data \"aws_caller_identity\" \"current\" {} resource \"random_id\" \"cloudtrail_bucket_suffix\" { keepers = { # Keep the suffix per account id / environment aws_account_id = \"${data.aws_caller_identity.current.account_id}\" env = \"${var.environment}\" } byte_length = \"4\" } resource \"aws_s3_bucket\" \"cloudtrail_logging_bucket\" { bucket = \"ab-${var.environment}-cloudtrail-logging-${random_id.cloudtrail_bucket_suffix.hex}\" acl = \"private\" depends_on = [data.template_file.dependencies] tags = { name = \"Cloudtrail logging bucket\" \"mycompany:finance:accountenvironment\" = \"${var.environment}\" \"mycompany:finance:application\" = \"${module.constants.finance_application}\" \"mycompany:finance:billablebusinessunit\" = \"${module.constants.finance_billablebusinessunit}\" } lifecycle { ignore_changes = [ \"server_side_encryption_configuration\" ] } logging { target_bucket = \"${module.access_logging_bucket.name}\" target_prefix = \"logs/cloudtrail-logging/\" } lifecycle_rule { enabled = \"true\" transition { days = 32 storage_class = \"INTELLIGENT_TIERING\" } } } resource \"aws_s3_bucket_policy\" \"cloudtrail_logging_bucket\" { bucket = \"${aws_s3_bucket.cloudtrail_logging_bucket.id}\" policy = \"${data.aws_iam_policy_document.restrict_access_cloudtrail.json}\" } data aws_iam_policy_document \"restrict_access_cloudtrail\" { statement { sid = \"AWSCloudTrailAclCheck\" effect = \"Allow\" actions = [\"s3:GetBucketAcl\"] resources = [ \"${aws_s3_bucket.cloudtrail_logging_bucket.arn}\" ] principals { identifiers = [\"cloudtrail.amazonaws.com\"] type = \"Service\" } } statement { sid = \"AWSCloudTrailWrite\" effect = \"Allow\" actions = [\"s3:PutObject\"] resources = [ \"${aws_s3_bucket.cloudtrail_logging_bucket.arn}/*\" ] principals { identifiers = [\"cloudtrail.amazonaws.com\"] type = \"Service\" } condition { test = \"StringEquals\" values = [\"bucket-owner-full-control\"] variable = \"s3:x-amz-acl\" } } } **s3_bucket.tf** resource \"random_id\" \"bucket_suffix\" { keepers = { # Keep the suffix per account id / environment aws_account_id = \"${data.aws_caller_identity.current.account_id}\" env = \"${var.environment}\" } byte_length = \"${var.byte_length}\" } resource \"aws_s3_bucket\" \"default\" { bucket = \"ab-${var.environment}-${var.name}-${random_id.bucket_suffix.hex}\" acl = \"${var.acl}\" depends_on = [data.template_file.dependencies] tags = { name = \"${var.name_tag}\" \"mycompany:finance:accountenvironment\" = \"${var.environment}\" \"mycompany:finance:application\" = \"${module.constants.finance_application}\" \"mycompany:finance:billablebusinessunit\" = \"${module.constants.finance_billablebusinessunit}\" } lifecycle { ignore_changes = [ \"server_side_encryption_configuration\" ] } logging { target_bucket = \"${lookup(var.logging, \"target_bucket\", \"ab-${var.environment}-${var.name}-${random_id.bucket_suffix.hex}\")}\" target_prefix = \"logs/${lookup(var.logging, \"target_folder_name\", \"access-logging\")}/\" } } **My Environment:** Local machine: macOS v10.14.6 Terraform v0.12.29 + provider.aws v3.14.1 + provider.null v2.1.2 + provider.random v2.3.1 + provider.template v2.1.2 [1]: https://i.stack.imgur.com/ZMTVR.png", "keywords": ["bill", "provider", "policy", "test"]}]}], "answers": [{"Id": "65282293", "PostTypeId": "2", "ParentId": "64795148", "CreationDate": "2020-12-14T00:46:29.387", "Score": "0", "Body": "<p>Just answering my own question so that I could mentioned what I did for each question:</p>\n<p>For the <code>2nd question</code> it does not modify anything with <code>terraform apply</code> and simply reads it as it says in the message.</p>\n<p>For my <code>3rd question</code> asked it in a separate SO thread here: <a href=\"http://stackoverflow.com/q/64830489/948268\">Terraform - Updating S3 Access Control: Question on replacing acl with grant</a> and went ahead with the solution I mentioned in the answer there.</p>\n<p>For the <code>1st question</code> it's still not clear why it was showing the diff. I tried  to compare the existing state with <code>terraform state pull</code> and check, why the update is done but it didn't help. But running <code>terraform apply</code> for that went fine and it did not make any change in the policy which is what I expect it to do.</p>\n", "OwnerUserId": "948268", "LastActivityDate": "2020-12-14T00:46:29.387", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "236848373", "PostHistoryTypeId": "2", "PostId": "65282293", "RevisionGUID": "e77aa5cd-75b2-4665-9681-70d3feaae4da", "CreationDate": "2020-12-14T00:46:29.387", "UserId": "948268", "Text": "Just answering my own question so that I could mentioned what I did for each question:\r\n\r\nFor the `2nd question` it does not modify anything with `terraform apply` and simply reads it as it says in the message.\r\n\r\nFor my `3rd question` asked it in a separate SO thread here: [Terraform - Updating S3 Access Control: Question on replacing acl with grant][1] and went ahead with the solution I mentioned in the answer there.\r\n\r\nFor the `1st question` it's still not clear why it was showing the diff. I tried  to compare the existing state with `terraform state pull` and check, why the update is done but it didn't help. But running `terraform apply` for that went fine and it did not make any change in the policy which is what I expect it to do.\r\n\r\n  [1]: http://stackoverflow.com/q/64830489/948268", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "But running `terraform apply` for that went fine and it did not make any change in the policy which is what I expect it to do. [1]: http://stackoverflow.com/q/64830489/948268", "keywords": ["policy", "change"]}]}], "filtered-sentences": [{"source": "Body", "text": "But running terraform apply for that went fine and it did not make any change in the policy which is what I expect it to do.", "keywords": ["policy", "change"]}]}, {"Id": "64795537", "PostTypeId": "2", "ParentId": "64795148", "CreationDate": "2020-11-11T23:11:16.700", "Score": "1", "Body": "<p>Such a difference may be shown, if the terraform-code differs from the imported existing resource. e.g. if someone changed the resource by click-and-point in the AWS management console, without editing/applying the code. terraform import only imports the resource to the tfstate, but does not create terraform code.</p>\n<p>In this sample, you could validate in the AWS console/cli if the S3 bucket &quot;default&quot; actually has logging configured, or not. Acording to the plan, the existing bucket is not configured for logging in AWS, but your TF-code contains this, so it would be changed.</p>\n<p>Are you sure, your TF-code exactly matches all the attributes of the imported resource?</p>\n<p>For further investigation, it would be necessary, that you post the corresponding tf-code as well.</p>\n", "OwnerUserId": "517740", "LastActivityDate": "2020-11-11T23:11:16.700", "CommentCount": "5", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "114563911", "PostId": "64795537", "Score": "0", "Text": "Thanks for your answer. The logging change for that S3 bucket is a known one. Sorry, I didn't mention that earlier. I removed that from the diff. But why other differences?\nI will also post my corresponding TF-code shortly.", "CreationDate": "2020-11-12T00:40:47.200", "UserId": "948268", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "The logging change for that S3 bucket is a known one. ", "keywords": ["change"]}]}, {"Id": "114608756", "PostId": "64795537", "Score": "0", "Text": "If you compare the  attribute \"force_destroy\" on the resource \"aws_s3_bucket\" \"default\", you see that the TF-code doesn't contain this attribute, but its default is false. The imported state contains this attribute - hence the update-in-place. The imported resource contains more attributes than the TF-code. That may happen sometimes while importing resources.", "CreationDate": "2020-11-13T14:16:07.177", "UserId": "517740", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "114618448", "PostId": "64795537", "Score": "0", "Text": "Thanks. I see. But I wonder more about policy update in `module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket will be updated in-place`. Why is that happening?", "CreationDate": "2020-11-13T21:02:11.820", "UserId": "948268", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "But I wonder more about policy update in `module.buckets.aws_s3_bucket_policy.cloudtrail_logging_bucket will be updated in-place`. ", "keywords": ["policy"]}]}, {"Id": "114648395", "PostId": "64795537", "Score": "0", "Text": "you could compare the existing state with `terraform state pull` and check, why the update is done. Maybe the policy was specified inline before, and now it is done by using a policy document", "CreationDate": "2020-11-15T15:05:44.107", "UserId": "517740", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Maybe the policy was specified inline before, and now it is done by using a policy document", "keywords": ["policy"]}]}, {"Id": "114719264", "PostId": "64795537", "Score": "0", "Text": "Not sure why it was showing the difference in the bucket policy but running `terraform apply` for that went fine and it did not make any change in the policy which is what I expect it to do. Thank you for your help @burna", "CreationDate": "2020-11-18T02:17:51.793", "UserId": "948268", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Not sure why it was showing the difference in the bucket policy but running `terraform apply` for that went fine and it did not make any change in the policy which is what I expect it to do. ", "keywords": ["policy", "change"]}]}], "history": [{"Id": "234734586", "PostHistoryTypeId": "2", "PostId": "64795537", "RevisionGUID": "13dae8e7-1dbe-4e81-bc7e-f0951fcb6c79", "CreationDate": "2020-11-11T23:11:16.700", "UserId": "517740", "Text": "Such a difference may be shown, if the terraform-code differs from the imported existing resource. e.g. if someone changed the resource by click-and-point in the AWS management console, without editing/applying the code. terraform import only imports the resource to the tfstate, but does not create terraform code.\r\n\r\nIn this sample, you could validate in the AWS console/cli if the S3 bucket \"default\" actually has logging configured, or not. Acording to the plan, the existing bucket is not configured for logging in AWS, but your TF-code contains this, so it would be changed.\r\n\r\nAre you sure, your TF-code exactly matches all the attributes of the imported resource?\r\n\r\nFor further investigation, it would be necessary, that you post the corresponding tf-code as well.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Such a difference may be shown, if the terraform-code differs from the imported existing resource. e.g. if someone changed the resource by click-and-point in the AWS management console, without editing/applying the code. terraform import only imports the resource to the tfstate, but does not create terraform code. ", "keywords": ["change"]}, {"source": "Text", "text": "Acording to the plan, the existing bucket is not configured for logging in AWS, but your TF-code contains this, so it would be changed. ", "keywords": ["change"]}]}], "filtered-sentences": [{"source": "Body", "text": "Such a difference may be shown, if the terraform-code differs from the imported existing resource. e.g. if someone changed the resource by click-and-point in the AWS management console, without editing/applying the code. terraform import only imports the resource to the tfstate, but does not create terraform code. ", "keywords": ["change"]}, {"source": "Body", "text": "Acording to the plan, the existing bucket is not configured for logging in AWS, but your TF-code contains this, so it would be changed. ", "keywords": ["change"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "Now when I try to import these resources to region scope My Imports (running from xyz-region-scope directory) and terraform plan: As you can see terraform plan output shows Plan: 0 to add, 3 to change, 0 to destroy. ", "keywords": ["change"]}, {"source": "Body", "text": "My Questions are: Why does it try to remove new aws_s3_bucket_policy for cloudtrail_logging_bucket even when there is no change in the policy. ", "keywords": ["policy", "change"]}]}