{"Id": "63835431", "PostTypeId": "1", "CreationDate": "2020-09-10T18:10:54.840", "Score": "1", "ViewCount": "1505", "Body": "<p>I had a question about creating a service on AWS ECS using Terraform, and would appreciate any and all feedback, especially since I'm an AWS newbie.</p>\n<p>I have several services in the same cluster (each service is a machine learning model). The traffic isn't that high, so I would like the same load balancer to route requests to the different services (based on a request header which specifies the model to use).</p>\n<p>I was trying to create the services using Terraform (<a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_service\" rel=\"nofollow noreferrer\">https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_service</a>) but I'm having a hard time understanding the load_balancer configuration. There is no option to choose the ARN or ID of a specific load balancer, which makes me think that a separate Load Balancer is created for each service - and that sounds expensive :)</p>\n<p>Has anyone had any experience with this, who can tell me what is wrong with my reasoning?</p>\n<p>Thanks a lot for reading!</p>\n", "OwnerUserId": "13175395", "LastActivityDate": "2020-10-26T20:00:04.837", "Title": "Terraform - how to use the same load balancer between multiple AWS ecs_service resources?", "Tags": "<amazon-web-services><terraform><amazon-ecs>", "AnswerCount": "1", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "230570574", "PostHistoryTypeId": "2", "PostId": "63835431", "RevisionGUID": "015202de-9c84-4e21-9f41-f6640f096ad2", "CreationDate": "2020-09-10T18:10:54.840", "UserId": "13175395", "Text": "I had a question about creating a service on AWS ECS using Terraform, and would appreciate any and all feedback, especially since I'm an AWS newbie.\r\n\r\nI have several services in the same cluster (each service is a machine learning model). The traffic isn't that high, so I would like the same load balancer to route requests to the different services (based on a request header which specifies the model to use).\r\n\r\nI was trying to create the services using Terraform (https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_service) but I'm having a hard time understanding the load_balancer configuration. There is no option to choose the ARN or ID of a specific load balancer, which makes me think that a separate Load Balancer is created for each service - and that sounds expensive :) \r\n\r\nHas anyone had any experience with this, who can tell me what is wrong with my reasoning? \r\n\r\nThanks a lot for reading!", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I have several services in the same cluster (each service is a machine learning model). ", "keywords": ["cluster"]}, {"source": "Text", "text": "There is no option to choose the ARN or ID of a specific load balancer, which makes me think that a separate Load Balancer is created for each service - and that sounds expensive :) ", "keywords": ["expense"]}]}, {"Id": "230570575", "PostHistoryTypeId": "1", "PostId": "63835431", "RevisionGUID": "015202de-9c84-4e21-9f41-f6640f096ad2", "CreationDate": "2020-09-10T18:10:54.840", "UserId": "13175395", "Text": "Terraform - how to use the same load balancer between multiple AWS ecs_service resources?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "230570576", "PostHistoryTypeId": "3", "PostId": "63835431", "RevisionGUID": "015202de-9c84-4e21-9f41-f6640f096ad2", "CreationDate": "2020-09-10T18:10:54.840", "UserId": "13175395", "Text": "<amazon-web-services><terraform><amazon-ecs>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "63838051", "PostTypeId": "2", "ParentId": "63835431", "CreationDate": "2020-09-10T21:41:30.537", "Score": "3", "Body": "<p>Fred, in the link to the documentation you've posted is the answer, let me walk you through it.</p>\n<p>Here is how two ECS services can use a one Application Load Balancer Graphically:</p>\n<p><a href=\"https://i.stack.imgur.com/kp9Ab.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/kp9Ab.png\" alt=\"ECS Services with one Load Balancer\" /></a></p>\n<p>The below scenario describes the configuration for one of the services, it is analogous for a second one, the only thing you wouldn't need to repeat is the Load Balancer declaration.</p>\n<p>You can define the following:</p>\n<pre><code># First let's define the Application LB\nresource &quot;aws_lb&quot; &quot;unique&quot; {\n  name               = &quot;unique-lb&quot;\n  internal           = false\n  load_balancer_type = &quot;application&quot;\n  ... #the rest of the config goes here\n}\n\n#Now let's create the target group for the service one\nresource &quot;aws_lb_target_group&quot; &quot;serviceonetg&quot; {\n  name     = &quot;tg-for-service-one&quot;\n  port     = 8080 #example value\n  protocol = &quot;HTTP&quot;\n  ...  #the rest of the config goes here\n}\n\n#Now create the link between the LB and the Target Group\n# also will add a rule when to forward the traffic using HTTP path /serviceone\nresource &quot;aws_alb_listener&quot; &quot;alb_serviceone_listener&quot; {  \n  load_balancer_arn = aws_alb.unique.arn # Here is the LB ARN \n  port              = 80\n  protocol          = &quot;HTTP&quot;\n  \n  default_action {    \n    target_group_arn = &quot;${aws_alb_target_group.serviceonetg.arn}&quot; #Here is the TG ARN\n    type             = &quot;forward&quot;  \n  }\n\n  condition {    \n    field  = &quot;path-pattern&quot;    \n    values = [&quot;/serviceone&quot;]  \n  }\n}\n\n#As a last step, you need to link your service with the target group.\nresource &quot;aws_ecs_service&quot; &quot;service_one&quot; {\n  ...  # prior configuration goes here\n  load_balancer {\n    target_group_arn = aws_lb_target_group.serviceonetg.arn # Here you will link the service with the TG\n    container_name   = &quot;myservice1&quot;\n    container_port   = 8080\n  }\n  ...  #the rest of the config goes here\n}\n</code></pre>\n<p>As a side note, I would template the repeating part for the services using data structures in a way you can use <code>count</code> or <code>for_each</code> to describe Target Group, Listeners and Services only once and leaving templating engine do the rest. Basically, follow the DRY principle.</p>\n<p>I hope this can help you.</p>\n", "OwnerUserId": "2399397", "LastEditorUserId": "2399397", "LastEditDate": "2020-10-26T20:00:04.837", "LastActivityDate": "2020-10-26T20:00:04.837", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "230581112", "PostHistoryTypeId": "2", "PostId": "63838051", "RevisionGUID": "ee8dc6b3-47e1-40c7-a29e-963161a13bf5", "CreationDate": "2020-09-10T21:41:30.537", "UserId": "2399397", "Text": "Fred, in the link to the documentation you've posted is the answer, let me walk you through it.\r\n\r\nFirst let's create the scenario: 1 ALB, 2 Services, 2 Target Groups (1 per Service).\r\n\r\nYou can define the following:\r\n\r\n```terraform\r\n# First let's define the Application LB\r\nresource \"aws_lb\" \"unique\" {\r\n  name               = \"unique-lb\"\r\n  internal           = false\r\n  load_balancer_type = \"application\"\r\n  ... #the rest of the config goes here\r\n}\r\n\r\n#Now let's create the target group for the service one\r\nresource \"aws_lb_target_group\" \"serviceonetg\" {\r\n  name     = \"tg-for-service-one\"\r\n  port     = 8080 #example value\r\n  protocol = \"HTTP\"\r\n  ...  #the rest of the config goes here\r\n}\r\n\r\n#Now create the link between the LB and the Target Group\r\n# also will add a rule when to forward the traffic using HTTP path /serviceone\r\nresource \"aws_alb_listener\" \"alb_serviceone_listener\" {  \r\n  load_balancer_arn = aws_alb.unique.arn # Here is the LB ARN \r\n  port              = 80\r\n  protocol          = \"HTTP\"\r\n  \r\n  default_action {    \r\n    target_group_arn = \"${aws_alb_target_group.serviceonetg.arn}\" #Here is the TG ARN\r\n    type             = \"forward\"  \r\n  }\r\n\r\n  condition {    \r\n    field  = \"path-pattern\"    \r\n    values = [\"/serviceone\"]  \r\n  }\r\n}\r\n\r\n#As a last step, you need to link your service with the target group.\r\nresource \"aws_ecs_service\" \"service_one\" {\r\n  ...  # prior configuration goes here\r\n  load_balancer {\r\n    target_group_arn = aws_lb_target_group.serviceonetg.arn # Here you will link the service with the TG\r\n    container_name   = \"myservice1\"\r\n    container_port   = 8080\r\n  }\r\n  ...  #the rest of the config goes here\r\n}\r\n```\r\n\r\nLet us know if this fits you ;)\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "230581564", "PostHistoryTypeId": "5", "PostId": "63838051", "RevisionGUID": "12da97f4-594b-4942-b86f-d3848505dcd5", "CreationDate": "2020-09-10T21:53:37.403", "UserId": "2399397", "Comment": "Extending the information with a graphical explanation.", "Text": "Fred, in the link to the documentation you've posted is the answer, let me walk you through it.\r\n\r\nHere is how two ECS services can use a one Application Load Balancer Graphically:\r\n\r\n[![ECS Services with one Load Balancer][1]][1]\r\n\r\nThe below scenario describes the configuration for one of the services, it is analogous for a second one, the only thing you wouldn't need to repeat is the Load Balancer declaration.\r\n\r\nYou can define the following:\r\n\r\n```terraform\r\n# First let's define the Application LB\r\nresource \"aws_lb\" \"unique\" {\r\n  name               = \"unique-lb\"\r\n  internal           = false\r\n  load_balancer_type = \"application\"\r\n  ... #the rest of the config goes here\r\n}\r\n\r\n#Now let's create the target group for the service one\r\nresource \"aws_lb_target_group\" \"serviceonetg\" {\r\n  name     = \"tg-for-service-one\"\r\n  port     = 8080 #example value\r\n  protocol = \"HTTP\"\r\n  ...  #the rest of the config goes here\r\n}\r\n\r\n#Now create the link between the LB and the Target Group\r\n# also will add a rule when to forward the traffic using HTTP path /serviceone\r\nresource \"aws_alb_listener\" \"alb_serviceone_listener\" {  \r\n  load_balancer_arn = aws_alb.unique.arn # Here is the LB ARN \r\n  port              = 80\r\n  protocol          = \"HTTP\"\r\n  \r\n  default_action {    \r\n    target_group_arn = \"${aws_alb_target_group.serviceonetg.arn}\" #Here is the TG ARN\r\n    type             = \"forward\"  \r\n  }\r\n\r\n  condition {    \r\n    field  = \"path-pattern\"    \r\n    values = [\"/serviceone\"]  \r\n  }\r\n}\r\n\r\n#As a last step, you need to link your service with the target group.\r\nresource \"aws_ecs_service\" \"service_one\" {\r\n  ...  # prior configuration goes here\r\n  load_balancer {\r\n    target_group_arn = aws_lb_target_group.serviceonetg.arn # Here you will link the service with the TG\r\n    container_name   = \"myservice1\"\r\n    container_port   = 8080\r\n  }\r\n  ...  #the rest of the config goes here\r\n}\r\n```\r\n\r\nAs a side note, I would template the repeating part for the services using data structures in a way you can use `count` or `for_each` to describe Target Group, Listeners and Services only once and leaving templating engine do the rest. Basically, follow the DRY philosophy. \r\n\r\nI hope this can help you.\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/8h4Qe.png", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "230642211", "PostHistoryTypeId": "5", "PostId": "63838051", "RevisionGUID": "34ea3722-4cf5-4498-8c79-5ffe842533f2", "CreationDate": "2020-09-11T18:20:26.407", "UserId": "2399397", "Comment": "Better image and Code correlation", "Text": "Fred, in the link to the documentation you've posted is the answer, let me walk you through it.\r\n\r\nHere is how two ECS services can use a one Application Load Balancer Graphically:\r\n\r\n[![ECS Services with one Load Balancer][1]][1]\r\n\r\nThe below scenario describes the configuration for one of the services, it is analogous for a second one, the only thing you wouldn't need to repeat is the Load Balancer declaration.\r\n\r\nYou can define the following:\r\n\r\n```terraform\r\n# First let's define the Application LB\r\nresource \"aws_lb\" \"unique\" {\r\n  name               = \"unique-lb\"\r\n  internal           = false\r\n  load_balancer_type = \"application\"\r\n  ... #the rest of the config goes here\r\n}\r\n\r\n#Now let's create the target group for the service one\r\nresource \"aws_lb_target_group\" \"serviceonetg\" {\r\n  name     = \"tg-for-service-one\"\r\n  port     = 8080 #example value\r\n  protocol = \"HTTP\"\r\n  ...  #the rest of the config goes here\r\n}\r\n\r\n#Now create the link between the LB and the Target Group\r\n# also will add a rule when to forward the traffic using HTTP path /serviceone\r\nresource \"aws_alb_listener\" \"alb_serviceone_listener\" {  \r\n  load_balancer_arn = aws_alb.unique.arn # Here is the LB ARN \r\n  port              = 80\r\n  protocol          = \"HTTP\"\r\n  \r\n  default_action {    \r\n    target_group_arn = \"${aws_alb_target_group.serviceonetg.arn}\" #Here is the TG ARN\r\n    type             = \"forward\"  \r\n  }\r\n\r\n  condition {    \r\n    field  = \"path-pattern\"    \r\n    values = [\"/serviceone\"]  \r\n  }\r\n}\r\n\r\n#As a last step, you need to link your service with the target group.\r\nresource \"aws_ecs_service\" \"service_one\" {\r\n  ...  # prior configuration goes here\r\n  load_balancer {\r\n    target_group_arn = aws_lb_target_group.serviceonetg.arn # Here you will link the service with the TG\r\n    container_name   = \"myservice1\"\r\n    container_port   = 8080\r\n  }\r\n  ...  #the rest of the config goes here\r\n}\r\n```\r\n\r\nAs a side note, I would template the repeating part for the services using data structures in a way you can use `count` or `for_each` to describe Target Group, Listeners and Services only once and leaving templating engine do the rest. Basically, follow the DRY philosophy. \r\n\r\nI hope this can help you.\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/kp9Ab.png\r\n  [2]: https://i.stack.imgur.com/8h4Qe.png", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "233640987", "PostHistoryTypeId": "5", "PostId": "63838051", "RevisionGUID": "37cfed45-b32f-4b93-9e3e-78309b4ea3a0", "CreationDate": "2020-10-26T20:00:04.837", "UserId": "2399397", "Comment": "deleted 1 character in body", "Text": "Fred, in the link to the documentation you've posted is the answer, let me walk you through it.\r\n\r\nHere is how two ECS services can use a one Application Load Balancer Graphically:\r\n\r\n[![ECS Services with one Load Balancer][1]][1]\r\n\r\nThe below scenario describes the configuration for one of the services, it is analogous for a second one, the only thing you wouldn't need to repeat is the Load Balancer declaration.\r\n\r\nYou can define the following:\r\n\r\n```terraform\r\n# First let's define the Application LB\r\nresource \"aws_lb\" \"unique\" {\r\n  name               = \"unique-lb\"\r\n  internal           = false\r\n  load_balancer_type = \"application\"\r\n  ... #the rest of the config goes here\r\n}\r\n\r\n#Now let's create the target group for the service one\r\nresource \"aws_lb_target_group\" \"serviceonetg\" {\r\n  name     = \"tg-for-service-one\"\r\n  port     = 8080 #example value\r\n  protocol = \"HTTP\"\r\n  ...  #the rest of the config goes here\r\n}\r\n\r\n#Now create the link between the LB and the Target Group\r\n# also will add a rule when to forward the traffic using HTTP path /serviceone\r\nresource \"aws_alb_listener\" \"alb_serviceone_listener\" {  \r\n  load_balancer_arn = aws_alb.unique.arn # Here is the LB ARN \r\n  port              = 80\r\n  protocol          = \"HTTP\"\r\n  \r\n  default_action {    \r\n    target_group_arn = \"${aws_alb_target_group.serviceonetg.arn}\" #Here is the TG ARN\r\n    type             = \"forward\"  \r\n  }\r\n\r\n  condition {    \r\n    field  = \"path-pattern\"    \r\n    values = [\"/serviceone\"]  \r\n  }\r\n}\r\n\r\n#As a last step, you need to link your service with the target group.\r\nresource \"aws_ecs_service\" \"service_one\" {\r\n  ...  # prior configuration goes here\r\n  load_balancer {\r\n    target_group_arn = aws_lb_target_group.serviceonetg.arn # Here you will link the service with the TG\r\n    container_name   = \"myservice1\"\r\n    container_port   = 8080\r\n  }\r\n  ...  #the rest of the config goes here\r\n}\r\n```\r\n\r\nAs a side note, I would template the repeating part for the services using data structures in a way you can use `count` or `for_each` to describe Target Group, Listeners and Services only once and leaving templating engine do the rest. Basically, follow the DRY principle. \r\n\r\nI hope this can help you.\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/kp9Ab.png\r\n  [2]: https://i.stack.imgur.com/8h4Qe.png", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I have several services in the same cluster (each service is a machine learning model). ", "keywords": ["cluster"]}, {"source": "Body", "text": "There is no option to choose the ARN or ID of a specific load balancer, which makes me think that a separate Load Balancer is created for each service - and that sounds expensive :) ", "keywords": ["expense"]}]}