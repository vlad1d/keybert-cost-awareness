{"Id": "73539332", "PostTypeId": "1", "AcceptedAnswerId": "73539769", "CreationDate": "2022-08-30T08:28:34.443", "Score": "0", "ViewCount": "264", "Body": "<p>What would be a best-practice to pass the same attributes/parameters to multiple blocks?\nI find myself always duplicating code because of this:</p>\n<pre class=\"lang-json prettyprint-override\"><code>  env              = var.env\n  location         = var.location\n  tags             = local.tags\n  rg_name          = var.rg_name\n  subscription_id  = var.subscription_id\n  service_plan_id  = local.service_plan_id\n  nodejs_version   = var.nodejs_version\n</code></pre>\n<p>Here is a sample of what I currently use:</p>\n<pre class=\"lang-json prettyprint-override\"><code>// development front-end NUXT APP dev\nmodule &quot;nuxt-app&quot; {\n  source = &quot;./nuxt-app&quot;\n\n  env              = var.env\n  name             = &quot;appweb-${var.env}-001&quot;\n  app_service_name = &quot;appweb-${var.env}-001&quot;\n  location         = var.location\n  tags             = local.tags\n  rg_name          = var.rg_name\n  subscription_id  = var.subscription_id\n  service_plan_id  = local.service_plan_id\n  nodejs_version   = var.nodejs_version\n}\n\nmodule &quot;nuxt-app-slot&quot; {\n  source = &quot;./nuxt-app-slot&quot;\n\n  //skip this resource for non-dev environments\n  count = local.prod_only\n\n  env              = var.env\n  name             = &quot;preview&quot;\n  app_service_name = &quot;appweb-${var.env}-001&quot;\n  location         = var.location\n  tags             = local.tags\n  rg_name          = var.rg_name\n  subscription_id  = var.subscription_id\n  service_plan_id  = local.service_plan_id\n  nodejs_version   = var.nodejs_version\n}\n</code></pre>\n<p>My target would be:</p>\n<pre class=\"lang-json prettyprint-override\"><code>// development front-end NUXT APP dev\nmodule &quot;nuxt-app&quot; {\n  source = &quot;./nuxt-app&quot;\n\n  name             = &quot;appweb-${var.env}-001&quot;\n  app_service_name = &quot;appweb-${var.env}-001&quot;\n\n  ...add somehow attributes\n}\n\nmodule &quot;nuxt-app-slot&quot; {\n  source = &quot;./nuxt-app-slot&quot;\n\n  //skip this resource for non-dev environments\n  count = local.prod_only\n\n  name             = &quot;preview&quot;\n  app_service_name = &quot;appweb-${var.env}-001&quot;\n  \n  ...add somehow attributes\n}\n</code></pre>\n", "OwnerUserId": "1346203", "LastActivityDate": "2022-08-30T09:02:17.943", "Title": "Terraform simplify same attributes to multiple blocks", "Tags": "<terraform>", "AnswerCount": "1", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "129862781", "PostId": "73539332", "Score": "0", "Text": "You can set default values for some of the input variables, but if not, I'm not sure if there is a better way. Unless you manage to come to a solution where you have one module and then use `for_each` for example.", "CreationDate": "2022-08-30T08:30:22.373", "UserId": "8343484", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "132322851", "PostId": "73539332", "Score": "0", "Text": "DRY isn't Terraform priority: https://github.com/hashicorp/terraform/issues/5480.", "CreationDate": "2023-01-02T13:42:51.163", "UserId": "5351624", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "links": [{"Id": "1999894458", "CreationDate": "2022-08-30T09:03:30.177", "PostId": "73539332", "RelatedPostId": "64446260", "LinkTypeId": "1"}], "history": [{"Id": "277239440", "PostHistoryTypeId": "2", "PostId": "73539332", "RevisionGUID": "eda5ab88-2969-44a1-8f0f-72599aa77010", "CreationDate": "2022-08-30T08:28:34.443", "UserId": "1346203", "Text": "What would be a best-practice to pass the same attributes/parameters to multiple blocks? \r\nI find myself always duplicating code because of this:\r\n\r\n```json\r\n  env              = var.env\r\n  location         = var.location\r\n  tags             = local.tags\r\n  rg_name          = var.rg_name\r\n  subscription_id  = var.subscription_id\r\n  service_plan_id  = local.service_plan_id\r\n  nodejs_version   = var.nodejs_version\r\n```\r\n\r\n\r\nHere is a sample of what I currently use:\r\n\r\n```json\r\n// development front-end NUXT APP dev\r\nmodule \"nuxt-app\" {\r\n  source = \"./nuxt-app\"\r\n\r\n  env              = var.env\r\n  name             = \"appweb-${var.env}-001\"\r\n  app_service_name = \"appweb-${var.env}-001\"\r\n  location         = var.location\r\n  tags             = local.tags\r\n  rg_name          = var.rg_name\r\n  subscription_id  = var.subscription_id\r\n  service_plan_id  = local.service_plan_id\r\n  nodejs_version   = var.nodejs_version\r\n}\r\n\r\nmodule \"nuxt-app-slot\" {\r\n  source = \"./nuxt-app-slot\"\r\n\r\n  //skip this resource for non-dev environments\r\n  count = local.prod_only\r\n\r\n  env              = var.env\r\n  name             = \"preview\"\r\n  app_service_name = \"appweb-${var.env}-001\"\r\n  location         = var.location\r\n  tags             = local.tags\r\n  rg_name          = var.rg_name\r\n  subscription_id  = var.subscription_id\r\n  service_plan_id  = local.service_plan_id\r\n  nodejs_version   = var.nodejs_version\r\n}\r\n```\r\n\r\nMy target would be:\r\n\r\n```json\r\n// development front-end NUXT APP dev\r\nmodule \"nuxt-app\" {\r\n  source = \"./nuxt-app\"\r\n\r\n  name             = \"appweb-${var.env}-001\"\r\n  app_service_name = \"appweb-${var.env}-001\"\r\n\r\n  ...add somehow attributes\r\n}\r\n\r\nmodule \"nuxt-app-slot\" {\r\n  source = \"./nuxt-app-slot\"\r\n\r\n  //skip this resource for non-dev environments\r\n  count = local.prod_only\r\n\r\n  name             = \"preview\"\r\n  app_service_name = \"appweb-${var.env}-001\"\r\n  \r\n  ...add somehow attributes\r\n}\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "277239442", "PostHistoryTypeId": "1", "PostId": "73539332", "RevisionGUID": "eda5ab88-2969-44a1-8f0f-72599aa77010", "CreationDate": "2022-08-30T08:28:34.443", "UserId": "1346203", "Text": "Terraform simplify same attributes to multiple blocks", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "277239443", "PostHistoryTypeId": "3", "PostId": "73539332", "RevisionGUID": "eda5ab88-2969-44a1-8f0f-72599aa77010", "CreationDate": "2022-08-30T08:28:34.443", "UserId": "1346203", "Text": "<terraform>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "73539769", "PostTypeId": "2", "ParentId": "73539332", "CreationDate": "2022-08-30T09:02:17.943", "Score": "1", "Body": "<p>Assuming you can edit all the modules you're using, you can abstract common properties into a &quot;context object&quot; like so</p>\n<pre><code>locals {\n context = {\n  env              = var.env\n  location         = var.location\n  tags             = local.tags\n  rg_name          = var.rg_name\n  subscription_id  = var.subscription_id\n  service_plan_id  = local.service_plan_id\n  nodejs_version   = var.nodejs_version\n }\n}\n\n// development front-end NUXT APP dev\nmodule &quot;nuxt-app&quot; {\n  source = &quot;./nuxt-app&quot;\n\n  context          = local.context\n  name             = &quot;appweb-${var.env}-001&quot;\n  app_service_name = &quot;appweb-${var.env}-001&quot;\n}\n\nmodule &quot;nuxt-app-slot&quot; {\n  source = &quot;./nuxt-app-slot&quot;\n\n  //skip this resource for non-dev environments\n  count = local.prod_only\n\n  context          = local.context\n  name             = &quot;preview&quot;\n  app_service_name = &quot;appweb-${var.env}-001&quot;\n}\n</code></pre>\n<p>You can declare the variable on your modules like so</p>\n<pre><code>variable &quot;context&quot; {\n  type = (object({\n    env        = string,\n    location   = string,\n    ...\n  }))\n\n}\n\nvariable &quot;billing_users&quot; {\n  description = &quot;The list of users identified by their UPN that shall be granted billing access&quot;\n  type = list(object({\n    email = string,\n    upn   = string,\n  }))\n}\n\n</code></pre>\n<p>An alternative you could wish for is a spread operator, which is unfortunately not in terraform as of today, see e.g. <a href=\"https://stackoverflow.com/questions/64446260/spread-operator-at-terraform-files\">Spread operator at terraform files</a></p>\n", "OwnerUserId": "125407", "LastActivityDate": "2022-08-30T09:02:17.943", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "129887666", "PostId": "73539769", "Score": "0", "Text": "I understand, it's already an improvement to what I have.  Thank you!", "CreationDate": "2022-08-31T08:46:13.517", "UserId": "1346203", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "132321003", "PostId": "73539769", "Score": "0", "Text": "Won't it add a new context field to the module instead of adding all context values at the root level of the module?", "CreationDate": "2023-01-02T11:41:48.213", "UserId": "5351624", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "277241767", "PostHistoryTypeId": "2", "PostId": "73539769", "RevisionGUID": "4bfd0c3e-cc63-4c7d-a634-793690cb38f9", "CreationDate": "2022-08-30T09:02:17.943", "UserId": "125407", "Text": "Assuming you can edit all the modules you're using, you can abstract common properties into a \"context object\" like so\r\n\r\n```hcl\r\nlocals {\r\n context = {\r\n  env              = var.env\r\n  location         = var.location\r\n  tags             = local.tags\r\n  rg_name          = var.rg_name\r\n  subscription_id  = var.subscription_id\r\n  service_plan_id  = local.service_plan_id\r\n  nodejs_version   = var.nodejs_version\r\n }\r\n}\r\n\r\n// development front-end NUXT APP dev\r\nmodule \"nuxt-app\" {\r\n  source = \"./nuxt-app\"\r\n\r\n  context          = local.context\r\n  name             = \"appweb-${var.env}-001\"\r\n  app_service_name = \"appweb-${var.env}-001\"\r\n}\r\n\r\nmodule \"nuxt-app-slot\" {\r\n  source = \"./nuxt-app-slot\"\r\n\r\n  //skip this resource for non-dev environments\r\n  count = local.prod_only\r\n\r\n  context          = local.context\r\n  name             = \"preview\"\r\n  app_service_name = \"appweb-${var.env}-001\"\r\n}\r\n```\r\n\r\nYou can declare the variable on your modules like so \r\n\r\n```hcl\r\nvariable \"context\" {\r\n  type = (object({\r\n    env        = string,\r\n    location   = string,\r\n    ...\r\n  }))\r\n\r\n}\r\n\r\nvariable \"billing_users\" {\r\n  description = \"The list of users identified by their UPN that shall be granted billing access\"\r\n  type = list(object({\r\n    email = string,\r\n    upn   = string,\r\n  }))\r\n}\r\n\r\n```\r\n\r\n\r\nAn alternative you could wish for is a spread operator, which is unfortunately not in terraform as of today, see e.g. https://stackoverflow.com/questions/64446260/spread-operator-at-terraform-files", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Assuming you can edit all the modules you're using, you can abstract common properties into a \"context object\" like so ```hcl locals { context = { env = var.env location = var.location tags = local.tags rg_name = var.rg_name subscription_id = var.subscription_id service_plan_id = local.service_plan_id nodejs_version = var.nodejs_version } } // development front-end NUXT APP dev module \"nuxt-app\" { source = \"./nuxt-app\" context = local.context name = \"appweb-${var.env}-001\" app_service_name = \"appweb-${var.env}-001\" } module \"nuxt-app-slot\" { source = \"./nuxt-app-slot\" //skip this resource for non-dev environments count = local.prod_only context = local.context name = \"preview\" app_service_name = \"appweb-${var.env}-001\" } ``` You can declare the variable on your modules like so ```hcl variable \"context\" { type = (object({ env = string, location = string, ... })) } variable \"billing_users\" { description = \"The list of users identified by their UPN that shall be granted billing access\" type = list(object({ email = string, upn = string, })) } ``` ", "keywords": ["bill"]}]}], "filtered-sentences": []}], "contains-topic": false, "filtered-sentences": []}