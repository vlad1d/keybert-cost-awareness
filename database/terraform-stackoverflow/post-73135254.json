{"Id": "73135254", "PostTypeId": "1", "CreationDate": "2022-07-27T09:15:31.923", "Score": "0", "ViewCount": "819", "Body": "<p>I have an issue in our environment where i cannot add a label to a vm instance in GCP via terraform/terragrunt after creation. We have a google repository that is setup via terraform and we use git to clone and update from a local repository, this will activate a trigger on cloudbuild to push the changes to the repo. We do not use terraform/grunt commands at all. It is all controlled via git. The labels are referenced in our compute module as shown.</p>\n<pre><code>   variable &quot;labels&quot; {\n   description = &quot;Labels to add.&quot;\n   type  = map(string)\n   default = {}\n   }\n</code></pre>\n<p>Ok onto the issue. We have in our environment a mix of lift and shift and native cloud vm instances. We recently decided we wanted to add an additional label in the code to identify if the instance was under terraform control - ie terraform = &quot;true/false&quot;</p>\n<pre><code> labels = {\n    application      = &quot;demo-test&quot;\n    businessunit     = &quot;homes&quot;\n    costcentre       = &quot;90imt&quot;\n    createdby        = &quot;ab&quot;\n    department       = &quot;it&quot;\n    disasterrecovery = &quot;no&quot;\n    environment      = &quot;rnd&quot;\n    contact          = &quot;abriers&quot;\n    terraform        = &quot;false&quot;\n  }\n}\n</code></pre>\n<p>So i add the label and use the usual git commands to add/commit push etc which triggers the cloudbuild as usual. The problem is, the label does not appear in the console when viewing it.</p>\n<p>It's as if cloudbuild or terraform/terragrunt isn't recognising it as a change. I can change the value of a label no problem, but i cannot seem to add or remove a label after the vm has been created.</p>\n<p>It has been suggested to run terraform/terragrunt plan in vs code but as mentioned, this has all been setup to use git so the above commands do not work.</p>\n<p>For example i run terragrunt init in the directory and get this error</p>\n<pre><code>PS C:\\Cloudrepos\\placesforpeople&gt; terragrunt init\ntime=2022-07-27T09:56:27+01:00 level=error msg=Error reading file at path C:/Cloudrepos/placesforpeople/terragrunt.hcl: open C:/Cloudrepos/placesforpeople/terragrunt.hcl: The system cannot find the \nfile specified.\ntime=2022-07-27T09:56:27+01:00 level=error msg=Unable to determine underlying exit code, so Terragrunt will exit with error code 1\nPS C:\\Cloudrepos\\placesforpeople&gt; cd org\nPS C:\\Cloudrepos\\placesforpeople\\org&gt; cd rnd\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd&gt; cd adam_play_area\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area&gt; ls\n\n\n\n\nMode                 LastWriteTime         Length Name\n----                 -------------         ------ ----\nd-----        20/07/2022     14:18                modules\nd-----        20/07/2022     14:18                test_project_001\n\n\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area&gt; cd test_project_001\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001&gt; cd compute\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute&gt; ls\n\n\n    Directory: C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute\n\n\nMode                 LastWriteTime         Length Name\n----                 -------------         ------ ----\nd-----        07/07/2022     15:51                start_stop_schedule\nd-----        20/07/2022     14:18                umig\n-a----        07/07/2022     16:09           1308 .terraform.lock.hcl\n-a----        27/07/2022     09:56           2267 terragrunt.hcl\n\n\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute&gt; terragrunt init    \nInitializing modules...\n- data_disk in ..\\compute_data_disk\n\nInitializing the backend...\n\nSuccessfully configured the backend &quot;gcs&quot;! Terraform will automatically\nuse this backend unless the backend configuration changes.\n\nInitializing provider plugins...\n- Reusing previous version of hashicorp/google from the dependency lock file\n- Reusing previous version of hashicorp/google-beta from the dependency lock file\n\u2577\n\u2502 Warning: Backend configuration ignored\n\u2502\n\u2502   on ..\\compute_data_disk\\backend.tf line 3, in terraform:\n\u2502    3:   backend &quot;gcs&quot; {}\n\u2502\n\u2502 Any selected backend applies to the entire configuration, so Terraform\n\u2502 expects provider configurations only in the root module.\n\u2502\n\u2502 This is a warning rather than an error because it's sometimes convenient to\n\u2502 temporarily call a root module as a child module for testing purposes, but\n\u2502 this backend configuration block will have no effect.\n\u2575\n\n\u2577\n\u2502 Error: Failed to query available provider packages\n\u2502\n\u2502 Could not retrieve the list of available versions for provider\n\u2502 hashicorp/google: could not connect to registry.terraform.io: Failed to\n\u2502 request discovery document: Get\n\u2502 &quot;https://registry.terraform.io/.well-known/terraform.json&quot;: Proxy\n\u2502 Authorization Required\n\u2575\n\n\u2577\n\u2502 Error: Failed to query available provider packages\n\u2502\n\u2502 Could not retrieve the list of available versions for provider\n\u2502 hashicorp/google-beta: could not connect to registry.terraform.io: Failed\n\u2502 to request discovery document: Get\n\u2502 &quot;https://registry.terraform.io/.well-known/terraform.json&quot;: Proxy\n\u2502 Authorization Required\n\u2575\n\ntime=2022-07-27T09:57:40+01:00 level=error msg=Hit multiple errors:\nHit multiple errors:\nexit status 1\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute&gt;\n</code></pre>\n<p>But as mentioned, we dont use and have never used these commands to push the changes.\nI cannot work out why these labels wont add/remove after the vm has already been created.</p>\n<p>I have tried making a change to an instance to trigger the change such as increase the disk size.\nI have tried to create a block in the module for all the labels needed but this doesn't work as you cannot have labels as a block in this module.</p>\n<pre><code> labels {\n    application      = var.labels.application\n    businessunit     = var.labels.businessunit\n    costcentre       = var.labels.costcentre\n    createdby        = var.labels.createdby\n    department       = var.labels.department\n    disasterrecovery = var.labels.disasterrecovery\n    environment      = var.labels.environment\n    contact          = var.labels.contact\n    terraform        = var.labels.terraform\n  }\n}\n</code></pre>\n<p>Any ideas? I know you cannot add a label to a project post creation, does the same apply to vm instances? Is there any alternative method i can test?</p>\n<p>As requested this is the code for the vm instance</p>\n<pre><code>terraform {\n  source = &quot;../../modules//compute_instance_static_ip/&quot;\n}\n\n# Include all settings from the root terragrunt.hcl file\ninclude {\n  path = find_in_parent_folders(&quot;org.hcl&quot;)\n}\n\ndependency &quot;project&quot; {\n  config_path = &quot;../project&quot;\n\n  # Configure mock outputs for the terraform commands that are returned when there are no outputs available (e.g the\n  # module hasn't been applied yet.\n  mock_outputs_allowed_terraform_commands = [&quot;plan&quot;, &quot;validate&quot;]\n  mock_outputs = {\n    project_id = &quot;project-not-created-yet&quot;\n  }\n}\n\nprevent_destroy = false\n\ninputs = {\n\n  gcp_instance_sa_email = &quot;testprj-compute@gc-r-prj-testprj-0001-9627.iam.gserviceaccount.com&quot; # This well tell gcp to use the default GCE service account\n  instance_name         = &quot;rnd-demo-test1&quot;\n  network               = &quot;projects/gc-a-prj-vpchost-0001-3312/global/networks/gc-r-vpc-0001&quot;\n  subnetwork            = &quot;projects/gc-a-prj-vpchost-0001-3312/regions/europe-west2/subnetworks/gc-r-snet-middleware-0001&quot;\n  zone                  = &quot;europe-west2-c&quot;\n  region                = &quot;europe-west2&quot;\n  project               =  dependency.project.outputs.project_id\n  os_image              = &quot;debian-10-buster-v20220118&quot;\n  machine_type          = &quot;n1-standard-4&quot;\n  boot_disk_size        = 100\n  instance_scope        = [&quot;cloud-platform&quot;]\n  instance_tags         = [&quot;demo-test&quot;]\n  deletion_protection   = &quot;false&quot;\n\n  metadata = {\n    windows-startup-script-ps1 = &quot;Set-TimeZone -Id 'GMT Standard Time' -PassThru&quot;\n  }\n\n  ip_address_region     = &quot;europe-west2&quot;\n  ip_address_type       = &quot;INTERNAL&quot;\n\n  attached_disks = {\n    data = {\n      size = 60\n      type = &quot;pd-standard&quot;\n    }\n  }\n /*/ instance_schedule_policy  = {\n\n  name               = &quot;start-stop&quot;\n  #region                    = &quot;europe-west2&quot;\n  vm_start_schedule         = &quot;30 07 * * *&quot;\n  vm_stop_schedule          = &quot;00 18 * * *&quot;\n  time_zone                 = &quot;GMT&quot;\n  }\n*/\n  labels = {\n    application      = &quot;demo-test&quot;\n    businessunit     = &quot;homes&quot;\n    costcentre       = &quot;90imt&quot;\n    createdby        = &quot;ab&quot;\n    department       = &quot;it&quot;\n    disasterrecovery = &quot;no&quot;\n    environment      = &quot;rnd&quot;\n    contact          = &quot;abriers&quot;\n    terraform        = &quot;false&quot;\n  }\n}\n</code></pre>\n<p>terragrunt validate-inputs result below</p>\n<pre><code>PS C:\\Cloudrepos\\placesforpeople\\org\\rnd&gt; terragrunt validate-inputs\ntime=2022-07-27T14:25:19+01:00 level=warning msg=The following inputs passed in by terragrunt are unused:\n prefix=[C:\\Cloudrepos\\placesforpeople\\org\\rnd]\ntime=2022-07-27T14:25:19+01:00 level=warning msg=       - billing_account prefix=[C:\\Cloudrepos\\placesforpeople\\org\\rnd]\ntime=2022-07-27T14:25:19+01:00 level=warning msg=       - host_project_id prefix=[C:\\Cloudrepos\\placesforpeople\\org\\rnd]\ntime=2022-07-27T14:25:19+01:00 level=warning prefix=[C:\\Cloudrepos\\placesforpeople\\org\\rnd]\ntime=2022-07-27T14:25:19+01:00 level=info msg=All required inputs are passed in by terragrunt. prefix=[C:\\Cloudrepos\\placesforpeople\\org\\rnd]\ntime=2022-07-27T14:25:19+01:00 level=error msg=Terragrunt configuration has misaligned inputs\ntime=2022-07-27T14:25:19+01:00 level=error msg=Unable to determine underlying exit code, so Terragrunt will exit with error code 1\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd&gt;\n</code></pre>\n", "OwnerUserId": "5166962", "LastEditorUserId": "5166962", "LastEditDate": "2022-07-27T13:32:49.157", "LastActivityDate": "2022-07-27T14:44:34.273", "Title": "How to add a label to my vm instance in gcp via terraform/terragrunt", "Tags": "<terraform><virtual-machine><instance><terraform-provider-gcp><terragrunt>", "AnswerCount": "1", "CommentCount": "9", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "129167652", "PostId": "73135254", "Score": "2", "Text": "Please add all screenshots as blocks of code.", "CreationDate": "2022-07-27T09:18:35.187", "UserId": "8343484", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "129167905", "PostId": "73135254", "Score": "1", "Text": "Do not post as screenshots, but use properly formatted code blocks.", "CreationDate": "2022-07-27T09:29:52.177", "UserId": "248823", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "129168153", "PostId": "73135254", "Score": "0", "Text": "Apologies, i have amended.", "CreationDate": "2022-07-27T09:40:54.210", "UserId": "5166962", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "129169624", "PostId": "73135254", "Score": "0", "Text": "Is there any output in the Cloudbuild run where it says what will be changed/added?", "CreationDate": "2022-07-27T10:40:32.097", "UserId": "8343484", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Is there any output in the Cloudbuild run where it says what will be changed/added?", "keywords": ["change"]}]}, {"Id": "129169652", "PostId": "73135254", "Score": "0", "Text": "Hi, i just checked again and absolutely nothing for output for this project.", "CreationDate": "2022-07-27T10:41:37.670", "UserId": "5166962", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "129170555", "PostId": "73135254", "Score": "0", "Text": "Can you add the VM part of code to the question?", "CreationDate": "2022-07-27T11:19:25.020", "UserId": "8343484", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "129171967", "PostId": "73135254", "Score": "0", "Text": "Added to the bottom of the post.", "CreationDate": "2022-07-27T12:19:55.213", "UserId": "5166962", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "129173209", "PostId": "73135254", "Score": "0", "Text": "What happens if you do `terragrunt validate-inputs`?", "CreationDate": "2022-07-27T13:06:38.560", "UserId": "8343484", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "129173903", "PostId": "73135254", "Score": "0", "Text": "Added validate-inputs code to the original post.", "CreationDate": "2022-07-27T13:33:32.743", "UserId": "5166962", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "275045969", "PostHistoryTypeId": "2", "PostId": "73135254", "RevisionGUID": "eb783489-28cb-42c5-b425-12907c16cb80", "CreationDate": "2022-07-27T09:15:31.923", "UserId": "5166962", "Text": "I have an issue in our environment where i cannot add a label to a vm instance in GCP via terraform/terragrunt after creation. We have a google repository that is setup via terraform and we use git to clone and update from a local repository, this will activate a trigger on cloudbuild to push the changes to the repo. We do not use terraform/grunt commands at all. It is all controlled via git. The labels are referenced in our compute module as shown.\r\n[![enter image description here][1]][1]\r\n\r\n[![enter image description here][2]][2]\r\n\r\n[![enter image description here][3]][3]\r\n\r\n\r\nOk onto the issue. We have in our environment a mix of lift and shift and native cloud vm instances. We recently decided we wanted to add an additional label in the code to identify if the instance was under terraform control - ie terraform = \"true/false\"\r\n\r\n[![Our current label block][4]][4]\r\n\r\n\r\nSo i add the label and use the usual git commands to add/commit push etc which triggers the cloudbuild as usual. The problem is, the label does not appear in the console when viewing it.\r\n[![enter image description here][5]][5] \r\n\r\nIt's as if cloudbuild or terraform/terragrunt isn't recognising it as a change. I can change the value of a label no problem, but i cannot seem to add or remove a label after the vm has been created.\r\n\r\n\r\nIt has been suggested to run terraform/terragrunt plan in vs code but as mentioned, this has all been setup to use git so the above commands do not work.\r\n\r\nFor example i run terragrunt init in the directory and get this error\r\n[![enter image description here][6]][6]\r\n\r\n\r\nBut as mentioned, we dont use and have never used these commands to push the changes.\r\nI cannot work out why these labels wont add/remove after the vm has already been created. \r\n\r\n\r\nI have tried making a change to an instance to trigger the change such as increase the disk size.\r\nI have tried to create a block in the module for all the labels needed but this doesn't work as you cannot have labels as a block in this module.\r\n\r\nAny ideas? I know you cannot add a label to a project post creation, does the same apply to vm instances? Is there any alternative method i can test?\r\n\r\n\r\n[![enter image description here][7]][7]\r\n[![enter image description here][8]][8]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/JLILs.png\r\n  [2]: https://i.stack.imgur.com/cyyrZ.png\r\n  [3]: https://i.stack.imgur.com/jocsp.png\r\n  [4]: https://i.stack.imgur.com/ooGdx.png\r\n  [5]: https://i.stack.imgur.com/Nnalo.png\r\n  [6]: https://i.stack.imgur.com/sOsnl.png\r\n  [7]: https://i.stack.imgur.com/vQPtc.png\r\n  [8]: https://i.stack.imgur.com/pRnok.png", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I have an issue in our environment where i cannot add a label to a vm instance in GCP via terraform/terragrunt after creation. ", "keywords": ["instance"]}, {"source": "Text", "text": "We have a google repository that is setup via terraform and we use git to clone and update from a local repository, this will activate a trigger on cloudbuild to push the changes to the repo. ", "keywords": ["change"]}, {"source": "Text", "text": "We recently decided we wanted to add an additional label in the code to identify if the instance was under terraform control - ie terraform = \"true/false\" [![Our current label block][4]][4] ", "keywords": ["instance"]}, {"source": "Text", "text": "It's as if cloudbuild or terraform/terragrunt isn't recognising it as a change. ", "keywords": ["change"]}, {"source": "Text", "text": "I can change the value of a label no problem, but i cannot seem to add or remove a label after the vm has been created. ", "keywords": ["change"]}, {"source": "Text", "text": "But as mentioned, we dont use and have never used these commands to push the changes. ", "keywords": ["change"]}, {"source": "Text", "text": "I have tried making a change to an instance to trigger the change such as increase the disk size. ", "keywords": ["instance", "change"]}, {"source": "Text", "text": "Is there any alternative method i can test? [![enter image description here][7]][7] [![enter image description here][8]][8] [1]: https://i.stack.imgur.com/JLILs.png [2]: https://i.stack.imgur.com/cyyrZ.png [3]: https://i.stack.imgur.com/jocsp.png [4]: https://i.stack.imgur.com/ooGdx.png [5]: https://i.stack.imgur.com/Nnalo.png [6]: https://i.stack.imgur.com/sOsnl.png [7]: https://i.stack.imgur.com/vQPtc.png [8]: https://i.stack.imgur.com/pRnok.png", "keywords": ["test"]}]}, {"Id": "275045971", "PostHistoryTypeId": "1", "PostId": "73135254", "RevisionGUID": "eb783489-28cb-42c5-b425-12907c16cb80", "CreationDate": "2022-07-27T09:15:31.923", "UserId": "5166962", "Text": "How tod add a label to my vm instance in gcp via terraform/terragrunt", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "How tod add a label to my vm instance in gcp via terraform/terragrunt", "keywords": ["instance"]}]}, {"Id": "275045972", "PostHistoryTypeId": "3", "PostId": "73135254", "RevisionGUID": "eb783489-28cb-42c5-b425-12907c16cb80", "CreationDate": "2022-07-27T09:15:31.923", "UserId": "5166962", "Text": "<terraform><virtual-machine><instance><terraform-provider-gcp><terragrunt>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "275046420", "PostHistoryTypeId": "4", "PostId": "73135254", "RevisionGUID": "8cea74f7-6f79-42bc-876c-41842ab9b4b9", "CreationDate": "2022-07-27T09:22:01.680", "UserId": "5166962", "Comment": "edited title", "Text": "How to add a label to my vm instance in gcp via terraform/terragrunt", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "How to add a label to my vm instance in gcp via terraform/terragrunt", "keywords": ["instance"]}]}, {"Id": "275047653", "PostHistoryTypeId": "5", "PostId": "73135254", "RevisionGUID": "0b50dbfa-44e9-43f9-a932-33a285e97e9d", "CreationDate": "2022-07-27T09:38:00.117", "UserId": "5166962", "Comment": "added 4370 characters in body", "Text": "I have an issue in our environment where i cannot add a label to a vm instance in GCP via terraform/terragrunt after creation. We have a google repository that is setup via terraform and we use git to clone and update from a local repository, this will activate a trigger on cloudbuild to push the changes to the repo. We do not use terraform/grunt commands at all. It is all controlled via git. The labels are referenced in our compute module as shown.\r\n```\r\n   variable \"labels\" {\r\n   description = \"Labels to add.\"\r\n   type  = map(string)\r\n   default = {}\r\n   }\r\n```\r\n\r\nOk onto the issue. We have in our environment a mix of lift and shift and native cloud vm instances. We recently decided we wanted to add an additional label in the code to identify if the instance was under terraform control - ie terraform = \"true/false\"\r\n```\r\n labels = {\r\n    application      = \"demo-test\"\r\n    businessunit     = \"homes\"\r\n    costcentre       = \"90imt\"\r\n    createdby        = \"ab\"\r\n    department       = \"it\"\r\n    disasterrecovery = \"no\"\r\n    environment      = \"rnd\"\r\n    contact          = \"abriers\"\r\n    terraform        = \"false\"\r\n  }\r\n}\r\n```\r\n\r\nSo i add the label and use the usual git commands to add/commit push etc which triggers the cloudbuild as usual. The problem is, the label does not appear in the console when viewing it.\r\n\r\nIt's as if cloudbuild or terraform/terragrunt isn't recognising it as a change. I can change the value of a label no problem, but i cannot seem to add or remove a label after the vm has been created.\r\n\r\n\r\nIt has been suggested to run terraform/terragrunt plan in vs code but as mentioned, this has all been setup to use git so the above commands do not work.\r\n\r\nFor example i run terragrunt init in the directory and get this error\r\n```\r\nPS C:\\Cloudrepos\\placesforpeople> terragrunt init\r\ntime=2022-07-27T09:56:27+01:00 level=error msg=Error reading file at path C:/Cloudrepos/placesforpeople/terragrunt.hcl: open C:/Cloudrepos/placesforpeople/terragrunt.hcl: The system cannot find the \r\nfile specified.\r\ntime=2022-07-27T09:56:27+01:00 level=error msg=Unable to determine underlying exit code, so Terragrunt will exit with error code 1\r\nPS C:\\Cloudrepos\\placesforpeople> cd org\r\nPS C:\\Cloudrepos\\placesforpeople\\org> cd rnd\r\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd> cd adam_play_area\r\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area> ls\r\n\r\n\r\n\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nd-----        20/07/2022     14:18                modules\r\nd-----        20/07/2022     14:18                test_project_001\r\n\r\n\r\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area> cd test_project_001\r\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001> cd compute\r\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute> ls\r\n\r\n\r\n    Directory: C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute\r\n\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nd-----        07/07/2022     15:51                start_stop_schedule\r\nd-----        20/07/2022     14:18                umig\r\n-a----        07/07/2022     16:09           1308 .terraform.lock.hcl\r\n-a----        27/07/2022     09:56           2267 terragrunt.hcl\r\n\r\n\r\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute> terragrunt init    \r\nInitializing modules...\r\n- data_disk in ..\\compute_data_disk\r\n\r\nInitializing the backend...\r\n\r\nSuccessfully configured the backend \"gcs\"! Terraform will automatically\r\nuse this backend unless the backend configuration changes.\r\n\r\nInitializing provider plugins...\r\n- Reusing previous version of hashicorp/google from the dependency lock file\r\n- Reusing previous version of hashicorp/google-beta from the dependency lock file\r\n\u2577\r\n\u2502 Warning: Backend configuration ignored\r\n\u2502\r\n\u2502   on ..\\compute_data_disk\\backend.tf line 3, in terraform:\r\n\u2502    3:   backend \"gcs\" {}\r\n\u2502\r\n\u2502 Any selected backend applies to the entire configuration, so Terraform\r\n\u2502 expects provider configurations only in the root module.\r\n\u2502\r\n\u2502 This is a warning rather than an error because it's sometimes convenient to\r\n\u2502 temporarily call a root module as a child module for testing purposes, but\r\n\u2502 this backend configuration block will have no effect.\r\n\u2575\r\n\r\n\u2577\r\n\u2502 Error: Failed to query available provider packages\r\n\u2502\r\n\u2502 Could not retrieve the list of available versions for provider\r\n\u2502 hashicorp/google: could not connect to registry.terraform.io: Failed to\r\n\u2502 request discovery document: Get\r\n\u2502 \"https://registry.terraform.io/.well-known/terraform.json\": Proxy\r\n\u2502 Authorization Required\r\n\u2575\r\n\r\n\u2577\r\n\u2502 Error: Failed to query available provider packages\r\n\u2502\r\n\u2502 Could not retrieve the list of available versions for provider\r\n\u2502 hashicorp/google-beta: could not connect to registry.terraform.io: Failed\r\n\u2502 to request discovery document: Get\r\n\u2502 \"https://registry.terraform.io/.well-known/terraform.json\": Proxy\r\n\u2502 Authorization Required\r\n\u2575\r\n\r\ntime=2022-07-27T09:57:40+01:00 level=error msg=Hit multiple errors:\r\nHit multiple errors:\r\nexit status 1\r\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute>\r\n```\r\n\r\nBut as mentioned, we dont use and have never used these commands to push the changes.\r\nI cannot work out why these labels wont add/remove after the vm has already been created. \r\n\r\n\r\nI have tried making a change to an instance to trigger the change such as increase the disk size.\r\nI have tried to create a block in the module for all the labels needed but this doesn't work as you cannot have labels as a block in this module.\r\n```\r\n labels {\r\n    application      = var.labels.application\r\n    businessunit     = var.labels.businessunit\r\n    costcentre       = var.labels.costcentre\r\n    createdby        = var.labels.createdby\r\n    department       = var.labels.department\r\n    disasterrecovery = var.labels.disasterrecovery\r\n    environment      = var.labels.environment\r\n    contact          = var.labels.contact\r\n    terraform        = var.labels.terraform\r\n  }\r\n}\r\n```\r\n\r\nAny ideas? I know you cannot add a label to a project post creation, does the same apply to vm instances? Is there any alternative method i can test?\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I have an issue in our environment where i cannot add a label to a vm instance in GCP via terraform/terragrunt after creation. ", "keywords": ["instance"]}, {"source": "Text", "text": "We have a google repository that is setup via terraform and we use git to clone and update from a local repository, this will activate a trigger on cloudbuild to push the changes to the repo. ", "keywords": ["change"]}, {"source": "Text", "text": "We recently decided we wanted to add an additional label in the code to identify if the instance was under terraform control - ie terraform = \"true/false\" ``` labels = { application = \"demo-test\" businessunit = \"homes\" costcentre = \"90imt\" createdby = \"ab\" department = \"it\" disasterrecovery = \"no\" environment = \"rnd\" contact = \"abriers\" terraform = \"false\" } } ``` ", "keywords": ["instance", "test"]}, {"source": "Text", "text": "It's as if cloudbuild or terraform/terragrunt isn't recognising it as a change. ", "keywords": ["change"]}, {"source": "Text", "text": "I can change the value of a label no problem, but i cannot seem to add or remove a label after the vm has been created. ", "keywords": ["change"]}, {"source": "Text", "text": "time=2022-07-27T09:56:27+01:00 level=error msg=Unable to determine underlying exit code, so Terragrunt will exit with error code 1 PS C:\\Cloudrepos\\placesforpeople> cd org PS C:\\Cloudrepos\\placesforpeople\\org> cd rnd PS C:\\Cloudrepos\\placesforpeople\\org\\rnd> cd adam_play_area PS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area> ls Mode LastWriteTime Length Name ---- ------------- ------ ---- d----- 20/07/2022 14:18 modules d----- 20/07/2022 14:18 test_project_001 PS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area> cd test_project_001 PS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001> cd compute PS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute> ls Directory: C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute Mode LastWriteTime Length Name ---- ------------- ------ ---- d----- 07/07/2022 15:51 start_stop_schedule d----- 20/07/2022 14:18 umig -a---- 07/07/2022 16:09 1308 .terraform.lock.hcl -a---- 27/07/2022 09:56 2267 terragrunt.hcl PS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute> terragrunt init Initializing modules... - data_disk in ..\\compute_data_disk Initializing the backend... ", "keywords": ["billing mode", "test"]}, {"source": "Text", "text": "Terraform will automatically use this backend unless the backend configuration changes. ", "keywords": ["change"]}, {"source": "Text", "text": "Initializing provider plugins... - Reusing previous version of hashicorp/google from the dependency lock file - Reusing previous version of hashicorp/google-beta from the dependency lock file \u2577 \u2502 Warning: Backend configuration ignored \u2502 \u2502 on ..\\compute_data_disk\\backend.tf line 3, in terraform: \u2502 3: backend \"gcs\" {} \u2502 \u2502 Any selected backend applies to the entire configuration, so Terraform \u2502 expects provider configurations only in the root module. \u2502 \u2502 This is a warning rather than an error because it's sometimes convenient to \u2502 temporarily call a root module as a child module for testing purposes, but \u2502 this backend configuration block will have no effect. ", "keywords": ["provider", "test"]}, {"source": "Text", "text": "\u2575 \u2577 \u2502 Error: Failed to query available provider packages \u2502 \u2502 Could not retrieve the list of available versions for provider \u2502 hashicorp/google: could not connect to registry.terraform.io: Failed to \u2502 request discovery document: Get \u2502 \"https://registry.terraform.io/.well-known/terraform.json\": Proxy \u2502 Authorization Required \u2575 \u2577 \u2502 Error: Failed to query available provider packages \u2502 \u2502 Could not retrieve the list of available versions for provider \u2502 hashicorp/google-beta: could not connect to registry.terraform.io: Failed \u2502 to request discovery document: Get \u2502 \"https://registry.terraform.io/.well-known/terraform.json\": Proxy \u2502 Authorization Required \u2575 time=2022-07-27T09:57:40+01:00 level=error msg=Hit multiple errors: Hit multiple errors: exit status 1 PS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute> ``` ", "keywords": ["provider", "test"]}, {"source": "Text", "text": "But as mentioned, we dont use and have never used these commands to push the changes. ", "keywords": ["change"]}, {"source": "Text", "text": "I have tried making a change to an instance to trigger the change such as increase the disk size. ", "keywords": ["instance", "change"]}, {"source": "Text", "text": "Is there any alternative method i can test?", "keywords": ["test"]}]}, {"Id": "275059374", "PostHistoryTypeId": "5", "PostId": "73135254", "RevisionGUID": "f9efa72c-57e8-4c9b-8e79-4983dbc97c72", "CreationDate": "2022-07-27T12:19:17.097", "UserId": "5166962", "Comment": "added 2318 characters in body", "Text": "I have an issue in our environment where i cannot add a label to a vm instance in GCP via terraform/terragrunt after creation. We have a google repository that is setup via terraform and we use git to clone and update from a local repository, this will activate a trigger on cloudbuild to push the changes to the repo. We do not use terraform/grunt commands at all. It is all controlled via git. The labels are referenced in our compute module as shown.\r\n```\r\n   variable \"labels\" {\r\n   description = \"Labels to add.\"\r\n   type  = map(string)\r\n   default = {}\r\n   }\r\n```\r\n\r\nOk onto the issue. We have in our environment a mix of lift and shift and native cloud vm instances. We recently decided we wanted to add an additional label in the code to identify if the instance was under terraform control - ie terraform = \"true/false\"\r\n```\r\n labels = {\r\n    application      = \"demo-test\"\r\n    businessunit     = \"homes\"\r\n    costcentre       = \"90imt\"\r\n    createdby        = \"ab\"\r\n    department       = \"it\"\r\n    disasterrecovery = \"no\"\r\n    environment      = \"rnd\"\r\n    contact          = \"abriers\"\r\n    terraform        = \"false\"\r\n  }\r\n}\r\n```\r\n\r\nSo i add the label and use the usual git commands to add/commit push etc which triggers the cloudbuild as usual. The problem is, the label does not appear in the console when viewing it.\r\n\r\nIt's as if cloudbuild or terraform/terragrunt isn't recognising it as a change. I can change the value of a label no problem, but i cannot seem to add or remove a label after the vm has been created.\r\n\r\n\r\nIt has been suggested to run terraform/terragrunt plan in vs code but as mentioned, this has all been setup to use git so the above commands do not work.\r\n\r\nFor example i run terragrunt init in the directory and get this error\r\n```\r\nPS C:\\Cloudrepos\\placesforpeople> terragrunt init\r\ntime=2022-07-27T09:56:27+01:00 level=error msg=Error reading file at path C:/Cloudrepos/placesforpeople/terragrunt.hcl: open C:/Cloudrepos/placesforpeople/terragrunt.hcl: The system cannot find the \r\nfile specified.\r\ntime=2022-07-27T09:56:27+01:00 level=error msg=Unable to determine underlying exit code, so Terragrunt will exit with error code 1\r\nPS C:\\Cloudrepos\\placesforpeople> cd org\r\nPS C:\\Cloudrepos\\placesforpeople\\org> cd rnd\r\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd> cd adam_play_area\r\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area> ls\r\n\r\n\r\n\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nd-----        20/07/2022     14:18                modules\r\nd-----        20/07/2022     14:18                test_project_001\r\n\r\n\r\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area> cd test_project_001\r\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001> cd compute\r\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute> ls\r\n\r\n\r\n    Directory: C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute\r\n\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nd-----        07/07/2022     15:51                start_stop_schedule\r\nd-----        20/07/2022     14:18                umig\r\n-a----        07/07/2022     16:09           1308 .terraform.lock.hcl\r\n-a----        27/07/2022     09:56           2267 terragrunt.hcl\r\n\r\n\r\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute> terragrunt init    \r\nInitializing modules...\r\n- data_disk in ..\\compute_data_disk\r\n\r\nInitializing the backend...\r\n\r\nSuccessfully configured the backend \"gcs\"! Terraform will automatically\r\nuse this backend unless the backend configuration changes.\r\n\r\nInitializing provider plugins...\r\n- Reusing previous version of hashicorp/google from the dependency lock file\r\n- Reusing previous version of hashicorp/google-beta from the dependency lock file\r\n\u2577\r\n\u2502 Warning: Backend configuration ignored\r\n\u2502\r\n\u2502   on ..\\compute_data_disk\\backend.tf line 3, in terraform:\r\n\u2502    3:   backend \"gcs\" {}\r\n\u2502\r\n\u2502 Any selected backend applies to the entire configuration, so Terraform\r\n\u2502 expects provider configurations only in the root module.\r\n\u2502\r\n\u2502 This is a warning rather than an error because it's sometimes convenient to\r\n\u2502 temporarily call a root module as a child module for testing purposes, but\r\n\u2502 this backend configuration block will have no effect.\r\n\u2575\r\n\r\n\u2577\r\n\u2502 Error: Failed to query available provider packages\r\n\u2502\r\n\u2502 Could not retrieve the list of available versions for provider\r\n\u2502 hashicorp/google: could not connect to registry.terraform.io: Failed to\r\n\u2502 request discovery document: Get\r\n\u2502 \"https://registry.terraform.io/.well-known/terraform.json\": Proxy\r\n\u2502 Authorization Required\r\n\u2575\r\n\r\n\u2577\r\n\u2502 Error: Failed to query available provider packages\r\n\u2502\r\n\u2502 Could not retrieve the list of available versions for provider\r\n\u2502 hashicorp/google-beta: could not connect to registry.terraform.io: Failed\r\n\u2502 to request discovery document: Get\r\n\u2502 \"https://registry.terraform.io/.well-known/terraform.json\": Proxy\r\n\u2502 Authorization Required\r\n\u2575\r\n\r\ntime=2022-07-27T09:57:40+01:00 level=error msg=Hit multiple errors:\r\nHit multiple errors:\r\nexit status 1\r\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute>\r\n```\r\n\r\nBut as mentioned, we dont use and have never used these commands to push the changes.\r\nI cannot work out why these labels wont add/remove after the vm has already been created. \r\n\r\n\r\nI have tried making a change to an instance to trigger the change such as increase the disk size.\r\nI have tried to create a block in the module for all the labels needed but this doesn't work as you cannot have labels as a block in this module.\r\n```\r\n labels {\r\n    application      = var.labels.application\r\n    businessunit     = var.labels.businessunit\r\n    costcentre       = var.labels.costcentre\r\n    createdby        = var.labels.createdby\r\n    department       = var.labels.department\r\n    disasterrecovery = var.labels.disasterrecovery\r\n    environment      = var.labels.environment\r\n    contact          = var.labels.contact\r\n    terraform        = var.labels.terraform\r\n  }\r\n}\r\n```\r\n\r\nAny ideas? I know you cannot add a label to a project post creation, does the same apply to vm instances? Is there any alternative method i can test?\r\n\r\nAs requested this is the code for the vm instance \r\n```\r\nterraform {\r\n  source = \"../../modules//compute_instance_static_ip/\"\r\n}\r\n\r\n# Include all settings from the root terragrunt.hcl file\r\ninclude {\r\n  path = find_in_parent_folders(\"org.hcl\")\r\n}\r\n\r\ndependency \"project\" {\r\n  config_path = \"../project\"\r\n\r\n  # Configure mock outputs for the terraform commands that are returned when there are no outputs available (e.g the\r\n  # module hasn't been applied yet.\r\n  mock_outputs_allowed_terraform_commands = [\"plan\", \"validate\"]\r\n  mock_outputs = {\r\n    project_id = \"project-not-created-yet\"\r\n  }\r\n}\r\n\r\nprevent_destroy = false\r\n\r\ninputs = {\r\n\r\n  gcp_instance_sa_email = \"testprj-compute@gc-r-prj-testprj-0001-9627.iam.gserviceaccount.com\" # This well tell gcp to use the default GCE service account\r\n  instance_name         = \"rnd-demo-test1\"\r\n  network               = \"projects/gc-a-prj-vpchost-0001-3312/global/networks/gc-r-vpc-0001\"\r\n  subnetwork            = \"projects/gc-a-prj-vpchost-0001-3312/regions/europe-west2/subnetworks/gc-r-snet-middleware-0001\"\r\n  zone                  = \"europe-west2-c\"\r\n  region                = \"europe-west2\"\r\n  project               =  dependency.project.outputs.project_id\r\n  os_image              = \"debian-10-buster-v20220118\"\r\n  machine_type          = \"n1-standard-4\"\r\n  boot_disk_size        = 100\r\n  instance_scope        = [\"cloud-platform\"]\r\n  instance_tags         = [\"demo-test\"]\r\n  deletion_protection   = \"false\"\r\n\r\n  metadata = {\r\n    windows-startup-script-ps1 = \"Set-TimeZone -Id 'GMT Standard Time' -PassThru\"\r\n  }\r\n\r\n  ip_address_region     = \"europe-west2\"\r\n  ip_address_type       = \"INTERNAL\"\r\n\r\n  attached_disks = {\r\n    data = {\r\n      size = 60\r\n      type = \"pd-standard\"\r\n    }\r\n  }\r\n /*/ instance_schedule_policy  = {\r\n\r\n  name               = \"start-stop\"\r\n  #region                    = \"europe-west2\"\r\n  vm_start_schedule         = \"30 07 * * *\"\r\n  vm_stop_schedule          = \"00 18 * * *\"\r\n  time_zone                 = \"GMT\"\r\n  }\r\n*/\r\n  labels = {\r\n    application      = \"demo-test\"\r\n    businessunit     = \"homes\"\r\n    costcentre       = \"90imt\"\r\n    createdby        = \"ab\"\r\n    department       = \"it\"\r\n    disasterrecovery = \"no\"\r\n    environment      = \"rnd\"\r\n    contact          = \"abriers\"\r\n    terraform        = \"false\"\r\n  }\r\n}\r\n```\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I have an issue in our environment where i cannot add a label to a vm instance in GCP via terraform/terragrunt after creation. ", "keywords": ["instance"]}, {"source": "Text", "text": "We have a google repository that is setup via terraform and we use git to clone and update from a local repository, this will activate a trigger on cloudbuild to push the changes to the repo. ", "keywords": ["change"]}, {"source": "Text", "text": "We recently decided we wanted to add an additional label in the code to identify if the instance was under terraform control - ie terraform = \"true/false\" ``` labels = { application = \"demo-test\" businessunit = \"homes\" costcentre = \"90imt\" createdby = \"ab\" department = \"it\" disasterrecovery = \"no\" environment = \"rnd\" contact = \"abriers\" terraform = \"false\" } } ``` ", "keywords": ["instance", "test"]}, {"source": "Text", "text": "It's as if cloudbuild or terraform/terragrunt isn't recognising it as a change. ", "keywords": ["change"]}, {"source": "Text", "text": "I can change the value of a label no problem, but i cannot seem to add or remove a label after the vm has been created. ", "keywords": ["change"]}, {"source": "Text", "text": "time=2022-07-27T09:56:27+01:00 level=error msg=Unable to determine underlying exit code, so Terragrunt will exit with error code 1 PS C:\\Cloudrepos\\placesforpeople> cd org PS C:\\Cloudrepos\\placesforpeople\\org> cd rnd PS C:\\Cloudrepos\\placesforpeople\\org\\rnd> cd adam_play_area PS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area> ls Mode LastWriteTime Length Name ---- ------------- ------ ---- d----- 20/07/2022 14:18 modules d----- 20/07/2022 14:18 test_project_001 PS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area> cd test_project_001 PS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001> cd compute PS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute> ls Directory: C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute Mode LastWriteTime Length Name ---- ------------- ------ ---- d----- 07/07/2022 15:51 start_stop_schedule d----- 20/07/2022 14:18 umig -a---- 07/07/2022 16:09 1308 .terraform.lock.hcl -a---- 27/07/2022 09:56 2267 terragrunt.hcl PS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute> terragrunt init Initializing modules... - data_disk in ..\\compute_data_disk Initializing the backend... ", "keywords": ["billing mode", "test"]}, {"source": "Text", "text": "Terraform will automatically use this backend unless the backend configuration changes. ", "keywords": ["change"]}, {"source": "Text", "text": "Initializing provider plugins... - Reusing previous version of hashicorp/google from the dependency lock file - Reusing previous version of hashicorp/google-beta from the dependency lock file \u2577 \u2502 Warning: Backend configuration ignored \u2502 \u2502 on ..\\compute_data_disk\\backend.tf line 3, in terraform: \u2502 3: backend \"gcs\" {} \u2502 \u2502 Any selected backend applies to the entire configuration, so Terraform \u2502 expects provider configurations only in the root module. \u2502 \u2502 This is a warning rather than an error because it's sometimes convenient to \u2502 temporarily call a root module as a child module for testing purposes, but \u2502 this backend configuration block will have no effect. ", "keywords": ["provider", "test"]}, {"source": "Text", "text": "\u2575 \u2577 \u2502 Error: Failed to query available provider packages \u2502 \u2502 Could not retrieve the list of available versions for provider \u2502 hashicorp/google: could not connect to registry.terraform.io: Failed to \u2502 request discovery document: Get \u2502 \"https://registry.terraform.io/.well-known/terraform.json\": Proxy \u2502 Authorization Required \u2575 \u2577 \u2502 Error: Failed to query available provider packages \u2502 \u2502 Could not retrieve the list of available versions for provider \u2502 hashicorp/google-beta: could not connect to registry.terraform.io: Failed \u2502 to request discovery document: Get \u2502 \"https://registry.terraform.io/.well-known/terraform.json\": Proxy \u2502 Authorization Required \u2575 time=2022-07-27T09:57:40+01:00 level=error msg=Hit multiple errors: Hit multiple errors: exit status 1 PS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute> ``` ", "keywords": ["provider", "test"]}, {"source": "Text", "text": "But as mentioned, we dont use and have never used these commands to push the changes. ", "keywords": ["change"]}, {"source": "Text", "text": "I have tried making a change to an instance to trigger the change such as increase the disk size. ", "keywords": ["instance", "change"]}, {"source": "Text", "text": "Is there any alternative method i can test? ", "keywords": ["test"]}, {"source": "Text", "text": "As requested this is the code for the vm instance ``` terraform { source = \"../../modules//compute_instance_static_ip/\" } # Include all settings from the root terragrunt.hcl file include { path = find_in_parent_folders(\"org.hcl\") } dependency \"project\" { config_path = \"../project\" # Configure mock outputs for the terraform commands that are returned when there are no outputs available (e.g the # module hasn't been applied yet. mock_outputs_allowed_terraform_commands = [\"plan\", \"validate\"] mock_outputs = { project_id = \"project-not-created-yet\" } } prevent_destroy = false inputs = { gcp_instance_sa_email = \"testprj-compute@gc-r-prj-testprj-0001-9627.iam.gserviceaccount.com\" # This well tell gcp to use the default GCE service account instance_name = \"rnd-demo-test1\" network = \"projects/gc-a-prj-vpchost-0001-3312/global/networks/gc-r-vpc-0001\" subnetwork = \"projects/gc-a-prj-vpchost-0001-3312/regions/europe-west2/subnetworks/gc-r-snet-middleware-0001\" zone = \"europe-west2-c\" region = \"europe-west2\" project = dependency.project.outputs.project_id os_image = \"debian-10-buster-v20220118\" machine_type = \"n1-standard-4\" boot_disk_size = 100 instance_scope = [\"cloud-platform\"] instance_tags = [\"demo-test\"] deletion_protection = \"false\" metadata = { windows-startup-script-ps1 = \"Set-TimeZone -Id 'GMT Standard Time' -PassThru\" } ip_address_region = \"europe-west2\" ip_address_type = \"INTERNAL\" attached_disks = { data = { size = 60 type = \"pd-standard\" } } /*/ instance_schedule_policy = { name = \"start-stop\" #region = \"europe-west2\" vm_start_schedule = \"30 07 * * *\" vm_stop_schedule = \"00 18 * * *\" time_zone = \"GMT\" ", "keywords": ["instance", "test"]}, {"source": "Text", "text": "} */ labels = { application = \"demo-test\" businessunit = \"homes\" costcentre = \"90imt\" createdby = \"ab\" department = \"it\" disasterrecovery = \"no\" environment = \"rnd\" contact = \"abriers\" terraform = \"false\" ", "keywords": ["test"]}]}, {"Id": "275065230", "PostHistoryTypeId": "5", "PostId": "73135254", "RevisionGUID": "2fd661a0-c636-473a-9c73-6a3a7a7115dc", "CreationDate": "2022-07-27T13:32:49.157", "UserId": "5166962", "Comment": "added 1029 characters in body", "Text": "I have an issue in our environment where i cannot add a label to a vm instance in GCP via terraform/terragrunt after creation. We have a google repository that is setup via terraform and we use git to clone and update from a local repository, this will activate a trigger on cloudbuild to push the changes to the repo. We do not use terraform/grunt commands at all. It is all controlled via git. The labels are referenced in our compute module as shown.\r\n```\r\n   variable \"labels\" {\r\n   description = \"Labels to add.\"\r\n   type  = map(string)\r\n   default = {}\r\n   }\r\n```\r\n\r\nOk onto the issue. We have in our environment a mix of lift and shift and native cloud vm instances. We recently decided we wanted to add an additional label in the code to identify if the instance was under terraform control - ie terraform = \"true/false\"\r\n```\r\n labels = {\r\n    application      = \"demo-test\"\r\n    businessunit     = \"homes\"\r\n    costcentre       = \"90imt\"\r\n    createdby        = \"ab\"\r\n    department       = \"it\"\r\n    disasterrecovery = \"no\"\r\n    environment      = \"rnd\"\r\n    contact          = \"abriers\"\r\n    terraform        = \"false\"\r\n  }\r\n}\r\n```\r\n\r\nSo i add the label and use the usual git commands to add/commit push etc which triggers the cloudbuild as usual. The problem is, the label does not appear in the console when viewing it.\r\n\r\nIt's as if cloudbuild or terraform/terragrunt isn't recognising it as a change. I can change the value of a label no problem, but i cannot seem to add or remove a label after the vm has been created.\r\n\r\n\r\nIt has been suggested to run terraform/terragrunt plan in vs code but as mentioned, this has all been setup to use git so the above commands do not work.\r\n\r\nFor example i run terragrunt init in the directory and get this error\r\n```\r\nPS C:\\Cloudrepos\\placesforpeople> terragrunt init\r\ntime=2022-07-27T09:56:27+01:00 level=error msg=Error reading file at path C:/Cloudrepos/placesforpeople/terragrunt.hcl: open C:/Cloudrepos/placesforpeople/terragrunt.hcl: The system cannot find the \r\nfile specified.\r\ntime=2022-07-27T09:56:27+01:00 level=error msg=Unable to determine underlying exit code, so Terragrunt will exit with error code 1\r\nPS C:\\Cloudrepos\\placesforpeople> cd org\r\nPS C:\\Cloudrepos\\placesforpeople\\org> cd rnd\r\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd> cd adam_play_area\r\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area> ls\r\n\r\n\r\n\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nd-----        20/07/2022     14:18                modules\r\nd-----        20/07/2022     14:18                test_project_001\r\n\r\n\r\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area> cd test_project_001\r\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001> cd compute\r\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute> ls\r\n\r\n\r\n    Directory: C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute\r\n\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nd-----        07/07/2022     15:51                start_stop_schedule\r\nd-----        20/07/2022     14:18                umig\r\n-a----        07/07/2022     16:09           1308 .terraform.lock.hcl\r\n-a----        27/07/2022     09:56           2267 terragrunt.hcl\r\n\r\n\r\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute> terragrunt init    \r\nInitializing modules...\r\n- data_disk in ..\\compute_data_disk\r\n\r\nInitializing the backend...\r\n\r\nSuccessfully configured the backend \"gcs\"! Terraform will automatically\r\nuse this backend unless the backend configuration changes.\r\n\r\nInitializing provider plugins...\r\n- Reusing previous version of hashicorp/google from the dependency lock file\r\n- Reusing previous version of hashicorp/google-beta from the dependency lock file\r\n\u2577\r\n\u2502 Warning: Backend configuration ignored\r\n\u2502\r\n\u2502   on ..\\compute_data_disk\\backend.tf line 3, in terraform:\r\n\u2502    3:   backend \"gcs\" {}\r\n\u2502\r\n\u2502 Any selected backend applies to the entire configuration, so Terraform\r\n\u2502 expects provider configurations only in the root module.\r\n\u2502\r\n\u2502 This is a warning rather than an error because it's sometimes convenient to\r\n\u2502 temporarily call a root module as a child module for testing purposes, but\r\n\u2502 this backend configuration block will have no effect.\r\n\u2575\r\n\r\n\u2577\r\n\u2502 Error: Failed to query available provider packages\r\n\u2502\r\n\u2502 Could not retrieve the list of available versions for provider\r\n\u2502 hashicorp/google: could not connect to registry.terraform.io: Failed to\r\n\u2502 request discovery document: Get\r\n\u2502 \"https://registry.terraform.io/.well-known/terraform.json\": Proxy\r\n\u2502 Authorization Required\r\n\u2575\r\n\r\n\u2577\r\n\u2502 Error: Failed to query available provider packages\r\n\u2502\r\n\u2502 Could not retrieve the list of available versions for provider\r\n\u2502 hashicorp/google-beta: could not connect to registry.terraform.io: Failed\r\n\u2502 to request discovery document: Get\r\n\u2502 \"https://registry.terraform.io/.well-known/terraform.json\": Proxy\r\n\u2502 Authorization Required\r\n\u2575\r\n\r\ntime=2022-07-27T09:57:40+01:00 level=error msg=Hit multiple errors:\r\nHit multiple errors:\r\nexit status 1\r\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute>\r\n```\r\n\r\nBut as mentioned, we dont use and have never used these commands to push the changes.\r\nI cannot work out why these labels wont add/remove after the vm has already been created. \r\n\r\n\r\nI have tried making a change to an instance to trigger the change such as increase the disk size.\r\nI have tried to create a block in the module for all the labels needed but this doesn't work as you cannot have labels as a block in this module.\r\n```\r\n labels {\r\n    application      = var.labels.application\r\n    businessunit     = var.labels.businessunit\r\n    costcentre       = var.labels.costcentre\r\n    createdby        = var.labels.createdby\r\n    department       = var.labels.department\r\n    disasterrecovery = var.labels.disasterrecovery\r\n    environment      = var.labels.environment\r\n    contact          = var.labels.contact\r\n    terraform        = var.labels.terraform\r\n  }\r\n}\r\n```\r\n\r\nAny ideas? I know you cannot add a label to a project post creation, does the same apply to vm instances? Is there any alternative method i can test?\r\n\r\nAs requested this is the code for the vm instance \r\n```\r\nterraform {\r\n  source = \"../../modules//compute_instance_static_ip/\"\r\n}\r\n\r\n# Include all settings from the root terragrunt.hcl file\r\ninclude {\r\n  path = find_in_parent_folders(\"org.hcl\")\r\n}\r\n\r\ndependency \"project\" {\r\n  config_path = \"../project\"\r\n\r\n  # Configure mock outputs for the terraform commands that are returned when there are no outputs available (e.g the\r\n  # module hasn't been applied yet.\r\n  mock_outputs_allowed_terraform_commands = [\"plan\", \"validate\"]\r\n  mock_outputs = {\r\n    project_id = \"project-not-created-yet\"\r\n  }\r\n}\r\n\r\nprevent_destroy = false\r\n\r\ninputs = {\r\n\r\n  gcp_instance_sa_email = \"testprj-compute@gc-r-prj-testprj-0001-9627.iam.gserviceaccount.com\" # This well tell gcp to use the default GCE service account\r\n  instance_name         = \"rnd-demo-test1\"\r\n  network               = \"projects/gc-a-prj-vpchost-0001-3312/global/networks/gc-r-vpc-0001\"\r\n  subnetwork            = \"projects/gc-a-prj-vpchost-0001-3312/regions/europe-west2/subnetworks/gc-r-snet-middleware-0001\"\r\n  zone                  = \"europe-west2-c\"\r\n  region                = \"europe-west2\"\r\n  project               =  dependency.project.outputs.project_id\r\n  os_image              = \"debian-10-buster-v20220118\"\r\n  machine_type          = \"n1-standard-4\"\r\n  boot_disk_size        = 100\r\n  instance_scope        = [\"cloud-platform\"]\r\n  instance_tags         = [\"demo-test\"]\r\n  deletion_protection   = \"false\"\r\n\r\n  metadata = {\r\n    windows-startup-script-ps1 = \"Set-TimeZone -Id 'GMT Standard Time' -PassThru\"\r\n  }\r\n\r\n  ip_address_region     = \"europe-west2\"\r\n  ip_address_type       = \"INTERNAL\"\r\n\r\n  attached_disks = {\r\n    data = {\r\n      size = 60\r\n      type = \"pd-standard\"\r\n    }\r\n  }\r\n /*/ instance_schedule_policy  = {\r\n\r\n  name               = \"start-stop\"\r\n  #region                    = \"europe-west2\"\r\n  vm_start_schedule         = \"30 07 * * *\"\r\n  vm_stop_schedule          = \"00 18 * * *\"\r\n  time_zone                 = \"GMT\"\r\n  }\r\n*/\r\n  labels = {\r\n    application      = \"demo-test\"\r\n    businessunit     = \"homes\"\r\n    costcentre       = \"90imt\"\r\n    createdby        = \"ab\"\r\n    department       = \"it\"\r\n    disasterrecovery = \"no\"\r\n    environment      = \"rnd\"\r\n    contact          = \"abriers\"\r\n    terraform        = \"false\"\r\n  }\r\n}\r\n```\r\n\r\nterragrunt validate-inputs result below\r\n````\r\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd> terragrunt validate-inputs\r\ntime=2022-07-27T14:25:19+01:00 level=warning msg=The following inputs passed in by terragrunt are unused:\r\n prefix=[C:\\Cloudrepos\\placesforpeople\\org\\rnd]\r\ntime=2022-07-27T14:25:19+01:00 level=warning msg=       - billing_account prefix=[C:\\Cloudrepos\\placesforpeople\\org\\rnd]\r\ntime=2022-07-27T14:25:19+01:00 level=warning msg=       - host_project_id prefix=[C:\\Cloudrepos\\placesforpeople\\org\\rnd]\r\ntime=2022-07-27T14:25:19+01:00 level=warning prefix=[C:\\Cloudrepos\\placesforpeople\\org\\rnd]\r\ntime=2022-07-27T14:25:19+01:00 level=info msg=All required inputs are passed in by terragrunt. prefix=[C:\\Cloudrepos\\placesforpeople\\org\\rnd]\r\ntime=2022-07-27T14:25:19+01:00 level=error msg=Terragrunt configuration has misaligned inputs\r\ntime=2022-07-27T14:25:19+01:00 level=error msg=Unable to determine underlying exit code, so Terragrunt will exit with error code 1\r\nPS C:\\Cloudrepos\\placesforpeople\\org\\rnd>\r\n````\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I have an issue in our environment where i cannot add a label to a vm instance in GCP via terraform/terragrunt after creation. ", "keywords": ["instance"]}, {"source": "Text", "text": "We have a google repository that is setup via terraform and we use git to clone and update from a local repository, this will activate a trigger on cloudbuild to push the changes to the repo. ", "keywords": ["change"]}, {"source": "Text", "text": "We recently decided we wanted to add an additional label in the code to identify if the instance was under terraform control - ie terraform = \"true/false\" ``` labels = { application = \"demo-test\" businessunit = \"homes\" costcentre = \"90imt\" createdby = \"ab\" department = \"it\" disasterrecovery = \"no\" environment = \"rnd\" contact = \"abriers\" terraform = \"false\" } } ``` ", "keywords": ["instance", "test"]}, {"source": "Text", "text": "It's as if cloudbuild or terraform/terragrunt isn't recognising it as a change. ", "keywords": ["change"]}, {"source": "Text", "text": "I can change the value of a label no problem, but i cannot seem to add or remove a label after the vm has been created. ", "keywords": ["change"]}, {"source": "Text", "text": "time=2022-07-27T09:56:27+01:00 level=error msg=Unable to determine underlying exit code, so Terragrunt will exit with error code 1 PS C:\\Cloudrepos\\placesforpeople> cd org PS C:\\Cloudrepos\\placesforpeople\\org> cd rnd PS C:\\Cloudrepos\\placesforpeople\\org\\rnd> cd adam_play_area PS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area> ls Mode LastWriteTime Length Name ---- ------------- ------ ---- d----- 20/07/2022 14:18 modules d----- 20/07/2022 14:18 test_project_001 PS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area> cd test_project_001 PS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001> cd compute PS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute> ls Directory: C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute Mode LastWriteTime Length Name ---- ------------- ------ ---- d----- 07/07/2022 15:51 start_stop_schedule d----- 20/07/2022 14:18 umig -a---- 07/07/2022 16:09 1308 .terraform.lock.hcl -a---- 27/07/2022 09:56 2267 terragrunt.hcl PS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute> terragrunt init Initializing modules... - data_disk in ..\\compute_data_disk Initializing the backend... ", "keywords": ["billing mode", "test"]}, {"source": "Text", "text": "Terraform will automatically use this backend unless the backend configuration changes. ", "keywords": ["change"]}, {"source": "Text", "text": "Initializing provider plugins... - Reusing previous version of hashicorp/google from the dependency lock file - Reusing previous version of hashicorp/google-beta from the dependency lock file \u2577 \u2502 Warning: Backend configuration ignored \u2502 \u2502 on ..\\compute_data_disk\\backend.tf line 3, in terraform: \u2502 3: backend \"gcs\" {} \u2502 \u2502 Any selected backend applies to the entire configuration, so Terraform \u2502 expects provider configurations only in the root module. \u2502 \u2502 This is a warning rather than an error because it's sometimes convenient to \u2502 temporarily call a root module as a child module for testing purposes, but \u2502 this backend configuration block will have no effect. ", "keywords": ["provider", "test"]}, {"source": "Text", "text": "\u2575 \u2577 \u2502 Error: Failed to query available provider packages \u2502 \u2502 Could not retrieve the list of available versions for provider \u2502 hashicorp/google: could not connect to registry.terraform.io: Failed to \u2502 request discovery document: Get \u2502 \"https://registry.terraform.io/.well-known/terraform.json\": Proxy \u2502 Authorization Required \u2575 \u2577 \u2502 Error: Failed to query available provider packages \u2502 \u2502 Could not retrieve the list of available versions for provider \u2502 hashicorp/google-beta: could not connect to registry.terraform.io: Failed \u2502 to request discovery document: Get \u2502 \"https://registry.terraform.io/.well-known/terraform.json\": Proxy \u2502 Authorization Required \u2575 time=2022-07-27T09:57:40+01:00 level=error msg=Hit multiple errors: Hit multiple errors: exit status 1 PS C:\\Cloudrepos\\placesforpeople\\org\\rnd\\adam_play_area\\test_project_001\\compute> ``` ", "keywords": ["provider", "test"]}, {"source": "Text", "text": "But as mentioned, we dont use and have never used these commands to push the changes. ", "keywords": ["change"]}, {"source": "Text", "text": "I have tried making a change to an instance to trigger the change such as increase the disk size. ", "keywords": ["instance", "change"]}, {"source": "Text", "text": "Is there any alternative method i can test? ", "keywords": ["test"]}, {"source": "Text", "text": "As requested this is the code for the vm instance ``` terraform { source = \"../../modules//compute_instance_static_ip/\" } # Include all settings from the root terragrunt.hcl file include { path = find_in_parent_folders(\"org.hcl\") } dependency \"project\" { config_path = \"../project\" # Configure mock outputs for the terraform commands that are returned when there are no outputs available (e.g the # module hasn't been applied yet. mock_outputs_allowed_terraform_commands = [\"plan\", \"validate\"] mock_outputs = { project_id = \"project-not-created-yet\" } } prevent_destroy = false inputs = { gcp_instance_sa_email = \"testprj-compute@gc-r-prj-testprj-0001-9627.iam.gserviceaccount.com\" # This well tell gcp to use the default GCE service account instance_name = \"rnd-demo-test1\" network = \"projects/gc-a-prj-vpchost-0001-3312/global/networks/gc-r-vpc-0001\" subnetwork = \"projects/gc-a-prj-vpchost-0001-3312/regions/europe-west2/subnetworks/gc-r-snet-middleware-0001\" zone = \"europe-west2-c\" region = \"europe-west2\" project = dependency.project.outputs.project_id os_image = \"debian-10-buster-v20220118\" machine_type = \"n1-standard-4\" boot_disk_size = 100 instance_scope = [\"cloud-platform\"] instance_tags = [\"demo-test\"] deletion_protection = \"false\" metadata = { windows-startup-script-ps1 = \"Set-TimeZone -Id 'GMT Standard Time' -PassThru\" } ip_address_region = \"europe-west2\" ip_address_type = \"INTERNAL\" attached_disks = { data = { size = 60 type = \"pd-standard\" } } /*/ instance_schedule_policy = { name = \"start-stop\" #region = \"europe-west2\" vm_start_schedule = \"30 07 * * *\" vm_stop_schedule = \"00 18 * * *\" time_zone = \"GMT\" } */ labels = { application = \"demo-test\" businessunit = \"homes\" costcentre = \"90imt\" createdby = \"ab\" department = \"it\" disasterrecovery = \"no\" environment = \"rnd\" contact = \"abriers\" terraform = \"false\" } } ``` terragrunt validate-inputs result below ```` PS C:\\Cloudrepos\\placesforpeople\\org\\rnd> terragrunt validate-inputs time=2022-07-27T14:25:19+01:00 level=warning msg=The following inputs passed in by terragrunt are unused: prefix=[C:\\Cloudrepos\\placesforpeople\\org\\rnd] time=2022-07-27T14:25:19+01:00 level=warning msg= - billing_account prefix=[C:\\Cloudrepos\\placesforpeople\\org\\rnd] time=2022-07-27T14:25:19+01:00 level=warning msg= - host_project_id prefix=[C:\\Cloudrepos\\placesforpeople\\org\\rnd] time=2022-07-27T14:25:19+01:00 level=warning prefix=[C:\\Cloudrepos\\placesforpeople\\org\\rnd] time=2022-07-27T14:25:19+01:00 level=info msg=All required inputs are passed in by terragrunt. prefix=[C:\\Cloudrepos\\placesforpeople\\org\\rnd] time=2022-07-27T14:25:19+01:00 level=error msg=Terragrunt configuration has misaligned inputs time=2022-07-27T14:25:19+01:00 level=error msg=Unable to determine underlying exit code, so Terragrunt will exit with error code 1 PS C:\\Cloudrepos\\placesforpeople\\org\\rnd> ````", "keywords": ["bill", "instance", "test"]}]}], "answers": [{"Id": "73140042", "PostTypeId": "2", "ParentId": "73135254", "CreationDate": "2022-07-27T14:44:34.273", "Score": "0", "Body": "<p>I have found the culprit!</p>\n<p>In the compute instance module i discovered this block of code. I removed labels and voila the extra labels now appear. Thanks for the assistance and advice on post formatting.</p>\n<pre><code> lifecycle {\n    ignore_changes = [\n      boot_disk.0.initialize_params.0.image,\n      attached_disk, labels\n    ]\n  }\n</code></pre>\n", "OwnerUserId": "5166962", "LastActivityDate": "2022-07-27T14:44:34.273", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "275071200", "PostHistoryTypeId": "2", "PostId": "73140042", "RevisionGUID": "a69b7c89-22c8-43b2-a7e2-6a06bd53e6c7", "CreationDate": "2022-07-27T14:44:34.273", "UserId": "5166962", "Text": "I have found the culprit!\r\n\r\nIn the compute instance module i discovered this block of code. I removed labels and voila the extra labels now appear. Thanks for the assistance and advice on post formatting.\r\n\r\n\r\n     lifecycle {\r\n        ignore_changes = [\r\n          boot_disk.0.initialize_params.0.image,\r\n          attached_disk, labels\r\n        ]\r\n      }", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "In the compute instance module i discovered this block of code. ", "keywords": ["instance"]}]}], "filtered-sentences": [{"source": "Body", "text": "In the compute instance module i discovered this block of code. ", "keywords": ["instance"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Title", "text": "How to add a label to my vm instance in gcp via terraform/terragrunt", "keywords": ["instance"]}, {"source": "Body", "text": "I have an issue in our environment where i cannot add a label to a vm instance in GCP via terraform/terragrunt after creation. ", "keywords": ["instance"]}, {"source": "Body", "text": "We have a google repository that is setup via terraform and we use git to clone and update from a local repository, this will activate a trigger on cloudbuild to push the changes to the repo. ", "keywords": ["change"]}, {"source": "Body", "text": "We recently decided we wanted to add an additional label in the code to identify if the instance was under terraform control - ie terraform = \"true/false\" So i add the label and use the usual git commands to add/commit push etc which triggers the cloudbuild as usual. ", "keywords": ["instance"]}, {"source": "Body", "text": "It's as if cloudbuild or terraform/terragrunt isn't recognising it as a change. ", "keywords": ["change"]}, {"source": "Body", "text": "I can change the value of a label no problem, but i cannot seem to add or remove a label after the vm has been created. ", "keywords": ["change"]}, {"source": "Body", "text": "For example i run terragrunt init in the directory and get this error But as mentioned, we dont use and have never used these commands to push the changes. ", "keywords": ["change"]}, {"source": "Body", "text": "I have tried making a change to an instance to trigger the change such as increase the disk size. ", "keywords": ["instance", "change"]}, {"source": "Body", "text": "Is there any alternative method i can test? ", "keywords": ["test"]}, {"source": "Body", "text": "As requested this is the code for the vm instance terragrunt validate-inputs result below", "keywords": ["instance"]}]}