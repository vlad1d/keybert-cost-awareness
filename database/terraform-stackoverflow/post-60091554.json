{"Id": "60091554", "PostTypeId": "1", "AcceptedAnswerId": "60178786", "CreationDate": "2020-02-06T09:26:43.540", "Score": "1", "ViewCount": "70", "Body": "<p>I am trying to acheive cost optimization with perfect Zero Downtime, by performing <a href=\"https://medium.com/@arielsepulveda/reactive-rds-system-allows-you-to-save-up-to-50-on-your-monthly-aws-bills-876361324377\" rel=\"nofollow noreferrer\">automated Vertical Scaling</a>.</p>\n\n<p>FYI: My Application is LAMP stack, with heavy Write IOPS nearing 8000 at peak Load of ~200 users. </p>\n\n<p>However using the above link for autoscaling, introduces a 30-50 sec Downtime during Multi-AZ switchover. To avoid this, we are trying to set up Master-Master Replication before using the steps in above script.</p>\n\n<p>I am using <a href=\"https://workmarket.tech/zero-downtime-maintenances-on-mysql-rds-ba13b51103c2\" rel=\"nofollow noreferrer\">this link</a> to setup Master-Master Replication.</p>\n\n<p>Brief Higlights, on what I am trying to do.</p>\n\n<ol>\n<li>Create Read Replica from M1</li>\n<li>Stop Replica</li>\n<li>Create Snapshot from Read-Replica</li>\n<li>Create DB(M2) from Sanpshot</li>\n<li>Set M2 as slave of M1.</li>\n<li>Set M1 as slave of M2.\n<strong>Master- Master is set</strong></li>\n</ol>\n\n<p>Other Step according to my requirements:</p>\n\n<ol start=\"7\">\n<li>Delete Replica and Snapshot</li>\n<li>Perform App Switch over to M2</li>\n<li>Vertical Scale/Maintain M1 </li>\n<li>Perform App Switch over to M1 <strong>DB has been scaled, properly</strong></li>\n<li>Delete M2.</li>\n</ol>\n", "OwnerUserId": "5872464", "LastEditorUserId": "5872464", "LastEditDate": "2020-02-15T06:39:05.070", "LastActivityDate": "2020-02-15T06:39:05.070", "Title": "What are the Time-Delay considerations, I should be worried about and take care while performing MASTER-MASTER Replication on AWS RDS", "Tags": "<mysql><amazon-web-services><terraform><amazon-rds><autoscaling>", "AnswerCount": "1", "CommentCount": "10", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "106279212", "PostId": "60091554", "Score": "0", "Text": "I'm not sure I understand your thinking here. You're hoping to save costs by having a complicated autoscaling of instance size to handle expected peak traffic that has a projected cost savings of 50% but then you want to avoid the downtime introduced by this switching of sizes by doubling the amount of instances (thus setting the cost back to what it was before) and having to introduce master/master (in a way not supported by RDS and master/master being well known for introducing data loss and corruption) to make that work?", "CreationDate": "2020-02-06T09:33:59.003", "UserId": "2291321", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "You're hoping to save costs by having a complicated autoscaling of instance size to handle expected peak traffic that has a projected cost savings of 50% but then you want to avoid the downtime introduced by this switching of sizes by doubling the amount of instances (thus setting the cost back to what it was before) and having to introduce master/master (in a way not supported by RDS and master/master being well known for introducing data loss and corruption) to make that work?", "keywords": ["cost", "instance"]}]}, {"Id": "106279363", "PostId": "60091554", "Score": "0", "Text": "All this setup will be deleted within an hour. So essentially, we are paying peak usage  hours + 1 hour. Post that RDS is reduced, hence saving costs. @ydaetskcoR", "CreationDate": "2020-02-06T09:38:36.253", "UserId": "5872464", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "106279394", "PostId": "60091554", "Score": "1", "Text": "It's an absolutely insane amount of complexity and is going to cost you more in engineering time than it saves even if it works flawlessly. And it probably won't. In which case it costs you the most important thing - data. I'd _strongly_ advise not doing this.", "CreationDate": "2020-02-06T09:39:31.193", "UserId": "2291321", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "It's an absolutely insane amount of complexity and is going to cost you more in engineering time than it saves even if it works flawlessly. ", "keywords": ["cost"]}]}, {"Id": "106279513", "PostId": "60091554", "Score": "0", "Text": "I'd generally just keep your database size at the size it needs to be unless you have a major, irregular scaling event on the horizon (you're running a Superbowl advert/running an ecommerce site on Black Friday). If you need to scale dynamically make use of either read replicas to take read load, caching elsewhere (eg Redis), switch to Aurora or even go as far as Aurora serverless or a non relational, more scalable database such as DynamoDB.", "CreationDate": "2020-02-06T09:42:31.820", "UserId": "2291321", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "106279972", "PostId": "60091554", "Score": "0", "Text": "My App is on LAMP stack, with daily load of ~2000 users. Peak Load of ~200 users around 11 AM.  Idea is to scale up early in morning, and then scale down daily , according to CPU util or time time based.", "CreationDate": "2020-02-06T09:54:22.997", "UserId": "5872464", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Idea is to scale up early in morning, and then scale down daily , according to CPU util or time time based.", "keywords": ["cpu"]}]}, {"Id": "106279996", "PostId": "60091554", "Score": "0", "Text": "200 users will be served fine by a t2.small RDS instance. You are massively overthinking this.", "CreationDate": "2020-02-06T09:55:14.490", "UserId": "2291321", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "200 users will be served fine by a t2.small RDS instance. ", "keywords": ["instance"]}]}, {"Id": "106280024", "PostId": "60091554", "Score": "0", "Text": "No it does not, we are having 8000 write IOPS, and 100 read IOPS, on r5.xlarge, for smooth functioning", "CreationDate": "2020-02-06T09:56:20.910", "UserId": "5872464", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "106280058", "PostId": "60091554", "Score": "0", "Text": "200 users are generating 8000 write IOPS?! So each user is 40 write IOPS? Your issue is not infrastructure but your application.", "CreationDate": "2020-02-06T09:57:23.643", "UserId": "2291321", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "106280539", "PostId": "60091554", "Score": "0", "Text": "Agreed, but i have already implemented the 50% scaling solution. As well as manually verified the Master-Master setup on test-DB.", "CreationDate": "2020-02-06T10:10:24.053", "UserId": "5872464", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "As well as manually verified the Master-Master setup on test-DB.", "keywords": ["test"]}]}, {"Id": "106280673", "PostId": "60091554", "Score": "0", "Text": "App is huge, and with 150 KLOC in service , and 100 KLOC in Presentation layer. Difficult to optimize everything, at one go.", "CreationDate": "2020-02-06T10:14:28.380", "UserId": "5872464", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "214416623", "PostHistoryTypeId": "2", "PostId": "60091554", "RevisionGUID": "24faebb1-3c0c-49fc-bb4a-c533c4792438", "CreationDate": "2020-02-06T09:26:43.540", "UserId": "5872464", "Text": "I am trying to acheive cost optimization with perfect Zero Downtime, by performing automated Vertical Scaling.\r\n```https://medium.com/@arielsepulveda/reactive-rds-system-allows-you-to-save-up-to-50-on-your-monthly-aws-bills-876361324377```\r\nHowever, this introduces a 30-50 sec Downtime during Multi-AZ switchover. To avoid this, we are trying to set up Master-Master Replication before using the steps in above script.\r\n\r\nI am using the following link to setup Master-Master Replication.\r\n```https://workmarket.tech/zero-downtime-maintenances-on-mysql-rds-ba13b51103c2```\r\n\r\nBrief Higlights\r\n```\r\n1. Create Read Replica from M1\r\n2. Stop Replica\r\n3. Create Snapshot from Read-Replica\r\n4. Create DB(M2) from Sanpshot\r\n5. Set M2 as slave of M1.\r\n6. Set M1 as slave of M2.\r\n**Master- Master is set**\r\n\r\nOther Step according to my reuirements\r\n7. Delete Replica and Snapshot\r\n8. Perform App Switch over to M2\r\n9. Vertical Scale/Maintain M1\r\n10. Perform App Switch over to M1\r\n11. Delete M2.\r\n\r\n```\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I am trying to acheive cost optimization with perfect Zero Downtime, by performing automated Vertical Scaling. ", "keywords": ["cost"]}, {"source": "Text", "text": "```https://medium.com/@arielsepulveda/reactive-rds-system-allows-you-to-save-up-to-50-on-your-monthly-aws-bills-876361324377``` ", "keywords": ["bill"]}]}, {"Id": "214416624", "PostHistoryTypeId": "1", "PostId": "60091554", "RevisionGUID": "24faebb1-3c0c-49fc-bb4a-c533c4792438", "CreationDate": "2020-02-06T09:26:43.540", "UserId": "5872464", "Text": "What are the Time-Delay considerations, I should be worried about and take care while performing MASTER-MASTER Replication on AWS RDS", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "214416625", "PostHistoryTypeId": "3", "PostId": "60091554", "RevisionGUID": "24faebb1-3c0c-49fc-bb4a-c533c4792438", "CreationDate": "2020-02-06T09:26:43.540", "UserId": "5872464", "Text": "<python><mysql><amazon-web-services><terraform><amazon-rds>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "214416680", "PostHistoryTypeId": "5", "PostId": "60091554", "RevisionGUID": "ba03b10f-42fd-44f3-8086-dd43cf87fc96", "CreationDate": "2020-02-06T09:27:21.450", "UserId": "10676716", "Comment": "deleted 5 characters in body", "Text": "I am trying to acheive cost optimization with perfect Zero Downtime, by performing [automated Vertical Scaling](https://medium.com/@arielsepulveda/reactive-rds-system-allows-you-to-save-up-to-50-on-your-monthly-aws-bills-876361324377).\r\n\r\nHowever, this introduces a 30-50 sec Downtime during Multi-AZ switchover. To avoid this, we are trying to set up Master-Master Replication before using the steps in above script.\r\n\r\nI am using [this link](https://workmarket.tech/zero-downtime-maintenances-on-mysql-rds-ba13b51103c2) to setup Master-Master Replication.\r\n\r\nBrief Higlights\r\n\r\n1. Create Read Replica from M1\r\n2. Stop Replica\r\n3. Create Snapshot from Read-Replica\r\n4. Create DB(M2) from Sanpshot\r\n5. Set M2 as slave of M1.\r\n6. Set M1 as slave of M2.\r\n**Master- Master is set**\r\n\r\nOther Step according to my requirements:\r\n\r\n7. Delete Replica and Snapshot\r\n8. Perform App Switch over to M2\r\n9. Vertical Scale/Maintain M1\r\n10. Perform App Switch over to M1\r\n11. Delete M2.\r\n\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I am trying to acheive cost optimization with perfect Zero Downtime, by performing [automated Vertical Scaling](https://medium.com/@arielsepulveda/reactive-rds-system-allows-you-to-save-up-to-50-on-your-monthly-aws-bills-876361324377). ", "keywords": ["bill", "cost"]}]}, {"Id": "214419922", "PostHistoryTypeId": "5", "PostId": "60091554", "RevisionGUID": "b728f81f-58c7-4e0b-a3b7-a26370ac71c6", "CreationDate": "2020-02-06T10:07:44.220", "UserId": "5872464", "Comment": "added 97 characters in body", "Text": "I am trying to acheive cost optimization with perfect Zero Downtime, by performing [automated Vertical Scaling](https://medium.com/@arielsepulveda/reactive-rds-system-allows-you-to-save-up-to-50-on-your-monthly-aws-bills-876361324377).\r\n\r\nMy Application is LAMP stack, with heavy Write IOPS nearing 8000 at peak Load of ~200 users. \r\n\r\nHowever, this introduces a 30-50 sec Downtime during Multi-AZ switchover. To avoid this, we are trying to set up Master-Master Replication before using the steps in above script.\r\n\r\nI am using [this link](https://workmarket.tech/zero-downtime-maintenances-on-mysql-rds-ba13b51103c2) to setup Master-Master Replication.\r\n\r\nBrief Higlights\r\n\r\n1. Create Read Replica from M1\r\n2. Stop Replica\r\n3. Create Snapshot from Read-Replica\r\n4. Create DB(M2) from Sanpshot\r\n5. Set M2 as slave of M1.\r\n6. Set M1 as slave of M2.\r\n**Master- Master is set**\r\n\r\nOther Step according to my requirements:\r\n\r\n7. Delete Replica and Snapshot\r\n8. Perform App Switch over to M2\r\n9. Vertical Scale/Maintain M1\r\n10. Perform App Switch over to M1\r\n11. Delete M2.\r\n\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I am trying to acheive cost optimization with perfect Zero Downtime, by performing [automated Vertical Scaling](https://medium.com/@arielsepulveda/reactive-rds-system-allows-you-to-save-up-to-50-on-your-monthly-aws-bills-876361324377). ", "keywords": ["bill", "cost"]}]}, {"Id": "215030409", "PostHistoryTypeId": "5", "PostId": "60091554", "RevisionGUID": "0fc43237-dc0c-4333-bf0c-914a4fb3564b", "CreationDate": "2020-02-15T06:39:05.070", "UserId": "5872464", "Comment": "added 99 characters in body; edited tags", "Text": "I am trying to acheive cost optimization with perfect Zero Downtime, by performing [automated Vertical Scaling](https://medium.com/@arielsepulveda/reactive-rds-system-allows-you-to-save-up-to-50-on-your-monthly-aws-bills-876361324377).\r\n\r\nFYI: My Application is LAMP stack, with heavy Write IOPS nearing 8000 at peak Load of ~200 users. \r\n\r\nHowever using the above link for autoscaling, introduces a 30-50 sec Downtime during Multi-AZ switchover. To avoid this, we are trying to set up Master-Master Replication before using the steps in above script.\r\n\r\nI am using [this link](https://workmarket.tech/zero-downtime-maintenances-on-mysql-rds-ba13b51103c2) to setup Master-Master Replication.\r\n\r\nBrief Higlights, on what I am trying to do.\r\n\r\n1. Create Read Replica from M1\r\n2. Stop Replica\r\n3. Create Snapshot from Read-Replica\r\n4. Create DB(M2) from Sanpshot\r\n5. Set M2 as slave of M1.\r\n6. Set M1 as slave of M2.\r\n**Master- Master is set**\r\n\r\nOther Step according to my requirements:\r\n\r\n7. Delete Replica and Snapshot\r\n8. Perform App Switch over to M2\r\n9. Vertical Scale/Maintain M1 \r\n10. Perform App Switch over to M1 **DB has been scaled, properly**\r\n11. Delete M2.\r\n\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I am trying to acheive cost optimization with perfect Zero Downtime, by performing [automated Vertical Scaling](https://medium.com/@arielsepulveda/reactive-rds-system-allows-you-to-save-up-to-50-on-your-monthly-aws-bills-876361324377). ", "keywords": ["bill", "cost"]}]}, {"Id": "215030410", "PostHistoryTypeId": "6", "PostId": "60091554", "RevisionGUID": "0fc43237-dc0c-4333-bf0c-914a4fb3564b", "CreationDate": "2020-02-15T06:39:05.070", "UserId": "5872464", "Comment": "added 99 characters in body; edited tags", "Text": "<mysql><amazon-web-services><terraform><amazon-rds><autoscaling>", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "60178786", "PostTypeId": "2", "ParentId": "60091554", "CreationDate": "2020-02-11T23:17:46.060", "Score": "1", "Body": "<p>Before embarking on such, I recommend</p>\n\n<ul>\n<li>Use the slowlog to identify the 'worst' queries, then try to speed them up and/or avoid them.</li>\n<li>Figure out why there is such an imbalance between write and read IOPs.</li>\n<li>Implement replicas to offload any reads that are not tied to writes.</li>\n</ul>\n\n<p>Anyway, With <code>Master-Master</code>, all writes are still being done on both servers.  That is the <em>write</em> IOPs may not improve!</p>\n", "OwnerUserId": "1766831", "LastActivityDate": "2020-02-11T23:17:46.060", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "106547675", "PostId": "60178786", "Score": "0", "Text": "Use the slowlog to identify the 'worst' queries, then try to speed them up and/or avoid them. : Have identified them, and other team of engineers has brought them down from 15min to 30 sec.\nFigure out why there is such an imbalance between write and read IOPs : Application is update heavy, based on each critical user action, activities are recorded. Making it write heavy.\nImplement replicas to offload any reads that are not tied to writes: How will this acheive me lower IOPS?? @rick-james", "CreationDate": "2020-02-15T06:40:04.510", "UserId": "5872464", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "127130410", "PostId": "60178786", "Score": "0", "Text": "@BaibhavVishal - check for swapping.  That could be why it is \"write heavy\".  If not, please describe the \"heavy updates\"; there may be techniques to amortize the writes.  (I know of a few diverse ways that can achieve up to 10x speedup for writes; one of them might be applicable to your app.)", "CreationDate": "2022-04-20T19:36:07.990", "UserId": "1766831", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "history": [{"Id": "214787281", "PostHistoryTypeId": "2", "PostId": "60178786", "RevisionGUID": "92145f89-9f02-4acd-99e2-0c8abfd4e351", "CreationDate": "2020-02-11T23:17:46.060", "UserId": "1766831", "Text": "Before embarking on such, I recommend\r\n\r\n* Use the slowlog to identify the 'worst' queries, then try to speed them up and/or avoid them.\r\n* Figure out why there is such an imbalance between write and read IOPs.\r\n* Implement replicas to offload any reads that are not tied to writes.\r\n\r\nAnyway, With `Master-Master`, all writes are still being done on both servers.  That is the _write_ IOPs may not improve!", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I am trying to acheive cost optimization with perfect Zero Downtime, by performing automated Vertical Scaling. ", "keywords": ["cost"]}]}